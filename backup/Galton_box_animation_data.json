{"task": "Galton_box_animation", "blocks": [{"lang": "AutoHotkey", "loc": 89, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/AutoTrim.htm\"><span class=\"kw3\">AutoTrim</span></a> Off<br/><span class=\"co1\">; User settings</span><br/>bottompegs <span class=\"sy0\">:=</span> <span class=\"nu0\">6</span><br/>SleepTime  <span class=\"sy0\">:=</span> <span class=\"nu0\">200</span><br/>fallspace  <span class=\"sy0\">:=</span> <span class=\"nu0\">30</span><br/>\u00a0<br/><span class=\"co1\">; create the board</span><br/>out <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>pad2 <span class=\"sy0\">:=</span> <span class=\"kw6\">Space</span><span class=\"br0\">(</span>bottompegs<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"`n\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a>\u00a0% bottompegs<br/><span class=\"br0\">{</span><br/>\tout <span class=\"sy0\">.=</span> <span class=\"kw6\">Space</span><span class=\"br0\">(</span>bottompegs<span class=\"sy0\">-</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a>\u00a0% <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\tout <span class=\"sy0\">.=</span> <span class=\"st0\">\"* \"</span><br/>\tout <span class=\"sy0\">.=</span> <span class=\"kw6\">Space</span><span class=\"br0\">(</span>bottompegs<span class=\"sy0\">-</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"`n\"</span> <br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/commands/StringTrimRight.htm\"><span class=\"kw3\">StringTrimRight</span></a><span class=\"sy0\">,</span> strboard<span class=\"sy0\">,</span> out<span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"co1\">; remove last newline</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a>\u00a0% fallspace<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>\tstrboard <span class=\"sy0\">.=</span> <span class=\"st0\">\"`n\"</span> <span class=\"sy0\">.</span> pad2<br/>strboard <span class=\"sy0\">.=</span> <span class=\"st0\">\"`n\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a>\u00a0% bottompegs<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>\tstrboard <span class=\"sy0\">.=</span> <span class=\"st0\">\"=\"</span><br/>\u00a0<br/><span class=\"co1\">; Create Gui</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> Consolas<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <span class=\"sy0\">-</span>Caption<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Margin\"><span class=\"kw7\">Margin</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">edit</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>VScroll vE<span class=\"sy0\">,</span>\u00a0% strboard<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><br/><span class=\"br0\">{</span><br/>\tballX <span class=\"sy0\">:=</span> bottompegs<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> BallY <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><br/>\tstrboard <span class=\"sy0\">:=</span> ChangeChar<span class=\"br0\">(</span>strboard<span class=\"sy0\">,</span> BallX<span class=\"sy0\">,</span> ballY<span class=\"sy0\">,</span> <span class=\"st0\">\"O\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> E<span class=\"sy0\">,</span>\u00a0% strboard<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Sleep.htm\"><span class=\"kw3\">sleep</span></a> SleepTime<br/>\t<span class=\"co1\">; Make ball fall and bounce</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a>\u00a0% bottompegs<br/>\t<span class=\"br0\">{</span><br/>\t\tstrboard <span class=\"sy0\">:=</span> ChangeChar<span class=\"br0\">(</span>strboard<span class=\"sy0\">,</span> BallX<span class=\"sy0\">,</span> BallY<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>\t\tballY <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>\t\tballX <span class=\"sy0\">+=</span> RandAdd<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t\t<span class=\"co1\">; MsgBox\u00a0% ballX \", \" ballY</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> E<span class=\"sy0\">,</span>\u00a0% strboard <span class=\"sy0\">:=</span> ChangeChar<span class=\"br0\">(</span>strboard<span class=\"sy0\">,</span> ballX<span class=\"sy0\">,</span> ballY<span class=\"sy0\">,</span> <span class=\"st0\">\"O\"</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Sleep.htm\"><span class=\"kw3\">sleep</span></a> SleepTime<br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"co1\">; now fall to the bottom</span><br/>\t<span class=\"kw1\">While</span> GetChar<span class=\"br0\">(</span>strboard<span class=\"sy0\">,</span> BallX<span class=\"sy0\">,</span> BallY<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Space\"><span class=\"kw2\">A_Space</span></a><br/>\t<span class=\"br0\">{</span><br/>\t\tstrboard <span class=\"sy0\">:=</span> ChangeChar<span class=\"br0\">(</span>strboard<span class=\"sy0\">,</span> BallX<span class=\"sy0\">,</span> BallY<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>\t\tBallY <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>\t\tstrboard <span class=\"sy0\">:=</span> ChangeChar<span class=\"br0\">(</span>strboard<span class=\"sy0\">,</span> BallX<span class=\"sy0\">,</span> BallY<span class=\"sy0\">,</span> <span class=\"st0\">\"O\"</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> E<span class=\"sy0\">,</span>\u00a0% strboard<br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Sleep.htm\"><span class=\"kw3\">sleep</span></a> SleepTime<br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>~<span class=\"kw6\">Esc</span>::<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>\u00a0<br/><span class=\"kw6\">Space</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">If</span> n<br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\" \"</span> <span class=\"kw6\">Space</span><span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> <span class=\"st0\">\"\"</span><br/><span class=\"br0\">}</span><br/>RandAdd<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">(</span>n<span class=\"sy0\">=</span><span class=\"nu0\">3</span>\u00a0? <span class=\"sy0\">-</span><span class=\"nu0\">1</span>\u00a0: <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>GetChar<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> s<span class=\"sy0\">,</span> `n<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">=</span> y<span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw1\">return</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>ChangeChar<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> c<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> s<span class=\"sy0\">,</span> `n<br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">=</span> y<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>\t\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">=</span> x<span class=\"br0\">)</span><br/>\t\t\t\t\tout <span class=\"sy0\">.=</span> c<br/>\t\t\t\t<span class=\"kw1\">else</span>    out <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">else</span> out <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>\t\t     out <span class=\"sy0\">.=</span> <span class=\"st0\">\"`n\"</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/StringTrimRight.htm\"><span class=\"kw3\">StringTrimRight</span></a><span class=\"sy0\">,</span> out<span class=\"sy0\">,</span> out<span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"co1\">; removes the last newline</span><br/>\t<span class=\"kw1\">return</span> out<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BASIC256", "loc": 116, "block": "<pre class=\"text highlighted_source\">graphsize 150,125<br/>fastgraphics<br/>color black<br/>rect 0,0,graphwidth,graphheight<br/>refresh<br/>\u00a0<br/>N = 10\t\t# number of balls<br/>M = 5\t\t# number of pins in last row<br/>dim ball(N,5)\t# (pos_x to center, level, x, y, direction}<br/>dim cnt(M+1)<br/>\u00a0<br/>rad = 6<br/>slow = 0.3<br/>diamond = {0,rad,rad,0,0,-rad,-rad,0}<br/>stepx = {rad/sqr(2),rad/2,rad/2,(1-1/sqr(2))*rad,0}<br/>stepy = {(1-1/sqr(2))*rad,rad/2,rad/2,rad/sqr(2),rad}<br/>CX = graphwidth/2\u00a0: CY = graphheight/2<br/>iters = 0<br/>\u00a0<br/># Draw pins<br/>for i = 1 to M<br/>\ty = 3*rad*i<br/>\tfor j = 1 to i <br/>\t\tdx = (j-i\\2-1)*4*rad + ((i-1)%2)*2*rad<br/>\t\tcolor purple<br/>\t\tstamp CX+dx,y,1.0,diamond<br/>\t\tcolor darkpurple<br/>\t\tstamp CX+dx,y,0.6,diamond<br/>\tnext j<br/>next i<br/>gosub saverefresh<br/>\u00a0<br/>R = 0\u00a0: C = 0<br/>font \"Tahoma\",10,50<br/>do<br/>\t# Release ball<br/>\tif R&lt;N then<br/>\t\tR = R + 1<br/>\t\tball[R-1,2] = CX\u00a0: ball[R-1,3] = rad*(1-stepx[?])\u00a0: ball[R-1,4] = 0<br/>\t\t# How many balls are released<br/>\t\tcolor black<br/>\t\ttext 5,5,(R-1)+\" balls\"<br/>\t\tcolor green<br/>\t\ttext 5,5,(R)+\" balls\"<br/>\tend if<br/>\t# Animate balls on this step<br/>\tfor it = 0 to stepx[?]-1<br/>\t\tfor b = 0 to R-1 <br/>\t\t\tgosub moveball<br/>\t\tnext b<br/>\t\tgosub saverefresh<br/>\t\tpause slow/stepx[?]<br/>\tnext it<br/>\t# Where to go on the next step?<br/>\tfor b = 0 to R-1 <br/>\t\tball[b,1] = ball[b,1] + 1<br/>\t\tif ball[b,1]&lt;=M then<br/>\t\t\tif rand&gt;=0.5 then <br/>\t\t\t\tball[b,4] = 1<br/>\t\t\telse<br/>\t\t\t\tball[b,4] = -1<br/>\t\t\tend if<br/>\t\t\tball[b,0] = ball[b,0] + ball[b,4]<br/>\t\telse<br/>\t\t\tif ball[b,4]&lt;&gt;0 then<br/>\t\t\t\tgosub eraseball<br/>\t\t\t\ti = (ball[b,0]+M)/2<br/>\t\t\t\tcnt[i] = cnt[i] + 1<br/>\t\t\t\tball[b,4] = 0<br/>\t\t\t\tC = C + 1<br/>\t\t\tend if<br/>\t\tend if<br/>\tnext b<br/>\t# Draw counter<br/>\tcolor green<br/>\ty = 3*rad*(M+1)<br/>\tfor j = 0 to M<br/>\t\tdx = (j-(M+1)\\2)*4*rad + (M%2)*2*rad<br/>\t\tstamp CX+dx,y,{-1.2*rad,0,1.2*rad,0,1.2*rad,2*cnt[j],-1.2*rad,2*cnt[j]}<br/>\tnext j<br/>\tgosub saverefresh<br/>until C &gt;= N<br/>end<br/>\u00a0<br/>moveball:<br/>\tif ball[b,1]&gt;M then return<br/>\tgosub eraseball<br/>\tif ball[b,4]&lt;&gt;0.0 then<br/>\t\tball[b,2] = ball[b,2]+ball[b,4]*stepx[it]<br/>\t\tball[b,3] = ball[b,3]+stepy[it]<br/>\telse <br/>\t\tball[b,3] = ball[b,3]+rad<br/>\tend if<br/>\tgosub drawball<br/>\u00a0<br/>drawball:<br/>\tcolor darkgreen<br/>\tcircle ball[b,2],ball[b,3],rad-1<br/>\tcolor green<br/>\tcircle ball[b,2],ball[b,3],rad-2<br/>\treturn <br/>\u00a0<br/>eraseball:<br/>\tcolor black<br/>\tcircle ball[b,2],ball[b,3],rad-1<br/>\treturn<br/>\u00a0<br/>saverefresh:<br/>\tnum$ = string(iters)\t<br/>\tfor k = 1 to 4-length(num$)<br/>\t\tnum$ = \"0\"+num$ <br/>\tnext k<br/>\timgsave num$+\"-Galton_box_BASIC-256.png\", \"PNG\"<br/>\titers = iters + 1<br/>\trefresh<br/>\treturn</pre>"}, {"lang": "BBC BASIC", "loc": 49, "block": "<pre class=\"text highlighted_source\">      maxBalls% = 10<br/>      DIM ballX%(maxBalls%), ballY%(maxBalls%)<br/>\u00a0<br/>      VDU 23,22,180;400;8,16,16,128<br/>      ORIGIN 180,0<br/>      OFF<br/>\u00a0<br/>      REM Draw the pins:<br/>      GCOL 9<br/>      FOR row% = 1 TO 7<br/>        FOR col% = 1 TO row%<br/>          CIRCLE FILL 40*col% - 20*row% - 20, 800 - 40*row%, 12<br/>        NEXT<br/>      NEXT row%<br/>\u00a0<br/>      REM Animate<br/>      last% = 0<br/>      tick% = 0<br/>      GCOL 3,3<br/>      REPEAT<br/>        IF RND(10) = 5 IF (tick% - last%) &gt; 10 THEN<br/>          FOR ball% = 1 TO maxBalls%<br/>            IF ballY%(ball%) = 0 THEN<br/>              ballX%(ball%) = 0<br/>              ballY%(ball%) = 800<br/>              last% = tick%<br/>              EXIT FOR<br/>            ENDIF<br/>          NEXT<br/>        ENDIF<br/>        FOR ball% = 1 TO maxBalls%<br/>          IF ballY%(ball%) CIRCLE FILL ballX%(ball%), ballY%(ball%), 12<br/>          IF POINT(ballX%(ball%),ballY%(ball%)-10) = 12 OR ballY%(ball%) &lt; 12 THEN<br/>            IF ballY%(ball%) &gt; 500 END<br/>            ballY%(ball%) = 0<br/>          ENDIF<br/>        NEXT<br/>        WAIT 2<br/>        FOR ball% = 1 TO maxBalls%<br/>          IF ballY%(ball%) THEN<br/>            CIRCLE FILL ballX%(ball%), ballY%(ball%), 12<br/>            ballY%(ball%) -= 4<br/>            IF POINT(ballX%(ball%),ballY%(ball%)-10) = 9 THEN<br/>              ballX%(ball%) += 40 * (RND(2) - 1.5)<br/>            ENDIF<br/>          ENDIF<br/>        NEXT<br/>        tick% += 1<br/>      UNTIL FALSE</pre>"}, {"lang": "C", "loc": 90, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define BALLS 1024</span><br/><span class=\"kw4\">int</span> n<span class=\"sy0\">,</span> w<span class=\"sy0\">,</span> h <span class=\"sy0\">=</span> <span class=\"nu0\">45</span><span class=\"sy0\">,</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">,</span> cnt <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">char</span> <span class=\"sy0\">*</span>b<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co2\">#define B(y, x) b[(y)*w + x]</span><br/><span class=\"co2\">#define C(y, x) ' ' == b[(y)*w + x]</span><br/><span class=\"co2\">#define V(i) B(y[i], x[i])</span><br/><span class=\"kw2\">inline</span> <span class=\"kw4\">int</span> rnd<span class=\"br0\">(</span><span class=\"kw4\">int</span> a<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>RAND_MAX<span class=\"sy0\">/</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>a<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> show_board<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es5\">\\033</span>[H\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> i<span class=\"sy0\">++,</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> j<span class=\"sy0\">++,</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span>B<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">'*'</span> <span class=\"sy0\">?</span><br/>\t\t\t\tC<span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> j<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"<span class=\"es5\">\\033</span>[32m%c<span class=\"es5\">\\033</span>[m\"</span> <span class=\"sy0\">:</span><br/>\t\t\t\t<span class=\"st0\">\"<span class=\"es5\">\\033</span>[31m%c<span class=\"es5\">\\033</span>[m\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"%c\"</span><span class=\"sy0\">,</span> B<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> init<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es5\">\\033</span>[H<span class=\"es5\">\\033</span>[J\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tb <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span>w <span class=\"sy0\">*</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/memset.html\"><span class=\"kw3\">memset</span></a><span class=\"br0\">(</span>b<span class=\"sy0\">,</span> <span class=\"st0\">' '</span><span class=\"sy0\">,</span> w <span class=\"sy0\">*</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tx <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> BALLS <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\ty <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> BALLS<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>i<span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> i<span class=\"sy0\">;</span> j <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\t\t\tB<span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> i<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> j <span class=\"sy0\">+</span> w<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">'*'</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/srand.html\"><span class=\"kw3\">srand</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> move<span class=\"br0\">(</span><span class=\"kw4\">int</span> idx<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> xx <span class=\"sy0\">=</span> x<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"sy0\">,</span> yy <span class=\"sy0\">=</span> y<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> kill <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> sl <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> o <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>yy <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>yy <span class=\"sy0\">==</span> h <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> y<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">switch</span><span class=\"br0\">(</span>c <span class=\"sy0\">=</span> B<span class=\"br0\">(</span>yy <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> xx<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">case</span> <span class=\"st0\">' '</span><span class=\"sy0\">:</span>\tyy<span class=\"sy0\">++;</span> <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">case</span> <span class=\"st0\">'*'</span><span class=\"sy0\">:</span>\tsl <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">default</span><span class=\"sy0\">:</span>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>xx <span class=\"sy0\">&lt;</span> w <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> C<span class=\"br0\">(</span>yy<span class=\"sy0\">,</span> xx <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> C<span class=\"br0\">(</span>yy <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> xx <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>rnd<span class=\"br0\">(</span>sl<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">)</span> o <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>xx <span class=\"sy0\">&amp;&amp;</span> C<span class=\"br0\">(</span>yy<span class=\"sy0\">,</span> xx <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> C<span class=\"br0\">(</span>yy <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> xx <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>rnd<span class=\"br0\">(</span>sl<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">)</span> o <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>o<span class=\"br0\">)</span> kill <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\txx <span class=\"sy0\">+=</span> o<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\tc <span class=\"sy0\">=</span> V<span class=\"br0\">(</span>idx<span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span>idx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">' '</span><span class=\"sy0\">;</span><br/>\tidx<span class=\"br0\">[</span>y<span class=\"br0\">]</span> <span class=\"sy0\">=</span> yy<span class=\"sy0\">,</span> idx<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> xx<span class=\"sy0\">;</span><br/>\tB<span class=\"br0\">(</span>yy<span class=\"sy0\">,</span> xx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>kill<span class=\"br0\">)</span> idx<span class=\"br0\">[</span>y<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> run<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">static</span> <span class=\"kw4\">int</span> step <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> cnt<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> move<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"sy0\">++</span>step <span class=\"sy0\">&amp;&amp;</span> cnt <span class=\"sy0\">&lt;</span> BALLS<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tstep <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\tx<span class=\"br0\">[</span>cnt<span class=\"br0\">]</span> <span class=\"sy0\">=</span> w<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\ty<span class=\"br0\">[</span>cnt<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>V<span class=\"br0\">(</span>cnt<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\tV<span class=\"br0\">(</span>cnt<span class=\"br0\">)</span> <span class=\"sy0\">=</span> rnd<span class=\"br0\">(</span><span class=\"nu0\">80</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">43</span><span class=\"sy0\">;</span><br/>\t\tcnt<span class=\"sy0\">++;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> c<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>v<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>n <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>\tw <span class=\"sy0\">=</span> n <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\tinit<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">do</span> <span class=\"br0\">{</span> show_board<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> usleep<span class=\"br0\">(</span><span class=\"nu0\">60000</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>run<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 220, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include \"stdafx.h\"</span><br/><span class=\"co2\">#include &lt;windows.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> BMP_WID <span class=\"sy1\">=</span> <span class=\"nu0\">410</span>, BMP_HEI <span class=\"sy1\">=</span> <span class=\"nu0\">230</span>, MAX_BALLS <span class=\"sy1\">=</span> <span class=\"nu0\">120</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> myBitmap <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    myBitmap<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> pen<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span>, brush<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span>, clr<span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span>, wid<span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    ~myBitmap<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        DeleteObject<span class=\"br0\">(</span> pen <span class=\"br0\">)</span><span class=\"sy4\">;</span> DeleteObject<span class=\"br0\">(</span> brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        DeleteDC<span class=\"br0\">(</span> hdc <span class=\"br0\">)</span><span class=\"sy4\">;</span> DeleteObject<span class=\"br0\">(</span> bmp <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">bool</span> create<span class=\"br0\">(</span> <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        BITMAPINFO bi<span class=\"sy4\">;</span><br/>        ZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>bi, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bi <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSize</span>        <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bi.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biBitCount</span>    <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biCompression</span> <span class=\"sy1\">=</span> BI_RGB<span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biPlanes</span>      <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biWidth</span>       <span class=\"sy1\">=</span>  w<span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biHeight</span>      <span class=\"sy1\">=</span> <span class=\"sy2\">-</span>h<span class=\"sy4\">;</span><br/>\u00a0<br/>        HDC dc <span class=\"sy1\">=</span> GetDC<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bmp <span class=\"sy1\">=</span> CreateDIBSection<span class=\"br0\">(</span> dc, <span class=\"sy3\">&amp;</span>bi, DIB_RGB_COLORS, <span class=\"sy3\">&amp;</span>pBits, <span class=\"kw2\">NULL</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>bmp <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>        hdc <span class=\"sy1\">=</span> CreateCompatibleDC<span class=\"br0\">(</span> dc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        SelectObject<span class=\"br0\">(</span> hdc, bmp <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        ReleaseDC<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span>, dc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        width <span class=\"sy1\">=</span> w<span class=\"sy4\">;</span> height <span class=\"sy1\">=</span> h<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> clear<span class=\"br0\">(</span> BYTE clr <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">memset</span><span class=\"br0\">(</span> pBits, clr, width <span class=\"sy2\">*</span> height <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setBrushColor<span class=\"br0\">(</span> DWORD bClr <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> brush <span class=\"br0\">)</span> DeleteObject<span class=\"br0\">(</span> brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        brush <span class=\"sy1\">=</span> CreateSolidBrush<span class=\"br0\">(</span> bClr <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        SelectObject<span class=\"br0\">(</span> hdc, brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setPenColor<span class=\"br0\">(</span> DWORD c <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        clr <span class=\"sy1\">=</span> c<span class=\"sy4\">;</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setPenWidth<span class=\"br0\">(</span> <span class=\"kw4\">int</span> w <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        wid <span class=\"sy1\">=</span> w<span class=\"sy4\">;</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    HDC getDC<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span>     <span class=\"br0\">{</span> <span class=\"kw1\">return</span> hdc<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span>  <span class=\"br0\">{</span> <span class=\"kw1\">return</span> width<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> height<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> pen <span class=\"br0\">)</span> DeleteObject<span class=\"br0\">(</span> pen <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        pen <span class=\"sy1\">=</span> CreatePen<span class=\"br0\">(</span> PS_SOLID, wid, clr <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        SelectObject<span class=\"br0\">(</span> hdc, pen <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    HBITMAP bmp<span class=\"sy4\">;</span><br/>    HDC     hdc<span class=\"sy4\">;</span><br/>    HPEN    pen<span class=\"sy4\">;</span><br/>    HBRUSH  brush<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">void</span>    <span class=\"sy2\">*</span>pBits<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span>     width, height, wid<span class=\"sy4\">;</span><br/>    DWORD   clr<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw2\">class</span> point <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int</span> x<span class=\"sy4\">;</span> <span class=\"kw4\">float</span> y<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">void</span> set<span class=\"br0\">(</span> <span class=\"kw4\">int</span> a, <span class=\"kw4\">float</span> b <span class=\"br0\">)</span> <span class=\"br0\">{</span> x <span class=\"sy1\">=</span> a<span class=\"sy4\">;</span> y <span class=\"sy1\">=</span> b<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span><br/>    point position, offset<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">bool</span> alive, start<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span>ball<span class=\"sy4\">;</span><br/><span class=\"kw2\">class</span> galton <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span> <span class=\"sy4\">:</span><br/>    galton<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        bmp.<span class=\"me1\">create</span><span class=\"br0\">(</span> BMP_WID, BMP_HEI <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        initialize<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setHWND<span class=\"br0\">(</span> HWND hwnd <span class=\"br0\">)</span> <span class=\"br0\">{</span> _hwnd <span class=\"sy1\">=</span> hwnd<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> simulate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        draw<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> update<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> Sleep<span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> draw<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        bmp.<span class=\"me1\">clear</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bmp.<span class=\"me1\">setPenColor</span><span class=\"br0\">(</span> RGB<span class=\"br0\">(</span> <span class=\"nu0\">0</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bmp.<span class=\"me1\">setBrushColor</span><span class=\"br0\">(</span> RGB<span class=\"br0\">(</span> <span class=\"nu0\">0</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw4\">int</span> xx, yy<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">3</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> <span class=\"nu0\">14</span><span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            yy <span class=\"sy1\">=</span> <span class=\"nu0\">10</span> <span class=\"sy2\">*</span> y<span class=\"sy4\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> <span class=\"nu0\">41</span><span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                xx <span class=\"sy1\">=</span> <span class=\"nu0\">10</span> <span class=\"sy2\">*</span> x<span class=\"sy4\">;</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> pins<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"br0\">)</span><br/>                    Rectangle<span class=\"br0\">(</span> bmp.<span class=\"me1\">getDC</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, xx <span class=\"sy2\">-</span> <span class=\"nu0\">3</span>, yy <span class=\"sy2\">-</span> <span class=\"nu0\">3</span>, xx <span class=\"sy2\">+</span> <span class=\"nu0\">3</span>, yy <span class=\"sy2\">+</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        bmp.<span class=\"me1\">setPenColor</span><span class=\"br0\">(</span> RGB<span class=\"br0\">(</span> <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bmp.<span class=\"me1\">setBrushColor</span><span class=\"br0\">(</span> RGB<span class=\"br0\">(</span> <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        ball<span class=\"sy2\">*</span> b<span class=\"sy4\">;</span> <br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> MAX_BALLS<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            b <span class=\"sy1\">=</span> <span class=\"sy3\">&amp;</span>balls<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>alive <span class=\"br0\">)</span><br/>                Rectangle<span class=\"br0\">(</span> bmp.<span class=\"me1\">getDC</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"kw2\">static_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span>, <span class=\"kw2\">static_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">y</span> <span class=\"sy2\">-</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span>, <br/>                                        <span class=\"kw2\">static_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">x</span> <span class=\"sy2\">+</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span>, <span class=\"kw2\">static_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">y</span> <span class=\"sy2\">+</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> <span class=\"nu0\">70</span><span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> cols<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                xx <span class=\"sy1\">=</span> <span class=\"nu0\">10</span> <span class=\"sy2\">*</span> x<span class=\"sy4\">;</span><br/>                Rectangle<span class=\"br0\">(</span> bmp.<span class=\"me1\">getDC</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, xx <span class=\"sy2\">-</span> <span class=\"nu0\">3</span>, <span class=\"nu0\">160</span>, xx <span class=\"sy2\">+</span> <span class=\"nu0\">3</span>, <span class=\"nu0\">160</span> <span class=\"sy2\">+</span> cols<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        HDC dc <span class=\"sy1\">=</span> GetDC<span class=\"br0\">(</span> _hwnd <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        BitBlt<span class=\"br0\">(</span> dc, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, BMP_WID, BMP_HEI, bmp.<span class=\"me1\">getDC</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, SRCCOPY <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        ReleaseDC<span class=\"br0\">(</span> _hwnd, dc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> update<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        ball<span class=\"sy2\">*</span> b<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> MAX_BALLS<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            b <span class=\"sy1\">=</span> <span class=\"sy3\">&amp;</span>balls<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>alive <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">x</span> <span class=\"sy2\">+</span><span class=\"sy1\">=</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>offset.<span class=\"me1\">x</span><span class=\"sy4\">;</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">y</span> <span class=\"sy2\">+</span><span class=\"sy1\">=</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>offset.<span class=\"me1\">y</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> x <span class=\"sy1\">&lt;</span> MAX_BALLS <span class=\"sy2\">-</span> <span class=\"nu0\">1</span> <span class=\"sy3\">&amp;&amp;</span> <span class=\"sy3\">!</span>b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>start <span class=\"sy3\">&amp;&amp;</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">y</span> <span class=\"sy1\">&gt;</span> <span class=\"nu17\">50.0f</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>start <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>                    balls<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">alive</span> <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw4\">int</span> c <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> <span class=\"br0\">)</span>b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">x</span>, d <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> <span class=\"br0\">)</span>b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">y</span> <span class=\"sy2\">+</span> <span class=\"nu0\">6</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> d <span class=\"sy1\">&gt;</span> <span class=\"nu0\">10</span> <span class=\"sy3\">||</span> d <span class=\"sy1\">&lt;</span> <span class=\"nu0\">41</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span><span class=\"br0\">(</span> pins<span class=\"br0\">[</span>d <span class=\"sy2\">/</span> <span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"br0\">[</span>c <span class=\"sy2\">/</span> <span class=\"nu0\">10</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> <span class=\"nu0\">30</span> <span class=\"sy1\">&lt;</span> <span class=\"nu0\">15</span> <span class=\"br0\">)</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">x</span> <span class=\"sy2\">-</span><span class=\"sy1\">=</span> <span class=\"nu0\">10</span><span class=\"sy4\">;</span><br/>                        <span class=\"kw1\">else</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">x</span> <span class=\"sy2\">+</span><span class=\"sy1\">=</span> <span class=\"nu0\">10</span><span class=\"sy4\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>position.<span class=\"me1\">y</span> <span class=\"sy1\">&gt;</span> <span class=\"nu0\">160</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>alive <span class=\"sy1\">=</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>                    cols<span class=\"br0\">[</span>c <span class=\"sy2\">/</span> <span class=\"nu0\">10</span><span class=\"br0\">]</span> <span class=\"sy2\">+</span><span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> initialize<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> MAX_BALLS<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            balls<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">position</span>.<span class=\"me1\">set</span><span class=\"br0\">(</span> <span class=\"nu0\">200</span>, <span class=\"sy2\">-</span><span class=\"nu0\">10</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            balls<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">offset</span>.<span class=\"me1\">set</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span>, <span class=\"nu17\">0.5f</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            balls<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">alive</span> <span class=\"sy1\">=</span> balls<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">start</span> <span class=\"sy1\">=</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        balls<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">alive</span> <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> <span class=\"nu0\">70</span><span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>            cols<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> <span class=\"nu0\">70</span><span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> <span class=\"nu0\">41</span><span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>                pins<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>        <span class=\"kw4\">int</span> p<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> <span class=\"nu0\">11</span><span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            p <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"nu0\">41</span> <span class=\"sy2\">/</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"sy2\">-</span> y<span class=\"sy4\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> z <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> z <span class=\"sy1\">&lt;</span> y <span class=\"sy2\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> z<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                pins<span class=\"br0\">[</span><span class=\"nu0\">3</span> <span class=\"sy2\">+</span> y<span class=\"br0\">]</span><span class=\"br0\">[</span>p<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>                p <span class=\"sy2\">+</span><span class=\"sy1\">=</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    myBitmap bmp<span class=\"sy4\">;</span><br/>    HWND _hwnd<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">bool</span> pins<span class=\"br0\">[</span><span class=\"nu0\">70</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">40</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>    ball balls<span class=\"br0\">[</span>MAX_BALLS<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> cols<span class=\"br0\">[</span><span class=\"nu0\">70</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw2\">class</span> wnd <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int</span> wnd<span class=\"sy4\">::</span><span class=\"me2\">Run</span><span class=\"br0\">(</span> HINSTANCE hInst <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        _hInst <span class=\"sy1\">=</span> hInst<span class=\"sy4\">;</span><br/>        _hwnd <span class=\"sy1\">=</span> InitAll<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        _gtn.<span class=\"me1\">setHWND</span><span class=\"br0\">(</span> _hwnd <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        ShowWindow<span class=\"br0\">(</span> _hwnd, SW_SHOW <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        UpdateWindow<span class=\"br0\">(</span> _hwnd <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        MSG msg<span class=\"sy4\">;</span><br/>        ZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> msg <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">while</span><span class=\"br0\">(</span> msg.<span class=\"me1\">message</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> WM_QUIT <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> PeekMessage<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg, <span class=\"kw2\">NULL</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, PM_REMOVE <span class=\"br0\">)</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                TranslateMessage<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>                DispatchMessage<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> _gtn.<span class=\"me1\">simulate</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> UnregisterClass<span class=\"br0\">(</span> <span class=\"st0\">\"_GALTON_\"</span>, _hInst <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> WINAPI wnd<span class=\"sy4\">::</span><span class=\"me2\">WndProc</span><span class=\"br0\">(</span> HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">switch</span><span class=\"br0\">(</span> msg <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> WM_DESTROY<span class=\"sy4\">:</span> PostQuitMessage<span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">default</span><span class=\"sy4\">:</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">static_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span> DefWindowProc<span class=\"br0\">(</span> hWnd, msg, wParam, lParam <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    HWND InitAll<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        WNDCLASSEX wcex<span class=\"sy4\">;</span><br/>        ZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>wcex, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> wcex <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        wcex.<span class=\"me1\">cbSize</span>           <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> WNDCLASSEX <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        wcex.<span class=\"me1\">style</span>           <span class=\"sy1\">=</span> CS_HREDRAW <span class=\"sy3\">|</span> CS_VREDRAW<span class=\"sy4\">;</span><br/>        wcex.<span class=\"me1\">lpfnWndProc</span>   <span class=\"sy1\">=</span> <span class=\"br0\">(</span> WNDPROC <span class=\"br0\">)</span>WndProc<span class=\"sy4\">;</span><br/>        wcex.<span class=\"me1\">hInstance</span>     <span class=\"sy1\">=</span> _hInst<span class=\"sy4\">;</span><br/>        wcex.<span class=\"me1\">hCursor</span>       <span class=\"sy1\">=</span> LoadCursor<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span>, IDC_ARROW <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        wcex.<span class=\"me1\">hbrBackground</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> HBRUSH <span class=\"br0\">)</span><span class=\"br0\">(</span> COLOR_WINDOW <span class=\"sy2\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        wcex.<span class=\"me1\">lpszClassName</span> <span class=\"sy1\">=</span> <span class=\"st0\">\"_GALTON_\"</span><span class=\"sy4\">;</span><br/>        RegisterClassEx<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>wcex <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        RECT rc<span class=\"sy4\">;</span><br/>        SetRect<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>rc, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, BMP_WID, BMP_HEI <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        AdjustWindowRect<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>rc, WS_CAPTION, FALSE <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> CreateWindow<span class=\"br0\">(</span> <span class=\"st0\">\"_GALTON_\"</span>, <span class=\"st0\">\".: Galton Box -- PJorente\u00a0:.\"</span>, WS_SYSMENU, CW_USEDEFAULT, <span class=\"nu0\">0</span>, rc.<span class=\"me1\">right</span> <span class=\"sy2\">-</span> rc.<span class=\"me1\">left</span>, rc.<span class=\"me1\">bottom</span> <span class=\"sy2\">-</span> rc.<span class=\"me1\">top</span>, <span class=\"kw2\">NULL</span>, <span class=\"kw2\">NULL</span>, _hInst, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    HINSTANCE _hInst<span class=\"sy4\">;</span><br/>    HWND      _hwnd<span class=\"sy4\">;</span><br/>    galton    _gtn<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">int</span> APIENTRY WinMain<span class=\"br0\">(</span> HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, <span class=\"kw4\">int</span> nCmdShow <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">srand</span><span class=\"br0\">(</span> GetTickCount<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    wnd myWnd<span class=\"sy4\">;</span> <br/>    <span class=\"kw1\">return</span> myWnd.<span class=\"me1\">Run</span><span class=\"br0\">(</span> hInstance <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 104, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">random</span><span class=\"sy0\">,</span> std.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">enum</span> <span class=\"kw4\">int</span> boxW <span class=\"sy0\">=</span> <span class=\"nu0\">41</span><span class=\"sy0\">,</span> boxH <span class=\"sy0\">=</span> <span class=\"nu0\">37</span><span class=\"sy0\">;</span> <span class=\"co1\">// Galton box width and height.</span><br/><span class=\"kw4\">enum</span> <span class=\"kw4\">int</span> pinsBaseW <span class=\"sy0\">=</span> <span class=\"nu0\">19</span><span class=\"sy0\">;</span>       <span class=\"co1\">// Pins triangle base size.</span><br/><span class=\"kw4\">enum</span> <span class=\"kw4\">int</span> nMaxBalls <span class=\"sy0\">=</span> <span class=\"nu0\">55</span><span class=\"sy0\">;</span>       <span class=\"co1\">// Number of balls.</span><br/>\u00a0<br/><span class=\"kw4\">static</span> <span class=\"kw2\">assert</span><span class=\"br0\">(</span>boxW <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">&amp;&amp;</span> boxH <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">static</span> <span class=\"kw2\">assert</span><span class=\"br0\">(</span><span class=\"br0\">(</span>boxW <span class=\"sy0\">-</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> <span class=\"br0\">(</span>pinsBaseW <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">static</span> <span class=\"kw2\">assert</span><span class=\"br0\">(</span><span class=\"br0\">(</span>boxH <span class=\"sy0\">-</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> pinsBaseW<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">enum</span> centerH <span class=\"sy0\">=</span> pinsBaseW <span class=\"sy0\">+</span> <span class=\"br0\">(</span>boxW <span class=\"sy0\">-</span> <span class=\"br0\">(</span>pinsBaseW <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">enum</span> Cell <span class=\"sy0\">:</span> <span class=\"kw4\">char</span> <span class=\"br0\">{</span> empty  <span class=\"sy0\">=</span> <span class=\"st0\">' '</span><span class=\"sy0\">,</span><br/>                   ball   <span class=\"sy0\">=</span> <span class=\"st0\">'o'</span><span class=\"sy0\">,</span><br/>                   wall   <span class=\"sy0\">=</span> <span class=\"st0\">'|'</span><span class=\"sy0\">,</span><br/>                   corner <span class=\"sy0\">=</span> <span class=\"st0\">'+'</span><span class=\"sy0\">,</span><br/>                   floor  <span class=\"sy0\">=</span> <span class=\"st0\">'-'</span><span class=\"sy0\">,</span><br/>                   pin    <span class=\"sy0\">=</span> <span class=\"st0\">'.'</span> <span class=\"br0\">}</span><br/>\u00a0<br/>Cell<span class=\"br0\">[</span>boxW<span class=\"br0\">]</span><span class=\"br0\">[</span>boxH<span class=\"br0\">]</span> box<span class=\"sy0\">;</span> <span class=\"co1\">// Galton box. Will be printed upside-down.</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Ball <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">;</span> <span class=\"co1\">// Position.</span><br/>\u00a0<br/>    <span class=\"kw2\">this</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span> x_<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">int</span> y_<span class=\"br0\">)</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw2\">in</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">assert</span><span class=\"br0\">(</span>box<span class=\"br0\">[</span>y_<span class=\"br0\">]</span><span class=\"br0\">[</span>x_<span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">empty</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw2\">body</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">this</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> x_<span class=\"sy0\">;</span><br/>        <span class=\"kw2\">this</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> y_<span class=\"sy0\">;</span><br/>        box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">ball</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">nothrow</span> <span class=\"kw4\">const</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"kw2\">invariant</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">assert</span><span class=\"br0\">(</span>x <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;</span> boxW <span class=\"sy0\">&amp;&amp;</span> y <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> y <span class=\"sy0\">&lt;</span> boxH<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">assert</span><span class=\"br0\">(</span>box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">ball</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> doStep<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>y <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span> <span class=\"co1\">// Reached the bottom of the box.</span><br/>\u00a0<br/>        <span class=\"kw4\">final</span> <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>box<span class=\"br0\">[</span>y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw2\">with</span> <span class=\"br0\">(</span>Cell<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> empty<span class=\"sy0\">:</span><br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">empty</span><span class=\"sy0\">;</span><br/>                y<span class=\"sy0\">--;</span><br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">ball</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> ball<span class=\"sy0\">,</span> wall<span class=\"sy0\">,</span> corner<span class=\"sy0\">,</span> floor<span class=\"sy0\">:</span><br/>                <span class=\"co1\">// It's frozen. (It always piles on other balls).</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> pin<span class=\"sy0\">:</span><br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">empty</span><span class=\"sy0\">;</span><br/>                y<span class=\"sy0\">--;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">empty</span> <span class=\"sy0\">&amp;&amp;</span> box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">empty</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    x <span class=\"sy0\">+=</span> uniform<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                    box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">ball</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">empty</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    x<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                    x<span class=\"sy0\">--;</span><br/>                <span class=\"br0\">}</span><br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">ball</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> initializeBox<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Set ceiling and floor:</span><br/>    box<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">corner</span> <span class=\"sy0\">~</span> <span class=\"br0\">[</span>Cell.<span class=\"me1\">floor</span><span class=\"br0\">]</span>.<span class=\"me1\">replicate</span><span class=\"br0\">(</span>boxW <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">~</span> Cell.<span class=\"me1\">corner</span><span class=\"sy0\">;</span><br/>    box<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> box<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Set walls:</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> r<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">boxH</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        box<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> box<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">wall</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Set pins:</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> nPins<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">pinsBaseW</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>pin<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">nPins</span><span class=\"br0\">)</span><br/>            box<span class=\"br0\">[</span>boxH <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> nPins<span class=\"br0\">]</span><span class=\"br0\">[</span>centerH <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> nPins <span class=\"sy0\">+</span> pin <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">pin</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> drawBox<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach_reverse</span> <span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw2\">ref</span> row<span class=\"sy0\">;</span> box<span class=\"br0\">)</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"%(%c%)\"</span><span class=\"sy0\">,</span> row<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    initializeBox<span class=\"sy0\">;</span><br/>    Ball<span class=\"br0\">[</span><span class=\"br0\">]</span> balls<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">const</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">nMaxBalls</span> <span class=\"sy0\">+</span> boxH<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Step\u00a0%d:\"</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> nMaxBalls<span class=\"br0\">)</span><br/>            balls <span class=\"sy0\">~=</span> Ball<span class=\"br0\">(</span>centerH<span class=\"sy0\">,</span> boxH <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// Add ball.</span><br/>        drawBox<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// Next step for the simulation.</span><br/>        <span class=\"co1\">// Frozen balls are kept in balls array for simplicity.</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw2\">ref</span> b<span class=\"sy0\">;</span> balls<span class=\"br0\">)</span><br/>            b.<span class=\"me1\">doStep</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Elm", "loc": 210, "block": "<pre class=\"text highlighted_source\">import Html.App exposing (program)<br/>import Time exposing (Time, every, millisecond)<br/>import Color exposing (Color, black, red, blue, green)<br/>import Collage exposing (collage)<br/>import Collage exposing (collage,polygon, filled, move, Form, circle)<br/>import Element exposing (toHtml)<br/>import Html exposing (Attribute, Html, text, div, input, button)<br/>import Html.Attributes as A exposing (type', min, placeholder, value, style, disabled)<br/>import Html.Events exposing (onInput, targetValue, onClick)<br/>import Dict exposing (Dict, get, insert)<br/>import String exposing (toInt)<br/>import Result exposing (withDefault)<br/>import Random.Pcg as Random exposing (Seed, bool, initialSeed, independentSeed, step, map)<br/>\u00a0<br/>width = 500<br/>height = 600<br/>hscale = 10.0<br/>vscale = hscale * 2<br/>margin = 30<br/>levelCount = 12<br/>radius = hscale/ 2.0<br/>\u00a0<br/>type State = InBox Int Int Seed | Falling Int Float Float Float | Landed Int Float<br/>\u00a0<br/>type Coin = Coin State Color<br/>\u00a0<br/>colorCycle\u00a0: Int -&gt; Color<br/>colorCycle i =<br/>  case i\u00a0% 3 of<br/>    0 -&gt; red<br/>    1 -&gt; blue<br/>    _ -&gt; green<br/>\u00a0<br/>initCoin\u00a0: Int -&gt; Seed -&gt; Coin<br/>initCoin indx seed = Coin (InBox 0 0 seed) (colorCycle indx)<br/>\u00a0<br/>drawCoin\u00a0: Coin -&gt; Form<br/>drawCoin (Coin state color) = <br/>  let dropLevel = toFloat (height//2 - margin)<br/>      (level, shift, distance) = <br/>        case state of<br/>          InBox level shift seed -&gt; (level, shift, 0)<br/>          Falling shift distance _ _-&gt; (levelCount, shift, distance)<br/>          Landed shift distance -&gt; (levelCount, shift, distance)<br/>      position = <br/>        (             hscale * toFloat shift<br/>        , dropLevel - vscale * (toFloat level) - distance + radius / 2.0)<br/>\u00a0<br/>  in radius |&gt; circle |&gt; filled color |&gt; move position <br/>\u00a0<br/>drawGaltonBox\u00a0: List Form<br/>drawGaltonBox = <br/>  let levels = [0..levelCount-1]<br/>\u00a0<br/>      -- doubles\u00a0:<br/>      -- [0,2,4,6,8...]<br/>      doubles = List.map (\\n -&gt; 2 * n) levels<br/>\u00a0<br/>      -- sequences\u00a0:<br/>      -- [[0], [0,2], [0,2,4], [0,2,4,6], [0,2,4,6,8],...]<br/>      sequences = case List.tail (List.scanl (::) [] (doubles)) of<br/>        Nothing -&gt; []<br/>        Just ls -&gt; ls<br/>\u00a0<br/>      -- galtonCoords\u00a0:<br/>      -- [                            (0,0), <br/>      --                       (-1,1),      (1,1), <br/>      --                (-2,2),       (0,2),      (2,2), <br/>      --         (-3,3),       (-1,3),      (1,3),      (3,3), <br/>      --  (-4,4),       (-2,4),       (0,4),      (2,4),      (4,4), ...]<br/>      galtonCoords = <br/>        List.map2 <br/>          (\\ls level -&gt; List.map (\\n -&gt; (n - level, level)) ls) <br/>          sequences <br/>          levels<br/>        |&gt; List.concat<br/>\u00a0<br/>      peg = polygon [(0,0), (-4, -8), (4, -8)] |&gt; filled black <br/>\u00a0<br/>      apex = toFloat (height//2 - margin)<br/>\u00a0<br/>  in List.map (\\(x,y) -&gt; move (hscale*toFloat x,  apex - vscale*toFloat y) peg) galtonCoords<br/>\u00a0<br/>coinsInBin\u00a0: Int -&gt; Dict Int Int -&gt; Int<br/>coinsInBin binNumber bins = <br/>  case get binNumber bins of<br/>    Nothing -&gt; 0<br/>    Just n -&gt; n<br/>\u00a0<br/>addToBins\u00a0: Int -&gt; Dict Int Int -&gt; Dict Int Int<br/>addToBins binNumber bins = <br/>  insert binNumber (coinsInBin binNumber bins + 1) bins<br/>\u00a0<br/>updateCoin\u00a0: (Coin, Dict Int Int) -&gt; (Coin, Dict Int Int)<br/>updateCoin (Coin state color as coin, bins) = <br/>  case state of<br/>    InBox level shift seed -&gt;<br/>      let deltaShift = map (\\b -&gt; if b then 1 else -1) bool<br/>          (delta, newSeed) = step deltaShift seed<br/>          newShift = shift+delta<br/>          newLevel = (level)+1<br/>      in if (newLevel &lt; levelCount) then<br/>           (Coin (InBox newLevel newShift newSeed) color, bins)<br/>         else -- transition to falling<br/>           let maxDrop = toFloat (height - 2 * margin) - toFloat (levelCount) * vscale<br/>               floor = maxDrop - toFloat (coinsInBin newShift bins) * (radius*2 + 1)<br/>           in (Coin (Falling newShift -((vscale)/2.0) 10 floor) color, addToBins newShift bins)<br/>\u00a0<br/>    Falling shift distance velocity floor -&gt; <br/>      let newDistance = distance + velocity<br/>      in if (newDistance &lt; floor) then<br/>           (Coin (Falling shift newDistance (velocity + 1) floor) color, bins)<br/>         else -- transtion to landed<br/>           (Coin (Landed shift floor) color, bins)<br/>\u00a0<br/>    Landed _ _ -&gt; (coin, bins) -- unchanged<br/>\u00a0<br/>type alias Model = <br/>  { coins\u00a0: List Coin<br/>  , bins\u00a0: Dict Int Int<br/>  , count\u00a0: Int<br/>  , started\u00a0: Bool<br/>  , seedInitialized\u00a0: Bool<br/>  , seed\u00a0: Seed<br/>  }<br/>\u00a0<br/>init\u00a0: (Model, Cmd Msg)<br/>init =<br/>  ( { coins = []<br/>    , bins = Dict.empty<br/>    , count = 0<br/>    , started = False<br/>    , seedInitialized = False<br/>    , seed = initialSeed 45 -- This will not get used.  Actual seed used is time dependent and set when the first coin drops.<br/>    }, Cmd.none)<br/>\u00a0<br/>type Msg = Drop Time | Tick Time | SetCount String | Go<br/>\u00a0<br/>update\u00a0: Msg -&gt; Model -&gt; (Model, Cmd Msg)<br/>update action model = <br/>  case action of<br/>    Go -&gt;<br/>      ({model | started = model.count &gt; 0}, Cmd.none)<br/>\u00a0<br/>    SetCount countString -&gt; <br/>      ({ model | count = toInt countString |&gt; withDefault 0 }, Cmd.none)<br/>\u00a0<br/>    Drop t -&gt; <br/>      if (model.started &amp;&amp; model.count &gt; 0) then<br/>          let newcount = model.count - 1<br/>              seed' =  if model.seedInitialized then model.seed else initialSeed (truncate t)<br/>              (seed'', coinSeed) = step independentSeed seed'<br/>          in ({ model  <br/>              | coins = initCoin (truncate t) coinSeed\u00a0:: model.coins<br/>              , count = newcount<br/>              , started = newcount &gt; 0<br/>              , seedInitialized = True<br/>              , seed = seed''}, Cmd.none)<br/>      else<br/>         (model, Cmd.none)<br/>\u00a0<br/>    Tick _ -&gt; <br/>      -- foldr to execute update, append to coins, replace bins<br/>      let (updatedCoins, updatedBins) =<br/>        List.foldr (\\coin (coinList, bins) -&gt; <br/>                       let (updatedCoin, updatedBins) = updateCoin (coin, bins) <br/>                       in (updatedCoin\u00a0:: coinList, updatedBins))<br/>                   ([], model.bins)<br/>                   model.coins<br/>      in ({ model | coins = updatedCoins, bins = updatedBins}, Cmd.none)<br/>\u00a0<br/>view\u00a0: Model -&gt; Html Msg<br/>view model = <br/>  div []<br/>    [ input<br/>        [ placeholder \"How many?\"<br/>        , let showString = if model.count &gt; 0 then model.count |&gt; toString else \"\"<br/>          in value showString<br/>        , onInput SetCount<br/>        , disabled model.started<br/>        , style [ (\"height\", \"20px\") ]<br/>        , type' \"number\"<br/>        , A.min \"1\"<br/>        ]<br/>        []<br/>\u00a0<br/>     , button<br/>        [ onClick Go <br/>        , disabled model.started<br/>        , style [ (\"height\", \"20px\") ]<br/>        ]<br/>        [ Html.text \"GO!\" ]<br/>\u00a0<br/>     , let coinForms = (List.map (drawCoin) model.coins)<br/>       in collage width height (coinForms ++ drawGaltonBox) |&gt; toHtml<br/>    ]<br/>\u00a0<br/>subscriptions model =<br/>    Sub.batch<br/>        [ every (40*millisecond) Tick<br/>        , every (200*millisecond) Drop<br/>        ]<br/>\u00a0<br/>main =<br/>  program <br/>      { init = init<br/>      , view = view<br/>      , update = update<br/>      , subscriptions = subscriptions<br/>      }</pre>"}, {"lang": "Go", "loc": 127, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math/rand\"</span><br/>    <span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">const</span> boxW <span class=\"sy2\">=</span> <span class=\"nu0\">41</span>      <span class=\"co1\">// Galton box width</span><br/><span class=\"kw1\">const</span> boxH <span class=\"sy2\">=</span> <span class=\"nu0\">37</span>      <span class=\"co1\">// Galton box height.</span><br/><span class=\"kw1\">const</span> pinsBaseW <span class=\"sy2\">=</span> <span class=\"nu0\">19</span> <span class=\"co1\">// Pins triangle base.</span><br/><span class=\"kw1\">const</span> nMaxBalls <span class=\"sy2\">=</span> <span class=\"nu0\">55</span> <span class=\"co1\">// Number of balls.</span><br/>\u00a0<br/><span class=\"kw1\">const</span> centerH <span class=\"sy2\">=</span> pinsBaseW <span class=\"sy3\">+</span> <span class=\"sy1\">(</span>boxW<span class=\"sy3\">-</span>pinsBaseW<span class=\"sy3\">*</span><span class=\"nu0\">2</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span><span class=\"sy3\">/</span><span class=\"nu0\">2</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">const</span> <span class=\"sy1\">(</span><br/>    empty  <span class=\"sy2\">=</span> <span class=\"st0\">' '</span><br/>    ball   <span class=\"sy2\">=</span> <span class=\"st0\">'o'</span><br/>    wall   <span class=\"sy2\">=</span> <span class=\"st0\">'|'</span><br/>    corner <span class=\"sy2\">=</span> <span class=\"st0\">'+'</span><br/>    floor  <span class=\"sy2\">=</span> <span class=\"st0\">'-'</span><br/>    pin    <span class=\"sy2\">=</span> <span class=\"st0\">'.'</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">type</span> Ball <span class=\"kw4\">struct</span><span class=\"sy1\">{</span> x<span class=\"sy1\">,</span> y <span class=\"kw4\">int</span> <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> newBall<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>Ball <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> box<span class=\"sy1\">[</span>y<span class=\"sy1\">][</span>x<span class=\"sy1\">]</span> <span class=\"sy2\">!=</span> empty <span class=\"sy1\">{</span><br/>        <span class=\"kw3\">panic</span><span class=\"sy1\">(</span><span class=\"st0\">\"Tried to create a new ball in a non-empty cell. Program terminated.\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    b <span class=\"sy2\">:=</span> Ball<span class=\"sy1\">{</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">}</span><br/>    box<span class=\"sy1\">[</span>y<span class=\"sy1\">][</span>x<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> ball<br/>    <span class=\"kw1\">return</span> &amp;b<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>b <span class=\"sy3\">*</span>Ball<span class=\"sy1\">)</span> doStep<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> b<span class=\"sy3\">.</span>y &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"co1\">// Reached the bottom of the box.</span><br/>    <span class=\"sy1\">}</span><br/>    cell <span class=\"sy2\">:=</span> box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy1\">]</span><br/>    <span class=\"kw1\">switch</span> cell <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">case</span> empty<span class=\"sy1\">:</span><br/>        box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> empty<br/>        b<span class=\"sy3\">.</span>y<span class=\"sy2\">--</span><br/>        box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> ball<br/>    <span class=\"kw1\">case</span> pin<span class=\"sy1\">:</span><br/>        box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> empty<br/>        b<span class=\"sy3\">.</span>y<span class=\"sy2\">--</span><br/>        <span class=\"kw1\">if</span> box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> empty &amp;&amp; box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> empty <span class=\"sy1\">{</span><br/>            b<span class=\"sy3\">.</span>x <span class=\"sy2\">+=</span> rand<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span><span class=\"sy3\">*</span><span class=\"nu0\">2</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>            box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> ball<br/>            <span class=\"kw1\">return</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> empty <span class=\"sy1\">{</span><br/>            b<span class=\"sy3\">.</span>x<span class=\"sy2\">++</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            b<span class=\"sy3\">.</span>x<span class=\"sy2\">--</span><br/>        <span class=\"sy1\">}</span><br/>        box<span class=\"sy1\">[</span>b<span class=\"sy3\">.</span>y<span class=\"sy1\">][</span>b<span class=\"sy3\">.</span>x<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> ball<br/>    <span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>        <span class=\"co1\">// It's frozen - it always piles on other balls.</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> Cell <span class=\"sy2\">=</span> <span class=\"kw4\">byte</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Galton box. Will be printed upside down. */</span><br/><span class=\"kw1\">var</span> box <span class=\"sy1\">[</span>boxH<span class=\"sy1\">][</span>boxW<span class=\"sy1\">]</span>Cell<br/>\u00a0<br/><span class=\"kw4\">func</span> initializeBox<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"co1\">// Set ceiling and floor</span><br/>    box<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">][</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> corner<br/>    box<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">][</span>boxW<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> corner<br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; boxW<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        box<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> floor<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; boxW<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        box<span class=\"sy1\">[</span>boxH<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> box<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Set walls</span><br/>    <span class=\"kw1\">for</span> r <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> r &lt; boxH<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span> r<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        box<span class=\"sy1\">[</span>r<span class=\"sy1\">][</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> wall<br/>        box<span class=\"sy1\">[</span>r<span class=\"sy1\">][</span>boxW<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> wall<br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Set rest to empty initially</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; boxH<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> j &lt; boxW<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            box<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> empty<br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Set pins</span><br/>    <span class=\"kw1\">for</span> nPins <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> nPins &lt;<span class=\"sy2\">=</span> pinsBaseW<span class=\"sy1\">;</span> nPins<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> p <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> p &lt; nPins<span class=\"sy1\">;</span> p<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            box<span class=\"sy1\">[</span>boxH<span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy3\">-</span>nPins<span class=\"sy1\">][</span>centerH<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy3\">-</span>nPins<span class=\"sy3\">+</span>p<span class=\"sy3\">*</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> pin<br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> drawBox<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> r <span class=\"sy2\">:=</span> boxH <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> r &gt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> r<span class=\"sy2\">--</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> c <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> c &lt; boxW<span class=\"sy1\">;</span> c<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%c\"</span><span class=\"sy1\">,</span> box<span class=\"sy1\">[</span>r<span class=\"sy1\">][</span>c<span class=\"sy1\">])</span><br/>        <span class=\"sy1\">}</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">()</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    rand<span class=\"sy3\">.</span>Seed<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>UnixNano<span class=\"sy1\">())</span><br/>    initializeBox<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">var</span> balls <span class=\"sy1\">[]</span><span class=\"sy3\">*</span>Ball<br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; nMaxBalls<span class=\"sy3\">+</span>boxH<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Step\"</span><span class=\"sy1\">,</span> i<span class=\"sy1\">,</span> <span class=\"st0\">\":\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"nu2\">i</span> &lt; nMaxBalls <span class=\"sy1\">{</span><br/>            balls <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>balls<span class=\"sy1\">,</span> newBall<span class=\"sy1\">(</span>centerH<span class=\"sy1\">,</span> boxH<span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">))</span> <span class=\"co1\">// add ball</span><br/>        <span class=\"sy1\">}</span><br/>        drawBox<span class=\"sy1\">()</span><br/>\u00a0<br/>        <span class=\"co1\">// Next step for the simulation.</span><br/>        <span class=\"co1\">// Frozen balls are kept in balls slice for simplicity</span><br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> b <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> balls <span class=\"sy1\">{</span><br/>            b<span class=\"sy3\">.</span>doStep<span class=\"sy1\">()</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 47, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Map <span class=\"kw1\">hiding</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a><span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Graphics<span class=\"sy0\">.</span>Gloss<br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><span class=\"sy0\">.</span>Random<br/>\u00a0<br/><span class=\"kw1\">data</span> Ball <span class=\"sy0\">=</span> Ball <span class=\"br0\">{</span> position <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span><span class=\"sy0\">,</span> turns <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> World <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a>           <span class=\"co1\">-- number of rows of pins</span><br/>             <span class=\"sy0\">,</span> <span class=\"br0\">[</span>Ball<span class=\"br0\">]</span>        <span class=\"co1\">-- sequence of balls</span><br/>             <span class=\"sy0\">,</span> Map <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"br0\">)</span> <span class=\"co1\">-- counting bins</span><br/>\u00a0<br/>updateWorld <span class=\"sy0\">::</span> World <span class=\"sy0\">-&gt;</span> World<br/>updateWorld <span class=\"br0\">(</span>nRows<span class=\"sy0\">,</span> balls<span class=\"sy0\">,</span> bins<span class=\"br0\">)</span><br/>  <span class=\"sy0\">|</span> y <span class=\"sy0\">&lt;</span> <span class=\"sy0\">-</span>nRows<span class=\"sy0\">-</span><span class=\"nu0\">5</span>  <span class=\"sy0\">=</span> <span class=\"br0\">(</span>nRows<span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> update bs<span class=\"sy0\">,</span> bins <span class=\"sy0\">&lt;+&gt;</span> x<span class=\"br0\">)</span><br/>  <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a>     <span class=\"sy0\">=</span> <span class=\"br0\">(</span>nRows<span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> update balls<span class=\"sy0\">,</span> bins<span class=\"br0\">)</span><br/>  <span class=\"kw1\">where</span><br/>    <span class=\"br0\">(</span>Ball <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">_</span><span class=\"br0\">)</span>\u00a0: bs <span class=\"sy0\">=</span> balls<br/>\u00a0<br/>    b <span class=\"sy0\">&lt;+&gt;</span> x <span class=\"sy0\">=</span> unionWith <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span> b <span class=\"br0\">(</span>singleton x <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>    update <span class=\"br0\">(</span>Ball <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> turns<span class=\"br0\">)</span><br/>      <span class=\"sy0\">|</span> <span class=\"sy0\">-</span>nRows <span class=\"sy0\">&lt;=</span> y <span class=\"sy0\">&amp;&amp;</span> y <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> Ball <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:head\"><span class=\"kw3\">head</span></a> turns<span class=\"sy0\">,</span> y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> turns<span class=\"br0\">)</span><br/>      <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a>            <span class=\"sy0\">=</span> Ball <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> turns<br/>\u00a0<br/>drawWorld <span class=\"sy0\">::</span> World <span class=\"sy0\">-&gt;</span> Picture<br/>drawWorld <span class=\"br0\">(</span>nRows<span class=\"sy0\">,</span> balls<span class=\"sy0\">,</span> bins<span class=\"br0\">)</span> <span class=\"sy0\">=</span> pictures <span class=\"br0\">[</span> color red ballsP<br/>                                          <span class=\"sy0\">,</span> color black binsP<br/>                                          <span class=\"sy0\">,</span> color blue pinsP <span class=\"br0\">]</span><br/>  <span class=\"kw1\">where</span> ballsP <span class=\"sy0\">=</span> foldMap <span class=\"br0\">(</span>disk <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">$</span> takeWhile <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">&gt;</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:snd\"><span class=\"kw3\">snd</span></a><span class=\"br0\">)</span> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> position balls        <br/>        binsP  <span class=\"sy0\">=</span> foldMapWithKey drawBin bins<br/>        pinsP  <span class=\"sy0\">=</span> foldMap <span class=\"br0\">(</span>disk <span class=\"nu0\">0.2</span><span class=\"br0\">)</span> <span class=\"sy0\">$</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>nRows<span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;=</span> \\i <span class=\"sy0\">-&gt;</span><br/>                                          <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;=</span> \\j <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>j<span class=\"sy0\">-</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\u00a0<br/>        disk r pos <span class=\"sy0\">=</span> trans pos <span class=\"sy0\">$</span> circleSolid <span class=\"br0\">(</span>r<span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>        drawBin x h <span class=\"sy0\">=</span> trans <span class=\"br0\">(</span>x<span class=\"sy0\">,-</span>nRows<span class=\"sy0\">-</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>                    <span class=\"sy0\">$</span> rectangleUpperSolid <span class=\"nu0\">20</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> h<span class=\"br0\">)</span><br/>        trans <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Translate <span class=\"br0\">(</span><span class=\"nu0\">20</span> <span class=\"sy0\">*</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> x<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">20</span> <span class=\"sy0\">*</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> y<span class=\"br0\">)</span><br/>\u00a0<br/>startSimulation <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span>Ball<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>startSimulation nRows balls <span class=\"sy0\">=</span> simulate display white <span class=\"nu0\">50</span> world drawWorld update<br/>  <span class=\"kw1\">where</span> display <span class=\"sy0\">=</span> InWindow <span class=\"st0\">\"Galton box\"</span> <span class=\"br0\">(</span><span class=\"nu0\">400</span><span class=\"sy0\">,</span> <span class=\"nu0\">400</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        world <span class=\"sy0\">=</span> <span class=\"br0\">(</span>nRows<span class=\"sy0\">,</span> balls<span class=\"sy0\">,</span> empty<span class=\"br0\">)</span><br/>        update <span class=\"sy0\">_</span> <span class=\"sy0\">_</span> <span class=\"sy0\">=</span> updateWorld<br/>\u00a0<br/>main <span class=\"sy0\">=</span> evalRandIO balls <span class=\"sy0\">&gt;&gt;=</span> startSimulation <span class=\"nu0\">10</span><br/>  <span class=\"kw1\">where</span> balls <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM\"><span class=\"kw3\">mapM</span></a> makeBall <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"br0\">]</span><br/>        makeBall y <span class=\"sy0\">=</span> Ball <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span> randomTurns<br/>        randomTurns <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"br0\">(</span><span class=\"sy0\">/=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span> getRandomRs <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 65, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> graphics<br/>\u00a0<br/><span class=\"kw2\">global</span> pegsize<span class=\"sy1\">,</span> pegsize2<span class=\"sy1\">,</span> height<span class=\"sy1\">,</span> width<span class=\"sy1\">,</span> <span class=\"kw4\">delay</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"kw4\">args</span><span class=\"br0\">)</span>    <span class=\"co1\"># galton box simulation from Unicon book</span><br/>   pegsize2 <span class=\"sy1\">:=</span> <span class=\"br0\">(</span>pegsize <span class=\"sy1\">:=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span> <span class=\"nu0\">2</span>    <span class=\"co1\"># pegs &amp; steps</span><br/>   <span class=\"kw4\">delay</span> <span class=\"sy1\">:=</span> <span class=\"nu0\">2</span>                         <span class=\"co1\"># ms delay</span><br/>   setup_galtonwindow<span class=\"br0\">(</span>pegsize<span class=\"br0\">)</span><br/>   n <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"kw4\">args</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"nu0\">100</span>        <span class=\"co1\"># balls to drop </span><br/>   <span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> n <span class=\"kw1\">do</span> galton<span class=\"br0\">(</span>pegsize<span class=\"br0\">)</span><br/>   WDone<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> setup_galtonwindow<span class=\"br0\">(</span>n<span class=\"br0\">)</span>  <span class=\"co1\"># Draw n levels of pegs, </span><br/><span class=\"kw2\">local</span> xpos<span class=\"sy1\">,</span> ypos<span class=\"sy1\">,</span> i<span class=\"sy1\">,</span> j<br/>   <span class=\"co1\"># Pegboard size is 2n-1 square</span><br/>   <span class=\"co1\"># Expected max value of histogram is (n, n/2)/2^n </span><br/>   <span class=\"co1\"># ... approximate with something simpler?</span><br/>\u00a0<br/>   height <span class=\"sy1\">:=</span> n<span class=\"sy1\">*</span>n<span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">*</span>pegsize <span class=\"sy1\">+</span> <span class=\"br0\">(</span>width <span class=\"sy1\">:=</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">*</span>n<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">*</span>pegsize<span class=\"br0\">)</span><br/>   Window<span class=\"br0\">(</span><span class=\"st0\">\"size=\"</span> <span class=\"sy1\">||</span> width <span class=\"sy1\">||</span> <span class=\"st0\">\",\"</span> <span class=\"sy1\">||</span> height<span class=\"sy1\">,</span> <span class=\"st0\">\"fg=grayish-white\"</span><span class=\"br0\">)</span><br/>   <span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span><span class=\"st0\">\"fg=dark-grey\"</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">every</span> ypos <span class=\"sy1\">:=</span> <span class=\"br0\">(</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> n<span class=\"br0\">)</span> <span class=\"sy1\">*</span> pegsize2 <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      xpos <span class=\"sy1\">:=</span> width<span class=\"sy1\">/</span><span class=\"nu0\">2</span> <span class=\"sy1\">-</span> <span class=\"br0\">(</span>i <span class=\"sy1\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span> pegsize <span class=\"sy1\">-</span> pegsize<span class=\"sy1\">/</span><span class=\"nu0\">2</span> <span class=\"sy1\">-</span> pegsize2<br/>      <span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i <span class=\"kw1\">do</span><br/>         <span class=\"kw5\">FillArc</span><span class=\"br0\">(</span>xpos <span class=\"sy1\">+:=</span> pegsize2<span class=\"sy1\">,</span> ypos<span class=\"sy1\">,</span> pegsize<span class=\"sy1\">,</span> pegsize<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span><span class=\"st0\">\"fg=black\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"drawop=reverse\"</span><span class=\"br0\">)</span>      <span class=\"co1\"># set drawing mode for balls</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> galton<span class=\"br0\">(</span>n<span class=\"br0\">)</span>                          <span class=\"co1\"># drop a ball into the galton box</span><br/><span class=\"kw2\">local</span> xpos<span class=\"sy1\">,</span> ypos<span class=\"sy1\">,</span> oldx<span class=\"sy1\">,</span> oldy<br/>   xpos <span class=\"sy1\">:=</span> oldx <span class=\"sy1\">:=</span> width<span class=\"sy1\">/</span><span class=\"nu0\">2</span> <span class=\"sy1\">-</span> pegsize<span class=\"sy1\">/</span><span class=\"nu0\">2</span><br/>   ypos <span class=\"sy1\">:=</span> oldy <span class=\"sy1\">:=</span> pegsize<br/>   <span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> n <span class=\"kw1\">do</span> <span class=\"br0\">{</span>                         <span class=\"co1\"># For every ball...</span><br/>      xpos <span class=\"sy1\">+:=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">?</span><span class=\"nu0\">2</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span> pegsize     <span class=\"co1\"># +/- pegsize</span><br/>      animate<span class=\"br0\">(</span><span class=\"sy1\">.</span><span class=\"me1\">oldx</span><span class=\"sy1\">,</span> <span class=\"sy1\">.</span><span class=\"me1\">oldy</span><span class=\"sy1\">,</span> oldx <span class=\"sy1\">:=</span> xpos<span class=\"sy1\">,</span> oldy <span class=\"sy1\">:=</span> ypos <span class=\"sy1\">+:=</span> pegsize2<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>   animate<span class=\"br0\">(</span>xpos<span class=\"sy1\">,</span> ypos<span class=\"sy1\">,</span> xpos<span class=\"sy1\">,</span> ypos <span class=\"sy1\">+</span> <span class=\"nu0\">40</span><span class=\"br0\">)</span>      <span class=\"co1\"># Now the ball falls ...</span><br/>   animate<span class=\"br0\">(</span>xpos<span class=\"sy1\">,</span> ypos<span class=\"sy1\">+</span><span class=\"nu0\">40</span><span class=\"sy1\">,</span> xpos<span class=\"sy1\">,</span> ypos <span class=\"sy1\">+</span> <span class=\"nu0\">200</span><span class=\"br0\">)</span>  <span class=\"co1\"># ... to the floor</span><br/>   draw_ball<span class=\"br0\">(</span>xpos<span class=\"br0\">)</span>                           <span class=\"co1\"># Record this ball</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> animate<span class=\"br0\">(</span>xfrom<span class=\"sy1\">,</span> yfrom<span class=\"sy1\">,</span> xto<span class=\"sy1\">,</span> yto<span class=\"br0\">)</span><br/>   animate_actual<span class=\"br0\">(</span>xfrom<span class=\"sy1\">,</span> yfrom<span class=\"sy1\">,</span> xto<span class=\"sy1\">,</span> yfrom<span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>   animate_actual<span class=\"br0\">(</span>xto<span class=\"sy1\">,</span> yfrom<span class=\"sy1\">,</span> xto<span class=\"sy1\">,</span> yto<span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">procedure</span> animate_actual<span class=\"br0\">(</span>xfrom<span class=\"sy1\">,</span> yfrom<span class=\"sy1\">,</span> xto<span class=\"sy1\">,</span> yto<span class=\"sy1\">,</span> steps<span class=\"br0\">)</span> <span class=\"co1\"># attribs already set</span><br/><span class=\"kw2\">local</span> x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> xstep<span class=\"sy1\">,</span> ystep<span class=\"sy1\">,</span> lastx<span class=\"sy1\">,</span> lasty<br/>   x <span class=\"sy1\">-:=</span> xstep <span class=\"sy1\">:=</span> <span class=\"br0\">(</span>xto <span class=\"sy1\">-</span> <span class=\"br0\">(</span>x <span class=\"sy1\">:=</span> xfrom<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">/</span>steps<br/>   y <span class=\"sy1\">-:=</span> ystep <span class=\"sy1\">:=</span> <span class=\"br0\">(</span>yto <span class=\"sy1\">-</span> <span class=\"br0\">(</span>y <span class=\"sy1\">:=</span> yfrom<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">/</span>steps<br/>   <span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> steps <span class=\"kw1\">do</span> <span class=\"br0\">{</span>      <br/>      <span class=\"kw5\">FillArc</span><span class=\"br0\">(</span>lastx <span class=\"sy1\">:=</span> x <span class=\"sy1\">+:=</span> xstep<span class=\"sy1\">,</span> lasty <span class=\"sy1\">:=</span> y <span class=\"sy1\">+:=</span> ystep<span class=\"sy1\">,</span> pegsize<span class=\"sy1\">,</span> pegsize<span class=\"br0\">)</span><br/>      WDelay<span class=\"br0\">(</span><span class=\"kw4\">delay</span><span class=\"br0\">)</span>      <span class=\"co1\"># wait in ms</span><br/>      <span class=\"kw5\">FillArc</span><span class=\"br0\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> pegsize<span class=\"sy1\">,</span> pegsize<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> draw_ball<span class=\"br0\">(</span>x<span class=\"br0\">)</span>                      <br/><span class=\"kw2\">static</span> ballcounts<br/><span class=\"kw1\">initial</span> ballcounts <span class=\"sy1\">:=</span> <span class=\"kw4\">table</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>   <span class=\"kw5\">FillArc</span><span class=\"br0\">(</span>x<span class=\"sy1\">,</span> height<span class=\"sy1\">-</span><span class=\"br0\">(</span>ballcounts<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">*</span>pegsize<span class=\"sy1\">,</span> pegsize<span class=\"sy1\">,</span> pegsize<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 1, "block": "<pre class=\"j highlighted_source\">initpins=: <span class=\"st_h\">'* '</span> {~ <span class=\"st_h\">'1'</span>&amp;<a class=\"__cf_email__\" data-cfemail=\"3a53147a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"85a8c5\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>|. |.\"<span class=\"nu0\">_1</span> [: \":@-.&amp;<span class=\"nu0\">0</span>\"<span class=\"nu0\">1</span> &lt;:~/~<span class=\"sy0\">)</span>@i.</pre>"}, {"lang": "Java", "loc": 131, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.List</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.ArrayList</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> GaltonBox <span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">new</span> GaltonBox<span class=\"br0\">(</span> <span class=\"nu0\">8</span>, <span class=\"nu0\">200</span> <span class=\"br0\">)</span>.<span class=\"me1\">run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span>        m_pinRows<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span>        m_startRow<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aposition+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Position</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> m_balls<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a>     m_random <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> GaltonBox<span class=\"br0\">(</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> pinRows, <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> ballCount <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        m_pinRows  <span class=\"sy0\">=</span> pinRows<span class=\"sy0\">;</span><br/>        m_startRow <span class=\"sy0\">=</span> pinRows <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        m_balls    <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aposition+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Position</span></a><span class=\"br0\">[</span> ballCount <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> ball <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> ball <span class=\"sy0\">&lt;</span> ballCount<span class=\"sy0\">;</span> ball<span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>            m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aposition+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Position</span></a><span class=\"br0\">(</span> m_startRow, <span class=\"nu0\">0</span>, <span class=\"st0\">'o'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">class</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aposition+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Position</span></a> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span>  m_row<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span>  m_col<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">char</span> m_char<span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aposition+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Position</span></a><span class=\"br0\">(</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> row, <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> col, <span class=\"kw1\">final</span> <span class=\"kw4\">char</span> ch <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            m_row  <span class=\"sy0\">=</span> row<span class=\"sy0\">;</span><br/>            m_col  <span class=\"sy0\">=</span> col<span class=\"sy0\">;</span><br/>            m_char <span class=\"sy0\">=</span> ch<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> ballsInPlay <span class=\"sy0\">=</span> m_balls.<span class=\"me1\">length</span><span class=\"sy0\">;</span> ballsInPlay <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>  <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            ballsInPlay <span class=\"sy0\">=</span> dropBalls<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            print<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> dropBalls<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> ballsInPlay <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> ballToStart <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// Pick a ball to start dropping</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> ball <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> ball <span class=\"sy0\">&lt;</span> m_balls.<span class=\"me1\">length</span><span class=\"sy0\">;</span> ball<span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"sy0\">==</span> m_startRow <span class=\"br0\">)</span><br/>                ballToStart <span class=\"sy0\">=</span> ball<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// Drop balls that are already in play</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> ball <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> ball <span class=\"sy0\">&lt;</span> m_balls.<span class=\"me1\">length</span><span class=\"sy0\">;</span> ball<span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span> ball <span class=\"sy0\">==</span> ballToStart <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"sy0\">=</span> m_pinRows<span class=\"sy0\">;</span><br/>                ballsInPlay<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"sy0\">!=</span> m_startRow <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_col</span> <span class=\"sy0\">+=</span> m_random.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">!=</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"br0\">)</span><br/>                    ballsInPlay<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> ballsInPlay<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> print<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> row <span class=\"sy0\">=</span> m_startRow<span class=\"sy0\">;</span> row <span class=\"sy0\">--&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span>  <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> ball <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> ball <span class=\"sy0\">&lt;</span> m_balls.<span class=\"me1\">length</span><span class=\"sy0\">;</span> ball<span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"sy0\">==</span> row <span class=\"br0\">)</span><br/>                    printBall<span class=\"br0\">(</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            printPins<span class=\"br0\">(</span> row <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        printCollectors<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> printBall<span class=\"br0\">(</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aposition+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Position</span></a> pos <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> col <span class=\"sy0\">=</span> pos.<span class=\"me1\">m_row</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> col <span class=\"sy0\">--&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>  <span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">' '</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> col <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> col <span class=\"sy0\">&lt;</span> pos.<span class=\"me1\">m_col</span><span class=\"sy0\">;</span> col<span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"  \"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> pos.<span class=\"me1\">m_char</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> printPins<span class=\"br0\">(</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> row <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> col <span class=\"sy0\">=</span> row <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> col <span class=\"sy0\">--&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>  <span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">' '</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> col <span class=\"sy0\">=</span> m_startRow <span class=\"sy0\">-</span> row<span class=\"sy0\">;</span> col <span class=\"sy0\">--&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>  <span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\". \"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> printCollectors<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">final</span> List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Position<span class=\"sy0\">&gt;&gt;</span> collectors <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Position<span class=\"sy0\">&gt;&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> col <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> col <span class=\"sy0\">&lt;</span> m_startRow<span class=\"sy0\">;</span> col<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">final</span> List<span class=\"sy0\">&lt;</span>Position<span class=\"sy0\">&gt;</span> collector <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;</span>Position<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            collectors.<span class=\"me1\">add</span><span class=\"br0\">(</span> collector <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> ball <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> ball <span class=\"sy0\">&lt;</span> m_balls.<span class=\"me1\">length</span><span class=\"sy0\">;</span> ball<span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_row</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span>.<span class=\"me1\">m_col</span> <span class=\"sy0\">==</span> col <span class=\"br0\">)</span><br/>                    collector.<span class=\"me1\">add</span><span class=\"br0\">(</span> m_balls<span class=\"br0\">[</span> ball <span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> row <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, rows <span class=\"sy0\">=</span> longest<span class=\"br0\">(</span> collectors <span class=\"br0\">)</span><span class=\"sy0\">;</span> row <span class=\"sy0\">&lt;</span> rows<span class=\"sy0\">;</span> row<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> col <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> col <span class=\"sy0\">&lt;</span> m_startRow<span class=\"sy0\">;</span> col<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">final</span> List<span class=\"sy0\">&lt;</span>Position<span class=\"sy0\">&gt;</span> collector <span class=\"sy0\">=</span> collectors.<span class=\"me1\">get</span><span class=\"br0\">(</span> col <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">final</span> <span class=\"kw4\">int</span>            pos       <span class=\"sy0\">=</span> row <span class=\"sy0\">+</span> collector.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> rows<span class=\"sy0\">;</span><br/>\u00a0<br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">'|'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span> pos <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>                    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> collector.<span class=\"me1\">get</span><span class=\"br0\">(</span> pos <span class=\"br0\">)</span>.<span class=\"me1\">m_char</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">else</span><br/>                    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">' '</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span> <span class=\"st0\">'|'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> longest<span class=\"br0\">(</span> <span class=\"kw1\">final</span> List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Position<span class=\"sy0\">&gt;&gt;</span> collectors <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw1\">final</span> List<span class=\"sy0\">&lt;</span>Position<span class=\"sy0\">&gt;</span> collector <span class=\"sy0\">:</span> collectors <span class=\"br0\">)</span><br/>            result <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">max</span><span class=\"br0\">(</span> collector.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, result <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Kotlin", "loc": 102, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.2.10</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> boxW <span class=\"sy0\">=</span> <span class=\"nu0\">41</span>       <span class=\"co1\">// Galton box width.</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> boxH <span class=\"sy0\">=</span> <span class=\"nu0\">37</span>       <span class=\"co1\">// Galton box height.</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pinsBaseW <span class=\"sy0\">=</span> <span class=\"nu0\">19</span>  <span class=\"co1\">// Pins triangle base.</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> nMaxBalls <span class=\"sy0\">=</span> <span class=\"nu0\">55</span>  <span class=\"co1\">// Number of balls.</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> centerH <span class=\"sy0\">=</span> pinsBaseW + <span class=\"br0\">(</span>boxW - pinsBaseW <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span> / <span class=\"nu0\">2</span> - <span class=\"nu0\">1</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rand <span class=\"sy0\">=</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>enum <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Cell<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c<span class=\"sy0\">:</span> Char<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    EMPTY<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span>,<br/>    BALL<span class=\"br0\">(</span><span class=\"st0\">'o'</span><span class=\"br0\">)</span>,<br/>    WALL<span class=\"br0\">(</span><span class=\"st0\">'|'</span><span class=\"br0\">)</span>,<br/>    CORNER<span class=\"br0\">(</span><span class=\"st0\">'+'</span><span class=\"br0\">)</span>,<br/>    FLOOR<span class=\"br0\">(</span><span class=\"st0\">'-'</span><span class=\"br0\">)</span>,<br/>    PIN<span class=\"br0\">(</span><span class=\"st0\">'.'</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Galton box. Will be printed upside down. */</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> box <span class=\"sy0\">=</span> List<span class=\"br0\">(</span>boxH<span class=\"br0\">)</span> <span class=\"br0\">{</span> Array<span class=\"sy0\">&lt;</span>Cell<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>boxW<span class=\"br0\">)</span> <span class=\"br0\">{</span> Cell.<span class=\"me1\">EMPTY</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Ball<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> x<span class=\"sy0\">:</span> Int, <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> y<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    init <span class=\"br0\">{</span><br/>        require<span class=\"br0\">(</span>box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">EMPTY</span><span class=\"br0\">)</span><br/>        box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">BALL</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    fun doStep<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>y <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a>  <span class=\"co1\">// Reached the bottom of the box.</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cell <span class=\"sy0\">=</span> box<span class=\"br0\">[</span>y - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><br/>        when <span class=\"br0\">(</span>cell<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            Cell.<span class=\"me1\">EMPTY</span> -<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">EMPTY</span><br/>                y--<br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">BALL</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            Cell.<span class=\"me1\">PIN</span> -<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">EMPTY</span><br/>                y--<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x - <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">EMPTY</span> <span class=\"sy0\">&amp;&amp;</span> box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x + <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">EMPTY</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    x +<span class=\"sy0\">=</span> rand.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> - <span class=\"nu0\">1</span><br/>                    box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">BALL</span><br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>                <span class=\"br0\">}</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x - <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> Cell.<span class=\"me1\">EMPTY</span><span class=\"br0\">)</span> x++<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> x--<br/>                box<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">BALL</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> -<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\">// It's frozen - it always piles on other balls.</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun initializeBox<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Set ceiling and floor:</span><br/>    box<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">CORNER</span><br/>    box<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>boxW - <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">CORNER</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span> until boxW - <span class=\"nu0\">1</span><span class=\"br0\">)</span> box<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">FLOOR</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until boxW<span class=\"br0\">)</span> box<span class=\"br0\">[</span>boxH - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> box<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"co1\">// Set walls:</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>r in <span class=\"nu0\">1</span> until boxH - <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        box<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">WALL</span><br/>        box<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>boxW - <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">WALL</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Set pins:</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>nPins in <span class=\"nu0\">1</span>..<span class=\"me1\">pinsBaseW</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>pin in <span class=\"nu0\">0</span> until nPins<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            box<span class=\"br0\">[</span>boxH - <span class=\"nu0\">2</span> - nPins<span class=\"br0\">]</span><span class=\"br0\">[</span>centerH + <span class=\"nu0\">1</span> - nPins + pin <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Cell.<span class=\"me1\">PIN</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun drawBox<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>row in box.<span class=\"me1\">reversed</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in row.<span class=\"me1\">indices</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span>row<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">c</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    initializeBox<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> balls <span class=\"sy0\">=</span> mutableListOf<span class=\"sy0\">&lt;</span>Ball<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until nMaxBalls + boxH<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Step $i:\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> nMaxBalls<span class=\"br0\">)</span> balls.<span class=\"me1\">add</span><span class=\"br0\">(</span>Ball<span class=\"br0\">(</span>centerH, boxH - <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\">// Add ball.</span><br/>        drawBox<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// Next step for the simulation.</span><br/>        <span class=\"co1\">// Frozen balls are kept in balls list for simplicity</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>b in balls<span class=\"br0\">)</span> b.<span class=\"me1\">doStep</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 146, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> <span class=\"re0\">$peg</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"*\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> <span class=\"re0\">@coin</span><span class=\"sy0\">-</span>icons <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es0\">\\c</span>[UPPER HALF BLOCK]\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\c</span>[LOWER HALF BLOCK]\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> display<span class=\"sy0\">-</span>board<span class=\"br0\">(</span><span class=\"re0\">@positions</span><span class=\"sy0\">,</span> <span class=\"re0\">@stats</span> <span class=\"kw1\">is</span> copy<span class=\"sy0\">,</span> <span class=\"re0\">$halfstep</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$coin</span> <span class=\"sy0\">=</span> <span class=\"re0\">@coin</span><span class=\"sy0\">-</span>icons<span class=\"br0\">[</span><span class=\"re0\">$halfstep</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">state</span> <span class=\"re0\">@board</span><span class=\"sy0\">-</span>tmpl <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <span class=\"co1\"># precompute a board</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@tmpl</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">sub</span> out<span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"re0\">@stuff</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@tmpl</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> $<span class=\"br0\">[</span><span class=\"re0\">@stuff</span><span class=\"sy0\">.</span><span class=\"me1\">join</span><span class=\"sy0\">&gt;&gt;.</span><span class=\"me1\">ords</span><span class=\"sy0\">.</span><span class=\"me1\">flat</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\"># three lines of space above</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">3</span> <span class=\"br0\">{</span><br/>            out <span class=\"st0\">\"  \"</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span> <span class=\"kw1\">x</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\"># $row-count lines of pegs</span><br/>        <span class=\"kw1\">for</span> flat <span class=\"br0\">(</span><span class=\"re0\">$row</span><span class=\"sy0\">-</span>count<span class=\"sy0\">...</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Z</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">...</span><span class=\"re0\">$row</span><span class=\"sy0\">-</span>count<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$spaces</span><span class=\"sy0\">,</span> <span class=\"re0\">$pegs</span> <span class=\"br0\">{</span><br/>            out <span class=\"st0\">\"  \"</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span> <span class=\"kw1\">x</span> <span class=\"re0\">$spaces</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$peg</span> <span class=\"kw1\">xx</span> <span class=\"re0\">$pegs</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">join</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span> <span class=\"kw1\">x</span> <span class=\"re0\">$spaces</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\"># four lines of space below</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">4</span> <span class=\"br0\">{</span><br/>            out <span class=\"st0\">\"  \"</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span> <span class=\"kw1\">x</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">@tmpl</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$midpos</span> <span class=\"sy0\">=</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@output</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"co1\"># collect all the output and output it all at once at the end</span><br/>        <span class=\"kw2\">sub</span> <span class=\"kw3\">say</span><span class=\"br0\">(</span>Str <span class=\"re0\">$foo</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@output</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> <span class=\"re0\">$foo</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw2\">sub</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span>Str <span class=\"re0\">$foo</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@output</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> <span class=\"re0\">$foo</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># make some space above the picture</span><br/>        <span class=\"kw3\">say</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@output</span><span class=\"sy0\">-</span>lines <span class=\"sy0\">=</span> <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span> <span class=\"sy0\">@</span><span class=\"re0\">$_</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">@board</span><span class=\"sy0\">-</span>tmpl<span class=\"sy0\">;</span><br/>        <span class=\"co1\"># place the coins</span><br/>        <span class=\"kw1\">for</span> <span class=\"re0\">@positions</span><span class=\"sy0\">.</span><span class=\"kw3\">kv</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$line</span><span class=\"sy0\">,</span> <span class=\"re0\">$pos</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">next</span> <span class=\"kw1\">unless</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"kw3\">defined</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">@output</span><span class=\"sy0\">-</span>lines<span class=\"br0\">[</span><span class=\"re0\">$line</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$pos</span> <span class=\"sy0\">+</span> <span class=\"re0\">$midpos</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$coin</span><span class=\"sy0\">.</span><span class=\"me1\">ord</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\"># output the board with its coins</span><br/>        <span class=\"kw1\">for</span> <span class=\"re0\">@output</span><span class=\"sy0\">-</span>lines <span class=\"sy0\">-&gt;</span> <span class=\"re0\">@line</span> <span class=\"br0\">{</span><br/>            <span class=\"kw3\">say</span> <span class=\"re0\">@line</span><span class=\"sy0\">.</span><span class=\"me1\">chrs</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># show the statistics</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$padding</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"kw3\">any</span><span class=\"br0\">(</span><span class=\"re0\">@stats</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$padding</span><span class=\"sy0\">++;</span><br/>            <span class=\"kw3\">print</span> <span class=\"st0\">\"  \"</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">@stats</span> <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> <span class=\"kw1\">for</span> <span class=\"re0\">@stats</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$stat</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">given</span> <span class=\"re0\">$stat</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">when</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\c</span>[UPPER HALF BLOCK]\"</span><span class=\"sy0\">;</span><br/>                        <span class=\"re0\">$stat</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">when</span> <span class=\"sy0\">*</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw3\">print</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">;</span><br/>                        <span class=\"nu0\">0</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">default</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\c</span>[FULL BLOCK]\"</span><span class=\"sy0\">;</span><br/>                        <span class=\"re0\">$stat</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw3\">say</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw3\">say</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">for</span> <span class=\"re0\">$padding</span><span class=\"sy0\">...^</span><span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw3\">say</span> <span class=\"re0\">@output</span><span class=\"sy0\">.</span><span class=\"kw3\">join</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> simulate<span class=\"br0\">(</span><span class=\"re0\">$coins</span> <span class=\"kw1\">is</span> copy<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$alive</span> <span class=\"sy0\">=</span> <span class=\"kw1\">True</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> hits<span class=\"sy0\">-</span>peg<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"nu0\">3</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$y</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count <span class=\"kw1\">and</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">%%</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">False</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@coins</span> <span class=\"sy0\">=</span> Int <span class=\"kw1\">xx</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">+</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@stats</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">xx</span> <span class=\"br0\">(</span><span class=\"re0\">$row</span><span class=\"sy0\">-</span>count <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># this line will dispense coins until turned off.</span><br/>    <span class=\"re0\">@coins</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"re0\">$alive</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$alive</span> <span class=\"sy0\">=</span> <span class=\"kw1\">False</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\"># if a coin falls through the bottom, count it</span><br/>        <span class=\"kw1\">given</span> <span class=\"re0\">@coins</span><span class=\"br0\">[</span><span class=\"sy0\">*-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">when</span> <span class=\"sy0\">*.</span><span class=\"kw3\">defined</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">@stats</span><span class=\"br0\">[</span><span class=\"re0\">$_</span> <span class=\"sy0\">+</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count<span class=\"br0\">]</span><span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># move every coin down one row</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count <span class=\"sy0\">+</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span><span class=\"sy0\">...</span><span class=\"nu0\">1</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$line</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$coinpos</span> <span class=\"sy0\">=</span> <span class=\"re0\">@coins</span><span class=\"br0\">[</span><span class=\"re0\">$line</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"re0\">@coins</span><span class=\"br0\">[</span><span class=\"re0\">$line</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> <span class=\"re0\">$coinpos</span><span class=\"sy0\">.</span><span class=\"kw3\">defined</span> <span class=\"br0\">{</span><br/>                Nil<br/>            <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> hits<span class=\"sy0\">-</span>peg<span class=\"br0\">(</span><span class=\"re0\">$coinpos</span><span class=\"sy0\">,</span> <span class=\"re0\">$line</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\"># when a coin from above hits a peg, it will bounce to either side.</span><br/>                <span class=\"re0\">$alive</span> <span class=\"sy0\">=</span> <span class=\"kw1\">True</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">(</span><span class=\"re0\">$coinpos</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$coinpos</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">pick</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\"># if there was a coin above, it will fall to this position.</span><br/>                <span class=\"re0\">$alive</span> <span class=\"sy0\">=</span> <span class=\"kw1\">True</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$coinpos</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\"># let the coin dispenser blink and turn it off if we run out of coins</span><br/>        <span class=\"kw1\">if</span> <span class=\"re0\">@coins</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">defined</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@coins</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Nil<br/>        <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"sy0\">--</span><span class=\"re0\">$coins</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@coins</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># smooth out the two halfsteps of the animation</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$start</span><span class=\"sy0\">-</span>time<span class=\"sy0\">;</span><br/>        <span class=\"kw2\">ENTER</span> <span class=\"br0\">{</span> <span class=\"re0\">$start</span><span class=\"sy0\">-</span>time <span class=\"sy0\">=</span> now <span class=\"br0\">}</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$wait</span><span class=\"sy0\">-</span>time <span class=\"sy0\">=</span> now <span class=\"sy0\">-</span> <span class=\"re0\">$start</span><span class=\"sy0\">-</span>time<span class=\"sy0\">;</span><br/>\u00a0<br/>        sleep <span class=\"nu0\">0.1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$wait</span><span class=\"sy0\">-</span>time <span class=\"kw1\">if</span> <span class=\"re0\">$wait</span><span class=\"sy0\">-</span>time <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"re0\">@coin</span><span class=\"sy0\">-</span>icons<span class=\"sy0\">.</span><span class=\"kw3\">keys</span> <span class=\"br0\">{</span><br/>            sleep <span class=\"re0\">$wait</span><span class=\"sy0\">-</span>time <span class=\"kw3\">max</span> <span class=\"nu0\">0.1</span><span class=\"sy0\">;</span><br/>            display<span class=\"sy0\">-</span>board<span class=\"br0\">(</span><span class=\"re0\">@coins</span><span class=\"sy0\">,</span> <span class=\"re0\">@stats</span><span class=\"sy0\">,</span> <span class=\"re0\">$_</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> MAIN<span class=\"br0\">(</span><span class=\"re0\">$coins</span> <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"re0\">$peg</span><span class=\"sy0\">-</span>lines <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$row</span><span class=\"sy0\">-</span>count <span class=\"sy0\">=</span> <span class=\"re0\">$peg</span><span class=\"sy0\">-</span>lines<span class=\"sy0\">;</span><br/>    simulate<span class=\"br0\">(</span><span class=\"re0\">$coins</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 44, "block": "<pre class=\"text highlighted_source\">constant balls = 80<br/>clear_screen()<br/>sequence screen = repeat(repeat(' ',23),12)<br/>                &amp; repeat(join(repeat(':',12)),12)<br/>                &amp; {repeat('.',23)},<br/>         Pxy = repeat({12,1},balls)<br/>for peg=1 to 10 do<br/>    screen[peg+2][13-peg..11+peg] = join(repeat('.',peg))<br/>end for<br/>puts(1,join(screen,\"\\n\"))<br/>text_color(BRIGHT_RED)<br/>bool moved = true<br/>integer top = ' '   -- (new drop every other iteration)<br/>while moved or top!=' ' do<br/>    moved = false<br/>    for i=1 to balls do<br/>        integer {Px,Py} = Pxy[i]<br/>        if Py!=1 or top=' ' then<br/>            integer Dx = 0, Dy = 0<br/>            if screen[Py+1,Px]=' ' then     -- can vertical?<br/>                Dy = 1<br/>            else<br/>                Dx = {-1,+1}[rand(2)]       -- try l;r or r;l<br/>                if screen[Py+1,Px+Dx]!=' ' then Dx = -Dx end if<br/>                if screen[Py+1,Px+Dx]==' ' then <br/>                    Dy = 1<br/>                end if<br/>            end if<br/>            if Dy then<br/>                position(Py,Px)  puts(1,\" \")  screen[Py,Px] = ' '<br/>                Px += Dx<br/>                Py += Dy<br/>                position(Py,Px)  puts(1,\"o\")  screen[Py,Px] = 'o'<br/>                Pxy[i] = {Px,Py}<br/>                moved = true<br/>                if Py=2 then top = 'o' end if<br/>            end if<br/>        end if<br/>    end for<br/>    position(26,1)<br/>    sleep(0.2)<br/>    if get_key()!=-1 then exit end if<br/>    top = screen[2][12]<br/>end while</pre>"}, {"lang": "PicoLisp", "loc": 25, "block": "<pre class=\"text highlighted_source\">(de galtonBox (Pins Height)<br/>   (let (Bins (need (inc (* 2 Pins)) 0)  X 0  Y 0)<br/>      (until (= Height (apply max Bins))<br/>         (call 'clear)<br/>         (cond<br/>            ((=0 Y) (setq X (inc Pins)  Y 1))<br/>            ((&gt; (inc 'Y) Pins)<br/>               (inc (nth Bins X))<br/>               (zero Y) ) )<br/>         ((if (rand T) inc dec) 'X)<br/>         (for Row Pins<br/>            (for Col (+ Pins Row 1)<br/>               (let D (dec (- Col (- Pins Row)))<br/>                  (prin<br/>                     (cond<br/>                        ((and (= X Col) (= Y Row)) \"o\")<br/>                        ((and (gt0 D) (bit? 1 D)) \".\")<br/>                        (T \" \") ) ) ) )<br/>            (prinl) )<br/>         (prinl)<br/>         (for H (range Height 1)<br/>            (for B Bins<br/>               (prin (if (&gt;= B H) \"o\" \" \")) )<br/>            (prinl) )<br/>         (wait 200) ) ) )</pre>"}, {"lang": "Prolog", "loc": 199, "block": "<pre class=\"prolog highlighted_source\"><span class=\"sy1\">:-</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">dynamic</span></a> tubes<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy4\">.</span><br/><span class=\"sy1\">:-</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">dynamic</span></a> balls<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy4\">.</span><br/><span class=\"sy1\">:-</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">dynamic</span></a> stop<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% number of rows of pins (0 -&gt; 9)</span><br/>row<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>galton_box <span class=\"sy1\">:-</span><br/>\tretractall<span class=\"br0\">(</span>tubes<span class=\"br0\">(</span>_<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tretractall<span class=\"br0\">(</span>balls<span class=\"br0\">(</span>_<span class=\"sy4\">,</span>_<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tretractall<span class=\"br0\">(</span>stop<span class=\"br0\">(</span>_<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tassert<span class=\"br0\">(</span>stop<span class=\"br0\">(</span><span class=\"sy5\">@</span>off<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> window<span class=\"br0\">(</span><span class=\"st_h\">'Galton Box'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> size<span class=\"sy4\">,</span> size<span class=\"br0\">(</span><span class=\"nu0\">520</span><span class=\"sy4\">,</span><span class=\"nu0\">700</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tdisplay_pins<span class=\"br0\">(</span>D<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>ChTubes<span class=\"sy4\">,</span> chain<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tassert<span class=\"br0\">(</span>tubes<span class=\"br0\">(</span>ChTubes<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tdisplay_tubes<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> ChTubes<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> chain<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>B<span class=\"sy4\">,</span> ball<span class=\"br0\">(</span>D<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> append<span class=\"sy4\">,</span> B<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tassert<span class=\"br0\">(</span>balls<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> D<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> done_message<span class=\"sy4\">,</span> and<span class=\"br0\">(</span>message<span class=\"br0\">(</span>ChTubes<span class=\"sy4\">,</span> clear<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span>ChTubes<span class=\"sy4\">,</span> free<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> for_all<span class=\"sy4\">,</span> message<span class=\"br0\">(</span><span class=\"sy5\">@</span>arg1<span class=\"sy4\">,</span> free<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> clear<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> free<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span><span class=\"sy5\">@</span>receiver<span class=\"sy4\">,</span> destroy<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">open</span></a><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% class pin, balls travel between pins</span><br/><span class=\"sy1\">:-</span> pce_begin_class<span class=\"br0\">(</span>pin<span class=\"sy4\">,</span> circle<span class=\"sy4\">,</span> \"pin\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>initialise<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> Pos<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> send_super<span class=\"sy4\">,</span> initialise<span class=\"sy4\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> fill_pattern<span class=\"sy4\">,</span> new<span class=\"br0\">(</span>_<span class=\"sy4\">,</span> colour<span class=\"br0\">(</span><span class=\"sy5\">@</span>default<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>Pos<span class=\"sy4\">,</span> x<span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>Pos<span class=\"sy4\">,</span> y<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> geometry<span class=\"sy4\">,</span> x <span class=\"sy4\">:</span><span class=\"sy6\">=</span> X<span class=\"sy4\">,</span> y <span class=\"sy4\">:</span><span class=\"sy6\">=</span> Y<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/><span class=\"sy1\">:-</span> pce_end_class<span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">% class tube, balls fall in them</span><br/><span class=\"sy1\">:-</span> pce_begin_class<span class=\"br0\">(</span>tube<span class=\"sy4\">,</span> path<span class=\"sy4\">,</span> \"tube where balls fall\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>variable<span class=\"br0\">(</span>indice<span class=\"sy4\">,</span> any<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"index of the tube in the list\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>balls<span class=\"sy4\">,</span> any<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">number</span></a> of balls inside\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>initialise<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> Ind<span class=\"sy4\">,</span> D<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\trow<span class=\"br0\">(</span>Row<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> send_super<span class=\"sy4\">,</span> initialise<span class=\"sy4\">,</span> kind <span class=\"sy4\">:</span><span class=\"sy6\">=</span> poly<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> balls<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> indice<span class=\"sy4\">,</span> Ind<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tX0 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">228</span> <span class=\"sy3\">-</span> Row <span class=\"sy3\">*</span> <span class=\"nu0\">20</span> <span class=\"sy3\">+</span> Ind <span class=\"sy3\">*</span> <span class=\"nu0\">40</span><span class=\"sy4\">,</span><br/>\tX1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> X0 <span class=\"sy3\">+</span> <span class=\"nu0\">20</span><span class=\"sy4\">,</span><br/>\tY1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">600</span><span class=\"sy4\">,</span> Y0 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">350</span><span class=\"sy4\">,</span><br/>\tsend_list<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> append<span class=\"sy4\">,</span> <span class=\"br0\">[</span>point<span class=\"br0\">(</span>X0<span class=\"sy4\">,</span> Y0<span class=\"br0\">)</span><span class=\"sy4\">,</span> point<span class=\"br0\">(</span>X0<span class=\"sy4\">,</span> Y1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t      point<span class=\"br0\">(</span>X1<span class=\"sy4\">,</span>Y1<span class=\"br0\">)</span><span class=\"sy4\">,</span> point<span class=\"br0\">(</span>X1<span class=\"sy4\">,</span>Y0<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> P<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% animation stop when a tube is full</span><br/>add_ball<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> balls<span class=\"sy4\">,</span> B<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tB1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> B<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> balls<span class=\"sy4\">,</span> B1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span>   B1 <span class=\"sy6\">=</span> <span class=\"nu0\">12</span><br/>\t<span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>  <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">retract</span></a><span class=\"br0\">(</span>stop<span class=\"br0\">(</span>_<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> assert<span class=\"br0\">(</span>stop<span class=\"br0\">(</span><span class=\"sy5\">@</span>on<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy4\">;</span>   <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/><span class=\"sy1\">:-</span> pce_end_class<span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">% class ball</span><br/><span class=\"sy1\">:-</span> pce_begin_class<span class=\"br0\">(</span>ball<span class=\"sy4\">,</span> circle<span class=\"sy4\">,</span> \"ball\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>variable<span class=\"br0\">(</span>angle<span class=\"sy4\">,</span> any<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"angle of the ball with the pin\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>dir<span class=\"sy4\">,</span> any<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"left <span class=\"sy3\">/</span> right\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>pin<span class=\"sy4\">,</span> point<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"pin under the ball when it falls\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>position<span class=\"sy4\">,</span> point<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"position of the ball\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>max_descent<span class=\"sy4\">,</span> any<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"max descent\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>state<span class=\"sy4\">,</span> any<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"in_pins <span class=\"sy3\">/</span> in_tube\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>window<span class=\"sy4\">,</span> any<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"window to display\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>mytimer<span class=\"sy4\">,</span> timer<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"timer of the animation\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>initialise<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> W<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> send_super<span class=\"sy4\">,</span> initialise<span class=\"sy4\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> pen<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> state<span class=\"sy4\">,</span> in_pins<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> fill_pattern<span class=\"sy4\">,</span> new<span class=\"br0\">(</span>_<span class=\"sy4\">,</span> colour<span class=\"br0\">(</span><span class=\"sy5\">@</span>default<span class=\"sy4\">,</span> <span class=\"nu0\">65535</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tAng <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">3</span> <span class=\"sy3\">*</span> pi <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> Ang<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> window<span class=\"sy4\">,</span> W<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> geometry<span class=\"sy4\">,</span> x <span class=\"sy4\">:</span><span class=\"sy6\">=</span> <span class=\"nu0\">250</span><span class=\"sy4\">,</span> y <span class=\"sy4\">:</span><span class=\"sy6\">=</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> pin<span class=\"sy4\">,</span> point<span class=\"br0\">(</span><span class=\"nu0\">250</span><span class=\"sy4\">,</span> <span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> choose_dir<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> mytimer<span class=\"sy4\">,</span> new<span class=\"br0\">(</span>_<span class=\"sy4\">,</span> timer<span class=\"br0\">(</span><span class=\"nu0\">0.005</span><span class=\"sy4\">,</span> message<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> move_ball<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>W<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> P<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P?mytimer<span class=\"sy4\">,</span> start<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% method called when the object is destroyed</span><br/><span class=\"co1\">% first the timer is stopped</span><br/><span class=\"co1\">% then all the resources are freed</span><br/>unlink<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tsend<span class=\"br0\">(</span>P?mytimer<span class=\"sy4\">,</span> stop<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> send_super<span class=\"sy4\">,</span> unlink<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>choose_dir<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tI <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> random<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span>   I <span class=\"sy6\">=</span> <span class=\"nu0\">1</span> <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span> Dir <span class=\"sy6\">=</span> left<span class=\"sy4\">;</span> Dir <span class=\"sy6\">=</span> right<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> dir<span class=\"sy4\">,</span> Dir<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>move_ball<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> state<span class=\"sy4\">,</span> State<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span>   State <span class=\"sy6\">=</span> in_pins<br/>\t<span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>  send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> move_ball_in_pins<span class=\"br0\">)</span><br/>\t<span class=\"sy4\">;</span>   send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> move_ball_in_tube<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>move_ball_in_pins<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> Ang<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> pin<span class=\"sy4\">,</span> Pin<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> dir<span class=\"sy4\">,</span> Dir<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span>   Dir <span class=\"sy6\">=</span> left <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span> Ang1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Ang<span class=\"sy3\">-</span><span class=\"nu0\">0.15</span> <span class=\"sy4\">;</span> Ang1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Ang <span class=\"sy3\">+</span> <span class=\"nu0\">0.15</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>Pin<span class=\"sy4\">,</span> x<span class=\"sy4\">,</span> PX<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>Pin<span class=\"sy4\">,</span> y<span class=\"sy4\">,</span> PY<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tX <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">21</span> <span class=\"sy3\">*</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">cos</span></a><span class=\"br0\">(</span>Ang1<span class=\"br0\">)</span> <span class=\"sy3\">+</span>  PX<span class=\"sy4\">,</span><br/>\tY <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">21</span> <span class=\"sy3\">*</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">sin</span></a><span class=\"br0\">(</span>Ang1<span class=\"br0\">)</span> <span class=\"sy3\">+</span> PY<span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> geometry<span class=\"sy4\">,</span> x <span class=\"sy4\">:</span><span class=\"sy6\">=</span> X<span class=\"sy4\">,</span> y <span class=\"sy4\">:</span><span class=\"sy6\">=</span> Y<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P?window<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> P<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span>   <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">abs</span></a><span class=\"br0\">(</span>Ang1 <span class=\"sy3\">-</span> pi<span class=\"br0\">)</span> <span class=\"sy6\">&lt;</span> <span class=\"nu0\">0.1</span><br/>\t<span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>  PX1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> PX <span class=\"sy3\">-</span> <span class=\"nu0\">20</span><span class=\"sy4\">,</span><br/>\t    send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> next_move<span class=\"sy4\">,</span> PX1<span class=\"sy4\">,</span> PY<span class=\"br0\">)</span><br/>\t<span class=\"sy4\">;</span>   <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">abs</span></a><span class=\"br0\">(</span>Ang1 <span class=\"sy3\">-</span> <span class=\"nu0\">2</span> <span class=\"sy3\">*</span> pi<span class=\"br0\">)</span> <span class=\"sy6\">&lt;</span> <span class=\"nu0\">0.1</span><br/>\t<span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>  PX1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> PX <span class=\"sy3\">+</span> <span class=\"nu0\">20</span><span class=\"sy4\">,</span><br/>\t    send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> next_move<span class=\"sy4\">,</span> PX1<span class=\"sy4\">,</span> PY<span class=\"br0\">)</span><br/>\t<span class=\"sy4\">;</span>   send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> Ang1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>next_move<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> PX<span class=\"sy4\">,</span> PY<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\trow<span class=\"br0\">(</span>Row<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\t    Ang2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">3</span> <span class=\"sy3\">*</span> pi <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><span class=\"sy4\">,</span><br/>\t    PY1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> PY <span class=\"sy3\">+</span> <span class=\"nu0\">30</span><span class=\"sy4\">,</span><br/>\t    <span class=\"br0\">(</span>\tPY1 <span class=\"sy1\">=:=</span> <span class=\"br0\">(</span>Row <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy3\">*</span> <span class=\"nu0\">30</span> <span class=\"sy3\">+</span> <span class=\"nu0\">50</span><br/>\t    <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> state<span class=\"sy4\">,</span> in_tube<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tNumTube <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">round</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span>PX <span class=\"sy3\">-</span> <span class=\"nu0\">228</span> <span class=\"sy3\">+</span> Row <span class=\"sy3\">*</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"sy3\">/</span> <span class=\"nu0\">40</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\ttubes<span class=\"br0\">(</span>ChTubes<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tget<span class=\"br0\">(</span>ChTubes<span class=\"sy4\">,</span> find<span class=\"sy4\">,</span><br/>\t\t    message<span class=\"br0\">(</span><span class=\"sy5\">@</span>prolog<span class=\"sy4\">,</span> same_value<span class=\"sy4\">,</span><span class=\"sy5\">@</span>arg1?indice<span class=\"sy4\">,</span> NumTube<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t    Tube<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tsend<span class=\"br0\">(</span>Tube<span class=\"sy4\">,</span> add_ball<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tget<span class=\"br0\">(</span>Tube<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> balls<span class=\"sy4\">,</span> Balls<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tMax_descent <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">600</span> <span class=\"sy3\">-</span> Balls <span class=\"sy3\">*</span> <span class=\"nu0\">20</span><span class=\"sy4\">,</span><br/>\t\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> max_descent<span class=\"sy4\">,</span> Max_descent<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> position<span class=\"sy4\">,</span> point<span class=\"br0\">(</span>PX<span class=\"sy4\">,</span> PY<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t    <span class=\"sy4\">;</span>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> choose_dir<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> Ang2<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> pin<span class=\"sy4\">,</span> point<span class=\"br0\">(</span>PX<span class=\"sy4\">,</span> PY1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>move_ball_in_tube<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> position<span class=\"sy4\">,</span> Descente<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>Descente<span class=\"sy4\">,</span> x<span class=\"sy4\">,</span> PX1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>Descente<span class=\"sy4\">,</span> y<span class=\"sy4\">,</span> PY<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tPY1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> PY<span class=\"sy3\">+</span><span class=\"nu0\">4</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> geometry<span class=\"sy4\">,</span> x <span class=\"sy4\">:</span><span class=\"sy6\">=</span> PX1<span class=\"sy4\">,</span> y <span class=\"sy4\">:</span><span class=\"sy6\">=</span> PY1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> max_descent<span class=\"sy4\">,</span> Max_descent<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span>   Max_descent <span class=\"sy6\">=&lt;</span> PY1<br/>\t<span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>  send<span class=\"br0\">(</span>P?mytimer<span class=\"sy4\">,</span> stop<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t    <span class=\"br0\">(</span>\tstop<span class=\"br0\">(</span><span class=\"sy5\">@</span>off<span class=\"br0\">)</span> <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>  send<span class=\"br0\">(</span><span class=\"sy5\">@</span>prolog<span class=\"sy4\">,</span> next_ball<span class=\"br0\">)</span><span class=\"sy4\">;</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><br/>\t<span class=\"sy4\">;</span>   send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> slot<span class=\"sy4\">,</span> position<span class=\"sy4\">,</span> point<span class=\"br0\">(</span>PX1<span class=\"sy4\">,</span> PY1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P?window<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> P<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"sy1\">:-</span> pce_end_class<span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>next_ball <span class=\"sy1\">:-</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">retract</span></a><span class=\"br0\">(</span>balls<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> D<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>B<span class=\"sy4\">,</span> ball<span class=\"br0\">(</span>D<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> append<span class=\"sy4\">,</span> B<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tassert<span class=\"br0\">(</span>balls<span class=\"br0\">(</span>Balls<span class=\"sy4\">,</span> D<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% test to find the appropriate tube</span><br/>same_value<span class=\"br0\">(</span>V<span class=\"sy4\">,</span> V<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>display_pins<span class=\"br0\">(</span>D<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\trow<span class=\"br0\">(</span>Row<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tforall<span class=\"br0\">(</span>between<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span> Row<span class=\"sy4\">,</span> I<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t       <span class=\"br0\">(</span>  Start <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">250</span> <span class=\"sy3\">-</span> I <span class=\"sy3\">*</span> <span class=\"nu0\">20</span><span class=\"sy4\">,</span><br/>\t\t  Y <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> I <span class=\"sy3\">*</span> <span class=\"nu0\">30</span> <span class=\"sy3\">+</span> <span class=\"nu0\">50</span><span class=\"sy4\">,</span><br/>\t          forall<span class=\"br0\">(</span>between<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span> I<span class=\"sy4\">,</span> J<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t <span class=\"br0\">(</span>   X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Start <span class=\"sy3\">+</span> J <span class=\"sy3\">*</span> <span class=\"nu0\">40</span><span class=\"sy4\">,</span><br/>\t\t\t     new<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> pin<span class=\"br0\">(</span>point<span class=\"br0\">(</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t     send<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> P<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>display_tubes<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> Ch<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\trow<span class=\"br0\">(</span>Row<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tRow1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Row<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\tforall<span class=\"br0\">(</span>between<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span> Row1<span class=\"sy4\">,</span> I<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t       <span class=\"br0\">(</span>   new<span class=\"br0\">(</span>T<span class=\"sy4\">,</span> tube<span class=\"br0\">(</span>I<span class=\"sy4\">,</span> D<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t   send<span class=\"br0\">(</span>Ch<span class=\"sy4\">,</span> append<span class=\"sy4\">,</span> T<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t   send<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 127, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Global</span> pegRadius, pegSize, pegSize2, height, width, <span class=\"kw2\">delay</span>, histogramSize, ball<br/>\u00a0<br/><span class=\"kw1\">Procedure</span> eventLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> event<br/>  <span class=\"kw1\">Repeat</span><br/>    event <span class=\"sy0\">=</span> <span class=\"kw2\">WindowEvent</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> event <span class=\"sy0\">=</span> #PB_Event_CloseWindow<br/>      <span class=\"kw1\">End</span><br/>    <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">Until</span> event <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> animate_actual<span class=\"br0\">(</span>x1, y1, x2, y2, steps<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> x.f, y.f, xstep.f, ystep.f, i, lastX.f, lastY.f<br/>  x <span class=\"sy0\">=</span> x1<br/>  y <span class=\"sy0\">=</span> y1<br/>  xstep <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x2 <span class=\"sy0\">-</span> x1<span class=\"br0\">)</span><span class=\"sy0\">/</span>steps<br/>  ystep <span class=\"sy0\">=</span> <span class=\"br0\">(</span>y2 <span class=\"sy0\">-</span> y1<span class=\"br0\">)</span><span class=\"sy0\">/</span>steps<br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> steps<br/>    lastX <span class=\"sy0\">=</span> x<br/>    lastY <span class=\"sy0\">=</span> y<br/>    <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span>CanvasOutput<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">DrawingMode</span><span class=\"br0\">(</span>#PB_2DDrawing_XOr<span class=\"br0\">)</span><br/>      <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>x, y, pegRadius, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    eventLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">Delay</span><span class=\"br0\">(</span><span class=\"kw2\">delay</span><span class=\"br0\">)</span>      <span class=\"co1\">; wait in ms</span><br/>    <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span>CanvasOutput<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">DrawingMode</span><span class=\"br0\">(</span>#PB_2DDrawing_XOr<span class=\"br0\">)</span><br/>      <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>x, y, pegRadius, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    eventLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    x <span class=\"sy0\">+</span> xstep<br/>    y <span class=\"sy0\">+</span> ystep<br/>  <span class=\"kw1\">Next</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> draw_ball<span class=\"br0\">(</span>xpos, ypos<span class=\"br0\">)</span>                      <br/>  <span class=\"kw1\">Static</span> <span class=\"kw1\">Dim</span> ballcounts<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"co1\">;tally drop positions</span><br/>  <span class=\"kw1\">If</span> xpos <span class=\"sy0\">&gt;</span> ArraySize<span class=\"br0\">(</span>ballcounts<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Redim</span> ballcounts<span class=\"br0\">(</span>xpos<span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span> <br/>  ballcounts<span class=\"br0\">(</span>xpos<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  animate_actual<span class=\"br0\">(</span>xpos, ypos, xpos, height <span class=\"sy0\">-</span> ballcounts<span class=\"br0\">(</span>xpos<span class=\"br0\">)</span> <span class=\"sy0\">*</span> pegSize, <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span>CanvasOutput<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>xpos, height <span class=\"sy0\">-</span> ballcounts<span class=\"br0\">(</span>xpos<span class=\"br0\">)</span> <span class=\"sy0\">*</span> pegSize, pegRadius, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  eventLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> ballcounts<span class=\"br0\">(</span>xpos<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> histogramSize<br/>    <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">1</span> <br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw2\">SetWindowTitle</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"st0\">\"Ended after \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>ball<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" balls\"</span><span class=\"br0\">)</span> <span class=\"co1\">;histogramSize exceeded</span><br/><span class=\"kw1\">EndProcedure</span> <br/>\u00a0<br/><span class=\"kw1\">Procedure</span> animate<span class=\"br0\">(</span>x1, y1, x2, y2<span class=\"br0\">)</span><br/>  animate_actual<span class=\"br0\">(</span>x1, y1, x2, y1, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  animate_actual<span class=\"br0\">(</span>x2, y1, x2, y2, <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span> <br/>\u00a0<br/><span class=\"kw1\">Procedure</span> galton<span class=\"br0\">(</span>pegRows<span class=\"br0\">)</span><br/>  <span class=\"co1\">;drop a ball into the galton box</span><br/>  <span class=\"kw1\">Protected</span> xpos, ypos, i, oldX, oldY<br/>\u00a0<br/>  oldX <span class=\"sy0\">=</span> width <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> pegSize <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>  xpos <span class=\"sy0\">=</span> oldX<br/>  oldY <span class=\"sy0\">=</span> pegSize<br/>  ypos <span class=\"sy0\">=</span> oldY<br/>  animate_actual<span class=\"br0\">(</span>oldX, <span class=\"nu0\">0</span>, xpos, ypos, <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> pegRows <br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      xpos <span class=\"sy0\">+</span> pegSize <br/>    <span class=\"kw1\">Else</span><br/>      xpos <span class=\"sy0\">-</span> pegSize<br/>    <span class=\"kw1\">EndIf</span> <br/>    ypos <span class=\"sy0\">+</span> pegSize2<br/>    animate<span class=\"br0\">(</span>oldX, oldY, xpos, ypos<span class=\"br0\">)</span><br/>    oldX <span class=\"sy0\">=</span> xpos<br/>    oldY <span class=\"sy0\">=</span> ypos<br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw1\">ProcedureReturn</span> draw_ball<span class=\"br0\">(</span>xpos, ypos<span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> setup_window<span class=\"br0\">(</span>numRows, ballCount<span class=\"br0\">)</span>  <br/>  <span class=\"co1\">;Draw numRows levels of pegs</span><br/>  <span class=\"kw1\">Protected</span> xpos, ypos, i, j<br/>\u00a0<br/>  width <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> numRows <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> pegSize<br/>  histogramSize <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ballCount <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">3</span><br/>  <span class=\"kw1\">If</span> histogramSize <span class=\"sy0\">&gt;</span> <span class=\"nu0\">500</span> <span class=\"sy0\">/</span> pegSize: histogramSize <span class=\"sy0\">=</span> <span class=\"nu0\">500</span> <span class=\"sy0\">/</span> pegSize: <span class=\"kw1\">EndIf</span><br/>  height <span class=\"sy0\">=</span> width <span class=\"sy0\">+</span> histogramSize <span class=\"sy0\">*</span> pegSize<br/>  <span class=\"kw2\">OpenWindow</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, width, height, <span class=\"st0\">\"Galton box animation\"</span>, #PB_Window_SystemMenu<span class=\"br0\">)</span><br/>  CanvasGadget<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, width, height<span class=\"br0\">)</span> <br/>\u00a0<br/>  <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span>CanvasOutput<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">Box</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, width, height, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span>$EB, $EB, $EB<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> numRows<br/>      ypos <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> pegSize2<br/>      xpos <span class=\"sy0\">=</span> width <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> pegSize <span class=\"sy0\">-</span> pegSize <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>      <span class=\"kw1\">For</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> i<br/>        <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>xpos, ypos, pegRadius, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        xpos <span class=\"sy0\">+</span> pegSize2<br/>      <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> numRows<br/>      <span class=\"kw2\">Line</span><span class=\"br0\">(</span><span class=\"br0\">(</span>numRows <span class=\"sy0\">-</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> pegSize2 <span class=\"sy0\">-</span> pegSize <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, width <span class=\"sy0\">-</span> pegSize, <span class=\"nu0\">1</span>, histogramSize <span class=\"sy0\">*</span> pegSize, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span> <br/>  <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"co1\">;based on the galton box simulation from Unicon book</span><br/><span class=\"kw1\">Define</span> pegRows <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>, ballCount<br/>pegRadius <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>pegSize <span class=\"sy0\">=</span> pegRadius <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>pegSize2 <span class=\"sy0\">=</span> pegSize <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <br/><span class=\"kw2\">delay</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>                      <span class=\"co1\">; ms delay</span><br/>\u00a0<br/><span class=\"kw1\">Repeat</span><br/>  ballCount <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">InputRequester</span><span class=\"br0\">(</span><span class=\"st0\">\"Galton box simulator\"</span>,<span class=\"st0\">\"How many balls to drop?\"</span>, <span class=\"st0\">\"100\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Until</span> ballCount <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>setup_window<span class=\"br0\">(</span>pegRows, ballCount<span class=\"br0\">)</span><br/>eventLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">For</span> ball <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> ballCount<br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> galton<span class=\"br0\">(</span>pegRows<span class=\"br0\">)</span>: <span class=\"kw1\">Break</span>: <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">Next</span><br/><span class=\"kw1\">Repeat</span>: eventLoop<span class=\"br0\">(</span><span class=\"br0\">)</span>: <span class=\"kw1\">ForEver</span></pre>"}, {"lang": "Python", "loc": 85, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#!/usr/bin/python</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span><span class=\"sy0\">,</span> <span class=\"kw3\">os</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">random</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">time</span><br/>\u00a0<br/><span class=\"kw1\">def</span> print_there<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> text<span class=\"br0\">)</span>:<br/>     <span class=\"kw3\">sys</span>.<span class=\"me1\">stdout</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\x</span>1b7<span class=\"es0\">\\x</span>1b[%d;%df%s<span class=\"es0\">\\x</span>1b8\"</span>\u00a0% <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> text<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     <span class=\"kw3\">sys</span>.<span class=\"me1\">stdout</span>.<span class=\"me1\">flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">class</span> Ball<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> update<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> +<span class=\"sy0\">=</span> <span class=\"kw3\">random</span>.<span class=\"me1\">randint</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> fall<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> +<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">class</span> Board<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> width<span class=\"sy0\">,</span> well_depth<span class=\"sy0\">,</span> N<span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">balls</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">fallen</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> * <span class=\"br0\">(</span>width + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">width</span> <span class=\"sy0\">=</span> width<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">well_depth</span> <span class=\"sy0\">=</span> well_depth<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">N</span> <span class=\"sy0\">=</span> N<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">shift</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> update<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">for</span> ball <span class=\"kw1\">in</span> <span class=\"kw2\">self</span>.<span class=\"me1\">balls</span>:<br/>            <span class=\"kw1\">if</span> ball.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> <span class=\"kw2\">self</span>.<span class=\"me1\">width</span>:<br/>                ball.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">elif</span> ball.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> <span class=\"kw2\">self</span>.<span class=\"me1\">width</span> + <span class=\"kw2\">self</span>.<span class=\"me1\">well_depth</span> - <span class=\"kw2\">self</span>.<span class=\"me1\">fallen</span><span class=\"br0\">[</span>ball.<span class=\"me1\">x</span><span class=\"br0\">]</span>:<br/>                ball.<span class=\"me1\">fall</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">elif</span> ball.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> <span class=\"kw2\">self</span>.<span class=\"me1\">width</span> + <span class=\"kw2\">self</span>.<span class=\"me1\">well_depth</span> - <span class=\"kw2\">self</span>.<span class=\"me1\">fallen</span><span class=\"br0\">[</span>ball.<span class=\"me1\">x</span><span class=\"br0\">]</span>:<br/>                <span class=\"kw2\">self</span>.<span class=\"me1\">fallen</span><span class=\"br0\">[</span>ball.<span class=\"me1\">x</span><span class=\"br0\">]</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">else</span>:<br/>                <span class=\"kw1\">pass</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> balls_on_board<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">balls</span><span class=\"br0\">)</span> - <span class=\"kw2\">sum</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">fallen</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> add_ball<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">balls</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">N</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">balls</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span>Ball<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> print_board<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">width</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span>:<br/>                print_there<span class=\"br0\">(</span> y + <span class=\"nu0\">1</span> <span class=\"sy0\">,</span><span class=\"kw2\">self</span>.<span class=\"me1\">width</span> - y + <span class=\"nu0\">2</span>*x + <span class=\"kw2\">self</span>.<span class=\"me1\">shift</span> + <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"#\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">def</span> print_ball<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> ball<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> ball.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">width</span>:<br/>            x <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">width</span> - ball.<span class=\"me1\">y</span> + <span class=\"nu0\">2</span>*ball.<span class=\"me1\">x</span> + <span class=\"kw2\">self</span>.<span class=\"me1\">shift</span><br/>        <span class=\"kw1\">else</span>:<br/>            x <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>*ball.<span class=\"me1\">x</span> + <span class=\"kw2\">self</span>.<span class=\"me1\">shift</span><br/>        y <span class=\"sy0\">=</span> ball.<span class=\"me1\">y</span> + <span class=\"nu0\">1</span><br/>        print_there<span class=\"br0\">(</span>y<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> <span class=\"st0\">\"*\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> print_all<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">chr</span><span class=\"br0\">(</span><span class=\"nu0\">27</span><span class=\"br0\">)</span> + <span class=\"st0\">\"[2J\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">print_board</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> ball <span class=\"kw1\">in</span> <span class=\"kw2\">self</span>.<span class=\"me1\">balls</span>:<br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">print_ball</span><span class=\"br0\">(</span>ball<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    board <span class=\"sy0\">=</span> Board<span class=\"br0\">(</span>width <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> well_depth <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> N <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>    board.<span class=\"me1\">add_ball</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">#initialization</span><br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span>board.<span class=\"me1\">balls_on_board</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>:<br/>         board.<span class=\"me1\">print_all</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>         <span class=\"kw3\">time</span>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">0.25</span><span class=\"br0\">)</span><br/>         board.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>         board.<span class=\"me1\">print_all</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>         <span class=\"kw3\">time</span>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">0.25</span><span class=\"br0\">)</span><br/>         board.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>         board.<span class=\"me1\">add_ball</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">if</span> __name__<span class=\"sy0\">==</span><span class=\"st0\">\"__main__\"</span>:<br/>    main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 120, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>;a ball's position...row is a natural number and col is an integer where 0 is the center<br/>(define-struct pos (row col))<br/>;state of simulation...list of all positions and vector of balls (index = bin)<br/>(define-struct st (poss bins))<br/>;increment vector @i<br/>(define (vector-inc! v i) (vector-set! v i (add1 (vector-ref v i))))<br/>\u00a0<br/>(define BALL-RADIUS 6)<br/>;for balls to fit perfectly between diamond-shaped pins, the side length is<br/>;determined by inscribing the diamond in the circle<br/>(define PIN-SIDE-LENGTH (* (sqrt 2) BALL-RADIUS))<br/>;ultimate pin width and height<br/>(define PIN-WH (* 2 BALL-RADIUS))<br/>(define PIN-HOR-SPACING (* 2 PIN-WH))<br/>;vertical space is the height of an equilateral triangle with side length = PIN-HOR-SPACING<br/>(define PIN-VER-SPACING (* 1/2 (sqrt 3) PIN-HOR-SPACING))<br/>;somewhat copying BASIC256's graphics<br/>;determines how thick the outline will be<br/>(define FILL-RATIO 0.7)<br/>;freeze is a function that converts the drawing code into an actual bitmap forever<br/>(define PIN (freeze (overlay (rotate 45 (square (* FILL-RATIO PIN-SIDE-LENGTH) \"solid\" \"purple\"))<br/>                             (rotate 45 (square PIN-SIDE-LENGTH \"solid\" \"magenta\")))))<br/>(define BALL (freeze (overlay (circle (* FILL-RATIO BALL-RADIUS) \"solid\" \"green\")<br/>                              (circle BALL-RADIUS \"solid\" \"dark green\"))))<br/>(define BIN-COLOR (make-color 255 128 192))<br/>;# balls bin can fit<br/>(define BIN-CAPACITY 10)<br/>(define BIN-HEIGHT (* BIN-CAPACITY PIN-WH))<br/>(define BIN (freeze (beside/align \"bottom\"<br/>                                  (line 0 BIN-HEIGHT BIN-COLOR)<br/>                                  (line PIN-WH 0 BIN-COLOR)<br/>                                  (line 0 BIN-HEIGHT BIN-COLOR))))<br/>\u00a0<br/>(define draw-background<br/>  (let ([background #f])<br/>    (\u03bb (height)<br/>      (if (image? background)<br/>          background<br/>          (let* ([w (+ (image-width BIN) (* PIN-HOR-SPACING height))]<br/>                 [h (+ PIN-WH (image-height BIN) (* PIN-VER-SPACING height))]<br/>                 [draw-background (\u03bb () (rectangle w h \"solid\" \"black\"))])<br/>            (begin (set! background (freeze (draw-background))) background))))))<br/>\u00a0<br/>;draws images using x horizontal space between center points<br/>(define (spaced/x x is)<br/>  (if (null? is)<br/>      (empty-scene 0 0)<br/>      (let spaced/x ([n 1] [i (car is)] [is (cdr is)])<br/>        (if (null? is)<br/>            i<br/>            (overlay/xy i (* -1 n x) 0 (spaced/x (add1 n) (car is) (cdr is)))))))<br/>\u00a0<br/>(define (draw-pin-row r) (spaced/x PIN-HOR-SPACING (make-list (add1 r) PIN)))<br/>\u00a0<br/>;draws all pins, using saved bitmap for efficiency<br/>(define draw-pins<br/>  (let ([bmp #f])<br/>    (\u03bb (height)<br/>      (let ([draw-pins (\u03bb () (foldl (\u03bb (r i) (overlay/align/offset<br/>                                             \u00a0;vertically line up all pin rows<br/>                                              \"center\" \"bottom\" (draw-pin-row r)<br/>                                             \u00a0;shift down from the bottom of accum'ed image by ver spacing<br/>                                              0 (- PIN-VER-SPACING) i))<br/>                                    (draw-pin-row 0) (range 1 height 1)))])<br/>        (if (image? bmp)<br/>            bmp<br/>            (begin (set! bmp (freeze (draw-pins))) bmp))))))<br/>\u00a0<br/>(define (draw-ball p i)<br/> \u00a0;the ball starts at the top of the image<br/>  (overlay/align/offset \"center\" \"top\" BALL (* -1 (pos-col p) PIN-WH) (* -1 (pos-row p) PIN-VER-SPACING) i))<br/>\u00a0<br/>;bin has balls added from bottom, stacked exactly on top of each other<br/>;the conditional logic is needed because above can't handle 0 or 1 things<br/>(define (draw-bin n)<br/>  (if (zero? n)<br/>      BIN<br/>      (overlay/align \"center\" \"bottom\"<br/>                     (if (= n 1) BALL (apply above (make-list n BALL)))<br/>                     BIN)))<br/>\u00a0<br/>;main drawing function<br/>(define (draw height s)<br/>  (let* ([bins (spaced/x PIN-HOR-SPACING (map draw-bin (vector-&gt;list (st-bins s))))]<br/>        \u00a0;pins above bins<br/>         [w/pins (above (draw-pins height) bins)]<br/>        \u00a0;draw this all one ball diameter (PIN-WH) below top<br/>         [w/background (overlay/align/offset \"center\" \"top\" w/pins<br/>                                             0 (- PIN-WH) (draw-background height))])<br/>   \u00a0;now accumulate in each ball<br/>    (foldl draw-ball w/background (st-poss s))))<br/>\u00a0<br/>;a ball moves down by increasing its row and randomly changing its col by -1 or 1<br/>(define (next-row height p)<br/>  (make-pos (add1 (pos-row p))<br/>            (+ -1 (* 2 (random 2)) (pos-col p))))<br/>\u00a0<br/>;each step, every ball goes to the next row and new balls are added at the top center<br/>;balls that fall off go into bins<br/>(define (tock height s)<br/>  (let* ([new-ps (map (\u03bb (p) (next-row height p)) (st-poss s))]<br/>        \u00a0;live balls haven't gone past the last row of pins<br/>         [live (filter (\u03bb (p) (&lt; (pos-row p) height)) new-ps)]<br/>        \u00a0;dead balls have (partition from normal Racket would be useful here...)<br/>         [dead (filter (\u03bb (p) (&gt;= (pos-row p) height)) new-ps)]<br/>        \u00a0;adjust col from [-x,x] to [0,2x]<br/>         [bin-indices (map (\u03bb (p) (quotient (+ (pos-col p) height) 2)) dead)])<br/>   \u00a0;add new balls to the live balls<br/>    (make-st (append (make-list (random 4) (make-pos 0 0)) live)<br/>            \u00a0;sum dead ball positions into bins<br/>             (begin (for-each (\u03bb (i) (vector-inc! (st-bins s) i)) bin-indices)<br/>                    (st-bins s)))))<br/>\u00a0<br/>;run simulation with empty list of positions to start, stepping with \"tock\" and drawing with \"draw\"<br/>(define (run height)<br/>  (big-bang (make-st '() (make-vector (add1 height) 0))<br/>            (on-tick (\u03bb (ps) (tock height ps)) 0.5)<br/>            (to-draw (\u03bb (ps) (draw height ps)))))<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 77, "block": "<pre class=\"ruby highlighted_source\"><span class=\"re0\">$rows_of_pins</span> = <span class=\"nu0\">12</span><br/><span class=\"re0\">$width</span> = <span class=\"re0\">$rows_of_pins</span> <span class=\"sy0\">*</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>$rows_of_pins<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">14</span><br/>\u00a0<br/>Shoes.<span class=\"me1\">app</span><span class=\"br0\">(</span><br/>    <span class=\"re3\">:width</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$width</span> <span class=\"sy0\">+</span> <span class=\"nu0\">14</span>,<br/>    <span class=\"re3\">:title</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Galton Box\"</span><br/><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"re1\">@bins</span> = <span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>$rows_of_pins<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"re1\">@x_coords</span> = <span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>$rows_of_pins<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">}</span><br/>  <span class=\"re1\">@y_coords</span> = <span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>$rows_of_pins<span class=\"br0\">)</span><br/>  stack<span class=\"br0\">(</span><span class=\"re3\">:width</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$width</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    stroke gray<br/>    fill gray<br/>    <span class=\"nu0\">1</span>.<span class=\"me1\">upto</span><span class=\"br0\">(</span>$rows_of_pins<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>row<span class=\"sy0\">|</span><br/>      y = <span class=\"nu0\">14</span> <span class=\"sy0\">+</span> <span class=\"nu0\">24</span><span class=\"sy0\">*</span>row<br/>      <span class=\"re1\">@y_coords</span><span class=\"br0\">[</span>row<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = y<br/>      row.<span class=\"me1\">times</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span><br/>        x = <span class=\"re0\">$width</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">0.5</span><span class=\"sy0\">*</span>row<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">24</span> <span class=\"sy0\">+</span> <span class=\"nu0\">14</span><br/>        <span class=\"re1\">@x_coords</span><span class=\"br0\">[</span>row<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;</span> x<br/>        oval x<span class=\"sy0\">+</span><span class=\"nu0\">2</span>, y, <span class=\"nu0\">6</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"re1\">@y_coords</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"re1\">@y_coords</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">24</span><br/>  <span class=\"re1\">@x_coords</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"re1\">@x_coords</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> x<span class=\"sy0\">-</span><span class=\"nu0\">12</span><span class=\"br0\">}</span> <span class=\"sy0\">+</span> <span class=\"br0\">[</span>@x_coords<span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">+</span><span class=\"nu0\">12</span><span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"re1\">@balls</span> = stack<span class=\"br0\">(</span><span class=\"re3\">:width</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$width</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    stroke red<br/>    fill red<br/>  <span class=\"kw1\">end</span>.<span class=\"me1\">move</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"re1\">@histogram</span> = stack<span class=\"br0\">(</span><span class=\"re3\">:width</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$width</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    nostroke<br/>    fill black<br/>  <span class=\"kw1\">end</span>.<span class=\"me1\">move</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"re1\">@y_coords</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"re1\">@paused</span> = <span class=\"kw2\">false</span><br/>  keypress <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>key<span class=\"sy0\">|</span><br/>    <span class=\"kw1\">case</span> key<br/>    <span class=\"kw1\">when</span> <span class=\"st0\">\"<span class=\"es0\">\\x</span>11\"</span>, <span class=\"re3\">:control_q</span><br/>      <span class=\"kw3\">exit</span><br/>    <span class=\"kw1\">when</span> <span class=\"st0\">\"<span class=\"es0\">\\x</span>10\"</span>, <span class=\"re3\">:control_p</span><br/>      <span class=\"re1\">@paused</span> =\u00a0<a class=\"__cf_email__\" data-cfemail=\"c1e081b1a0b4b2a4a5\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"re1\">@ball_row</span> = <span class=\"nu0\">0</span><br/>  <span class=\"re1\">@ball_col</span> = <span class=\"nu0\">0</span><br/>  animate<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>$rows_of_pins<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> <span class=\"re1\">@paused</span><br/>      y = <span class=\"re1\">@y_coords</span><span class=\"br0\">[</span>@ball_row<span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">12</span><br/>      x = <span class=\"re1\">@x_coords</span><span class=\"br0\">[</span>@ball_row<span class=\"br0\">]</span><span class=\"br0\">[</span>@ball_col<span class=\"br0\">]</span><br/>      <span class=\"re1\">@balls</span>.<span class=\"me1\">clear</span> <span class=\"br0\">{</span>oval x, y, <span class=\"nu0\">10</span><span class=\"br0\">}</span><br/>      <span class=\"re1\">@ball_row</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">if</span> <span class=\"re1\">@ball_row</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$rows_of_pins</span><br/>        <span class=\"re1\">@ball_col</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span> <span class=\"kw1\">if</span> <span class=\"kw3\">rand</span> <span class=\"sy0\">&gt;</span>= <span class=\"nu0\">0.5</span><br/>      <span class=\"kw1\">else</span><br/>        <span class=\"re1\">@bins</span><span class=\"br0\">[</span>@ball_col<span class=\"br0\">]</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>        <span class=\"re1\">@ball_row</span> = <span class=\"re1\">@ball_col</span> = <span class=\"nu0\">0</span><br/>        update_histogram<br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> update_histogram<br/>    y = <span class=\"re1\">@y_coords</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><br/>    <span class=\"re1\">@histogram</span>.<span class=\"me1\">clear</span> <span class=\"kw1\">do</span><br/>      <span class=\"re1\">@bins</span>.<span class=\"me1\">each_with_index</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>num, i<span class=\"sy0\">|</span><br/>        <span class=\"kw1\">if</span> num <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>          x = <span class=\"re1\">@x_coords</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>          rect x<span class=\"sy0\">-</span><span class=\"nu0\">6</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">24</span>, num<br/>        <span class=\"kw1\">end</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Tcl", "loc": 101, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><br/>\u00a0<br/>oo::<span class=\"me1\">class</span> create GaltonBox <span class=\"br0\">{</span><br/>    <span class=\"kw1\">variable</span> b w h n x y cnt step dropping<br/>\u00a0<br/>    constructor <span class=\"br0\">{</span>BALLS <span class=\"br0\">{</span>NUMPEGS <span class=\"nu0\">5</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>HEIGHT <span class=\"nu0\">24</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> n <span class=\"re0\">$NUMPEGS</span><br/>\t<span class=\"kw1\">set</span> w <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span> + <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> h <span class=\"re0\">$HEIGHT</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"<span class=\"es0\">\\0</span>33<span class=\"es0\">\\[</span>H<span class=\"es0\">\\0</span>33<span class=\"es0\">\\[</span>J\"</span><br/>\t<span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">set</span> y <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$BALLS</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> cnt <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">set</span> step <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">set</span> dropping <span class=\"nu0\">1</span><br/>\u00a0<br/>\t<span class=\"kw1\">set</span> b <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$h</span> <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$w</span> <span class=\"st0\">\" \"</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>-<span class=\"re0\">$i</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$i</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j <span class=\"nu0\">2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">lset</span> b <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"re0\">$i</span>+<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span>+<span class=\"re0\">$w</span>/<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"st0\">\"*\"</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> show <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"<span class=\"es0\">\\0</span>33<span class=\"es0\">\\[</span>H\"</span><br/>\t<span class=\"kw1\">set</span> oldrow <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">foreach</span> row <span class=\"re0\">$b</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">foreach</span> char <span class=\"re0\">$row</span> oldchar <span class=\"re0\">$oldrow</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$char</span> ne <span class=\"st0\">\"*\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"$char \"</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$oldchar</span> eq <span class=\"st0\">\" \"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"<span class=\"es0\">\\0</span>33<span class=\"es0\">\\[</span>32m*<span class=\"es0\">\\0</span>33<span class=\"es0\">\\[</span>m \"</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"<span class=\"es0\">\\0</span>33<span class=\"es0\">\\[</span>31m*<span class=\"es0\">\\0</span>33<span class=\"es0\">\\[</span>m \"</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"kw1\">set</span> oldrow <span class=\"re0\">$row</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"\"</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> Move idx <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> xx <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$x</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> yy <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$y</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> kill <span class=\"nu0\">0</span><br/>\u00a0<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$yy</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$yy</span> == <span class=\"re0\">$h</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lset</span> y <span class=\"re0\">$idx</span> -<span class=\"nu0\">1</span><br/>\t    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">switch</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$b</span> <span class=\"br0\">[</span><span class=\"kw2\">incr</span> yy<span class=\"br0\">]</span> <span class=\"re0\">$xx</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    <span class=\"st0\">\"*\"</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">incr</span> xx <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>int<span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> - <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$b</span> <span class=\"br0\">[</span><span class=\"kw2\">incr</span> yy -<span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"re0\">$xx</span><span class=\"br0\">]</span> ne <span class=\"st0\">\" \"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> dropping <span class=\"nu0\">0</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"st0\">\"o\"</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">incr</span> yy -<span class=\"nu0\">1</span><br/>\t\t<span class=\"kw1\">set</span> kill <span class=\"nu0\">1</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">set</span> c <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$b</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$y</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$x</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">lset</span> b <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$y</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$x</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span> <span class=\"st0\">\" \"</span><br/>\t<span class=\"kw2\">lset</span> b <span class=\"re0\">$yy</span> <span class=\"re0\">$xx</span> <span class=\"re0\">$c</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$kill</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lset</span> y <span class=\"re0\">$idx</span> -<span class=\"nu0\">1</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lset</span> y <span class=\"re0\">$idx</span> <span class=\"re0\">$yy</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">lset</span> x <span class=\"re0\">$idx</span> <span class=\"re0\">$xx</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"re0\">$kill</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> step <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> moving <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$cnt</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> moving <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>my Move <span class=\"re0\">$i</span><span class=\"br0\">]</span> || <span class=\"re0\">$moving</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"nu0\">2</span> == <span class=\"br0\">[</span><span class=\"kw2\">incr</span> step<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$cnt</span> <span class=\"sy0\">&lt;</span> <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$dropping</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> step <span class=\"nu0\">0</span><br/>\t    <span class=\"kw2\">lset</span> x <span class=\"re0\">$cnt</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$w</span> / <span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"kw2\">lset</span> y <span class=\"re0\">$cnt</span> <span class=\"nu0\">0</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$b</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$y</span> <span class=\"re0\">$cnt</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$x</span> <span class=\"re0\">$cnt</span><span class=\"br0\">]</span><span class=\"br0\">]</span> ne <span class=\"st0\">\" \"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"kw2\">lset</span> b <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$y</span> <span class=\"re0\">$cnt</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$x</span> <span class=\"re0\">$cnt</span><span class=\"br0\">]</span> <span class=\"st0\">\"o\"</span><br/>\t    <span class=\"kw2\">incr</span> cnt<br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$moving</span> || <span class=\"re0\">$dropping</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>GaltonBox create board <span class=\"nu0\">1024</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"kw2\"><span class=\"re0\">$argv</span></span><br/><span class=\"kw1\">while</span> true <span class=\"br0\">{</span><br/>    board show<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>board step<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>after <span class=\"nu0\">60</span><span class=\"br0\">}</span> <span class=\"kw1\">break</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "XPL0", "loc": 33, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;          \\intrinsic code declarations<br/>define  Balls = 80;             \\maximum number of balls<br/>int     Bx(Balls), By(Balls),   \\character cell coordinates of each ball<br/>        W, I, J, Peg, Dir;<br/>[W:= Peek($40, $4A);            \\get screen width in characters<br/>Clear;  CrLf(6);  CrLf(6);<br/>for Peg:= 1 to 10 do                            \\draw pegs<br/>        [for I:= 1 to 12-Peg do ChOut(6,^ );    \\space over to first peg<br/>         for I:= 1 to Peg do [ChOut(6,^.);  ChOut(6,^ )];<br/>        CrLf(6);<br/>        ];<br/>for J:= 0 to 12-1 do                            \\draw slots<br/>        [for I:= 0 to 12-1 do [ChOut(6,^:);  ChOut(6,^ )];<br/>        CrLf(6);<br/>        ];<br/>for I:= 0 to 23-1 do ChOut(6,^.);               \\draw bottom<br/>for I:= 0 to Balls-1 do                         \\make source of balls at top<br/>        [Bx(I):= 11;  By(I):= 1];<br/>Attrib($C);                                     \\make balls bright red<br/>repeat                                          \\balls away! ...<br/>    for I:= 0 to Balls-1 do                     \\for all the balls ...<br/>        [Cursor(Bx(I), By(I));  ChOut(6, ^ );   \\erase ball's initial position<br/>        if Peek($B800, (Bx(I)+(By(I)+1)*W)*2) = ^ \\is ball above empty location?<br/>        then    By(I):= By(I)+1                 \\yes: fall straight down<br/>        else    [Dir:= Ran(3)-1;                \\no: randomly fall right or left<br/>                if Peek($B800, (Bx(I)+Dir+(By(I)+1)*W)*2) = ^  then<br/>                        [Bx(I):= Bx(I)+Dir;  By(I):= By(I)+1];<br/>                ];<br/>        Cursor(Bx(I), By(I));  ChOut(6, ^o);    \\draw ball at its new position<br/>        ];<br/>    Sound(0, 3, 1);                             \\delay about 1/6 second<br/>until KeyHit;                                   \\continue until a key is struck<br/>]</pre>"}, {"lang": "Yabasic", "loc": 60, "block": "<pre class=\"text highlighted_source\">bola$ = \"0000ff\"<br/>obst$ = \"000000\"<br/>\u00a0<br/>maxBalls = 10<br/>cx = 1<br/>cy = 2<br/>dim Balls(maxBalls, 2)<br/>\u00a0<br/>open window 600,600<br/>window origin \"ct\"<br/>\u00a0<br/>maxh = peek(\"winheight\")<br/>\u00a0<br/>REM Draw the pins:<br/>\u00a0<br/>FOR row = 1 TO 7<br/>  FOR col = 1 TO row<br/>    FILL circle 40*col - 20*row, 40*row+80, 10<br/>  NEXT col<br/>NEXT row<br/>\u00a0<br/>REM Animate<br/>tick = 0<br/>bolas = 0<br/>color 0,0,255<br/>\u00a0<br/>do<br/>\tif (bolas &lt; maxBalls) then<br/>\t\tif tick = 3 then<br/>\t\t\ttick = 0<br/>\t\t\tbolas = bolas + 1<br/>\t\t\tBalls(bolas, cx) = 20<br/>\t\t\tBalls(bolas, cy) = 10<br/>\t\tend if<br/>\t\ttick = tick + 1<br/>\tend if<br/>\tfor n = 1 to bolas<br/>\t\tif Balls(n, cy) then<br/>\t\t\tcolor$ = right$(getbit$(Balls(n,cx),Balls(n,cy) + 10,Balls(n,cx),Balls(n,cy) + 10),6)<br/>\t\t\tif (color$ = bola$) or (Balls(n,cy) &gt;= maxh - 15) then<br/>\t\t\t\tBalls(n,cy) = 0<br/>\t\t\t\tbreak<br/>\t\t\tend if<br/>\t\t\tclear fill circle Balls(n,cx),Balls(n,cy),10<br/>\t\t\tif color$ = obst$ then<br/>\t\t\t\tif int(ran(2)) then<br/>\t\t\t\t\tBalls(n,cx) = Balls(n,cx) - 20<br/>\t\t\t\telse<br/>\t\t\t\t\tBalls(n,cx) = Balls(n,cx) + 20<br/>\t\t\t\tend if<br/>\t\t\tend if<br/>\t\t\tBalls(n,cy) = Balls(n,cy)+10<br/>\t\t\tfill circle Balls(n,cx),Balls(n,cy),10<br/>\t\t\twait .001<br/>\t\telse<br/>\t\t\twait .001<br/>\t\tend if<br/>\tnext n<br/>loop<br/>\u00a0</pre>"}]}