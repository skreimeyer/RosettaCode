{"task": "Forward_difference", "blocks": [{"lang": "Ada", "loc": 50, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Float_Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Float_Text_Io</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">containers</span>.<span class=\"me1\">Vectors</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Forward_Difference <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">package</span> Flt_Vect <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Containers</span>.<span class=\"me1\">Vectors</span><span class=\"br0\">(</span>Positive, Float<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">use</span> Flt_Vect;<br/>   <span class=\"kw3\">procedure</span> Print<span class=\"br0\">(</span>Item\u00a0: Vector<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item.<span class=\"me1\">Is_Empty</span> <span class=\"kw1\">then</span><br/>         Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put</span><span class=\"br0\">(</span>'<span class=\"br0\">[</span>'<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"me1\">Item</span>.<span class=\"me1\">Length</span> <span class=\"kw1\">loop</span><br/>            Put<span class=\"br0\">(</span>Item =&gt; Item.<span class=\"me1\">Element</span><span class=\"br0\">(</span>Positive<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span>, Fore =&gt; <span class=\"nu0\">1</span>, Aft =&gt; <span class=\"nu0\">1</span>, Exp =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>             <span class=\"kw1\">if</span> Positive<span class=\"br0\">(</span>I<span class=\"br0\">)</span> &lt; Positive<span class=\"br0\">(</span>Item.<span class=\"me1\">Length</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               Ada.<span class=\"me1\">Text_Io</span>.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         Ada.<span class=\"me1\">Text_Io</span>.<span class=\"me1\">Put_line</span><span class=\"br0\">(</span><span class=\"st0\">\"]\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">else</span><br/>         Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span><span class=\"br0\">(</span><span class=\"st0\">\"Empty List\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>\u00a0<br/>   <span class=\"kw1\">end</span> Print;<br/>\u00a0<br/>  <span class=\"kw3\">function</span> Diff<span class=\"br0\">(</span>Item\u00a0: Vector; Num_Passes\u00a0: Natural<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Vector <span class=\"kw1\">is</span><br/>      A\u00a0: Vector\u00a0:= Item;<br/>      B\u00a0: Vector\u00a0:= Empty_Vector;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> A.<span class=\"me1\">Is_Empty</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"me1\">Num_Passes</span> <span class=\"kw1\">loop</span><br/>            <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"me1\">Natural</span><span class=\"br0\">(</span>A.<span class=\"me1\">Length</span><span class=\"br0\">)</span> - <span class=\"nu0\">1</span> <span class=\"kw1\">loop</span><br/>                  B.<span class=\"me1\">Append</span><span class=\"br0\">(</span>A.<span class=\"me1\">Element</span><span class=\"br0\">(</span>I + <span class=\"nu0\">1</span><span class=\"br0\">)</span> - A.<span class=\"me1\">Element</span><span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>            Move<span class=\"br0\">(</span>Target =&gt; A, Source =&gt; B<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">return</span> A;<br/>   <span class=\"kw1\">end</span> Diff;<br/>   Values\u00a0: <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"kw3\">of</span> Float\u00a0:= <span class=\"br0\">(</span><span class=\"nu0\">90.0</span>, <span class=\"nu0\">47.0</span>, <span class=\"nu0\">58.0</span>, <span class=\"nu0\">29.0</span>, <span class=\"nu0\">22.0</span>, <span class=\"nu0\">32.0</span>, <span class=\"nu0\">55.0</span>, <span class=\"nu0\">5.0</span>, <span class=\"nu0\">55.0</span>, <span class=\"nu0\">73.0</span><span class=\"br0\">)</span>;<br/>   A\u00a0: Vector;<br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Values'<span class=\"kw3\">range</span> <span class=\"kw1\">loop</span><br/>      A.<span class=\"me1\">Append</span><span class=\"br0\">(</span>Values<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"co1\">-- Fill the vector</span><br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   Print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>A, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   Print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>A, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   Print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>A, <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   Print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>A, <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>A, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Forward_Difference;</pre>"}, {"lang": "ALGOL 68", "loc": 21, "block": "<pre class=\"algol68 highlighted_source\">main<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>  <span class=\"kw4\">MODE</span> LISTREAL <span class=\"sy1\">=</span> <span class=\"br0\">[</span>1<span class=\"sy1\">:</span>0<span class=\"br0\">]</span><span class=\"kw3\">REAL</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>LISTREAL a<span class=\"sy1\">,</span>b<span class=\"br0\">)</span>LISTREAL<span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>    <span class=\"br0\">[</span><span class=\"kw8\">UPB</span> a<span class=\"br0\">]</span><span class=\"kw3\">REAL</span> out<span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> out <span class=\"kw2\">DO</span> out<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">:=</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">-</span>b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    out<br/>  <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw6\">FORMAT</span> <span class=\"kw26\">real</span> fmt<span class=\"sy1\">=</span>$zzz<span class=\"sy1\">-</span>d.d$<span class=\"sy1\">;</span><br/>  <span class=\"kw6\">FORMAT</span> repeat fmt <span class=\"sy1\">=</span> $n<span class=\"br0\">(</span><span class=\"kw8\">UPB</span> s<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span><span class=\"kw26\">real</span> fmt<span class=\"br0\">)</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span>f<span class=\"br0\">(</span><span class=\"kw26\">real</span> fmt<span class=\"br0\">)</span>$<span class=\"sy1\">;</span><br/>  <span class=\"kw6\">FORMAT</span> list fmt <span class=\"sy1\">=</span> $<span class=\"st0\">\"(\"</span>f<span class=\"br0\">(</span><span class=\"kw8\">UPB</span> s<span class=\"sy1\">=</span>1<span class=\"sy1\">|</span><span class=\"kw26\">real</span> fmt<span class=\"sy1\">|</span>repeat fmt<span class=\"br0\">)</span><span class=\"st0\">\")\"</span>$<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">FLEX</span> <span class=\"br0\">[</span>1<span class=\"sy1\">:</span>0<span class=\"br0\">]</span> <span class=\"kw3\">REAL</span> s <span class=\"sy1\">:=</span> <span class=\"br0\">(</span>90<span class=\"sy1\">,</span> 47<span class=\"sy1\">,</span> 58<span class=\"sy1\">,</span> 29<span class=\"sy1\">,</span> 22<span class=\"sy1\">,</span> 32<span class=\"sy1\">,</span> 55<span class=\"sy1\">,</span> 5<span class=\"sy1\">,</span> 55<span class=\"sy1\">,</span> 73<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>list fmt<span class=\"sy1\">,</span>s<span class=\"sy1\">,</span>$<span class=\"st0\">\";\"</span>l$<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> s<span class=\"sy1\">-</span>1 <span class=\"kw2\">DO</span><br/>    s <span class=\"sy1\">:=</span> s<span class=\"br0\">[</span>2<span class=\"sy1\">:</span><span class=\"br0\">]</span> <span class=\"sy1\">-</span> s<span class=\"br0\">[</span><span class=\"sy1\">:</span><span class=\"kw8\">UPB</span> s<span class=\"sy1\">-</span>1<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>list fmt<span class=\"sy1\">,</span>s<span class=\"sy1\">,</span>$<span class=\"st0\">\";\"</span>l$<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">OD</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "APL", "loc": 9, "block": "<pre class=\"text highlighted_source\">      list \u2190  90 47 58 29 22 32 55 5 55 73<br/>\u00a0<br/>      fd   \u2190  {\u237a=0:\u2375\u22c4(\u237a-1)\u2207(1\u2193\u2375)-(\u00af1\u2193\u2375)} <br/>\u00a0<br/>      1 fd list <br/>\u00af43 11 \u00af29 \u00af7 10 23 \u00af50 50 18<br/>\u00a0<br/>      2 fd list <br/>54 \u00af40 22 17 13 \u00af73 100 \u00af32</pre>"}, {"lang": "AppleScript", "loc": 138, "block": "<pre class=\"applescript highlighted_source\"><span class=\"co1\">-- FORWARD DIFFERENCE --------------------------------------------------------</span><br/>\u00a0<br/><span class=\"co1\">-- forwardDifference\u00a0:: Int -&gt; [Int] -&gt; [Int]</span><br/><span class=\"kw3\">on</span> forwardDifference<span class=\"br0\">(</span>n, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> length <span class=\"kw3\">of</span> xs<br/>\u00a0<br/>    <span class=\"co1\">-- atLength\u00a0:: [Int] -&gt; Bool</span><br/>    <span class=\"kw3\">script</span> atLength<br/>        <span class=\"kw3\">property</span> fullLength\u00a0: lng<br/>        <span class=\"kw3\">property</span> ndx\u00a0: n<br/>\u00a0<br/>        <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>ds<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>atLength<span class=\"co2\">'</span>s fullLength<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>length <span class=\"kw3\">of</span> ds<span class=\"br0\">)</span> \u2265 atLength<span class=\"co2\">'</span>s ndx<br/>        <span class=\"kw3\">end</span> |\u03bb|<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>    <span class=\"co1\">-- fd\u00a0:: [Int] -&gt; [Int]</span><br/>    <span class=\"kw3\">script</span> fd<br/>        <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><br/>            <span class=\"kw3\">script</span> minus<br/>                <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>a, b<span class=\"br0\">)</span><br/>                    a <span class=\"sy0\">-</span> b<br/>                <span class=\"kw3\">end</span> |\u03bb|<br/>            <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>            zipWith<span class=\"br0\">(</span>minus, tail<span class=\"br0\">(</span>xs<span class=\"br0\">)</span>, xs<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> |\u03bb|<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>    |<span class=\"kw3\">until</span>|<span class=\"br0\">(</span>atLength, fd, xs<span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> forwardDifference<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- TEST ----------------------------------------------------------------------</span><br/><span class=\"kw3\">on</span> <span class=\"kw1\">run</span><br/>    <span class=\"kw3\">set</span> xs <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"nu0\">90</span>, <span class=\"nu0\">47</span>, <span class=\"nu0\">58</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">73</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw3\">script</span> test<br/>        <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>            intercalate<span class=\"br0\">(</span><span class=\"st0\">\"  -&gt;  [\"</span>, \u00ac<br/>                <span class=\"br0\">{</span><span class=\"br0\">{</span>n<span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"sy0\">&amp;</span> intercalate<span class=\"br0\">(</span><span class=\"st0\">\", \"</span>, forwardDifference<span class=\"br0\">(</span>n, xs<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"]\"</span><br/>        <span class=\"kw3\">end</span> |\u03bb|<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>    intercalate<span class=\"br0\">(</span>linefeed, map<span class=\"br0\">(</span>test, enumFromTo<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> <span class=\"kw1\">run</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- GENERIC FUNCTIONS ---------------------------------------------------------</span><br/>\u00a0<br/><span class=\"co1\">-- enumFromTo\u00a0:: Int -&gt; Int -&gt; [Int]</span><br/><span class=\"kw3\">on</span> enumFromTo<span class=\"br0\">(</span>m, n<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> m &gt; n <span class=\"kw3\">then</span><br/>        <span class=\"kw3\">set</span> d <span class=\"kw3\">to</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">set</span> d <span class=\"kw3\">to</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>    <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> m <span class=\"kw3\">to</span> n <span class=\"kw1\">by</span> d<br/>        <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> i<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>    <span class=\"kw3\">return</span> lst<br/><span class=\"kw3\">end</span> enumFromTo<br/>\u00a0<br/><span class=\"co1\">-- intercalate\u00a0:: Text -&gt; [Text] -&gt; Text</span><br/><span class=\"kw3\">on</span> intercalate<span class=\"br0\">(</span>strText, lstText<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> <span class=\"br0\">{</span>dlm, <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span><span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span>, strText<span class=\"br0\">}</span><br/>    <span class=\"kw3\">set</span> strJoined <span class=\"kw3\">to</span> lstText <span class=\"kw2\">as</span> <span class=\"kw1\">text</span><br/>    <span class=\"kw3\">set</span> <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> dlm<br/>    <span class=\"kw3\">return</span> strJoined<br/><span class=\"kw3\">end</span> intercalate<br/>\u00a0<br/><span class=\"co1\">-- map\u00a0:: (a -&gt; b) -&gt; [a] -&gt; [b]</span><br/><span class=\"kw3\">on</span> map<span class=\"br0\">(</span>f, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> length <span class=\"kw3\">of</span> xs<br/>        <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> lng<br/>            <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> |\u03bb|<span class=\"br0\">(</span><span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> xs, i, xs<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>        <span class=\"kw3\">return</span> lst<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/><span class=\"kw3\">end</span> map<br/>\u00a0<br/><span class=\"co1\">-- min\u00a0:: Ord a =&gt; a -&gt; a -&gt; a</span><br/><span class=\"kw3\">on</span> min<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> y <span class=\"sy0\">&lt;</span> x <span class=\"kw3\">then</span><br/>        y<br/>    <span class=\"kw3\">else</span><br/>        x<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> min<br/>\u00a0<br/><span class=\"co1\">-- Lift 2nd class handler function into 1st class script wrapper </span><br/><span class=\"co1\">-- mReturn\u00a0:: Handler -&gt; Script</span><br/><span class=\"kw3\">on</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> class <span class=\"kw3\">of</span> f <span class=\"kw3\">is</span> <span class=\"kw3\">script</span> <span class=\"kw3\">then</span><br/>        f<br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">script</span><br/>            <span class=\"kw3\">property</span> |\u03bb|\u00a0: f<br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> mReturn<br/>\u00a0<br/><span class=\"co1\">-- tail\u00a0:: [a] -&gt; [a]</span><br/><span class=\"kw3\">on</span> tail<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> length <span class=\"kw3\">of</span> xs &gt; <span class=\"nu0\">1</span> <span class=\"kw3\">then</span><br/>        <span class=\"kw1\">items</span> <span class=\"nu0\">2</span> <span class=\"kw2\">thru</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw3\">of</span> xs<br/>    <span class=\"kw3\">else</span><br/>        <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> tail<br/>\u00a0<br/><span class=\"co1\">-- until\u00a0:: (a -&gt; Bool) -&gt; (a -&gt; a) -&gt; a -&gt; a</span><br/><span class=\"kw3\">on</span> |<span class=\"kw3\">until</span>|<span class=\"br0\">(</span>p, f, x<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> mp <span class=\"kw3\">to</span> mReturn<span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> v <span class=\"kw3\">to</span> x<br/>\u00a0<br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">until</span> mp<span class=\"co2\">'</span>s |\u03bb|<span class=\"br0\">(</span>v<span class=\"br0\">)</span><br/>            <span class=\"kw3\">set</span> v <span class=\"kw3\">to</span> |\u03bb|<span class=\"br0\">(</span>v<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/>    <span class=\"kw3\">return</span> v<br/><span class=\"kw3\">end</span> |<span class=\"kw3\">until</span>|<br/>\u00a0<br/><span class=\"co1\">-- zipWith\u00a0:: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]</span><br/><span class=\"kw3\">on</span> zipWith<span class=\"br0\">(</span>f, xs, ys<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> min<span class=\"br0\">(</span>length <span class=\"kw3\">of</span> xs, length <span class=\"kw3\">of</span> ys<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> lng<br/>            <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> |\u03bb|<span class=\"br0\">(</span><span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> xs, <span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> ys<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>        <span class=\"kw3\">return</span> lst<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/><span class=\"kw3\">end</span> zipWith</pre>"}, {"lang": "AutoHotkey", "loc": 17, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% diff<span class=\"br0\">(</span><span class=\"st0\">\"2,3,4,3\"</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% diff<span class=\"br0\">(</span><span class=\"st0\">\"2,3,4,3\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% diff<span class=\"br0\">(</span><span class=\"st0\">\"2,3,4,3\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% diff<span class=\"br0\">(</span><span class=\"st0\">\"2,3,4,3\"</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\u00a0<br/>diff<span class=\"br0\">(</span>list<span class=\"sy0\">,</span>ord<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">; high order forward differences of a list</span><br/>   <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"re0\">%ord%</span> <span class=\"br0\">{</span><br/>      L <span class=\"sy0\">=</span><br/>      <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> list<span class=\"sy0\">,</span> `<span class=\"sy0\">,</span> <span class=\"re0\">%A_Space%</span><span class=\"re0\">%A_Tab%</span><br/>         <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            p <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>         <span class=\"kw1\">Else</span><br/>            L <span class=\"sy0\">.=</span> <span class=\"st0\">\",\"</span> <span class=\"re3\">A_LoopField</span><span class=\"sy0\">-</span>p<span class=\"sy0\">,</span> p <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>      list <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>L<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw1\">Return</span> list<br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 20, "block": "<pre class=\"awk highlighted_source\"><span class=\"co1\">#!/usr/bin/awk -f </span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p<span class=\"sy2\">&lt;</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>p = <span class=\"nu0\">1</span><span class=\"br0\">}</span>; <br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> diff<span class=\"br0\">(</span>s, p<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   n = <span class=\"kw4\">split</span><span class=\"br0\">(</span>s, a, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j = <span class=\"nu0\">1</span>; j <span class=\"sy2\">&lt;=</span> p; j<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">for</span><span class=\"br0\">(</span>i = <span class=\"nu0\">1</span>; i <span class=\"sy2\">&lt;=</span> n<span class=\"sy3\">-</span>j; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>         a<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = a<span class=\"br0\">[</span>i<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy3\">-</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span>; <br/>      <span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span> <br/>   s = <span class=\"st0\">\"\"</span>;<br/>   <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i = <span class=\"nu0\">1</span>; i <span class=\"sy2\">&lt;=</span> n<span class=\"sy3\">-</span>p; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> s = s<span class=\"st0\">\" \"</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span>;<br/>   <span class=\"kw6\">return</span> s;\t<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">{</span><br/>   <span class=\"kw5\">print</span> diff<span class=\"br0\">(</span><span class=\"re0\">$0</span>, p<span class=\"br0\">)</span>; <br/><span class=\"br0\">}</span></pre>"}, {"lang": "BBC BASIC", "loc": 30, "block": "<pre class=\"text highlighted_source\">      DIM A(9)<br/>      A() = 90.0, 47.0, 58.0, 29.0, 22.0, 32.0, 55.0, 5.0, 55.0, 73.0<br/>      PRINT \"Original array: \" FNshowarray(A())<br/>      PROCforward_difference(1, A(), B())<br/>      PRINT \"Forward diff 1: \" FNshowarray(B())<br/>      PROCforward_difference(2, A(), C())<br/>      PRINT \"Forward diff 2: \" FNshowarray(C())<br/>      PROCforward_difference(9, A(), D())<br/>      PRINT \"Forward diff 9: \" FNshowarray(D())<br/>      END<br/>\u00a0<br/>      DEF PROCforward_difference(n%, a(), RETURN b())<br/>      LOCAL c%, i%, j%<br/>      DIM b(DIM(a(),1) - n%)<br/>      FOR i% = 0 TO DIM(b(),1)<br/>        b(i%) = a(i% + n%)<br/>        c% = 1<br/>        FOR j% = 1 TO n%<br/>          c% = -INT(c% * (n% - j% + 1) / j% + 0.5)<br/>          b(i%) += c% * a(i% + n% - j%)<br/>        NEXT<br/>      NEXT<br/>      ENDPROC<br/>\u00a0<br/>      DEF FNshowarray(a())<br/>      LOCAL i%, a$<br/>      FOR i% = 0 TO DIM(a(),1)<br/>        a$ += STR$(a(i%)) + \", \"<br/>      NEXT<br/>      = LEFT$(LEFT$(a$))</pre>"}, {"lang": "C", "loc": 39, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">double</span><span class=\"sy0\">*</span> fwd_diff<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"sy0\">*</span> x<span class=\"sy0\">,</span> <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> len<span class=\"sy0\">,</span> <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> order<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span><span class=\"sy0\">*</span> y<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"coMULTI\">/* handle two special cases */</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>order <span class=\"sy0\">&gt;=</span> len<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\ty <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>order<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/memcpy.html\"><span class=\"kw3\">memcpy</span></a><span class=\"br0\">(</span>y<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">return</span> y<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"coMULTI\">/* first order diff goes from x-&gt;y, later ones go from y-&gt;y */</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> order<span class=\"sy0\">;</span> j<span class=\"sy0\">++,</span> x <span class=\"sy0\">=</span> y<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> len<span class=\"sy0\">--;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\ty<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> x<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\ty <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/realloc.html\"><span class=\"kw3\">realloc</span></a><span class=\"br0\">(</span>y<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> y<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">,</span> x<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\ty <span class=\"sy0\">=</span> fwd_diff<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> len<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%g \"</span><span class=\"sy0\">,</span> y<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 28, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> IEnumerable<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> ForwardDifference<span class=\"br0\">(</span>IEnumerable<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> sequence, <span class=\"kw4\">uint</span> order <span class=\"sy0\">=</span> 1u<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>order<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> 0u<span class=\"sy0\">:</span><br/>                <span class=\"kw1\">return</span> sequence<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> 1u<span class=\"sy0\">:</span><br/>                <span class=\"kw1\">return</span> sequence<span class=\"sy0\">.</span><span class=\"me1\">Skip</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Zip</span><span class=\"br0\">(</span>sequence, <span class=\"br0\">(</span>next, current<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> next <span class=\"sy0\">-</span> current<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>                <span class=\"kw1\">return</span> ForwardDifference<span class=\"br0\">(</span>ForwardDifference<span class=\"br0\">(</span>sequence<span class=\"br0\">)</span>, order <span class=\"sy0\">-</span> 1u<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        IEnumerable<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> sequence <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">{</span> <span class=\"nu0\">90</span>, <span class=\"nu0\">47</span>, <span class=\"nu0\">58</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">73</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">do</span><br/>        <span class=\"br0\">{</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"kw1\">Join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span>, sequence<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>sequence <span class=\"sy0\">=</span> ForwardDifference<span class=\"br0\">(</span>sequence<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Any</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 111, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;vector&gt;</span><br/><span class=\"co2\">#include &lt;iterator&gt;</span><br/><span class=\"co2\">#include &lt;algorithm&gt;</span><br/>\u00a0<br/><span class=\"co1\">// calculate first order forward difference</span><br/><span class=\"co1\">// requires:</span><br/><span class=\"co1\">// * InputIterator is an input iterator</span><br/><span class=\"co1\">// * OutputIterator is an output iterator</span><br/><span class=\"co1\">// * The value type of InputIterator is copy-constructible and assignable</span><br/><span class=\"co1\">// * The value type of InputIterator supports operator -</span><br/><span class=\"co1\">// * The result type of operator- is assignable to the value_type of OutputIterator</span><br/><span class=\"co1\">// returns: The iterator following the output sequence</span><br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">typename</span> InputIterator, <span class=\"kw2\">typename</span> OutputIterator<span class=\"sy1\">&gt;</span><br/> OutputIterator forward_difference<span class=\"br0\">(</span>InputIterator first, InputIterator last,<br/>                                   OutputIterator dest<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"co1\">// special case: for empty sequence, do nothing</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>first <span class=\"sy1\">==</span> last<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> dest<span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">typedef</span> <span class=\"kw2\">typename</span> std<span class=\"sy4\">::</span><span class=\"me2\">iterator_traits</span><span class=\"sy1\">&lt;</span>InputIterator<span class=\"sy1\">&gt;</span><span class=\"sy4\">::</span><span class=\"me2\">value_type</span> value_type<span class=\"sy4\">;</span><br/>\u00a0<br/>  value_type temp <span class=\"sy1\">=</span> <span class=\"sy2\">*</span>first<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>first <span class=\"sy3\">!</span><span class=\"sy1\">=</span> last<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    value_type temp2 <span class=\"sy1\">=</span> <span class=\"sy2\">*</span>first<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>    <span class=\"sy2\">*</span>dest<span class=\"sy2\">++</span> <span class=\"sy1\">=</span> temp2 <span class=\"sy2\">-</span> temp<span class=\"sy4\">;</span><br/>    temp <span class=\"sy1\">=</span> temp2<span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> dest<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// calculate n-th order forward difference.</span><br/><span class=\"co1\">// requires:</span><br/><span class=\"co1\">// * InputIterator is an input iterator</span><br/><span class=\"co1\">// * OutputIterator is an output iterator</span><br/><span class=\"co1\">// * The value type of InputIterator is copy-constructible and assignable</span><br/><span class=\"co1\">// * The value type of InputIterator supports operator -</span><br/><span class=\"co1\">// * The result type of operator- is assignable to the value_type of InputIterator</span><br/><span class=\"co1\">// * The result type of operator- is assignable to the value_type of OutputIterator</span><br/><span class=\"co1\">// * order &gt;= 0</span><br/><span class=\"co1\">// returns: The iterator following the output sequence</span><br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">typename</span> InputIterator, <span class=\"kw2\">typename</span> OutputIterator<span class=\"sy1\">&gt;</span><br/> OutputIterator nth_forward_difference<span class=\"br0\">(</span><span class=\"kw4\">int</span> order,<br/>                                       InputIterator first, InputIterator last,<br/>                                       OutputIterator dest<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"co1\">// special case: If order == 0, just copy input to output</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>order <span class=\"sy1\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> std<span class=\"sy4\">::</span><span class=\"me2\">copy</span><span class=\"br0\">(</span>first, last, dest<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// second special case: If order == 1, just forward to the first-order function</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>order <span class=\"sy1\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> forward_difference<span class=\"br0\">(</span>first, last, dest<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// intermediate results are stored in a vector</span><br/>  <span class=\"kw4\">typedef</span> <span class=\"kw2\">typename</span> std<span class=\"sy4\">::</span><span class=\"me2\">iterator_traits</span><span class=\"sy1\">&lt;</span>InputIterator<span class=\"sy1\">&gt;</span><span class=\"sy4\">::</span><span class=\"me2\">value_type</span> value_type<span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span>value_type<span class=\"sy1\">&gt;</span> temp_storage<span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// fill the vector with the result of the first order forward difference</span><br/>  forward_difference<span class=\"br0\">(</span>first, last, std<span class=\"sy4\">::</span><span class=\"me2\">back_inserter</span><span class=\"br0\">(</span>temp_storage<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// the next n-2 iterations work directly on the vector</span><br/>  <span class=\"kw2\">typename</span> std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span>value_type<span class=\"sy1\">&gt;</span><span class=\"sy4\">::</span><span class=\"me2\">iterator</span> begin <span class=\"sy1\">=</span> temp_storage.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<br/>                                             end <span class=\"sy1\">=</span> temp_storage.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> order<span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">;</span> <span class=\"sy2\">++</span>i<span class=\"br0\">)</span><br/>    end <span class=\"sy1\">=</span> forward_difference<span class=\"br0\">(</span>begin, end, begin<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// the final iteration writes directly to the output iterator</span><br/>  <span class=\"kw1\">return</span> forward_difference<span class=\"br0\">(</span>begin, end, dest<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// example usage code</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">double</span> array<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"nu16\">90.0</span>, <span class=\"nu16\">47.0</span>, <span class=\"nu16\">58.0</span>, <span class=\"nu16\">29.0</span>, <span class=\"nu16\">22.0</span>, <span class=\"nu16\">32.0</span>, <span class=\"nu16\">55.0</span>, <span class=\"nu16\">5.0</span>, <span class=\"nu16\">55.0</span>, <span class=\"nu16\">73.0</span> <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// this stores the results in the vector dest</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> dest<span class=\"sy4\">;</span><br/>  nth_forward_difference<span class=\"br0\">(</span><span class=\"nu0\">1</span>, array, array<span class=\"sy2\">+</span><span class=\"nu0\">10</span>, std<span class=\"sy4\">::</span><span class=\"me2\">back_inserter</span><span class=\"br0\">(</span>dest<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// output dest</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">copy</span><span class=\"br0\">(</span>dest.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, dest.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ostream_iterator</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// however, the results can also be output as they are calculated</span><br/>  nth_forward_difference<span class=\"br0\">(</span><span class=\"nu0\">2</span>, array, array<span class=\"sy2\">+</span><span class=\"nu0\">10</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ostream_iterator</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  nth_forward_difference<span class=\"br0\">(</span><span class=\"nu0\">9</span>, array, array<span class=\"sy2\">+</span><span class=\"nu0\">10</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ostream_iterator</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  nth_forward_difference<span class=\"br0\">(</span><span class=\"nu0\">10</span>, array, array<span class=\"sy2\">+</span><span class=\"nu0\">10</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ostream_iterator</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  nth_forward_difference<span class=\"br0\">(</span><span class=\"nu0\">0</span>, array, array<span class=\"sy2\">+</span><span class=\"nu0\">10</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ostream_iterator</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// finally, the results can also be written into the original array</span><br/>  <span class=\"co1\">// (which of course destroys the original content)</span><br/>  <span class=\"kw4\">double</span><span class=\"sy2\">*</span> end <span class=\"sy1\">=</span> nth_forward_difference<span class=\"br0\">(</span><span class=\"nu0\">3</span>, array, array<span class=\"sy2\">+</span><span class=\"nu0\">10</span>, array<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"sy2\">*</span> p <span class=\"sy1\">=</span> array<span class=\"sy4\">;</span> p <span class=\"sy1\">&lt;</span> end<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>p<span class=\"br0\">)</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"sy2\">*</span>p <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 2, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>defn fwd-diff <span class=\"br0\">[</span>nums order<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">nth</span> <span class=\"br0\">(</span>iterate #<span class=\"br0\">(</span>map<span class=\"sy0\"> - </span><span class=\"br0\">(</span>next <span class=\"sy0\">%</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span> nums<span class=\"br0\">)</span> order<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "CoffeeScript", "loc": 13, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>forward_difference = <span class=\"br0\">(</span>arr<span class=\"sy0\">,</span> n<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  <span class=\"co1\"># Find the n-th order forward difference for arr using</span><br/>  <span class=\"co1\"># a straightforward recursive algorithm.</span><br/>  <span class=\"co1\"># Assume arr is integers and n &lt;= arr.length.</span><br/>  <span class=\"kw1\">return</span> arr <span class=\"kw1\">if</span> n == <span class=\"nu0\">0</span><br/>  arr = forward_difference<span class=\"br0\">(</span>arr<span class=\"sy0\">,</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>arr<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span>...<span class=\"me1\">arr</span>.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>arr = <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">64</span><span class=\"sy0\">,</span> <span class=\"nu0\">125</span><span class=\"sy0\">,</span> <span class=\"nu0\">216</span><span class=\"br0\">]</span><br/><span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"me1\">arr</span>.<span class=\"me1\">length</span><span class=\"br0\">]</span><br/>  console.<span class=\"me1\">log</span> n<span class=\"sy0\">,</span> forward_difference arr<span class=\"sy0\">,</span> n<br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 7, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> forward-difference <span class=\"br0\">(</span><span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">mapcar</span> #'- <span class=\"br0\">(</span>rest <span class=\"kw1\">list</span><span class=\"br0\">)</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> nth-forward-difference <span class=\"br0\">(</span><span class=\"kw1\">list</span> n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span>copy-<span class=\"kw1\">list</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop repeat n <span class=\"kw1\">do</span> <span class=\"br0\">(</span>map-into <span class=\"kw1\">list</span> #'- <span class=\"br0\">(</span>rest <span class=\"kw1\">list</span><span class=\"br0\">)</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>subseq <span class=\"kw1\">list</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span>- <span class=\"br0\">(</span><span class=\"kw1\">length</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 19, "block": "<pre class=\"d highlighted_source\">T<span class=\"br0\">[</span><span class=\"br0\">]</span> forwardDifference<span class=\"br0\">(</span>T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T<span class=\"br0\">[</span><span class=\"br0\">]</span> data<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">int</span> level<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/><span class=\"kw2\">in</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>level <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> level <span class=\"sy0\">&lt;</span> data.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw2\">body</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> result <span class=\"sy0\">=</span> data.<span class=\"me1\">dup</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">level</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> j<span class=\"sy0\">,</span> <span class=\"kw2\">ref</span> el<span class=\"sy0\">;</span> result<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> $ <span class=\"sy0\">-</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            el <span class=\"sy0\">=</span> result<span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> el<span class=\"sy0\">;</span><br/>    result.<span class=\"me1\">length</span> <span class=\"sy0\">-=</span> level<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">const</span> data <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu16\">90.5</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu16\">73.5</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> level<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">data</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span><br/>        forwardDifference<span class=\"br0\">(</span>data<span class=\"sy0\">,</span> level<span class=\"br0\">)</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "E", "loc": 32, "block": "<pre class=\"e highlighted_source\">pragma.<span class=\"me1\">enable</span><span class=\"br0\">(</span><span class=\"st0\">\"accumulator\"</span><span class=\"br0\">)</span><br/><span class=\"coMULTI\">/** Single step. */</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> forwardDifference<span class=\"br0\">(</span>seq <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/List\"><span class=\"kw6\">List</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    return <a href=\"http://wiki.erights.org/wiki/accum\"><span class=\"kw1\">accum</span></a> <span class=\"br0\">[</span><span class=\"br0\">]</span> <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> i <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">0</span>..<span class=\"br0\">(</span>seq.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        _.<span class=\"me1\">with</span><span class=\"br0\">(</span>seq<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> seq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/** Iterative implementation of the goal. */</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> nthForwardDifference1<span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> seq <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/List\"><span class=\"kw6\">List</span></a><span class=\"sy0\">,</span> n <span class=\"sy0\">:</span><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/int\"><span class=\"kw6\">int</span></a> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> _ <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">1</span>..<span class=\"me1\">n</span> <span class=\"br0\">{</span> seq <span class=\"sy0\">:=</span> forwardDifference<span class=\"br0\">(</span>seq<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>    return seq<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/** Imperative implementation of the goal. */</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> nthForwardDifference2<span class=\"br0\">(</span>seq <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/List\"><span class=\"kw6\">List</span></a><span class=\"sy0\">,</span> n <span class=\"sy0\">:</span><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/int\"><span class=\"kw6\">int</span></a> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> buf <span class=\"sy0\">:=</span> seq.<span class=\"me1\">diverge</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> finalSize <span class=\"sy0\">:=</span> seq.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> n<br/>  <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> lim <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"br0\">(</span>finalSize..<span class=\"sy0\">!</span>seq.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">descending</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> i <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">0</span>..<span class=\"sy0\">!</span>lim <span class=\"br0\">{</span><br/>      buf<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> buf<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> buf<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  return buf.<span class=\"me1\">run</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> finalSize<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"sy0\">?</span> <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> sampleData <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">]</span><br/><span class=\"sy0\">&gt;</span> <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> n <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">0</span>..<span class=\"nu0\">10</span> <span class=\"br0\">{</span><br/><span class=\"sy0\">&gt;</span>   <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> r1 <span class=\"sy0\">:=</span> nthForwardDifference1<span class=\"br0\">(</span>sampleData<span class=\"sy0\">,</span> n<span class=\"br0\">)</span><br/><span class=\"sy0\">&gt;</span>   <a href=\"http://wiki.erights.org/wiki/require\"><span class=\"kw6\">require</span></a><span class=\"br0\">(</span>r1 <span class=\"sy0\">==</span> nthForwardDifference2<span class=\"br0\">(</span>sampleData<span class=\"sy0\">,</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"sy0\">&gt;</span>   <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span>r1<span class=\"br0\">)</span><br/><span class=\"sy0\">&gt;</span> <span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 9, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>define <span class=\"br0\">(</span>\u0394-<span class=\"nu0\">1</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>for/<span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>x <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>y <span class=\"kw1\">list</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>- x y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>define <span class=\"br0\">(</span>\u0394-n n<span class=\"br0\">)</span> <span class=\"br0\">(</span>iterate \u0394-<span class=\"nu0\">1</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"br0\">(</span>\u0394-n <span class=\"nu0\">9</span><span class=\"br0\">)</span> '<span class=\"br0\">(</span><span class=\"nu0\">90</span> <span class=\"nu0\">47</span> <span class=\"nu0\">58</span> <span class=\"nu0\">29</span> <span class=\"nu0\">22</span> <span class=\"nu0\">32</span> <span class=\"nu0\">55</span> <span class=\"nu0\">5</span> <span class=\"nu0\">55</span> <span class=\"nu0\">73</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    \u2192  <span class=\"br0\">(</span>-<span class=\"nu0\">2921</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 15, "block": "<pre class=\"text highlighted_source\">defmodule Diff do<br/>  def forward(list,i\\\\1) do<br/>    forward(list,[],i)<br/>  end<br/>\u00a0<br/>  def forward([_],diffs,1), do: IO.inspect diffs<br/>  def forward([_],diffs,i), do: forward(diffs,[],i-1)<br/>  def forward([val1,val2|vals],diffs,i) do<br/>    forward([val2|vals],diffs++[val2-val1],i)<br/>  end<br/>end<br/>\u00a0<br/>Enum.each(1..9, fn i -&gt;<br/>  Diff.forward([90, 47, 58, 29, 22, 32, 55, 5, 55, 73],i)<br/>end)</pre>"}, {"lang": "Erlang", "loc": 18, "block": "<pre class=\"erlang highlighted_source\"><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>forward_difference<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>difference<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> difference<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">define</span><span class=\"br0\">(</span><span class=\"re0\">TEST_DATA</span><span class=\"sy1\">,</span><span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy1\">,</span> <span class=\"nu0\">47</span><span class=\"sy1\">,</span> <span class=\"nu0\">58</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">difference</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">X</span>|Xs<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"br0\">{</span><span class=\"re5\">Result</span><span class=\"sy1\">,</span><span class=\"re5\">_</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">mapfoldl</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"re5\">N_2</span><span class=\"sy1\">,</span><span class=\"re5\">N_1</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">{</span><span class=\"re5\">N_2</span> <span class=\"sy3\">-</span> <span class=\"re5\">N_1</span><span class=\"sy1\">,</span> <span class=\"re5\">N_2</span><span class=\"br0\">}</span> <span class=\"kw1\">end</span><span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"re5\">Xs</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"re5\">Result</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">difference</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"re5\">_</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">difference</span><span class=\"br0\">(</span><span class=\"re5\">List</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">List</span><span class=\"sy1\">;</span><br/><span class=\"re3\">difference</span><span class=\"br0\">(</span><span class=\"re5\">List</span><span class=\"sy1\">,</span><span class=\"re5\">Order</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">difference</span><span class=\"br0\">(</span><span class=\"re3\">difference</span><span class=\"br0\">(</span><span class=\"re5\">List</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"re5\">Order</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"Initial: ~p~n\"</span><span class=\"sy1\">,</span><span class=\"br0\">[</span>?<span class=\"re4\">TEST_DATA</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~3b: ~p~n\"</span><span class=\"sy1\">,</span><span class=\"br0\">[</span><span class=\"re5\">N</span><span class=\"sy1\">,</span><span class=\"re3\">difference</span><span class=\"br0\">(</span>?<span class=\"re4\">TEST_DATA</span><span class=\"sy1\">,</span><span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">N</span> <span class=\"sy3\">&lt;-</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"kw3\">length</span><span class=\"br0\">(</span>?<span class=\"re4\">TEST_DATA</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>    ok<span class=\"sy1\">.</span></pre>"}, {"lang": "Factor", "loc": 10, "block": "<pre class=\"text highlighted_source\">USING: kernel math math.vectors sequences\u00a0;<br/>IN: rosetacode<br/>\u00a0<br/>: 1-order ( seq -- seq' )<br/>    [ rest-slice ] keep v-\u00a0;<br/>\u00a0<br/>: n-order ( seq n -- seq' )<br/>    dup 0 &lt;=<br/>    [ drop ] [ [ 1-order ] times ] if\u00a0;<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 15, "block": "<pre class=\"text highlighted_source\">: forward-difference<br/>  dup 0<br/> \u00a0?do<br/>     swap rot over i 1+ - 0<br/>    \u00a0?do dup i cells + dup cell+ @ over @ - swap\u00a0! loop<br/>     swap rot<br/>  loop -<br/>;<br/>\u00a0<br/>create a<br/>  90 , 47 , 58 , 29 , 22 , 32 , 55 , 5 , 55 , 73 ,<br/>\u00a0<br/>: test a 10 9 forward-difference bounds\u00a0?do i\u00a0? loop\u00a0;<br/>\u00a0<br/>test</pre>"}, {"lang": "Fortran", "loc": 20, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">MODULE</span> DIFFERENCE<br/>  <span class=\"kw3\">IMPLICIT</span> <span class=\"kw3\">NONE</span><br/>\u00a0<br/>  <span class=\"kw1\">CONTAINS</span><br/>\u00a0<br/>  <span class=\"kw1\">SUBROUTINE</span> Fdiff<span class=\"br0\">(</span>a, n<span class=\"br0\">)</span><br/>    <span class=\"kw3\">INTEGER</span>, <span class=\"kw3\">INTENT</span><span class=\"br0\">(</span><span class=\"kw3\">IN</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">a</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>, n<br/>    <span class=\"kw3\">INTEGER</span> <span class=\"sy0\">::</span> <span class=\"me2\">b</span><span class=\"br0\">(</span><span class=\"kw4\">SIZE</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span>  <br/>    <span class=\"kw3\">INTEGER</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, j, arraysize<br/>\u00a0<br/>    b <span class=\"sy0\">=</span> a<br/>    arraysize <span class=\"sy0\">=</span> <span class=\"kw4\">SIZE</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">DO</span> i <span class=\"sy0\">=</span> arraysize<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, arraysize<span class=\"sy0\">-</span>n, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>      <span class=\"kw1\">DO</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, i<br/>        b<span class=\"br0\">(</span>j<span class=\"br0\">)</span> <span class=\"sy0\">=</span> b<span class=\"br0\">(</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> b<span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>      <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span><br/>    <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span><br/>    WRITE <span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> b<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>arraysize<span class=\"sy0\">-</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">END</span> <span class=\"kw1\">SUBROUTINE</span> Fdiff<br/><span class=\"kw1\">END</span> <span class=\"kw1\">MODULE</span> DIFFERENCE</pre>"}, {"lang": "F#", "loc": 9, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> ForwardDifference input n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> n <span class=\"kw1\">with</span><br/>    | _ <span class=\"kw1\">when</span> input <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> || n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>      <span class=\"co1\">// If there's no more input, just return an empty list</span><br/>    | <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> input                            <span class=\"co1\">// If n is zero, we're done - return the input</span><br/>    | _ <span class=\"sy0\">-&gt;</span> ForwardDifference                <span class=\"co1\">// otherwise, recursively difference..</span><br/>            <span class=\"br0\">(</span>input.<span class=\"me1\">Tail</span>                     <span class=\"co1\">// All but the first element</span><br/>            <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">zip</span> input                <span class=\"co1\">// tupled with itself</span><br/>            <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">map</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>a, b<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> b<span class=\"sy0\">-</span>a<span class=\"br0\">)</span>  <span class=\"co1\">// Subtract the i'th element from the (i+1)'th</span><br/>            <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">toList</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>            <span class=\"co1\">// Make into a list and do an n-1 difference on it</span></pre>"}, {"lang": "Go", "loc": 18, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    a <span class=\"sy2\">:=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">90</span><span class=\"sy1\">,</span> <span class=\"nu0\">47</span><span class=\"sy1\">,</span> <span class=\"nu0\">58</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">73</span><span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>a<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>fd<span class=\"sy1\">(</span>a<span class=\"sy1\">,</span> <span class=\"nu0\">9</span><span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> fd<span class=\"sy1\">(</span>a <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> ord <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; ord<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> j &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>a<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            a<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> a<span class=\"sy1\">[</span>j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy3\">-</span> a<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> a<span class=\"sy1\">[:</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>a<span class=\"sy1\">)</span><span class=\"sy3\">-</span>ord<span class=\"sy1\">]</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 15, "block": "<pre class=\"haskell highlighted_source\">forwardDifference xs <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zipWith\"><span class=\"kw3\">zipWith</span></a> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> xs<span class=\"br0\">)</span> xs<br/>\u00a0<br/>nthForwardDifference xs n <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:iterate\"><span class=\"kw3\">iterate</span></a> forwardDifference xs <span class=\"sy0\">!!</span> n<br/>\u00a0<br/><span class=\"sy0\">&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:take\"><span class=\"kw3\">take</span></a> <span class=\"nu0\">10</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:iterate\"><span class=\"kw3\">iterate</span></a> forwardDifference <span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span><span class=\"nu0\">47</span><span class=\"sy0\">,</span><span class=\"nu0\">58</span><span class=\"sy0\">,</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">32</span><span class=\"sy0\">,</span><span class=\"nu0\">55</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">55</span><span class=\"sy0\">,</span><span class=\"nu0\">73</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">43</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,-</span><span class=\"nu0\">29</span><span class=\"sy0\">,-</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"sy0\">,-</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">54</span><span class=\"sy0\">,-</span><span class=\"nu0\">40</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">17</span><span class=\"sy0\">,</span><span class=\"nu0\">13</span><span class=\"sy0\">,-</span><span class=\"nu0\">73</span><span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"sy0\">,-</span><span class=\"nu0\">32</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">94</span><span class=\"sy0\">,</span><span class=\"nu0\">62</span><span class=\"sy0\">,-</span><span class=\"nu0\">5</span><span class=\"sy0\">,-</span><span class=\"nu0\">4</span><span class=\"sy0\">,-</span><span class=\"nu0\">86</span><span class=\"sy0\">,</span><span class=\"nu0\">173</span><span class=\"sy0\">,-</span><span class=\"nu0\">132</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">156</span><span class=\"sy0\">,-</span><span class=\"nu0\">67</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">82</span><span class=\"sy0\">,</span><span class=\"nu0\">259</span><span class=\"sy0\">,-</span><span class=\"nu0\">305</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">223</span><span class=\"sy0\">,</span><span class=\"nu0\">68</span><span class=\"sy0\">,-</span><span class=\"nu0\">83</span><span class=\"sy0\">,</span><span class=\"nu0\">341</span><span class=\"sy0\">,-</span><span class=\"nu0\">564</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">291</span><span class=\"sy0\">,-</span><span class=\"nu0\">151</span><span class=\"sy0\">,</span><span class=\"nu0\">424</span><span class=\"sy0\">,-</span><span class=\"nu0\">905</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">442</span><span class=\"sy0\">,</span><span class=\"nu0\">575</span><span class=\"sy0\">,-</span><span class=\"nu0\">1329</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">1017</span><span class=\"sy0\">,-</span><span class=\"nu0\">1904</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">2921</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre>"}, {"lang": "HicEst", "loc": 12, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">REAL</span> <span class=\"sy1\">::</span> n<span class=\"sy1\">=</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> list<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>\u00a0<br/>list <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"nu0\">90</span><span class=\"sy1\">,</span> <span class=\"nu0\">47</span><span class=\"sy1\">,</span> <span class=\"nu0\">58</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">73</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Format<span class=\"sy1\">=</span><span class=\"st0\">'i1, (i6)'</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> list<br/>\u00a0<br/><span class=\"kw1\">DO</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> n<span class=\"sy1\">-</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">ALIAS</span><span class=\"br0\">(</span>list<span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span>  diff<span class=\"sy1\">,</span>n<span class=\"sy1\">-</span>i<span class=\"br0\">)</span> <span class=\"co1\">! rename list(1 ... n-i) with diff</span><br/>  diff <span class=\"sy1\">=</span> list<span class=\"br0\">(</span><span class=\"sy2\">$</span><span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">-</span> diff  <span class=\"co1\">! $ is the running left hand array index</span><br/>  <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Format<span class=\"sy1\">=</span><span class=\"st0\">'i1, (i6)'</span><span class=\"br0\">)</span> i<span class=\"sy1\">,</span> diff<br/><span class=\"kw1\">ENDDO</span><br/>\u00a0<br/><span class=\"kw1\">END</span></pre>"}, {"lang": "Icon and Unicon", "loc": 17, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>A<span class=\"br0\">)</span>    <span class=\"co1\"># Compute all forward difference orders for argument list</span><br/>    <span class=\"kw1\">every</span> order <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span><span class=\"sy1\">*</span>A<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> showList<span class=\"br0\">(</span>order<span class=\"sy1\">,</span> fdiff<span class=\"br0\">(</span>A<span class=\"sy1\">,</span> order<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> fdiff<span class=\"br0\">(</span>A<span class=\"sy1\">,</span> order<span class=\"br0\">)</span><br/>    <span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> order <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">every</span> <span class=\"kw4\">put</span><span class=\"br0\">(</span>B <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> A<span class=\"br0\">[</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">2</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>A<span class=\"br0\">]</span> <span class=\"sy1\">-</span> A<span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        A <span class=\"sy1\">:=</span> B<br/>        <span class=\"br0\">}</span><br/>   <span class=\"kw1\">return</span> A<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> showList<span class=\"br0\">(</span>order<span class=\"sy1\">,</span> L<span class=\"br0\">)</span><br/>    <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span>order<span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\": \"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">every</span> <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"sy1\">!</span>L<span class=\"sy1\">,</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "IDL", "loc": 8, "block": "<pre class=\"idl highlighted_source\">print,<span class=\"br0\">(</span>x <span class=\"sy0\">=</span> randomu<span class=\"br0\">(</span>seed,<span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>     <span class=\"nu0\">15.1473</span>      <span class=\"nu0\">58.0953</span>      <span class=\"nu0\">82.7465</span>      <span class=\"nu0\">16.8637</span>      <span class=\"nu0\">97.7182</span>      <span class=\"nu0\">59.7856</span>      <span class=\"nu0\">17.7699</span>      <span class=\"nu0\">74.9154</span><br/>print,ts_diff<span class=\"br0\">(</span>x,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">-</span><span class=\"nu0\">42.9479</span>     <span class=\"sy0\">-</span><span class=\"nu0\">24.6513</span>      <span class=\"nu0\">65.8828</span>     <span class=\"sy0\">-</span><span class=\"nu0\">80.8545</span>      <span class=\"nu0\">37.9326</span>      <span class=\"nu0\">42.0157</span>     <span class=\"sy0\">-</span><span class=\"nu0\">57.1455</span>     <span class=\"nu0\">0.000000</span><br/>print,ts_diff<span class=\"br0\">(</span>x,<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">-</span><span class=\"nu0\">18.2967</span>     <span class=\"sy0\">-</span><span class=\"nu0\">90.5341</span>      <span class=\"nu0\">146.737</span>     <span class=\"sy0\">-</span><span class=\"nu0\">118.787</span>     <span class=\"sy0\">-</span><span class=\"nu0\">4.08316</span>      <span class=\"nu0\">99.1613</span>     <span class=\"nu0\">0.000000</span>     <span class=\"nu0\">0.000000</span><br/>print,ts_diff<span class=\"br0\">(</span>x,<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>     <span class=\"nu0\">72.2374</span>     <span class=\"sy0\">-</span><span class=\"nu0\">237.271</span>      <span class=\"nu0\">265.524</span>     <span class=\"sy0\">-</span><span class=\"nu0\">114.704</span>     <span class=\"sy0\">-</span><span class=\"nu0\">103.244</span>     <span class=\"nu0\">0.000000</span>     <span class=\"nu0\">0.000000</span>     <span class=\"nu0\">0.000000</span></pre>"}, {"lang": "J", "loc": 1, "block": "<pre class=\"j highlighted_source\">fd=: <span class=\"nu0\">2</span>&amp;<span class=\"sy0\">(</span>-~/\\<span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 27, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> FD <span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">90</span>, <span class=\"nu0\">47</span>, <span class=\"nu0\">58</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">73</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>dif<span class=\"br0\">(</span>a, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>dif<span class=\"br0\">(</span>a, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>dif<span class=\"br0\">(</span>a, <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>dif<span class=\"br0\">(</span>a, <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>      <span class=\"co1\">//let's test</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>dif<span class=\"br0\">(</span>a, <span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>dif<span class=\"br0\">(</span>a, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>dif<span class=\"br0\">(</span>a, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> dif<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a, <span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span> <span class=\"co1\">// if the programmer was dumb</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n <span class=\"sy0\">&amp;&amp;</span> a.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> b <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>a.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> b.<span class=\"me1\">length</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>                b<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> a<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            a <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span> <span class=\"co1\">//\"recurse\"</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> a<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 57, "block": "<pre class=\"javascript highlighted_source\"><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>    <span class=\"st0\">'use strict'</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// forwardDifference\u00a0:: [Int] -&gt; [Int]</span><br/>    <span class=\"kw1\">const</span> forwardDifference <span class=\"sy0\">=</span> <span class=\"br0\">(</span>n<span class=\"sy0\">,</span> xs<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">const</span> fd <span class=\"sy0\">=</span> xs <span class=\"sy0\">=&gt;</span> zipWith<span class=\"br0\">(</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> a <span class=\"sy0\">-</span> b<span class=\"sy0\">,</span> tail<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><span class=\"sy0\">,</span> xs<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> until<span class=\"br0\">(</span><br/>                m <span class=\"sy0\">=&gt;</span> m.<span class=\"me1\">index</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>                m <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">{</span><br/>                    index<span class=\"sy0\">:</span> m.<span class=\"me1\">index</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>                    list<span class=\"sy0\">:</span> fd<span class=\"br0\">(</span>m.<span class=\"me1\">list</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><br/>                    index<span class=\"sy0\">:</span> n<span class=\"sy0\">,</span><br/>                    list<span class=\"sy0\">:</span> xs<br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">)</span><br/>            .<span class=\"me1\">list</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"co1\">// GENERIC FUNCTIONS ---------------------------------------</span><br/>\u00a0<br/>    <span class=\"co1\">// zipWith\u00a0:: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]</span><br/>    <span class=\"kw1\">const</span> zipWith <span class=\"sy0\">=</span> <span class=\"br0\">(</span>f<span class=\"sy0\">,</span> xs<span class=\"sy0\">,</span> ys<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">const</span> ny <span class=\"sy0\">=</span> ys.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">(</span>xs.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;=</span> ny <span class=\"sy0\">?</span> xs <span class=\"sy0\">:</span> xs.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> ny<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            .<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> i<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> f<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> ys<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// until\u00a0:: (a -&gt; Bool) -&gt; (a -&gt; a) -&gt; a -&gt; a</span><br/>    <span class=\"kw1\">const</span> until <span class=\"sy0\">=</span> <span class=\"br0\">(</span>p<span class=\"sy0\">,</span> f<span class=\"sy0\">,</span> x<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">const</span> go <span class=\"sy0\">=</span> x <span class=\"sy0\">=&gt;</span> p<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">?</span> x <span class=\"sy0\">:</span> go<span class=\"br0\">(</span>f<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> go<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// tail\u00a0:: [a] -&gt; [a]</span><br/>    <span class=\"kw1\">const</span> tail <span class=\"sy0\">=</span> xs <span class=\"sy0\">=&gt;</span> xs.<span class=\"me1\">length</span> <span class=\"sy0\">?</span> xs.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"kw2\">undefined</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"co1\">// TEST ----------------------------------------------------</span><br/>\u00a0<br/>    <span class=\"co1\">// range\u00a0:: Int -&gt; Int -&gt; [Int]</span><br/>    <span class=\"kw1\">const</span> range <span class=\"sy0\">=</span> <span class=\"br0\">(</span>m<span class=\"sy0\">,</span> n<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>        <span class=\"kw4\">Array</span>.<span class=\"me1\">from</span><span class=\"br0\">(</span><span class=\"br0\">{</span><br/>            length<span class=\"sy0\">:</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">floor</span><span class=\"br0\">(</span>n <span class=\"sy0\">-</span> m<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>_<span class=\"sy0\">,</span> i<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> m <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// show\u00a0:: a -&gt; String</span><br/>    <span class=\"kw1\">const</span> show <span class=\"sy0\">=</span> x <span class=\"sy0\">=&gt;</span> JSON.<span class=\"me1\">stringify</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Sample</span><br/>    <span class=\"kw1\">const</span> test <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> range<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><br/>        .<span class=\"me1\">map</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> `$<span class=\"br0\">{</span>x<span class=\"br0\">}</span>    $<span class=\"br0\">{</span>show<span class=\"br0\">(</span>forwardDifference<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> test<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span>`<span class=\"br0\">)</span><br/>        .<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 8, "block": "<pre class=\"text highlighted_source\"># If n is a non-negative number and if input is<br/># a (possibly empty) array of numbers,<br/># emit an array, even if the input list is too short:<br/>def ndiff(n):<br/>  if n==0 then .<br/>  elif n == 1 then . as $in | [range(1;length) | $in[.] - $in[.-1]]<br/>  else ndiff(1) | ndiff(n-1)<br/>  end;</pre>"}, {"lang": "Julia", "loc": 4, "block": "<pre class=\"text highlighted_source\">ndiff(A::Array, n::Integer) = n &lt; 1\u00a0? A\u00a0: diff(ndiff(A, n-1))<br/>\u00a0<br/>s = [90, 47, 58, 29, 22, 32, 55, 5, 55, 73]<br/>println.(collect(ndiff(s, i) for i in 0:9))</pre>"}, {"lang": "K4", "loc": 1, "block": "<pre class=\"text highlighted_source\">fd:1_-':</pre>"}, {"lang": "Kotlin", "loc": 36, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>fun forwardDifference<span class=\"br0\">(</span>ia<span class=\"sy0\">:</span> IntArray, order<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> IntArray <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>order <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">throw</span></a> IllegalArgumentException<span class=\"br0\">(</span><span class=\"st0\">\"Order must be non-negative\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>order <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> ia<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> size <span class=\"sy0\">=</span> ia.<span class=\"me1\">size</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>size <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> ia  <span class=\"co1\">// same empty array</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>order <span class=\"sy0\">&gt;=</span> size<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> intArrayOf<span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"co1\">// new empty array</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> old <span class=\"sy0\">=</span> ia<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> <span class=\"sy0\">=</span> old<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> count <span class=\"sy0\">=</span> order<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>count-- <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>       <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>old.<span class=\"me1\">size</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>       <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a>.<span class=\"me1\">size</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> old<span class=\"br0\">[</span>i + <span class=\"nu0\">1</span><span class=\"br0\">]</span> - old<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>       old <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun printArray<span class=\"br0\">(</span>ia<span class=\"sy0\">:</span> IntArray<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">\"[\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until ia.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        print<span class=\"br0\">(</span><span class=\"st0\">\"%5d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>ia<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> ia .<span class=\"me1\">size</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"]\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ia <span class=\"sy0\">=</span> intArrayOf<span class=\"br0\">(</span><span class=\"nu0\">90</span>, <span class=\"nu0\">47</span>, <span class=\"nu0\">58</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">73</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>order in <span class=\"nu0\">0</span>..<span class=\"me1\">ia</span>.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> fd <span class=\"sy0\">=</span> forwardDifference<span class=\"br0\">(</span>ia, order<span class=\"br0\">)</span><br/>        print<span class=\"br0\">(</span><span class=\"st0\">\"%2d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>order<span class=\"br0\">)</span> + <span class=\"st0\">\":  \"</span><span class=\"br0\">)</span><br/>        printArray<span class=\"br0\">(</span>fd<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 16, "block": "<pre class=\"text highlighted_source\">#!/usr/bin/lasso9<br/>\u00a0<br/>define forwardDiff(values, order::integer=1) =&gt; {<br/> \u00a0!#order\u00a0? return #values-&gt;asArray<br/>  local(result = array)<br/>  iterate(#values) =&gt; {<br/>    loop_count &lt; #values-&gt;size\u00a0?<br/>      #result-&gt;insert(#values-&gt;get(loop_count+1) - #values-&gt;get(loop_count))<br/>  }<br/>  #order &gt; 1\u00a0? #result = forwardDiff(#result, #order-1)<br/>  return #result<br/>}<br/>\u00a0<br/>local(data = (:90, 47, 58, 29, 22, 32, 55, 5, 55, 73))<br/>with x in generateSeries(0, #data-&gt;size-1)<br/>do stdoutnl(#x + ': ' + forwardDiff(#data, #x))</pre>"}, {"lang": "Logo", "loc": 12, "block": "<pre class=\"text highlighted_source\">to fwd.diff\u00a0:l<br/>  if empty?\u00a0:l [output []]<br/>  if empty? bf\u00a0:l [output []]<br/>  output fput (first bf\u00a0:l)-(first\u00a0:l) fwd.diff bf\u00a0:l<br/>end<br/>to nth.fwd.diff\u00a0:n\u00a0:l<br/>  if\u00a0:n = 0 [output\u00a0:l]<br/>  output nth.fwd.diff\u00a0:n-1 fwd.diff\u00a0:l<br/>end<br/>\u00a0<br/>show nth.fwd.diff 9 [90 47 58 29 22 32 55 5 55 73]<br/>[-2921]</pre>"}, {"lang": "Lua", "loc": 5, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> dif<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> <span class=\"sy0\">...</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> b<span class=\"sy0\">-</span>a<span class=\"sy0\">,</span> dif<span class=\"br0\">(</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">...</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> dift<span class=\"br0\">(</span>t<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"br0\">{</span>dif<span class=\"br0\">(</span><span class=\"kw3\">unpack</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">unpack</span><span class=\"br0\">(</span>dift<span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 2, "block": "<pre class=\"text highlighted_source\">i={3,5,12,1,6,19,6,2,4,9};<br/>Differences[i]</pre>"}, {"lang": "MATLAB / Octave", "loc": 1, "block": "<pre class=\"matlab highlighted_source\">Y = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/diff.html\"><span class=\"kw2\">diff</span></a><span class=\"br0\">(</span>X,n<span class=\"br0\">)</span>;</pre>"}, {"lang": "Maxima", "loc": 1, "block": "<pre class=\"text highlighted_source\">ldiff(u, n)\u00a0:= block([m: length(u)], for j thru n do u: makelist(u[i + 1] - u[i], i, 1, m - j), u);</pre>"}, {"lang": "NetRexx", "loc": 34, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx*************************************************************<br/>* Forward differences<br/>* 18.08.2012 Walter Pachl derived from Rexx <br/>**********************************************************************/</span><br/>  <span class=\"kw1\">Loop</span> n=-<span class=\"nu0\">1</span> To <span class=\"nu0\">11</span><br/>    differences<span class=\"br0\">(</span><span class=\"st0\">'90 47 58 29 22 32 55 5 55 73'</span>,n<span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>\u00a0<br/>  method differences<span class=\"br0\">(</span>a,n<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span><br/>  <span class=\"co1\">--arr=Rexx[11]                       -- array must be declared (zero based)</span><br/>    arr=<span class=\"st0\">''</span>                             <span class=\"co1\">-- alternative: indexed string</span><br/>    m=a.<span class=\"kw6\">words</span><br/>    <span class=\"kw1\">Select</span><br/>      <span class=\"kw3\">When</span> n<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Say</span> <span class=\"st0\">'n is negative:'</span> n <span class=\"st0\">'&lt;'</span> <span class=\"nu0\">0</span><br/>      <span class=\"kw3\">When</span> n<span class=\"sy0\">&gt;</span>m <span class=\"kw3\">Then</span> <span class=\"kw1\">Say</span> <span class=\"st0\">'n is too large:'</span> n <span class=\"st0\">'&gt;'</span> m<br/>      <span class=\"kw3\">Otherwise</span> <span class=\"kw1\">Do</span><br/>        <span class=\"kw1\">Loop</span> i=<span class=\"nu0\">1</span> To m<br/>          arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span>=a.<span class=\"kw6\">word</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>          <span class=\"kw3\">End</span><br/>        <span class=\"kw1\">Loop</span> i = <span class=\"nu0\">1</span> to n<br/>          t = arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>          <span class=\"kw1\">Loop</span> j = i+<span class=\"nu0\">1</span> to m<br/>            u = arr<span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>            arr<span class=\"br0\">[</span>j<span class=\"br0\">]</span> = arr<span class=\"br0\">[</span>j<span class=\"br0\">]</span>-t<br/>            t = u<br/>            <span class=\"kw3\">end</span><br/>          <span class=\"kw3\">end</span><br/>        ol=<span class=\"st0\">''</span><br/>        <span class=\"kw1\">Loop</span> i=n+<span class=\"nu0\">1</span> to m<br/>          ol=ol arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>          <span class=\"kw3\">End</span><br/>        <span class=\"kw1\">Say</span> n ol<br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">End</span></pre>"}, {"lang": "Nial", "loc": 1, "block": "<pre class=\"text highlighted_source\">fd is - [rest, front]</pre>"}, {"lang": "Nim", "loc": 13, "block": "<pre class=\"text highlighted_source\">proc dif(s): seq[int] =<br/>  result = newSeq[int](s.len-1)<br/>  for i, x in s[1..s.high]:<br/>    result[i] = x - s[i]<br/>\u00a0<br/>proc difn(s, n): seq[int] =<br/>  if n &gt; 0: difn(dif(s), n-1)<br/>  else: s<br/>\u00a0<br/>const s = @[90, 47, 58, 29, 22, 32, 55, 5, 55, 73]<br/>echo difn(s, 0)<br/>echo difn(s, 1)<br/>echo difn(s, 2)</pre>"}, {"lang": "Objeck", "loc": 38, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> Test <span class=\"br0\">{</span><br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      a <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"nu0\">90.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">47.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">58.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">29.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">22.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">32.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">55.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">5.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">55.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">73.0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      Print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      Print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      Print<span class=\"br0\">(</span>Diff<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Print<span class=\"br0\">(</span>a <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>a <span class=\"sy0\">&lt;&gt;</span> <span class=\"kw2\">Nil</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        '<span class=\"br0\">[</span>'<span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">each</span><span class=\"br0\">(</span>i <span class=\"sy0\">:</span> a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> '<span class=\"sy0\">,</span>'<span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        '<span class=\"br0\">]</span>'<span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Diff<span class=\"br0\">(</span>a <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> n <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">Nil</span><span class=\"sy0\">;</span><br/>       <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n <span class=\"sy0\">&amp;</span> a<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        b <span class=\"sy0\">:=</span> Float<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">[</span>a<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span>j <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> b<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> j <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>          b<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> a<span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> a<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        a <span class=\"sy0\">:=</span> b<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">return</span> a<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 11, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> forward_difference <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>    a <span class=\"sy0\">::</span> <span class=\"br0\">(</span>b <span class=\"sy0\">::</span> _ <span class=\"kw1\">as</span> xs<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>      b <span class=\"sy0\">-</span> a <span class=\"sy0\">::</span> forward_difference xs<br/>  <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span><br/>      <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> nth_forward_difference n xs <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">if</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>    xs<br/>  <span class=\"kw1\">else</span><br/>    nth_forward_difference <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALpred\"><span class=\"kw3\">pred</span></a> n<span class=\"br0\">)</span> <span class=\"br0\">(</span>forward_difference xs<span class=\"br0\">)</span></pre>"}, {"lang": "Oforth", "loc": 2, "block": "<pre class=\"text highlighted_source\">: forwardDiff(l)     l right(l size 1 -) l zipWith(#-)\u00a0;<br/>: forwardDiffN(n, l)  l #[ forwardDiff dup println ] times(n)\u00a0;</pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\">fd<span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw1\">vector</span><span class=\"br0\">(</span>#v<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>i<span class=\"sy0\">,</span>v<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pascal", "loc": 26, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">Program</span> ForwardDifferenceDemo<span class=\"br0\">(</span>output<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> fowardDifference<span class=\"br0\">(</span>list<span class=\"sy1\">:</span> <span class=\"kw4\">array</span> <span class=\"kw1\">of</span> <span class=\"kw4\">integer</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">var</span><br/>    b<span class=\"sy1\">:</span> <span class=\"kw4\">array</span> <span class=\"kw1\">of</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>    i<span class=\"sy1\">,</span> newlength<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">begin</span><br/>    newlength <span class=\"sy1\">:</span><span class=\"sy3\">=</span> length<span class=\"br0\">(</span>list<span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">if</span> newlength &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">begin</span><br/>      setlength<span class=\"br0\">(</span>b<span class=\"sy1\">,</span> newlength<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> low<span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"kw1\">to</span> high<span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">begin</span><br/>        b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> list<span class=\"br0\">[</span>i<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy3\">-</span> list<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        <span class=\"kw3\">write</span> <span class=\"br0\">(</span>b<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">:</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw3\">writeln</span><span class=\"sy1\">;</span><br/>      fowardDifference<span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  a<span class=\"sy1\">:</span> <span class=\"kw4\">array</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">..</span><span class=\"nu0\">10</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> <span class=\"kw4\">integer</span> <span class=\"sy3\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"sy1\">,</span> <span class=\"nu0\">47</span><span class=\"sy1\">,</span> <span class=\"nu0\">58</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">55</span><span class=\"sy1\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  fowardDifference<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 7, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> dif <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"sy0\">@</span><a href=\"http://perldoc.perl.org/functions/s.html\"><span class=\"kw3\">s</span></a> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>  <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"re0\">$s</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$s</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$#s</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">@a</span> <span class=\"sy0\">=</span> qw<span class=\"sy0\">&lt;</span><span class=\"nu0\">90</span> <span class=\"nu0\">47</span> <span class=\"nu0\">58</span> <span class=\"nu0\">29</span> <span class=\"nu0\">22</span> <span class=\"nu0\">32</span> <span class=\"nu0\">55</span> <span class=\"nu0\">5</span> <span class=\"nu0\">55</span> <span class=\"nu0\">73</span><span class=\"sy0\">&gt;;</span><br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">@a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st_h\">'%6d'</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> <span class=\"re0\">@a</span> <span class=\"sy0\">=</span> dif <span class=\"re0\">@a</span><span class=\"sy0\">;</span> <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 2, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> dif<span class=\"br0\">(</span><span class=\"re0\">@array</span> <span class=\"br0\">[</span>$<span class=\"sy0\">,</span> <span class=\"sy0\">*</span><span class=\"re0\">@tail</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">@tail</span> Z<span class=\"sy0\">-</span> <span class=\"re0\">@array</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> difn<span class=\"br0\">(</span><span class=\"re0\">$array</span><span class=\"sy0\">,</span> <span class=\"re0\">$n</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"re0\">$array</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;dif</span> <span class=\"sy0\">...</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"re0\">$n</span><span class=\"br0\">]</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 15, "block": "<pre class=\"text highlighted_source\">function fwd_diff_n(sequence s, integer order)<br/>    if order&gt;=length(s) then\u00a0?9/0 end if<br/>    for i=1 to order do<br/>        for j=1 to length(s)-1 do<br/>            s[j] = s[j+1]-s[j]<br/>        end for<br/>        s = s[1..-2]<br/>    end for<br/>    return s<br/>end function<br/>\u00a0<br/>constant s = {90, 47, 58, 29, 22, 32, 55, 5, 55, 73}<br/>for i=1 to 9 do<br/>   \u00a0?fwd_diff_n(s,i)<br/>end for</pre>"}, {"lang": "PHP", "loc": 43, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/>\u00a0<br/><span class=\"kw2\">function</span> forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$anArray</span><span class=\"sy0\">,</span> <span class=\"re0\">$times</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$times</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"re0\">$anArray</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$accumilation</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/count\"><span class=\"kw3\">count</span></a><span class=\"br0\">(</span><span class=\"re0\">$anArray</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$j</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>    <span class=\"re0\">$accumilation</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$anArray</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$anArray</span><span class=\"br0\">[</span><span class=\"re0\">$i</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$times</span> <span class=\"sy0\">===</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"re0\">$accumilation</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$accumilation</span><span class=\"sy0\">,</span> <span class=\"re0\">$times</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">class</span> ForwardDiffExample <span class=\"kw2\">extends</span> PweExample <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"kw2\">function</span> _should_run_empty_array_for_single_elem<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$expected</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><a href=\"http://www.php.net/rand\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">int</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">spec</span><span class=\"br0\">(</span>forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$expected</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">shouldEqual</span><span class=\"br0\">(</span><a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw2\">function</span> _should_give_diff_of_two_elem_as_single_elem<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$twoNums</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><a href=\"http://www.php.net/rand\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">int</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><a href=\"http://www.php.net/rand\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">int</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$expected</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"re0\">$twoNums</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$twoNums</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">spec</span><span class=\"br0\">(</span>forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$twoNums</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">shouldEqual</span><span class=\"br0\">(</span><span class=\"re0\">$expected</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw2\">function</span> _should_compute_correct_forward_diff_for_longer_arrays<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$diffInput</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$expected</span>  <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">spec</span><span class=\"br0\">(</span>forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$diffInput</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">shouldEqual</span><span class=\"br0\">(</span><span class=\"re0\">$expected</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw2\">function</span> _should_apply_more_than_once_if_specified<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$diffInput</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$expectedAfter1</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$expectedAfter2</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">spec</span><span class=\"br0\">(</span>forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$diffInput</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">shouldEqual</span><span class=\"br0\">(</span><span class=\"re0\">$expectedAfter1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">spec</span><span class=\"br0\">(</span>forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$diffInput</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">shouldEqual</span><span class=\"br0\">(</span><span class=\"re0\">$expectedAfter2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw2\">function</span> _should_return_array_unaltered_if_no_times<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">spec</span><span class=\"br0\">(</span>forwardDiff<span class=\"br0\">(</span><span class=\"re0\">$expected</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">shouldEqual</span><span class=\"br0\">(</span><span class=\"re0\">$expected</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "PicoLisp", "loc": 5, "block": "<pre class=\"text highlighted_source\">(de fdiff (Lst)<br/>   (mapcar - (cdr Lst) Lst) )<br/>\u00a0<br/>(for (L (90 47 58 29 22 32 55 5 55 73) L (fdiff L))<br/>   (println L) )</pre>"}, {"lang": "PL/I", "loc": 23, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/* Forward differences. */ /* 23 April 2010 */<br/>differences: procedure options (main);<br/>   declare a(10) fixed(10) static initial<br/>      (7, 3, 9, 250, 300, 4, 68, 72, 154, 601);<br/>   declare (i, j, m, n, t, u) fixed binary;<br/>\u00a0<br/>   m = hbound(a,1);<br/>   get (n); if n &gt; m then signal error;<br/>   put skip edit (a) (F(7));<br/>   do i = 1 to n;<br/>      t = a(i);<br/>      do j = i+1 to m;<br/>         u = a(j);<br/>         a(j) = a(j) - t;<br/>         t = u;<br/>      end;<br/>      put skip edit (a) (F(7));<br/>   end;<br/>   put skip edit ((a(i) do i = n+1 to m)) (F(9));<br/>\u00a0<br/>end differences;<br/>\u00a0</pre>"}, {"lang": "Pop11", "loc": 20, "block": "<pre class=\"text highlighted_source\">define forward_difference(l);<br/>    lvars res = [], prev, el;<br/>    if l = [] then<br/>        return([]);<br/>    endif;<br/>    front(l) -&gt; prev;<br/>    for el in back(l) do<br/>        cons(el - prev, res) -&gt; res;<br/>        el -&gt; prev;<br/>    endfor;<br/>    rev(res);<br/>enddefine;<br/>\u00a0<br/>define nth_difference(l, n);<br/>    lvars res = l, i;<br/>    for i from 1 to n do<br/>        forward_difference(res) -&gt; res;<br/>    endfor;<br/>    res;<br/>enddefine;</pre>"}, {"lang": "PowerShell", "loc": 22, "block": "<pre class=\"powershell highlighted_source\"><span class=\"kw3\">function</span> Forward<span class=\"sy0\">-</span>Difference<span class=\"br0\">(</span> <span class=\"br0\">[</span>UInt64<span class=\"br0\">]</span> <span class=\"re0\">$n</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re3\">Array</span><span class=\"br0\">]</span> <span class=\"re0\">$f</span> <span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"re0\">$flen</span> <span class=\"sy0\">=</span> <span class=\"re0\">$f</span>.length<br/>\t<span class=\"kw3\">if</span><span class=\"br0\">(</span> <span class=\"re0\">$flen</span> <span class=\"kw4\">-gt</span> <span class=\"br0\">[</span>Math<span class=\"br0\">]</span>::Max<span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$n</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"nu0\">0</span>..<span class=\"br0\">(</span> <span class=\"re0\">$flen</span> <span class=\"sy0\">-</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"re0\">$l</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span>;<br/>\t\t\t<span class=\"kw3\">for</span><span class=\"br0\">(</span> <span class=\"re0\">$k</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; <span class=\"re0\">$k</span> <span class=\"kw4\">-le</span> <span class=\"re0\">$n</span>; <span class=\"re0\">$k</span><span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\t\t\t\t<span class=\"kw3\">for</span><span class=\"br0\">(</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; <span class=\"re0\">$i</span> <span class=\"kw4\">-le</span> <span class=\"re0\">$k</span>; <span class=\"re0\">$i</span><span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"re0\">$j</span> <span class=\"sy0\">*=</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"re0\">$k</span> <span class=\"sy0\">+</span> <span class=\"re0\">$i</span> <span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"re0\">$i</span> <span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"re0\">$l</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$j</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"re0\">$k</span> <span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$f</span><span class=\"br0\">[</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"sy0\">+</span> <span class=\"re0\">$k</span> <span class=\"br0\">]</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"re0\">$l</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Forward<span class=\"sy0\">-</span>Difference <span class=\"nu0\">2</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span></pre>"}, {"lang": "PureBasic", "loc": 55, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Procedure</span> forward_difference<span class=\"br0\">(</span>List a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> ListSize<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw2\">ClearList</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">ProcedureReturn</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw1\">NewList</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  CopyList<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span>, b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">LastElement</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw2\">DeleteElement</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">SelectElement</span><span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ForEach</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    a<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span>: <span class=\"kw2\">NextElement</span><span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span> <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> nth_difference<span class=\"br0\">(</span>List a<span class=\"br0\">(</span><span class=\"br0\">)</span>, List b<span class=\"br0\">(</span><span class=\"br0\">)</span>, n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> i<br/>  CopyList<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span>, b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> n<br/>    forward_difference<span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span> <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.s display<span class=\"br0\">(</span>List a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> output.s<br/>  <span class=\"kw1\">ForEach</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    output <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\",\"</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"kw2\">RTrim</span><span class=\"br0\">(</span>output,<span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">DataSection</span><br/>  <span class=\"co1\">;list data</span><br/>  <span class=\"kw1\">Data</span>.i <span class=\"nu0\">10</span> <span class=\"co1\">;element count</span><br/>  <span class=\"kw1\">Data</span>.i <span class=\"nu0\">90</span>, <span class=\"nu0\">47</span>, <span class=\"nu0\">58</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">73</span><br/><span class=\"kw1\">EndDataSection</span><br/>\u00a0<br/><span class=\"co1\">;create and fill list</span><br/><span class=\"kw1\">Define</span> i<br/><span class=\"kw1\">NewList</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Read</span>.i i<br/><span class=\"kw1\">While</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw2\">AddElement</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">Read</span>.i a<span class=\"br0\">(</span><span class=\"br0\">)</span>: i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/><span class=\"kw1\">Wend</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">NewList</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">10</span><br/>    nth_difference<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span>, b<span class=\"br0\">(</span><span class=\"br0\">)</span>, i<span class=\"br0\">)</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"   [\"</span> <span class=\"sy0\">+</span> display<span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"]\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Python", "loc": 24, "block": "<pre class=\"python highlighted_source\"><span class=\"sy0\">&gt;&gt;&gt;</span> dif <span class=\"sy0\">=</span> <span class=\"kw1\">lambda</span> s: <span class=\"br0\">[</span>x-s<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">for</span> i<span class=\"sy0\">,</span>x <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"co1\"># or, dif = lambda s: [x-y for x,y in zip(s[1:],s)]</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> difn <span class=\"sy0\">=</span> <span class=\"kw1\">lambda</span> s<span class=\"sy0\">,</span> n: difn<span class=\"br0\">(</span>dif<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">,</span> n-<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> n <span class=\"kw1\">else</span> s<br/>\u00a0<br/><span class=\"sy0\">&gt;&gt;&gt;</span> s <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">]</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> difn<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">]</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> difn<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span>-<span class=\"nu0\">43</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> -<span class=\"nu0\">29</span><span class=\"sy0\">,</span> -<span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> -<span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">]</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> difn<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span><span class=\"nu0\">54</span><span class=\"sy0\">,</span> -<span class=\"nu0\">40</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> -<span class=\"nu0\">73</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> -<span class=\"nu0\">32</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">from</span> <span class=\"kw3\">pprint</span> <span class=\"kw1\">import</span> <span class=\"kw3\">pprint</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw3\">pprint</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>difn<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> i<span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><br/><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">58</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">73</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span>-<span class=\"nu0\">43</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> -<span class=\"nu0\">29</span><span class=\"sy0\">,</span> -<span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> -<span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">54</span><span class=\"sy0\">,</span> -<span class=\"nu0\">40</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> -<span class=\"nu0\">73</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> -<span class=\"nu0\">32</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span>-<span class=\"nu0\">94</span><span class=\"sy0\">,</span> <span class=\"nu0\">62</span><span class=\"sy0\">,</span> -<span class=\"nu0\">5</span><span class=\"sy0\">,</span> -<span class=\"nu0\">4</span><span class=\"sy0\">,</span> -<span class=\"nu0\">86</span><span class=\"sy0\">,</span> <span class=\"nu0\">173</span><span class=\"sy0\">,</span> -<span class=\"nu0\">132</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">156</span><span class=\"sy0\">,</span> -<span class=\"nu0\">67</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> -<span class=\"nu0\">82</span><span class=\"sy0\">,</span> <span class=\"nu0\">259</span><span class=\"sy0\">,</span> -<span class=\"nu0\">305</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span>-<span class=\"nu0\">223</span><span class=\"sy0\">,</span> <span class=\"nu0\">68</span><span class=\"sy0\">,</span> -<span class=\"nu0\">83</span><span class=\"sy0\">,</span> <span class=\"nu0\">341</span><span class=\"sy0\">,</span> -<span class=\"nu0\">564</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">291</span><span class=\"sy0\">,</span> -<span class=\"nu0\">151</span><span class=\"sy0\">,</span> <span class=\"nu0\">424</span><span class=\"sy0\">,</span> -<span class=\"nu0\">905</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span>-<span class=\"nu0\">442</span><span class=\"sy0\">,</span> <span class=\"nu0\">575</span><span class=\"sy0\">,</span> -<span class=\"nu0\">1329</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span><span class=\"nu0\">1017</span><span class=\"sy0\">,</span> -<span class=\"nu0\">1904</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/> <span class=\"br0\">[</span>-<span class=\"nu0\">2921</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre>"}, {"lang": "R", "loc": 21, "block": "<pre class=\"text highlighted_source\">forwarddif &lt;- function(a, n) {<br/>  if ( n == 1 )<br/>    a[2:length(a)] - a[1:length(a)-1]<br/>  else {<br/>    r &lt;- forwarddif(a, 1)<br/>    forwarddif(r, n-1)<br/>  }<br/>}<br/>\u00a0<br/>fdiff &lt;- function(a, n) {<br/>  r &lt;- a<br/>  for(i in 1:n) {<br/>    r &lt;- r[2:length(r)] - r[1:length(r)-1]<br/>  }<br/>  r<br/>}<br/>\u00a0<br/>v &lt;- c(90, 47, 58, 29, 22, 32, 55, 5, 55, 73)<br/>\u00a0<br/>print(forwarddif(v, 9))<br/>print(fdiff(v, 9))</pre>"}, {"lang": "Racket", "loc": 13, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(define (forward-difference list)<br/>  (for/list ([x (cdr list)] [y list]) (- x y)))<br/>\u00a0<br/>(define (nth-forward-difference n list)<br/>  (for/fold ([list list]) ([n n]) (forward-difference list)))<br/>\u00a0<br/>\u00a0<br/>(nth-forward-difference 9 '(90 47 58 29 22 32 55 5 55 73))<br/>;; -&gt; '(-2921)<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 23, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  computes the   forward difference   of a  list of numbers.              */</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> <span class=\"nu0\">100</span>                               <span class=\"coMULTI\">/*ensure enough accuracy (decimal digs)*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> e <span class=\"st0\">','</span> N                                <span class=\"coMULTI\">/*get a list:  \u03b51 \u03b52 \u03b53 \u03b54 \u00b7\u00b7\u00b7 , order */</span><br/><span class=\"kw1\">if</span> e==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> e=<span class=\"nu0\">90</span> <span class=\"nu0\">47</span> <span class=\"nu0\">58</span> <span class=\"nu0\">29</span> <span class=\"nu0\">22</span> <span class=\"nu0\">32</span> <span class=\"nu0\">55</span> <span class=\"nu0\">5</span> <span class=\"nu0\">55</span> <span class=\"nu0\">73</span>    <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/>#=<span class=\"kw6\">words</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span>                                       <span class=\"coMULTI\">/*#  is the number of elements in list.*/</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]  assign list numbers to @ array.*/</span><br/>   <span class=\"kw1\">do</span> i=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> #;  @<span class=\"sy0\">.</span>i=<span class=\"kw6\">word</span><span class=\"br0\">(</span>e, i<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">1</span>;  <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*i*/</span>  <span class=\"coMULTI\">/*process each number one at a time.   */</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]  process the optional order.    */</span><br/><span class=\"kw1\">if</span> N==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span> <span class=\"nu0\">0</span> # # <span class=\"kw2\">with</span> bot top N  <span class=\"coMULTI\">/*define the default  order  range.    */</span><br/>          <span class=\"kw3\">else</span> <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> N bot <span class=\"nu0\">1</span> top             <span class=\"coMULTI\">/*Not specified?  Then use only 1 order*/</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>#  <span class=\"st0\">'numbers:'</span>, <span class=\"nu0\">44</span><span class=\"br0\">)</span>  e                  <span class=\"coMULTI\">/*display the header title   and  \u00b7\u00b7\u00b7  */</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"st0\">''</span>, <span class=\"nu0\">44</span><span class=\"br0\">)</span><span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">'\u2500'</span>, <span class=\"kw6\">length</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span>+<span class=\"nu0\">2</span><span class=\"br0\">)</span>         <span class=\"coMULTI\">/*   \"     \"     \"   fence.            */</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]  where da rubber meets da road. */</span><br/>      <span class=\"kw1\">do</span> o=bot  <span class=\"kw2\">to</span> top;        <span class=\"kw1\">do</span> r=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> #; \u00a0!<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"94e6a9d4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>r;     <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*r*/</span>;        $=<br/>        <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> o; d=!<span class=\"sy0\">.</span>j;  <span class=\"kw1\">do</span> k=j+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> #; <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span>\u00a0!<span class=\"sy0\">.</span>k\u00a0!<span class=\"sy0\">.</span>k-d <span class=\"kw2\">with</span> d\u00a0!<span class=\"sy0\">.</span>k; <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*k*/</span><br/>        <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>                               <span class=\"kw1\">do</span> i=o+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> #; $=$\u00a0!<span class=\"sy0\">.</span>i<span class=\"sy0\">/</span><span class=\"nu0\">1</span>;   <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*i*/</span><br/>      <span class=\"kw1\">if</span> $==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> $=<span class=\"st0\">' [null]'</span><br/>      <span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>o, <span class=\"nu0\">7</span><span class=\"br0\">)</span>th<span class=\"br0\">(</span>o<span class=\"br0\">)</span><span class=\"st0\">'\u2500order forward difference vector ='</span>     $<br/>      <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*o*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>th: <span class=\"kw1\">procedure</span>; x=<span class=\"kw6\">abs</span><span class=\"br0\">(</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">return</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span><span class=\"st0\">'th st nd rd'</span>,<span class=\"nu0\">1</span>+x<span class=\"sy0\">//</span><span class=\"nu0\">10</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>x<span class=\"sy0\">//</span><span class=\"nu0\">100</span>%10<span class=\"sy0\">\\</span>==<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>x<span class=\"sy0\">//</span><span class=\"nu0\">10</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Ring", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Forward difference<br/>\u00a0<br/>s = [90, 47, 58, 29, 22, 32, 55, 5, 55, 73]<br/>for p = 1 to 9 <br/>      s = fwddiff(s)<br/>      showarray(s) <br/>next<br/>\u00a0<br/>func fwddiff(s)<br/>        for j=1 to len(s)-1<br/>             s[j] = s[j+1]-s[j]<br/>        next<br/>        n = len(s)<br/>        del(s, n)<br/>        return s<br/>\u00a0<br/>func showarray(vect)<br/>        see \"{\"<br/>        svect = \"\"<br/>        for n = 1 to len(vect)<br/>              svect = svect + vect[n] + \", \"<br/>        next<br/>        svect = left(svect, len(svect) - 2)<br/>        see svect<br/>        see \"}\" + nl<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 7, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> dif<span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>  s.<span class=\"me1\">each_cons</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">collect</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>x, y<span class=\"sy0\">|</span> y <span class=\"sy0\">-</span> x <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> difn<span class=\"br0\">(</span>s, n<span class=\"br0\">)</span><br/>  n.<span class=\"me1\">times</span>.<span class=\"me1\">inject</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>s, <span class=\"sy0\">|</span> dif<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Scala", "loc": 3, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> fdiff<span class=\"br0\">(</span>xs<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>xs.<span class=\"me1\">tail</span>, xs<span class=\"br0\">)</span>.<span class=\"me1\">zipped</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"sy0\">_</span> - <span class=\"sy0\">_</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> fdiffn<span class=\"br0\">(</span>i<span class=\"sy0\">:</span> Int, xs<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> fdiff<span class=\"br0\">(</span>xs<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> fdiffn<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span>, fdiff<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Scheme", "loc": 11, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>forward<span class=\"sy0\">-</span>diff lst<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"kw1\">null?</span> lst<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">null?</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> lst<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      '<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cons</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> lst<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> lst<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>forward<span class=\"sy0\">-</span>diff <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> lst<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>nth<span class=\"sy0\">-</span>forward<span class=\"sy0\">-</span>diff n xs<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> n <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      xs<br/>      <span class=\"br0\">(</span>nth<span class=\"sy0\">-</span>forward<span class=\"sy0\">-</span>diff <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                        <span class=\"br0\">(</span>forward<span class=\"sy0\">-</span>diff xs<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 33, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const func array integer: forwardDifference (in array integer: data) is func<br/>  result<br/>    var array integer: diffResult is 0 times 0;<br/>  local<br/>    var integer: index is 0;<br/>  begin<br/>    for index range 1 to pred(length(data)) do<br/>      diffResult &amp;:= -data[index] + data[succ(index)];<br/>    end for;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var array integer: data is [] (90, 47, 58, 29, 22, 32, 55, 5, 55, 73);<br/>    var integer: level is 0;<br/>    var integer: number is 0;<br/>    var boolean: firstElement is TRUE;<br/>  begin<br/>    for level range 0 to length(data) do<br/>      firstElement\u00a0:= TRUE;<br/>      for number range data do<br/>        if not firstElement then<br/>          write(\", \");<br/>        end if;<br/>        firstElement\u00a0:= FALSE;<br/>        write(number);<br/>      end for;<br/>      writeln;<br/>      data\u00a0:= forwardDifference(data);<br/>    end for;<br/>  end func;</pre>"}, {"lang": "SequenceL", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>forwardDifference(x(1), n)\u00a0:= forwardDifferenceHelper(x, n, [x]);<br/>\u00a0<br/>forwardDifferenceHelper(x(1), n, result(2))\u00a0:=<br/>\tlet<br/>\t\tdifference\u00a0:= tail(x) - x[1 ... size(x) - 1];<br/>\tin<br/>\tresult when n = 0 or size(x) = 1 else<br/>\tforwardDifferenceHelper(difference, n - 1, result ++ [difference]);<br/>\u00a0</pre>"}, {"lang": "Sidef", "loc": 15, "block": "<pre class=\"ruby highlighted_source\">func dif<span class=\"br0\">(</span>arr<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    gather <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> i <span class=\"br0\">(</span><span class=\"nu0\">0</span> ..^ arr.<span class=\"kw1\">end</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            take<span class=\"br0\">(</span>arr<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>func difn<span class=\"br0\">(</span>n, arr<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">{</span> arr = dif<span class=\"br0\">(</span>arr<span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"sy0\">*</span> n<br/>    arr<br/><span class=\"br0\">}</span><br/>\u00a0<br/>say dif<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">45</span>, <span class=\"nu0\">678</span><span class=\"br0\">]</span><span class=\"br0\">)</span>       <span class=\"co1\"># =&gt; [22, 22, 633]</span><br/>say difn<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">45</span>, <span class=\"nu0\">678</span><span class=\"br0\">]</span><span class=\"br0\">)</span>   <span class=\"co1\"># =&gt; [0, 611]</span></pre>"}, {"lang": "Slate", "loc": 17, "block": "<pre class=\"text highlighted_source\"><a class=\"__cf_email__\" data-cfemail=\"95e6d5\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>(Sequence traits) forwardDifference<br/>[<br/>  s allButFirst with: s allButLast collect: #- `er<br/>].<br/>\u00a0<br/><a class=\"__cf_email__\" data-cfemail=\"dead9e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>(Sequence traits) forwardDifference<br/>\"Without creating two intermediate throwaway Sequences.\"<br/>[<br/>  result\u00a0::= s allButFirst.<br/>  result doWithIndex: [|\u00a0:nextValue\u00a0:index | result at: index infect: [|\u00a0:oldValue | oldValue - (s at: index)].<br/>  result<br/>].<br/>\u00a0<br/><a class=\"__cf_email__\" data-cfemail=\"c1b281\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>(Sequence traits) forwardDifference: n<br/>[<br/>  (0 below: n) inject: s into: [|\u00a0:seq\u00a0:_ | seq forwardDifference]<br/>].</pre>"}, {"lang": "Smalltalk", "loc": 13, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">Array</span> extend <span class=\"br0\">[</span><br/>    <span class=\"re5\">difference</span> <span class=\"br0\">[</span><br/>        ^self allButFirst with: <span class=\"kw1\">self</span> allButLast collect: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">a</span>\u00a0:<span class=\"re5\">b</span> | a - <span class=\"re5\">b</span> <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/>\u00a0<br/>    nthOrderDifference: <span class=\"re5\">n</span> <span class=\"br0\">[</span><br/>        ^<span class=\"br0\">(</span><span class=\"re5\">1</span> to: <span class=\"re5\">n</span><span class=\"br0\">)</span> inject: <span class=\"kw1\">self</span> into: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">old</span>\u00a0:<span class=\"re5\">unused</span> | old difference <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"re6\">s</span> <span class=\"sy0\">:=</span> <span class=\"re2\">#<span class=\"br0\">(</span><span class=\"re5\">90</span> 47 58 29 22 32 55 5 55 73<span class=\"br0\">)</span></span><br/><span class=\"nu0\">1</span> to: <span class=\"re5\">s</span> size - <span class=\"re5\">1</span> do: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">i</span> |<br/>    <span class=\"br0\">(</span><span class=\"re5\">s</span> nthOrderDifference: <span class=\"re5\">i</span><span class=\"br0\">)</span> printNl <span class=\"br0\">]</span></pre>"}, {"lang": "SQL", "loc": 37, "block": "<pre class=\"sql highlighted_source\"><span class=\"kw1\">WITH</span> RECURSIVE<br/>T0 <span class=\"br0\">(</span>N<span class=\"sy0\">,</span> ITEM<span class=\"sy0\">,</span> LIST<span class=\"sy0\">,</span> NEW_LIST<span class=\"br0\">)</span> <span class=\"kw1\">AS</span><br/><span class=\"br0\">(</span><br/>    <span class=\"kw1\">SELECT</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>           <span class=\"kw1\">NULL</span><span class=\"sy0\">,</span> <br/>           <span class=\"st0\">'90,47,58,29,22,32,55,5,55,73'</span> <span class=\"sy0\">||</span> <span class=\"st0\">','</span><span class=\"sy0\">,</span><br/>           <span class=\"kw1\">NULL</span><br/>     <span class=\"kw1\">UNION</span> <span class=\"kw1\">ALL</span><br/>    <span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span><br/>               <span class=\"kw1\">WHEN</span> SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw1\">LENGTH</span><span class=\"br0\">(</span>LIST<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">''</span><br/>               <span class=\"kw1\">THEN</span> N <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>               <span class=\"kw1\">ELSE</span> N<br/>           <span class=\"kw1\">END</span><span class=\"sy0\">,</span><br/>           <span class=\"kw1\">CASE</span><br/>               <span class=\"kw1\">WHEN</span> SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw1\">LENGTH</span><span class=\"br0\">(</span>LIST<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">''</span><br/>               <span class=\"kw1\">THEN</span> SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>               <span class=\"kw1\">ELSE</span> <span class=\"kw1\">NULL</span><br/>           <span class=\"kw1\">END</span><span class=\"sy0\">,</span><br/>           <span class=\"kw1\">CASE</span><br/>               <span class=\"kw1\">WHEN</span> SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw1\">LENGTH</span><span class=\"br0\">(</span>LIST<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">''</span><br/>               <span class=\"kw1\">THEN</span> IFNULL<span class=\"br0\">(</span>NEW_LIST <span class=\"sy0\">||</span> <span class=\"br0\">(</span>SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> ITEM<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"st0\">','</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span><br/>               <span class=\"kw1\">ELSE</span> SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw1\">LENGTH</span><span class=\"br0\">(</span>LIST<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"kw1\">END</span><span class=\"sy0\">,</span><br/>           <span class=\"kw1\">CASE</span><br/>               <span class=\"kw1\">WHEN</span> SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw1\">LENGTH</span><span class=\"br0\">(</span>LIST<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">''</span><br/>               <span class=\"kw1\">THEN</span> IFNULL<span class=\"br0\">(</span>NEW_LIST<span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> IFNULL<span class=\"br0\">(</span><span class=\"br0\">(</span>SUBSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> ITEM<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"st0\">','</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span><br/>               <span class=\"kw1\">ELSE</span> <span class=\"kw1\">NULL</span><br/>           <span class=\"kw1\">END</span><br/>      <span class=\"kw1\">FROM</span> T0<br/>     <span class=\"kw1\">WHERE</span> INSTR<span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/><span class=\"br0\">)</span><br/><span class=\"kw1\">SELECT</span> N<span class=\"sy0\">,</span><br/>       <span class=\"kw1\">TRIM</span><span class=\"br0\">(</span>LIST<span class=\"sy0\">,</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> LIST<br/>  <span class=\"kw1\">FROM</span> T0<br/> <span class=\"kw1\">WHERE</span> NEW_LIST <span class=\"kw1\">IS</span> <span class=\"kw1\">NULL</span><br/>   <span class=\"kw1\">AND</span> LIST <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">''</span><br/> <span class=\"kw1\">ORDER</span> <span class=\"kw1\">BY</span> N;</pre>"}, {"lang": "Standard ML", "loc": 7, "block": "<pre class=\"text highlighted_source\">fun forward_difference xs = ListPair.map op- (tl xs, xs)<br/>\u00a0<br/>fun nth_forward_difference n xs =<br/>  if n = 0 then<br/>    xs<br/>  else<br/>    nth_forward_difference (n-1) (forward_difference xs)</pre>"}, {"lang": "Stata", "loc": 1, "block": "<pre class=\"text highlighted_source\">gen y=x[_n+1]-x[_n]</pre>"}, {"lang": "Tcl", "loc": 23, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> do_fwd_diff <span class=\"br0\">{</span><span class=\"kw2\">list</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> previous <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$list</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> new <span class=\"br0\">[</span><span class=\"kw2\">list</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">foreach</span> current <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$list</span> <span class=\"nu0\">1</span> end<span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">lappend</span> new <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$current</span> - <span class=\"re0\">$previous</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> previous <span class=\"re0\">$current</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$new</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> fwd_diff <span class=\"br0\">{</span><span class=\"kw2\">list</span> order<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"re0\">$order</span> <span class=\"sy0\">&gt;</span>= <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> <span class=\"kw2\">list</span> <span class=\"br0\">[</span>do_fwd_diff <span class=\"re0\">$list</span><span class=\"br0\">]</span><br/>        <span class=\"kw2\">incr</span> order -<span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$list</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">set</span> a <span class=\"br0\">{</span><span class=\"nu0\">90.5</span> <span class=\"nu0\">47</span> <span class=\"nu0\">58</span> <span class=\"nu0\">29</span> <span class=\"nu0\">22</span> <span class=\"nu0\">32</span> <span class=\"nu0\">55</span> <span class=\"nu0\">5</span> <span class=\"nu0\">55</span> <span class=\"nu0\">73.5</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> order <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$order</span> <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">10</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> order<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"%d<span class=\"es0\">\\t</span>%s\"</span> <span class=\"re0\">$order</span> <span class=\"br0\">[</span>fwd_diff <span class=\"re0\">$a</span> <span class=\"re0\">$order</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ursala", "loc": 5, "block": "<pre class=\"text highlighted_source\">#import std<br/>#import nat<br/>#import flo<br/>\u00a0<br/>nth_diff \"n\" = rep\"n\" minus*typ</pre>"}, {"lang": "Visual Basic .NET", "loc": 22, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"kw1\">Module</span> ForwardDifference<br/>\u00a0<br/>    <span class=\"kw1\">Sub</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> lNum <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">90</span>, <span class=\"nu0\">47</span>, <span class=\"nu0\">58</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">55</span>, <span class=\"nu0\">73</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw2\">UInteger</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">9</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw2\">String</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=JOIN+site:msdn.microsoft.com\"><span class=\"kw7\">Join</span></a><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, <span class=\"br0\">(</span><span class=\"kw5\">From</span> n <span class=\"kw1\">In</span> Difference<span class=\"br0\">(</span>i, lNum<span class=\"br0\">)</span> <span class=\"kw1\">Select</span> <span class=\"kw2\">String</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=FORMAT+site:msdn.microsoft.com\"><span class=\"kw7\">Format</span></a><span class=\"br0\">(</span><span class=\"st0\">\"{0,5}\"</span>, n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Next</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadKey</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>    <span class=\"kw1\">Private</span> <span class=\"kw1\">Function</span> Difference<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> Level <span class=\"kw1\">As</span> <span class=\"kw2\">UInteger</span>, <span class=\"kw1\">ByVal</span> Numbers <span class=\"kw1\">As</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> Level <span class=\"sy0\">&gt;=</span> Numbers<span class=\"sy0\">.</span><span class=\"me1\">Count</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Throw</span> <span class=\"kw1\">New</span> ArgumentOutOfRangeException<span class=\"br0\">(</span><span class=\"st0\">\"Level\"</span>, <span class=\"st0\">\"Level must be less than number of items in Numbers\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> Level<br/>            Numbers <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw5\">From</span> n <span class=\"kw1\">In</span> Enumerable<span class=\"sy0\">.</span><span class=\"me1\">Range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, Numbers<span class=\"sy0\">.</span><span class=\"me1\">Count</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> _<br/>                       <span class=\"kw1\">Select</span> Numbers<span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> Numbers<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToList</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Next</span><br/>\u00a0<br/>        <span class=\"kw1\">Return</span> Numbers<br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Module</span></pre>"}, {"lang": "Visual FoxPro", "loc": 39, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#DEFINE CTAB CHR(9)<br/>LOCAL lcList As String, i As Integer, n As Integer<br/>n = 10<br/>LOCAL ARRAY aa[n]<br/>CLEAR<br/>lcList = \"90,47,58,29,22,32,55,5,55,73\"<br/>FOR i = 1 TO n<br/>    aa[i] = VAL(GETWORDNUM(lcList, i, \",\"))<br/>ENDFOR<br/>ShowOutput(\"Original\", @aa)<br/>k = n - 1<br/>FOR i = 1 TO n - 1<br/>    ForwardDiff(@aa)<br/>    ShowOutput(\"Difference \" + TRANSFORM(i), @aa)<br/>ENDFOR<br/>\u00a0<br/>PROCEDURE ForwardDiff(a)<br/>LOCAL i As Integer, n As Integer<br/>n = ALEN(a)<br/>LOCAL ARRAY b[n-1]<br/>FOR i = 1 TO n - 1<br/>    b[i] = a[i+1] - a[i]<br/>ENDFOR<br/>DIMENSION a[n-1]<br/>ACOPY(b, a)<br/>ENDPROC <br/>\u00a0<br/>PROCEDURE ShowOutput(lcLabel, zz)<br/>LOCAL i As Integer, n As Integer, lcTxt As String<br/>n = ALEN(zz)<br/>lcTxt = lcLabel + \":\" + CTAB<br/>FOR i = 1 TO n<br/>    lcTxt = lcTxt + TRANSFORM(zz[i]) + CTAB<br/>ENDFOR<br/>lcTxt = LEFT(lcTxt, LEN(lcTxt) - 1)<br/>? lcTxt<br/>ENDPROC\t<br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 10, "block": "<pre class=\"text highlighted_source\">fcn forwardDiff(lst){<br/>   if(lst.len()&lt;2)<br/>      return(T);<br/>      return(T(lst[1]-lst[0]).extend(forwardDiff(lst[1,*])))<br/>}<br/>fcn nthForwardDiff(n,xs){<br/>   if(n==0)<br/>      return(xs);<br/>      return(nthForwardDiff(n-1,forwardDiff(xs))) // tail recursion<br/>}</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 14, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> DATA <span class=\"nu0\">9</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">4</span>,<span class=\"nu0\">7</span>,<span class=\"nu0\">4</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">0</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">LET</span> p=<span class=\"nu0\">1</span><br/><span class=\"nu0\">30</span> READ n: <span class=\"kw1\">DIM</span> b<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> n<br/><span class=\"nu0\">50</span> READ b<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">70</span> <span class=\"kw1\">FOR</span> j=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> p<br/><span class=\"nu0\">80</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> n-j<br/><span class=\"nu0\">90</span> <span class=\"kw1\">LET</span> b<span class=\"br0\">(</span>i<span class=\"br0\">)</span>=b<span class=\"br0\">(</span>i+<span class=\"nu0\">1</span><span class=\"br0\">)</span>-b<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"nu0\">100</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">110</span> <span class=\"kw1\">NEXT</span> j<br/><span class=\"nu0\">120</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> n-p<br/><span class=\"nu0\">130</span> <span class=\"kw1\">PRINT</span> b<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<span class=\"st0\">\" \"</span>;<br/><span class=\"nu0\">140</span> <span class=\"kw1\">NEXT</span> i</pre>"}]}