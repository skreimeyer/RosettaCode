{"task": "Man_or_boy_test", "blocks": [{"lang": "Ada", "loc": 36, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;  <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Man_Or_Boy <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">function</span> Zero <span class=\"kw1\">return</span> Integer <span class=\"kw1\">is</span> <span class=\"kw1\">begin</span> <span class=\"kw1\">return</span>  <span class=\"nu0\">0</span>; <span class=\"kw1\">end</span> Zero;<br/>   <span class=\"kw3\">function</span> One <span class=\"kw1\">return</span> Integer  <span class=\"kw1\">is</span> <span class=\"kw1\">begin</span> <span class=\"kw1\">return</span>  <span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> One;<br/>   <span class=\"kw3\">function</span> Neg <span class=\"kw1\">return</span> Integer  <span class=\"kw1\">is</span> <span class=\"kw1\">begin</span> <span class=\"kw1\">return</span> -<span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> Neg;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> A<br/>            <span class=\"br0\">(</span>  K\u00a0: Integer;<br/>               X1, X2, X3, X4, X5\u00a0: <span class=\"kw3\">access</span> <span class=\"kw3\">function</span> <span class=\"kw1\">return</span> Integer<br/>            <span class=\"br0\">)</span>  <span class=\"kw1\">return</span> Integer <span class=\"kw1\">is</span><br/>      M\u00a0: Integer\u00a0:= K; <span class=\"co1\">-- K is read-only in Ada. Here is a mutable copy of</span><br/>      <span class=\"kw3\">function</span> B <span class=\"kw1\">return</span> Integer <span class=\"kw1\">is</span><br/>      <span class=\"kw1\">begin</span><br/>         M\u00a0:= M - <span class=\"nu0\">1</span>;<br/>         <span class=\"kw1\">return</span> A <span class=\"br0\">(</span>M, B'<span class=\"kw3\">Access</span>, X1, X2, X3, X4<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> B;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> M &lt;= <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">return</span> X4.<span class=\"kw3\">all</span> + X5.<span class=\"kw3\">all</span>;<br/>      <span class=\"kw1\">else</span><br/>         <span class=\"kw1\">return</span> B;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> A;<br/><span class=\"kw1\">begin</span><br/>   Put_Line<br/>   <span class=\"br0\">(</span>  Integer'Image<br/>       <span class=\"br0\">(</span>  A<br/>          <span class=\"br0\">(</span>  <span class=\"nu0\">10</span>,<br/>             One'<span class=\"kw3\">Access</span>, <span class=\"co1\">-- Returns  1</span><br/>             Neg'<span class=\"kw3\">Access</span>, <span class=\"co1\">-- Returns -1</span><br/>             Neg'<span class=\"kw3\">Access</span>, <span class=\"co1\">-- Returns -1</span><br/>             One'<span class=\"kw3\">Access</span>, <span class=\"co1\">-- Returns  1</span><br/>             Zero'<span class=\"kw3\">Access</span> <span class=\"co1\">-- Returns  0</span><br/>   <span class=\"br0\">)</span>  <span class=\"br0\">)</span>  <span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Man_Or_Boy;</pre>"}, {"lang": "Aime", "loc": 52, "block": "<pre class=\"text highlighted_source\">integer<br/>F(list l)<br/>{<br/>    l[1];<br/>}<br/>\u00a0<br/>integer<br/>eval(list l)<br/>{<br/>    l[0](l);<br/>}<br/>\u00a0<br/>integer A(list);<br/>\u00a0<br/>integer<br/>B(list l)<br/>{<br/>    A(list(B, l[1] = l[1] - 1, l, l[-5], l[-4], l[-3], l[-2]));<br/>}<br/>\u00a0<br/>integer<br/>A(list l)<br/>{<br/>    integer x;<br/>\u00a0<br/>    if (l[1] &lt; 1) {<br/>        x = eval(l[-2]) + eval(l[-1]);<br/>    } else {<br/>        x = B(l);<br/>    }<br/>\u00a0<br/>    x;<br/>}<br/>\u00a0<br/>integer<br/>main(void)<br/>{<br/>    list f1, f0, fn1;<br/>\u00a0<br/>    l_append(f1, F);<br/>    l_append(f1, 1);<br/>\u00a0<br/>    l_append(f0, F);<br/>    l_append(f0, 0);<br/>\u00a0<br/>    l_append(fn1, F);<br/>    l_append(fn1, -1);<br/>\u00a0<br/>    o_(A(list(B, 10, f1, fn1, fn1, f1, f0)), \"\\n\");<br/>\u00a0<br/>    0;<br/>}</pre>"}, {"lang": "ALGOL 60 - Knuth's example", "loc": 1, "block": "<pre><b>begin</b>\n  <b>real</b> <b>procedure</b> A (k, x1, x2, x3, x4, x5);\n  <b>value</b> k; <b>integer</b> k;\n  <b>real</b> x1, x2, x3, x4, x5;\n  <b>begin</b>\n    <b>real</b> <b>procedure</b> B;\n    <b>begin</b> k:= k - 1;\n          B:= A\u00a0:= A (k, B, x1, x2, x3, x4)\n    <b>end</b>;\n    <b>if</b> k &lt;= 0 <b>then</b> A:= x4 + x5 <b>else</b> B\n  <b>end</b>;\n  outreal (A (10, 1, -1, -1, 1, 0))\n<b>end</b>\n</pre>"}, {"lang": "ALGOL 68", "loc": 9, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw4\">PROC</span> a <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> in k<span class=\"sy1\">,</span> <span class=\"kw4\">PROC</span> <span class=\"kw3\">INT</span> xl<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> x4<span class=\"sy1\">,</span> x5<span class=\"br0\">)</span> <span class=\"kw3\">INT</span><span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>  <span class=\"kw3\">INT</span> k <span class=\"sy1\">:=</span> in k<span class=\"sy1\">;</span><br/>  <span class=\"kw4\">PROC</span> b <span class=\"sy1\">=</span> <span class=\"kw3\">INT</span><span class=\"sy1\">:</span> a<span class=\"br0\">(</span>k<span class=\"sy1\">-:=</span>1<span class=\"sy1\">,</span> b<span class=\"sy1\">,</span> xl<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> x4<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"br0\">(</span> k<span class=\"sy1\">&lt;=</span>0 <span class=\"sy1\">|</span> x4 <span class=\"sy1\">+</span> x5 <span class=\"sy1\">|</span> b <span class=\"br0\">)</span> <br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>test<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/> <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$gl$<span class=\"sy1\">,</span>a<span class=\"br0\">(</span>10<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span><span class=\"sy1\">:</span>1<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span><span class=\"sy1\">:-</span>1<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span><span class=\"sy1\">:-</span>1<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span><span class=\"sy1\">:</span>1<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span><span class=\"sy1\">:</span>0<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "AppleScript", "loc": 21, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">on</span> a<span class=\"br0\">(</span>k, x1, x2, x3, x4, x5<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">script</span> b<br/>\t\t<span class=\"kw3\">set</span> k <span class=\"kw3\">to</span> k <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>\t\t<span class=\"kw3\">return</span> a<span class=\"br0\">(</span>k, b, x1, x2, x3, x4<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\t<span class=\"kw3\">if</span> k \u2264 <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>\t\t<span class=\"kw3\">return</span> <span class=\"br0\">(</span><span class=\"kw1\">run</span> x4<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">run</span> x5<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">else</span><br/>\t\t<span class=\"kw3\">return</span> <span class=\"br0\">(</span><span class=\"kw1\">run</span> b<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> a<br/>\u00a0<br/><span class=\"kw3\">on</span> int<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">script</span> s<br/>\t\t<span class=\"kw3\">return</span> x<br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\t<span class=\"kw3\">return</span> s<br/><span class=\"kw3\">end</span> int<br/>\u00a0<br/>a<span class=\"br0\">(</span><span class=\"nu0\">10</span>, int<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, int<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, int<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, int<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, int<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 25, "block": "<pre class=\"text highlighted_source\">      HIMEM = PAGE + 200000000\u00a0: REM Increase recursion depth<br/>\u00a0<br/>      FOR k% = 0 TO 20<br/>        PRINT FNA(k%, ^FN1(), ^FN_1(), ^FN_1(), ^FN1(), ^FN0())<br/>      NEXT<br/>      END<br/>\u00a0<br/>      DEF FNA(k%, x1%, x2%, x3%, x4%, x5%)<br/>      IF k% &lt;= 0 THEN = FN(x4%)(x4%) + FN(x5%)(x5%)<br/>      LOCAL b{}<br/>      DIM b{fn%, k%, x1%, x2%, x3%, x4%, x5%}<br/>      b.fn% =\u00a0!^FNB()<br/>      b.k%  = k%<br/>      b.x1% = x1%<br/>      b.x2% = x2%<br/>      b.x3% = x3%<br/>      b.x4% = x4%<br/>      b.x5% = x5%<br/>      DEF FNB(!(^b{}+4))<br/>      b.k% -= 1<br/>      = FNA(b.k%, b{}, b.x1%, b.x2%, b.x3%, b.x4%)<br/>\u00a0<br/>      DEF FN0(d%) = 0<br/>      DEF FN1(d%) = 1<br/>      DEF FN_1(d%) = -1</pre>"}, {"lang": "C", "loc": 43, "block": "<pre class=\"c highlighted_source\"><span class=\"coMULTI\">/* man-or-boy.c */</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"co1\">// --- thunks</span><br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> arg<br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span>       <span class=\"br0\">(</span><span class=\"sy0\">*</span>fn<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> arg<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span>        <span class=\"sy0\">*</span>k<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">struct</span> arg <span class=\"sy0\">*</span>x1<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>x2<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>x3<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>x4<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>x5<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> ARG<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">// --- lambdas</span><br/><span class=\"kw4\">int</span> f_1 <span class=\"br0\">(</span>ARG<span class=\"sy0\">*</span> _<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"kw4\">int</span> f0  <span class=\"br0\">(</span>ARG<span class=\"sy0\">*</span> _<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span>  <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"kw4\">int</span> f1  <span class=\"br0\">(</span>ARG<span class=\"sy0\">*</span> _<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// --- helper</span><br/><span class=\"kw4\">int</span> eval<span class=\"br0\">(</span>ARG<span class=\"sy0\">*</span> a<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> a<span class=\"sy0\">-&gt;</span>fn<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"co2\">#define MAKE_ARG(...) (&amp;(ARG){__VA_ARGS__})</span><br/><span class=\"co2\">#define FUN(...) MAKE_ARG(B, &amp;k, __VA_ARGS__)</span><br/>\u00a0<br/><span class=\"kw4\">int</span> A<span class=\"br0\">(</span>ARG<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">// --- functions</span><br/><span class=\"kw4\">int</span> B<span class=\"br0\">(</span>ARG<span class=\"sy0\">*</span> a<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>a<span class=\"sy0\">-&gt;</span>k <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> A<span class=\"br0\">(</span>FUN<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> a<span class=\"sy0\">-&gt;</span>x1<span class=\"sy0\">,</span> a<span class=\"sy0\">-&gt;</span>x2<span class=\"sy0\">,</span> a<span class=\"sy0\">-&gt;</span>x3<span class=\"sy0\">,</span> a<span class=\"sy0\">-&gt;</span>x4<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> A<span class=\"br0\">(</span>ARG<span class=\"sy0\">*</span> a<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <span class=\"sy0\">*</span>a<span class=\"sy0\">-&gt;</span>k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> eval<span class=\"br0\">(</span>a<span class=\"sy0\">-&gt;</span>x4<span class=\"br0\">)</span> <span class=\"sy0\">+</span> eval<span class=\"br0\">(</span>a<span class=\"sy0\">-&gt;</span>x5<span class=\"br0\">)</span> <span class=\"sy0\">:</span> B<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> argc<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>argv<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> argc <span class=\"sy0\">==</span> <span class=\"nu0\">2</span> <span class=\"sy0\">?</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strtol.html\"><span class=\"kw3\">strtol</span></a><span class=\"br0\">(</span>argv<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> A<span class=\"br0\">(</span>FUN<span class=\"br0\">(</span>MAKE_ARG<span class=\"br0\">(</span>f1<span class=\"br0\">)</span><span class=\"sy0\">,</span> MAKE_ARG<span class=\"br0\">(</span>f_1<span class=\"br0\">)</span><span class=\"sy0\">,</span> MAKE_ARG<span class=\"br0\">(</span>f_1<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                       MAKE_ARG<span class=\"br0\">(</span>f1<span class=\"br0\">)</span><span class=\"sy0\">,</span> MAKE_ARG<span class=\"br0\">(</span>f0<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 53, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;tr1/memory&gt;</span><br/><span class=\"kw2\">using</span> std<span class=\"sy4\">::</span><span class=\"me2\">tr1</span><span class=\"sy4\">::</span><span class=\"me2\">shared_ptr</span><span class=\"sy4\">;</span><br/><span class=\"kw2\">using</span> std<span class=\"sy4\">::</span><span class=\"me2\">tr1</span><span class=\"sy4\">::</span><span class=\"me2\">enable_shared_from_this</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Arg <span class=\"br0\">{</span><br/>  <span class=\"kw2\">virtual</span> <span class=\"kw4\">int</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>  <span class=\"kw2\">virtual</span> ~Arg<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> A<span class=\"br0\">(</span><span class=\"kw4\">int</span>, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span>, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span>, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span>,<br/>      shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span>, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> B <span class=\"sy4\">:</span> <span class=\"kw2\">public</span> Arg, <span class=\"kw2\">public</span> enable_shared_from_this<span class=\"sy1\">&lt;</span>B<span class=\"sy1\">&gt;</span> <span class=\"br0\">{</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>  <span class=\"kw4\">int</span> k<span class=\"sy4\">;</span><br/>  <span class=\"kw4\">const</span> shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> x1, x2, x3, x4<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>  B<span class=\"br0\">(</span><span class=\"kw4\">int</span> _k, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> _x1, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> _x2, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> _x3,<br/>    shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> _x4<span class=\"br0\">)</span><br/>    <span class=\"sy4\">:</span> k<span class=\"br0\">(</span>_k<span class=\"br0\">)</span>, x1<span class=\"br0\">(</span>_x1<span class=\"br0\">)</span>, x2<span class=\"br0\">(</span>_x2<span class=\"br0\">)</span>, x3<span class=\"br0\">(</span>_x3<span class=\"br0\">)</span>, x4<span class=\"br0\">(</span>_x4<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">int</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> A<span class=\"br0\">(</span><span class=\"sy2\">--</span>k, shared_from_this<span class=\"br0\">(</span><span class=\"br0\">)</span>, x1, x2, x3, x4<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Const <span class=\"sy4\">:</span> <span class=\"kw2\">public</span> Arg <span class=\"br0\">{</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>  <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> x<span class=\"sy4\">;</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>  Const<span class=\"br0\">(</span><span class=\"kw4\">int</span> _x<span class=\"br0\">)</span> <span class=\"sy4\">:</span> x<span class=\"br0\">(</span>_x<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">int</span> run <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> x<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> A<span class=\"br0\">(</span><span class=\"kw4\">int</span> k, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> x1, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> x2, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> x3,<br/>      shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> x4, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> x5<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>k <span class=\"sy1\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> x4<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">+</span> x5<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>run<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>    shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span> b<span class=\"br0\">(</span><span class=\"kw3\">new</span> B<span class=\"br0\">(</span>k, x1, x2, x3, x4<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> b<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>run<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> A<span class=\"br0\">(</span><span class=\"nu0\">10</span>, shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">new</span> Const<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>                 shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">new</span> Const<span class=\"br0\">(</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>                 shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">new</span> Const<span class=\"br0\">(</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>                 shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">new</span> Const<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>                 shared_ptr<span class=\"sy1\">&lt;</span>Arg<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">new</span> Const<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 24, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">delegate</span> T Func<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> ManOrBoy<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>A<span class=\"br0\">(</span><span class=\"nu0\">10</span>, C<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, C<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, C<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, C<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, C<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> C<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw4\">delegate</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> i<span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> A<span class=\"br0\">(</span><span class=\"kw4\">int</span> k, Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> x1, Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> x2, Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> x3, Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> x4, Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> x5<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> b <span class=\"sy0\">=</span> <span class=\"kw1\">null</span><span class=\"sy0\">;</span><br/>        b <span class=\"sy0\">=</span> <span class=\"kw4\">delegate</span> <span class=\"br0\">{</span> k<span class=\"sy0\">--;</span> <span class=\"kw1\">return</span> A<span class=\"br0\">(</span>k, b, x1, x2, x3, x4<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Clipper", "loc": 25, "block": "<pre class=\"text highlighted_source\">Procedure Main()<br/>   Local k<br/>   For k\u00a0:= 0 to 20<br/>     \u00a0? \"A(\", k, \", 1, -1, -1, 1, 0) =\", A(k, 1, -1, -1, 1, 0)<br/>   Next<br/>Return<br/>\u00a0<br/>Static Function A(k, x1, x2, x3, x4, x5)<br/>   Local ARetVal<br/>   Local B\u00a0:= {|| --k, ARetVal\u00a0:= A(k, B, x1, x2, x3, x4) }<br/>   If k &lt;= 0<br/>      ARetVal\u00a0:= Evaluate(x4) + Evaluate(x5)<br/>   Else<br/>      B:Eval()<br/>   Endif<br/>Return ARetVal<br/>\u00a0<br/>Static Function Evaluate(x)<br/>   Local xVal<br/>   If ValType(x) == \"B\"<br/>      xVal\u00a0:= x:Eval()<br/>   Else<br/>      xVal\u00a0:= x<br/>   Endif<br/>Return xVal</pre>"}, {"lang": "Clojure", "loc": 25, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>declare a<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defn man-or-boy<br/>  <span class=\"st0\">\"Man or boy test for Clojure\"</span><br/>  <span class=\"br0\">[</span>k<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>k <span class=\"br0\">(</span><span class=\"kw1\">atom</span> k<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>a k<br/>       <span class=\"br0\">(</span>fn <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>fn <span class=\"br0\">[</span><span class=\"br0\">]</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>fn <span class=\"br0\">[</span><span class=\"br0\">]</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>fn <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>fn <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defn a<br/>  <span class=\"br0\">[</span>k x1 x2 x3 x4 x5<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>k <span class=\"br0\">(</span><span class=\"kw1\">atom</span> @k<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>letfn <span class=\"br0\">[</span><span class=\"br0\">(</span>b <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>               <span class=\"br0\">(</span>swap<span class=\"sy0\">!</span> k dec<span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>a k b x1 x2 x3 x4<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> @k <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>x4<span class=\"br0\">)</span> <span class=\"br0\">(</span>x5<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>man-or-boy <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 16, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> man-or-boy <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/> <span class=\"br0\">(</span>a x <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> a <span class=\"br0\">(</span>k x1 x2 x3 x4 x5<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>labels <span class=\"br0\">(</span><span class=\"br0\">(</span>b <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>decf k<span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>a k #'b x1 x2 x3 x4<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> k <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>+ <span class=\"br0\">(</span><span class=\"kw1\">funcall</span> x4<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">funcall</span> x5<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>man-or-boy <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre>"}, {"lang": "Crystal", "loc": 7, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> a<span class=\"br0\">(</span>k, x1, x2, x3, x4, x5<span class=\"br0\">)</span><br/>  b = uninitialized <span class=\"sy0\">-&gt;</span> typeof<span class=\"br0\">(</span>k<span class=\"br0\">)</span><br/>  b = <span class=\"sy0\">-&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> k <span class=\"sy0\">-</span>= <span class=\"nu0\">1</span>; a<span class=\"br0\">(</span>k, b, x1, x2, x3, x4<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  k <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">0</span>\u00a0? x4.<span class=\"me1\">call</span> <span class=\"sy0\">+</span> x5.<span class=\"me1\">call</span>\u00a0: b.<span class=\"me1\">call</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> a<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 14, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> core.<span class=\"me1\">stdc</span>.<span class=\"me1\">stdio</span><span class=\"sy0\">:</span> printf<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> a<span class=\"br0\">(</span><span class=\"kw4\">int</span> k<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw2\">lazy</span> <span class=\"kw4\">int</span> x1<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw2\">lazy</span> <span class=\"kw4\">int</span> x2<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw2\">lazy</span> <span class=\"kw4\">int</span> x3<span class=\"sy0\">,</span><br/>      <span class=\"kw4\">const</span> <span class=\"kw2\">lazy</span> <span class=\"kw4\">int</span> x4<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw2\">lazy</span> <span class=\"kw4\">int</span> x5<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        k<span class=\"sy0\">--;</span><br/>        <span class=\"kw1\">return</span> a<span class=\"br0\">(</span>k<span class=\"sy0\">,</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> x4 <span class=\"sy0\">+</span> x5 <span class=\"sy0\">:</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    printf<span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> a<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 29, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">type</span><br/>  TFunc&lt;T&gt; <span class=\"sy3\">=</span> reference <span class=\"kw1\">to</span> <span class=\"kw1\">function</span><span class=\"sy1\">:</span> T<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> C<span class=\"br0\">(</span>x<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TFunc&lt;Integer&gt;<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw1\">function</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><br/>  <span class=\"kw1\">begin</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> A<span class=\"br0\">(</span>k<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span> x1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> x4<span class=\"sy1\">,</span> x5<span class=\"sy1\">:</span> TFunc&lt;Integer&gt;<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  b<span class=\"sy1\">:</span> TFunc&lt;Integer&gt;<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  b <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw1\">function</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><br/>  <span class=\"kw1\">begin</span><br/>    <span class=\"kw3\">Dec</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> A<span class=\"br0\">(</span>k<span class=\"sy1\">,</span> b<span class=\"sy1\">,</span> x1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> x4<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">if</span> k &lt;<span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x4 <span class=\"sy3\">+</span> x5<br/>  <span class=\"kw1\">else</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> b<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>A<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> C<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> C<span class=\"br0\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> C<span class=\"br0\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> C<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> C<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"co1\">// -67 output</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "D\u00e9j\u00e0 Vu", "loc": 13, "block": "<pre class=\"text highlighted_source\">a k x1 x2 x3 x4 x5:<br/>\tlocal b:<br/>\t\tset\u00a0:k -- k<br/>\t\ta k @b @x1 @x2 @x3 @x4<br/>\tif &lt;= k 0:<br/>\t\t+ x4 x5<br/>\telse:<br/>\t\tb<br/>local x i:<br/>\tlabda:<br/>\t\ti<br/>\u00a0<br/>!. a 10 x 1 x -1 x -1 x 1 x 0</pre>"}, {"lang": "Dylan", "loc": 27, "block": "<pre class=\"text highlighted_source\">define method a<br/>    (k\u00a0:: &lt;integer&gt;, x1\u00a0:: &lt;function&gt;, x2\u00a0:: &lt;function&gt;, x3\u00a0:: &lt;function&gt;,<br/>                     x4\u00a0:: &lt;function&gt;, x5\u00a0:: &lt;function&gt;)<br/> =&gt; (i\u00a0:: &lt;integer&gt;)<br/>\u00a0<br/>  local b() =&gt; (i\u00a0:: &lt;integer&gt;)<br/>    k\u00a0:= k - 1;<br/>    a(k, b, x1, x2, x3, x4)<br/>  end;<br/>\u00a0<br/>  if (k &lt;= 0) x4() + x5() else b() end if<br/>\u00a0<br/>end method a;<br/>\u00a0<br/>define method man-or-boy<br/>    (x\u00a0:: &lt;integer&gt;)<br/> =&gt; (i\u00a0:: &lt;integer&gt;)<br/>\u00a0<br/>  a(x, method()  1 end,<br/>       method() -1 end,<br/>       method() -1 end,<br/>       method()  1 end,<br/>       method()  0 end)<br/>\u00a0<br/>end method man-or-boy;<br/>\u00a0<br/>format-out(\"%d\\n\", man-or-boy(10))</pre>"}, {"lang": "E", "loc": 15, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> a<span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> k<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x1<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x2<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x3<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x4<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x5<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> bS<span class=\"sy0\">;</span> <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> <span class=\"sy0\">&amp;</span>b <span class=\"sy0\">:=</span> bS<br/>    <a href=\"http://wiki.erights.org/wiki/bind\"><span class=\"kw4\">bind</span></a> bS <span class=\"br0\">{</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> get<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            k <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><br/>            return a<span class=\"br0\">(</span>k<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x1<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x2<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x3<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>x4<span class=\"br0\">)</span>        <br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    return <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> x4 <span class=\"sy0\">+</span> x5 <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <span class=\"br0\">{</span> b <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> p <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> n <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> z <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/><a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>p<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>n<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>n<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>p<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>z<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "EchoLisp", "loc": 18, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"co1\">;; copied from Scheme</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>A k x1 x2 x3 x4 x5<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>B<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">set!</span> k <span class=\"br0\">(</span><span class=\"sy0\">-</span> k <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>A k B x1 x2 x3 x4<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> k <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>x4<span class=\"br0\">)</span> <span class=\"br0\">(</span>x5<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>B<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>A <span class=\"nu0\">10</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   \u2192 <span class=\"sy0\">-</span><span class=\"nu0\">67</span><br/><span class=\"br0\">(</span>A <span class=\"nu0\">13</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   \u2192 <span class=\"sy0\">-</span><span class=\"nu0\">642</span><br/><span class=\"br0\">(</span>A <span class=\"nu0\">14</span> ..<span class=\"br0\">)</span><br/>\u2757 InternalError\u00a0: too much recursion <span class=\"sy0\">-</span> JS internal error <span class=\"br0\">(</span>please, report it<span class=\"br0\">)</span><span class=\"sy0\">-</span><br/>   \u2192 stack overflow using FireFox<br/>\u00a0</pre>"}, {"lang": "Ela", "loc": 15, "block": "<pre class=\"text highlighted_source\">open monad io unsafe.cell unsafe.console<br/>\u00a0<br/>liftM2 f m1 m2 = do<br/>  x1 &lt;- m1<br/>  x2 &lt;- m2<br/>  return (f x1 x2)<br/>\u00a0<br/>a k x1 x2 x3 x4 x5 = do<br/>  r &lt;- return $ ref k<br/>  let b = &amp; do k &lt;- return $ pred (valueof r)<br/>             a k b x1 x2 x3 x4<br/>  if k &lt;= 0 then liftM2 (+) x4 x5 else b<br/>\u00a0<br/>_ = a 10 (!!1) (!! -1) (!! -1) (!!1) (!!0) &gt;&gt;= (putStr &lt;&lt; show)\u00a0::: IO<br/>  where (!!) f = &amp; return f\u00a0::: IO</pre>"}, {"lang": "Elena", "loc": 19, "block": "<pre class=\"text highlighted_source\">import extensions.<br/>\u00a0<br/>A = (:k:x1:x2:x3:x4:x5)<br/>[<br/>    var m\u00a0:= Integer new:k.<br/>    var b\u00a0:= [ m reduce:1. ^ A eval(m,closure,x1,x2,x3,x4) ].<br/>\u00a0<br/>    if (m int &lt;= 0)<br/>        [ ^ x4 eval + x5 eval. ];<br/>        [ ^ b eval. ].<br/>].<br/>\u00a0<br/>program =<br/>[<br/>    0 to:14 do(:n)<br/>    [<br/>        console printLine(A eval(n,[^1],[^-1],[^-1],[^1],[^0])).<br/>    ].<br/>].</pre>"}, {"lang": "Erlang", "loc": 1, "block": "<pre>kloop(K) -&gt;\n    receive\n        {decr,Pid} -&gt; Pid\u00a0! K-1, kloop(K-1);\n        _          -&gt; ok\n    end.\n \n \na(K, X1, X2, X3, X4, X5) -&gt;\n    Kproc = spawn(fun() -&gt; kloop(K) end),\n    B = fun (B) -&gt; \n                Kproc\u00a0! {decr, self()},\n                receive Kdecr -&gt;\n                        a(Kdecr, fun() -&gt; B(B) end, X1, X2, X3, X4)\n                end\n        end,\n    if\n        K =&lt; 0  -&gt; Kproc\u00a0! X4() + X5();\n        true    -&gt; Kproc\u00a0! B(B)\n    end.\n \n \nmanorboy(N) -&gt;                \n     a(N, fun() -&gt; 1 end, fun() -&gt; -1 end, fun() -&gt; -1 end, fun() -&gt; 1 end, fun() -&gt; 0 end ).\n</pre>"}, {"lang": "F#", "loc": 22, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main <span class=\"br0\">(</span>args\u00a0: <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> k <span class=\"sy0\">=</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span>args.<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">let</span> l x <span class=\"sy0\">=</span> <span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> x<br/>\u00a0<br/>    <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> a k x1 x2 x3 x4 x5 <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">if</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">let</span> k <span class=\"sy0\">=</span> <span class=\"kw4\">ref</span> k<br/>            <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>                k <span class=\"sy0\">:=</span> <span class=\"sy0\">!</span>k <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>                a <span class=\"sy0\">!</span>k b x1 x2 x3 x4<br/>            b<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    a k <span class=\"br0\">(</span>l <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>l <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>l <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>l <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>l <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">|&gt;</span> printfn <span class=\"st0\">\"%A\"</span><br/>\u00a0<br/>    <span class=\"nu0\">0</span><br/>\u00a0</pre>"}, {"lang": "Fantom", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>class ManOrBoy<br/>{<br/>  Void main()<br/>  {<br/>    echo(A(10, |-&gt;Int|{1}, |-&gt;Int|{-1}, |-&gt;Int|{-1}, |-&gt;Int|{1}, |-&gt;Int|{0}));<br/>  }<br/>\u00a0<br/>  static Int A(Int k, |-&gt;Int| x1, |-&gt;Int| x2, |-&gt;Int| x3, |-&gt;Int| x4, |-&gt;Int| x5)<br/>  {<br/>    |-&gt;Int|? b<br/>    b = |-&gt;Int| { k--; return A(k, b, x1, x2, x3, x4) }<br/>    return k &lt;= 0\u00a0? x4() + x5()\u00a0: b()<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 7, "block": "<pre class=\"text highlighted_source\">: A {: w^ k x1 x2 x3 xt: x4 xt: x5 | w^ B\u00a0:} recursive<br/>  k @ 0&lt;= IF  x4 x5 f+  ELSE<br/>    B k x1 x2 x3 action-of x4 [{: B k x1 x2 x3 x4\u00a0:}L<br/>      -1 k +!<br/>      k @ B @ x1 x2 x3 x4 A\u00a0;] dup B\u00a0!<br/>      execute  THEN\u00a0;<br/>10 [: 1e\u00a0;] [: -1e\u00a0;] 2dup swap [: 0e\u00a0;] A f. </pre>"}, {"lang": "Fortran", "loc": 56, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">module</span> man_or_boy<br/>\u00a0<br/><span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/>  <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> A<span class=\"br0\">(</span>k,x1,x2,x3,x4,x5<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">k</span><br/>    <span class=\"kw1\">interface</span><br/>      <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> x1<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>      <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> x2<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>      <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> x3<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>      <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>      <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">interface</span><br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">m</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> k &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      res <span class=\"sy0\">=</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>x5<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      m <span class=\"sy0\">=</span> k<br/>      res <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>  <span class=\"kw1\">contains</span><br/>\u00a0<br/>    <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span>    <br/>      m <span class=\"sy0\">=</span> m<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>      res <span class=\"sy0\">=</span> A<span class=\"br0\">(</span>m,B,x1,x2,x3,x4<span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> B<br/>\u00a0<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> A<br/>\u00a0<br/>\u00a0<br/>  <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> one<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>    res <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/>  <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> minus_one<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>    res <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/>  <span class=\"kw1\">recursive</span> <span class=\"kw3\">integer</span> <span class=\"kw1\">function</span> zero<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>    res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">module</span> man_or_boy<br/>\u00a0<br/><span class=\"kw1\">program</span> test<br/>  <span class=\"kw3\">use</span> man_or_boy<br/>  write <span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> A<span class=\"br0\">(</span><span class=\"nu0\">10</span>,one,minus_one,minus_one,one,zero<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> test</pre>"}, {"lang": "Go", "loc": 19, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> a<span class=\"sy1\">(</span>k <span class=\"kw4\">int</span><span class=\"sy1\">,</span> x1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> x4<span class=\"sy1\">,</span> x5 <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">var</span> b <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"kw4\">int</span><br/>\tb <span class=\"sy2\">=</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>\t\tk<span class=\"sy2\">--</span><br/>\t\t<span class=\"kw1\">return</span> a<span class=\"sy1\">(</span>k<span class=\"sy1\">,</span> b<span class=\"sy1\">,</span> x1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> x4<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">if</span> k &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> x4<span class=\"sy1\">()</span> <span class=\"sy3\">+</span> x5<span class=\"sy1\">()</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> b<span class=\"sy1\">()</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tx <span class=\"sy2\">:=</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"nu2\">i</span> <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"nu2\">i</span> <span class=\"sy1\">}</span> <span class=\"sy1\">}</span><br/>\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>a<span class=\"sy1\">(</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> x<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">),</span> x<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">),</span> x<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">),</span> x<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">),</span> x<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">)))</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Gosu", "loc": 10, "block": "<pre class=\"text highlighted_source\">function A(in_k: int, x1(): int, x2(): int, x3(): int, x4(): int, x5(): int): int  {<br/>    var k = in_k<br/>    var B(): int  // B is a function variable<br/>    B = \\ -&gt; {<br/>        k = k-1;<br/>        return A(k, B, x1, x2, x3, x4)<br/>    }<br/>    return k&lt;=0\u00a0? x4()+x5()\u00a0: B()<br/>}<br/>print(A(10, \\ -&gt; 1, \\ -&gt; -1, \\ -&gt; -1, \\ -&gt; 1, \\ -&gt; 0))</pre>"}, {"lang": "Groovy", "loc": 8, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> a<span class=\"sy0\">;</span> a <span class=\"sy0\">=</span> <span class=\"br0\">{</span> k, x1, x2, x3, x4, x5 <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> b<span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        a <span class=\"br0\">(</span><span class=\"sy0\">--</span>k, b, x1, x2, x3, x4<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span>\u00a0: b<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> x <span class=\"sy0\">=</span> <span class=\"br0\">{</span> n <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span> it <span class=\"sy0\">-&gt;</span> n <span class=\"br0\">}</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 11, "block": "<pre class=\"haskell highlighted_source\"> <span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><br/> <span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>IORef<br/>\u00a0<br/> a k x1 x2 x3 x4 x5 <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> r <span class=\"sy0\">&lt;-</span> newIORef k<br/>                         <span class=\"kw1\">let</span> b <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> k <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pred\"><span class=\"kw3\">pred</span></a> <span class=\"sy0\">!</span>r<br/>                                    a k b x1 x2 x3 x4<br/>                         <span class=\"kw1\">if</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> liftM2 <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span> x4 x5 <span class=\"kw1\">else</span> b<br/>     <span class=\"kw1\">where</span> f <span class=\"sy0\">!</span>r <span class=\"sy0\">=</span> modifyIORef r f <span class=\"sy0\">&gt;&gt;</span> readIORef r<br/>\u00a0<br/> main <span class=\"sy0\">=</span> a <span class=\"nu0\">10</span> #<span class=\"nu0\">1</span> #<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> #<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> #<span class=\"nu0\">1</span> #<span class=\"nu0\">0</span> <span class=\"sy0\">&gt;&gt;=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a><br/>     <span class=\"kw1\">where</span> <span class=\"br0\">(</span>#<span class=\"br0\">)</span> f <span class=\"sy0\">=</span> f <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a></pre>"}, {"lang": "Icon and Unicon", "loc": 23, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">record</span> mutable<span class=\"br0\">(</span>value<span class=\"br0\">)</span>                                         <span class=\"co1\"># we need mutable integers</span><br/>                                                              <span class=\"co1\"># ... be obvious when we break normal scope rules</span><br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>arglist<span class=\"br0\">)</span>                                       <span class=\"co1\"># supply the initial k value</span><br/>k <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span>arglist<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">|</span><span class=\"nu0\">10</span>                                   <span class=\"co1\"># .. or default to 10=default</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Man or Boy = \"</span><span class=\"sy1\">,</span> A<span class=\"br0\">(</span> k<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> eval<span class=\"br0\">(</span>ref<span class=\"br0\">)</span>                                           <span class=\"co1\"># evaluator to distinguish between a simple value and a code reference</span><br/><span class=\"kw1\">return</span> <span class=\"kw1\">if</span> <span class=\"kw4\">type</span><span class=\"br0\">(</span>ref<span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"st0\">\"co-expression\"</span> <span class=\"kw1\">then</span> <span class=\"sy1\">@</span>ref  <span class=\"kw1\">else</span> ref<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> A<span class=\"br0\">(</span>k<span class=\"sy1\">,</span>x1<span class=\"sy1\">,</span>x2<span class=\"sy1\">,</span>x3<span class=\"sy1\">,</span>x4<span class=\"sy1\">,</span>x5<span class=\"br0\">)</span>                                 <span class=\"co1\"># Knuth's A</span><br/>k <span class=\"sy1\">:=</span> mutable<span class=\"br0\">(</span>k<span class=\"br0\">)</span>                                               <span class=\"co1\"># make k mutable for B</span><br/><span class=\"kw1\">return</span> <span class=\"kw1\">if</span> k<span class=\"sy1\">.</span><span class=\"me1\">value</span> <span class=\"sy1\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span>                                   <span class=\"co1\"># -&gt; boy compilers may recurse and die here</span><br/>   eval<span class=\"br0\">(</span>x4<span class=\"br0\">)</span> <span class=\"sy1\">+</span> eval<span class=\"br0\">(</span>x5<span class=\"br0\">)</span>                                        <span class=\"co1\"># the crux of separating man .v. boy compilers</span><br/><span class=\"kw1\">else</span>                                                          <span class=\"co1\"># -&gt; boy compilers can run into trouble at k=5+</span><br/>   B<span class=\"br0\">(</span>k<span class=\"sy1\">,</span>x1<span class=\"sy1\">,</span>x2<span class=\"sy1\">,</span>x3<span class=\"sy1\">,</span>x4<span class=\"sy1\">,</span>x5<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> B<span class=\"br0\">(</span>k<span class=\"sy1\">,</span>x1<span class=\"sy1\">,</span>x2<span class=\"sy1\">,</span>x3<span class=\"sy1\">,</span>x4<span class=\"sy1\">,</span>x5<span class=\"br0\">)</span>                                 <span class=\"co1\"># Knuth's B</span><br/>k<span class=\"sy1\">.</span><span class=\"me1\">value</span> <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span>                                                 <span class=\"co1\"># diddle A's copy of k</span><br/><span class=\"kw1\">return</span> A<span class=\"br0\">(</span>k<span class=\"sy1\">.</span><span class=\"me1\">value</span><span class=\"sy1\">,</span> <span class=\"kw1\">create</span> <span class=\"sy1\">|</span>B<span class=\"br0\">(</span>k<span class=\"sy1\">,</span>x1<span class=\"sy1\">,</span>x2<span class=\"sy1\">,</span>x3<span class=\"sy1\">,</span>x4<span class=\"sy1\">,</span>x5<span class=\"br0\">)</span><span class=\"sy1\">,</span>x1<span class=\"sy1\">,</span>x2<span class=\"sy1\">,</span>x3<span class=\"sy1\">,</span>x4<span class=\"br0\">)</span>    <span class=\"co1\"># call A with a new k and 5 x's</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Io", "loc": 14, "block": "<pre class=\"io highlighted_source\">Range<br/>\u00a0<br/>a\u00a0:= <span class=\"kw2\">method</span><span class=\"br0\">(</span>k, xs, <br/>    b\u00a0:= <span class=\"kw2\">block</span><span class=\"br0\">(</span><br/>        k = k -<span class=\"nu0\">1</span><br/>        a<span class=\"br0\">(</span>k, <span class=\"kw2\">list</span><span class=\"br0\">(</span>b, xs slice<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span> flatten<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>k <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">0</span>,<br/>        <span class=\"br0\">(</span>xs at<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> call<span class=\"br0\">)</span> + <span class=\"br0\">(</span>xs at<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> call<span class=\"br0\">)</span>,<br/>        b call<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>f\u00a0:= <span class=\"kw2\">method</span><span class=\"br0\">(</span>x, <span class=\"kw2\">block</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"nu0\">1</span> to<span class=\"br0\">(</span><span class=\"nu0\">500</span><span class=\"br0\">)</span> <span class=\"kw1\">foreach</span><span class=\"br0\">(</span>k,<br/>    <span class=\"br0\">(</span>k .. <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"kw2\">print</span><br/>    a<span class=\"br0\">(</span>k, <span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, -<span class=\"nu0\">1</span>, -<span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw3\">map</span> <span class=\"br0\">(</span>x, f<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> println<span class=\"br0\">)</span></pre>"}, {"lang": "J", "loc": 13, "block": "<pre class=\"j highlighted_source\">A=:<span class=\"nu0\">4</span>\u00a0:<span class=\"nu0\">0</span><br/>  L=.cocreate<span class=\"st_h\">''</span>  <span class=\"co1\">NB. L is context where names are defined.</span><br/>  k__L=:<span class=\"kw2\">x</span><br/>  <span class=\"st_h\">'`x1__L x2__L x3__L x4__L x5__L'</span>=:<span class=\"kw2\">y</span><br/>  if.k__L&lt;:<span class=\"nu0\">0</span> do.a__L=:<span class=\"sy0\">(</span>x4__L + x5__L<span class=\"sy0\">)</span>f.<span class=\"st_h\">''</span> <span class=\"kw1\">else.</span> L B <span class=\"st_h\">''</span> <span class=\"kw1\">end.</span><br/>  <span class=\"sy0\">(</span>coerase L<span class=\"sy0\">)</span>]]]a__L<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>B=:<span class=\"nu0\">4</span>\u00a0:<span class=\"nu0\">0</span><br/>  L=.<span class=\"kw2\">x</span><br/>  k__L=:k__L-<span class=\"nu0\">1</span><br/>  a__L=:k__L A L&amp;B`<span class=\"sy0\">(</span>x1__L f.<span class=\"sy0\">)</span>`<span class=\"sy0\">(</span>x2__L f.<span class=\"sy0\">)</span>`<span class=\"sy0\">(</span>x3__L f.<span class=\"sy0\">)</span>`<span class=\"sy0\">(</span>x4__L f.<span class=\"sy0\">)</span><br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 21, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.function.DoubleSupplier</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> ManOrBoy <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> A<span class=\"br0\">(</span><span class=\"kw4\">int</span> k, DoubleSupplier x1, DoubleSupplier x2,<br/>                 DoubleSupplier x3, DoubleSupplier x4, DoubleSupplier x5<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>        DoubleSupplier B <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> DoubleSupplier<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> m <span class=\"sy0\">=</span> k<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> getAsDouble<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">return</span> A<span class=\"br0\">(</span><span class=\"sy0\">--</span>m, <span class=\"kw1\">this</span>, x1, x2, x3, x4<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> x4.<span class=\"me1\">getAsDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5.<span class=\"me1\">getAsDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> B.<span class=\"me1\">getAsDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>A<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1.0</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1.0</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 15, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> a<span class=\"br0\">(</span>k<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"sy0\">,</span> x5<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    k <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> a<span class=\"br0\">(</span>k<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span>k <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// this uses lambda wrappers around the numeric arguments</span><br/><span class=\"kw1\">function</span> x<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw1\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> n<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>alert<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Julia", "loc": 6, "block": "<pre class=\"text highlighted_source\">function a(k, x1, x2, x3, x4, x5)<br/>  b = ()-&gt; a(k-=1, b, x1, x2, x3, x4);<br/>  k &lt;= 0\u00a0? (x4() + x5())\u00a0: b();<br/>end<br/>\u00a0<br/>println(a(10, ()-&gt;1, ()-&gt;-1,  ()-&gt;-1, ()-&gt;1, ()-&gt;0));</pre>"}, {"lang": "Kotlin", "loc": 17, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.3</span><br/>\u00a0<br/>typealias Func <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> -<span class=\"sy0\">&gt;</span> Int<br/>\u00a0<br/>fun a<span class=\"br0\">(</span>k<span class=\"sy0\">:</span> Int, x1<span class=\"sy0\">:</span> Func, x2<span class=\"sy0\">:</span> Func, x3<span class=\"sy0\">:</span> Func, x4<span class=\"sy0\">:</span> Func, x5<span class=\"sy0\">:</span> Func<span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> kk <span class=\"sy0\">=</span> k<br/>    fun b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> a<span class=\"br0\">(</span>--kk, <span class=\"sy0\">::</span>b, x1, x2, x3, x4<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>kk <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> + x5<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> b<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span> <br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\" k  a\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>k in <span class=\"nu0\">0</span>..<span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"${\"</span><span class=\"sy0\">%</span>2d<span class=\"st0\">\".format(k)}: ${a(k, { 1 }, { -1 }, { -1 }, { 1 }, { 0 })}\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span>  <br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Lox", "loc": 18, "block": "<pre class=\"text highlighted_source\">fun A (k, xa, xb, xc, xd, xe) {<br/>    print k;<br/>    fun B() {<br/>        k = k - 1;<br/>        return A(k, B, xa, xb, xc, xd);<br/>    }<br/>    if (k &lt;= 0) {<br/>        return xd() + xe();<br/>    } else {<br/>        return B();<br/>    }<br/>}<br/>\u00a0<br/>fun I0()  { return  0; }<br/>fun I1()  { return  1; }<br/>fun I_1() { return -1; }<br/>\u00a0<br/>print A(10, I1, I_1, I_1, I1, I0);</pre>"}, {"lang": "Lua", "loc": 15, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> a<span class=\"br0\">(</span>k<span class=\"sy0\">,</span>x1<span class=\"sy0\">,</span>x2<span class=\"sy0\">,</span>x3<span class=\"sy0\">,</span>x4<span class=\"sy0\">,</span>x5<span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> <span class=\"kw1\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    k <span class=\"sy0\">=</span> k <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">return</span> a<span class=\"br0\">(</span>k<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>x1<span class=\"sy0\">,</span>x2<span class=\"sy0\">,</span>x3<span class=\"sy0\">,</span>x4<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>   <span class=\"kw1\">if</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">else</span> <span class=\"kw1\">return</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> K<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> n<br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> K<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> K<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> K<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> K<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> K<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre>$RecursionLimit = 1665; (* anything less fails for k0 = 10 *)\n\na[k0_, x1_, x2_, x3_, x4_, x5_]\u00a0:= Module[{k, b },\n  k = k0;\n  b = (k--; a[k, b, x1, x2, x3, x4]) &amp;;\n  If[k &lt;= 0, x4[] + x5[], b[]]]\n</pre>"}, {"lang": "Modula-3", "loc": 29, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> Main;<br/><span class=\"kw1\">IMPORT</span> IO;<br/>\u00a0<br/><span class=\"kw1\">TYPE</span> Function <span class=\"sy0\">=</span> <span class=\"kw1\">PROCEDURE</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw4\">INTEGER</span>;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> A<span class=\"br0\">(</span>k<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>; x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"sy0\">,</span> x5<span class=\"sy0\">:</span> Function<span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy0\">=</span><br/>\u00a0<br/>  <span class=\"kw1\">PROCEDURE</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw3\">DEC</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">RETURN</span> A<span class=\"br0\">(</span>k<span class=\"sy0\">,</span> B<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">END</span> B;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  <span class=\"kw1\">IF</span> k &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    <span class=\"kw1\">RETURN</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">ELSE</span><br/>    <span class=\"kw1\">RETURN</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">END</span>;<br/><span class=\"kw1\">END</span> A;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> F0<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy0\">=</span> <span class=\"kw1\">BEGIN</span> <span class=\"kw1\">RETURN</span> <span class=\"nu0\">0</span>; <span class=\"kw1\">END</span> F0;<br/><span class=\"kw1\">PROCEDURE</span> F1<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy0\">=</span> <span class=\"kw1\">BEGIN</span> <span class=\"kw1\">RETURN</span> <span class=\"nu0\">1</span>; <span class=\"kw1\">END</span> F1;<br/><span class=\"kw1\">PROCEDURE</span> Fn1<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy0\">=</span> <span class=\"kw1\">BEGIN</span> <span class=\"kw1\">RETURN</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>; <span class=\"kw1\">END</span> Fn1;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  IO.<span class=\"me1\">PutInt</span><span class=\"br0\">(</span>A<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> F1<span class=\"sy0\">,</span> Fn1<span class=\"sy0\">,</span> Fn1<span class=\"sy0\">,</span> F1<span class=\"sy0\">,</span> F0<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> Main.</pre>"}, {"lang": "Nim", "loc": 11, "block": "<pre class=\"text highlighted_source\">import future<br/>\u00a0<br/>proc a(k: int; x1, x2, x3, x4, x5: proc(): int): int =<br/>  var k = k<br/>  proc b(): int =<br/>    dec k<br/>    a(k, b, x1, x2, x3, x4)<br/>  if k &lt;= 0: x4() + x5()<br/>  else: b()<br/>\u00a0<br/>echo a(10, () =&gt; 1, () =&gt; -1, () =&gt; -1, () =&gt; 1, () =&gt; 0)</pre>"}, {"lang": "Objective-C", "loc": 25, "block": "<pre class=\"objc highlighted_source\"><span class=\"co1\">#import &lt;Foundation/Foundation.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> NSInteger <span class=\"br0\">(</span><span class=\"sy0\">^</span>IntegerBlock<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>NSInteger A <span class=\"br0\">(</span>NSInteger kParam, IntegerBlock x1, IntegerBlock x2, IntegerBlock x3, IntegerBlock x4, IntegerBlock x5<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    __block NSInteger k <span class=\"sy0\">=</span> kParam;<br/>    __block __weak IntegerBlock weak_B;<br/>    IntegerBlock B;<br/>    weak_B <span class=\"sy0\">=</span> B <span class=\"sy0\">=</span> <span class=\"sy0\">^</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> A<span class=\"br0\">(</span><span class=\"sy0\">--</span>k, weak_B, x1, x2, x3, x4<span class=\"br0\">)</span>;<br/>    <span class=\"br0\">}</span>;<br/>    <span class=\"kw1\">return</span> k &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\u00a0? x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>IntegerBlock K <span class=\"br0\">(</span>NSInteger n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy0\">^</span><span class=\"br0\">{</span><span class=\"kw1\">return</span> n;<span class=\"br0\">}</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main <span class=\"br0\">(</span><span class=\"kw4\">int</span> argc, <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    @autoreleasepool <span class=\"br0\">{</span><br/>        NSInteger result <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">10</span>, K<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, K<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, K<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, K<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, K<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>        NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%d<span class=\"es0\">\\n</span>\"</span>, result<span class=\"br0\">)</span>;<br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Objeck", "loc": 45, "block": "<pre class=\"objeck highlighted_source\">interface Arg <span class=\"br0\">{</span><br/>  <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">virtual</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Run<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Int</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">class</span> ManOrBoy <span class=\"br0\">{</span><br/>  New<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> A<span class=\"br0\">(</span>mb <span class=\"sy0\">:</span> ManOrBoy<span class=\"sy0\">,</span> k <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">,</span> x1 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">,</span> x2 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">,</span> x3 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">,</span> x4 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">,</span> x5 <span class=\"sy0\">:</span> Arg<span class=\"br0\">)</span> ~ <span class=\"kw2\">Int</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> x4<span class=\"sy0\">-&gt;</span><span class=\"me1\">Run</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"sy0\">-&gt;</span><span class=\"me1\">Run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> Base<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span>mb<span class=\"sy0\">,</span> k<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"br0\">)</span> implements Arg <span class=\"br0\">{</span><br/>      @mb <span class=\"sy0\">:</span> ManOrBoy<span class=\"sy0\">;</span> @k <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">;</span> @x1 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">;</span> @x2 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">;</span> @x3 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">;</span> @x4 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">;</span> @m <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      New<span class=\"br0\">(</span>mb <span class=\"sy0\">:</span> ManOrBoy<span class=\"sy0\">,</span> k <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">,</span> x1 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">,</span> x2 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">,</span> x3 <span class=\"sy0\">:</span> Arg<span class=\"sy0\">,</span> x4 <span class=\"sy0\">:</span> Arg<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        @mb <span class=\"sy0\">:=</span> mb<span class=\"sy0\">;</span> @k <span class=\"sy0\">:=</span> k<span class=\"sy0\">;</span> @x1 <span class=\"sy0\">:=</span> x1<span class=\"sy0\">;</span> @x2 <span class=\"sy0\">:=</span> x2<span class=\"sy0\">;</span> @x3 <span class=\"sy0\">:=</span> x3<span class=\"sy0\">;</span> @x4 <span class=\"sy0\">:=</span> x4<span class=\"sy0\">;</span> @m <span class=\"sy0\">:=</span> @k<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>\u00a0<br/>      <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Run<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Int</span> <span class=\"br0\">{</span><br/>        @m <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> @mb<span class=\"sy0\">-&gt;</span><span class=\"me1\">A</span><span class=\"br0\">(</span>@mb<span class=\"sy0\">,</span> @m<span class=\"sy0\">,</span> @self<span class=\"sy0\">,</span> @x1<span class=\"sy0\">,</span> @x2<span class=\"sy0\">,</span> @x3<span class=\"sy0\">,</span> @x4<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> C<span class=\"br0\">(</span>i <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"br0\">)</span> ~ Arg <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> Base<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> implements Arg <span class=\"br0\">{</span><br/>      @i <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">;</span><br/>      New<span class=\"br0\">(</span>i <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        @i <span class=\"sy0\">:=</span> i<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>\u00a0<br/>      <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Run<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Int</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> @i<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    mb <span class=\"sy0\">:=</span> ManOrBoy<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    mb<span class=\"sy0\">-&gt;</span><span class=\"me1\">A</span><span class=\"br0\">(</span>mb<span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> C<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> C<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> C<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> C<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> C<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 13, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> a k x1 x2 x3 x4 x5 <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">if</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>    x4 <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5 <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw1\">let</span> m <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> k <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> b <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALdecr\"><span class=\"kw3\">decr</span></a> m<span class=\"sy0\">;</span><br/>      a <span class=\"sy0\">!</span>m b x1 x2 x3 x4<br/>    <span class=\"kw1\">in</span><br/>    b <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%d\\n\"</span> <span class=\"br0\">(</span>a <span class=\"nu0\">10</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Oz", "loc": 21, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">A</span> K X1 X2 X3 X4 X5<span class=\"br0\">}</span><br/>     ReturnA = <span class=\"br0\">{</span>NewCell undefined<span class=\"br0\">}</span><br/>     <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">B</span><span class=\"br0\">}</span><br/>        ReturnB = <span class=\"br0\">{</span>NewCell undefined<span class=\"br0\">}</span><br/>     <span class=\"kw1\">in</span><br/>        K <span class=\"sy0\">:=</span> <span class=\"sy0\">@</span>K <span class=\"sy0\">-</span> 1<br/>        ReturnA <span class=\"sy0\">:=</span> <span class=\"br0\">{</span>A <span class=\"br0\">{</span>NewCell <span class=\"sy0\">@</span>K<span class=\"br0\">}</span> B X1 X2 X3 X4<span class=\"br0\">}</span><br/>        ReturnB <span class=\"sy0\">:=</span> <span class=\"sy0\">@</span>ReturnA<br/>        <span class=\"sy0\">@</span>ReturnB<br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"kw1\">if</span> <span class=\"sy0\">@</span>K <span class=\"sy0\">=&lt;</span> 0 <span class=\"kw1\">then</span> ReturnA <span class=\"sy0\">:=</span> <span class=\"br0\">{</span>X4<span class=\"br0\">}</span> <span class=\"sy0\">+</span> <span class=\"br0\">{</span>X5<span class=\"br0\">}</span> <span class=\"kw1\">else</span> _ = <span class=\"br0\">{</span>B<span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/>     <span class=\"sy0\">@</span>ReturnA<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">C</span> V<span class=\"br0\">}</span><br/>     <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span><span class=\"br0\">}</span> V <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>A <span class=\"br0\">{</span>NewCell 10<span class=\"br0\">}</span> <span class=\"br0\">{</span>C 1<span class=\"br0\">}</span> <span class=\"br0\">{</span>C <span class=\"sy0\">~</span>1<span class=\"br0\">}</span> <span class=\"br0\">{</span>C <span class=\"sy0\">~</span>1<span class=\"br0\">}</span> <span class=\"br0\">{</span>C 1<span class=\"br0\">}</span> <span class=\"br0\">{</span>C 0<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "Pascal", "loc": 25, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> manorboy<span class=\"br0\">(</span>output<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> zero<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span> <span class=\"kw1\">begin</span> zero <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">function</span> one<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span> <span class=\"kw1\">begin</span> one <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">function</span> negone<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span> <span class=\"kw1\">begin</span> negone <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> A<span class=\"br0\">(</span><br/>  k<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">function</span> x1<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">function</span> x2<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">function</span> x3<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">function</span> x4<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">function</span> x5<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><br/><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> B<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">begin</span> k <span class=\"sy1\">:</span><span class=\"sy3\">=</span> k <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>        B <span class=\"sy1\">:</span><span class=\"sy3\">=</span> A<span class=\"br0\">(</span>k<span class=\"sy1\">,</span> B<span class=\"sy1\">,</span> x1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> x4<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span> <span class=\"kw1\">if</span> k &lt;<span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> A <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x4 <span class=\"sy3\">+</span> x5 <span class=\"kw1\">else</span> A <span class=\"sy1\">:</span><span class=\"sy3\">=</span> B<br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span> <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>A<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> one<span class=\"sy1\">,</span> negone<span class=\"sy1\">,</span> negone<span class=\"sy1\">,</span> one<span class=\"sy1\">,</span> zero<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 8, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> A <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$x1</span><span class=\"sy0\">,</span> <span class=\"re0\">$x2</span><span class=\"sy0\">,</span> <span class=\"re0\">$x3</span><span class=\"sy0\">,</span> <span class=\"re0\">$x4</span><span class=\"sy0\">,</span> <span class=\"re0\">$x5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span><span class=\"br0\">(</span><span class=\"re0\">$B</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$B</span> <span class=\"sy0\">=</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span> A<span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$B</span><span class=\"sy0\">,</span> <span class=\"re0\">$x1</span><span class=\"sy0\">,</span> <span class=\"re0\">$x2</span><span class=\"sy0\">,</span> <span class=\"re0\">$x3</span><span class=\"sy0\">,</span> <span class=\"re0\">$x4</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$k</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"re0\">&amp;$x4</span> <span class=\"sy0\">+</span> <span class=\"re0\">&amp;$x5</span> <span class=\"sy0\">:</span> <span class=\"re0\">&amp;$B</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> A<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"kw2\">sub</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"kw2\">sub</span><span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"kw2\">sub</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"kw2\">sub</span><span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 7, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> A<span class=\"br0\">(</span><span class=\"re0\">$k</span> <span class=\"kw1\">is</span> copy<span class=\"sy0\">,</span> <span class=\"re0\">&amp;x1</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x2</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x3</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x4</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$k</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><br/>        <span class=\"sy0\">??</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">!!</span> <span class=\"br0\">(</span><span class=\"kw1\">my</span> <span class=\"re0\">&amp;B</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> A<span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;B</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x1</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x2</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x3</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;x4</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> A<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 22, "block": "<pre class=\"text highlighted_source\">forward function A(integer k, object x1, x2, x3, x4, x5)<br/>\u00a0<br/>function B(sequence s)<br/>    object {kptr,x1,x2,x3,x4} = s<br/>    integer k = peek4s(kptr)-1<br/>    poke4(kptr,k)<br/>    return A(k,{kptr,x1,x2,x3,x4},x1,x2,x3,x4)<br/>end function<br/>\u00a0<br/>function A(integer k, object x1, x2, x3, x4, x5)<br/>    if k&lt;=0 then<br/>        return iff(sequence(x4)?B(x4):x4)+<br/>               iff(sequence(x5)?B(x5):x5)<br/>    end if<br/>    atom kptr = allocate(4,1)<br/>    poke4(kptr,k)<br/>    return B({kptr,x1,x2,x3,x4})<br/>end function<br/>\u00a0<br/>for k=0 to 10 do<br/>   \u00a0?{\"k=\",k,A(k,1,-1,-1,1,0)}<br/>end for</pre>"}, {"lang": "PHP", "loc": 14, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw2\">function</span> A<span class=\"br0\">(</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span><span class=\"re0\">$x1</span><span class=\"sy0\">,</span><span class=\"re0\">$x2</span><span class=\"sy0\">,</span><span class=\"re0\">$x3</span><span class=\"sy0\">,</span><span class=\"re0\">$x4</span><span class=\"sy0\">,</span><span class=\"re0\">$x5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"kw2\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw2\">use</span> <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span><span class=\"re0\">$b</span><span class=\"sy0\">,&amp;</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span><span class=\"re0\">$x1</span><span class=\"sy0\">,</span><span class=\"re0\">$x2</span><span class=\"sy0\">,</span><span class=\"re0\">$x3</span><span class=\"sy0\">,</span><span class=\"re0\">$x4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> A<span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span><span class=\"re0\">$b</span><span class=\"sy0\">,</span><span class=\"re0\">$x1</span><span class=\"sy0\">,</span><span class=\"re0\">$x2</span><span class=\"sy0\">,</span><span class=\"re0\">$x3</span><span class=\"sy0\">,</span><span class=\"re0\">$x4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$k</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span>\u00a0? <span class=\"re0\">$x4</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x5</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"re0\">$b</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span>  <br/>\u00a0<br/><span class=\"kw1\">echo</span> A<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"kw2\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>           <span class=\"kw2\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>           <span class=\"kw2\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>           <span class=\"kw2\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <br/>           <span class=\"kw2\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span>  <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 8, "block": "<pre class=\"text highlighted_source\">(de a (K X1 X2 X3 X4 X5)<br/>   (let (@K (cons K)  B (cons))  # Explicit frame<br/>      (set B<br/>         (curry (@K B X1 X2 X3 X4) ()<br/>            (a (dec @K) (car B) X1 X2 X3 X4) ) )<br/>      (if (gt0 (car @K)) ((car B)) (+ (X4) (X5))) ) )<br/>\u00a0<br/>(a 10 '(() 1) '(() -1) '(() -1) '(() 1) '(() 0))</pre>"}, {"lang": "PL/I", "loc": 1, "block": "<pre>morb: proc options (main) reorder;\n dcl sysprint file;\n\n put skip list(a((10), lambda1, lambdam1, lambdam1, lambda0, lambda0));\n\n a: proc(k, x1, x2, x3, x4, x5) returns(fixed bin (31)) recursive;\n   dcl k                    fixed bin (31);\n   dcl (x1, x2, x3, x4, x5) entry returns(fixed bin (31));\n\n   b: proc returns(fixed bin(31)) recursive;\n     k = k - 1;\n     return(a((k), b, x1, x2, x3, x4));\n   end b;\n\n   if k &lt;= 0 then\n     return(x4 + x5); \n   else\n     return(b);\n end a;\n\n lambdam1: proc returns(fixed bin (31)); return(-1); end lambdam1;\n lambda0:  proc returns(fixed bin (31)); return(1);  end lambda0;\n lambda1:  proc returns(fixed bin (31)); return(1);  end lambda1;\nend morb;\n</pre>"}, {"lang": "Pop11", "loc": 1, "block": "<pre>define A(k, x1, x2, x3, x4, x5);\n    define B();\n        k - 1 -&gt; k;\n        A(k, B, x1, x2, x3, x4)\n    enddefine;\n    if k &lt;= 0 then\n        x4() + x5()\n    else\n        B()\n    endif\nenddefine;\n\ndefine one(); 1 enddefine;\ndefine minus_one(); -1 enddefine;\ndefine zero(); 0 enddefine;\nA(10, one, minus_one, minus_one, one, zero) =&gt;\n</pre>"}, {"lang": "Python", "loc": 14, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#!/usr/bin/env python</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span><br/><span class=\"kw3\">sys</span>.<span class=\"me1\">setrecursionlimit</span><span class=\"br0\">(</span><span class=\"nu0\">1025</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> a<span class=\"br0\">(</span>in_k<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"sy0\">,</span> x5<span class=\"br0\">)</span>:<br/>    k <span class=\"sy0\">=</span> <span class=\"br0\">[</span>in_k<span class=\"br0\">]</span><br/>    <span class=\"kw1\">def</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>        k<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> -<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">return</span> a<span class=\"br0\">(</span>k<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> x4<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> x4<span class=\"br0\">(</span><span class=\"br0\">)</span> + x5<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> k<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>x <span class=\"sy0\">=</span> <span class=\"kw1\">lambda</span> i: <span class=\"kw1\">lambda</span>: i<br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\u00a0</pre>"}, {"lang": "R", "loc": 8, "block": "<pre class=\"text highlighted_source\">n &lt;- function(x) function()x<br/>\u00a0<br/>A &lt;- function(k, x1, x2, x3, x4, x5) {<br/>  B &lt;- function() A(k &lt;&lt;- k-1, B, x1, x2, x3, x4)<br/>  if (k &lt;= 0) x4() + x5() else B()<br/>}<br/>\u00a0<br/>A(10, n(1), n(-1), n(-1), n(1), n(0))</pre>"}, {"lang": "Racket", "loc": 11, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>\u00a0<br/>(define (A k x1 x2 x3 x4 x5)<br/>  (define (B)<br/>    (set! k (- k 1))<br/>    (A k B x1 x2 x3 x4))<br/>  (if (&lt;= k 0)<br/>      (+ (x4) (x5))<br/>      (B)))<br/>\u00a0<br/>(A 10 (lambda () 1) (lambda () -1) (lambda () -1) (lambda () 1) (lambda () 0))</pre>"}, {"lang": "REXX", "loc": 17, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program performs the  \"man or boy\"  test as far as possible for  N.              */</span><br/>     <span class=\"kw1\">do</span> n=<span class=\"nu0\">0</span>                                      <span class=\"coMULTI\">/*increment  N  from  zero  forever.   */</span><br/>     <span class=\"kw1\">say</span> <span class=\"st0\">'n='</span>n   a<span class=\"br0\">(</span>N,x1,x2,x3,x4,x5<span class=\"br0\">)</span>             <span class=\"coMULTI\">/*display the result to the terminal.  */</span><br/>     <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*n*/</span>                                  <span class=\"coMULTI\">/* [\u2191]  do until something breaks.     */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>a:   <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> k, x1, x2, x3, x4, x5<br/>     <span class=\"kw1\">if</span> k<span class=\"sy0\">&lt;</span>=<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> f<span class=\"br0\">(</span>x4<span class=\"br0\">)</span> + f<span class=\"br0\">(</span>x5<span class=\"br0\">)</span><br/>              <span class=\"kw3\">else</span> <span class=\"kw1\">return</span> f<span class=\"br0\">(</span>b<span class=\"br0\">)</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>b:   k=k-<span class=\"nu0\">1</span>;                            <span class=\"kw1\">return</span>  a<span class=\"br0\">(</span>k, b, x1, x2, x3, x4<span class=\"br0\">)</span><br/>f:   <span class=\"kw1\">interpret</span>  <span class=\"st0\">'v='</span>  <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"st0\">\"()\"</span>;      <span class=\"kw1\">return</span>  v<br/>x1:  <span class=\"kw1\">procedure</span>;                        <span class=\"kw1\">return</span>  <span class=\"nu0\">1</span><br/>x2:  <span class=\"kw1\">procedure</span>;                        <span class=\"kw1\">return</span> -<span class=\"nu0\">1</span><br/>x3:  <span class=\"kw1\">procedure</span>;                        <span class=\"kw1\">return</span> -<span class=\"nu0\">1</span><br/>x4:  <span class=\"kw1\">procedure</span>;                        <span class=\"kw1\">return</span>  <span class=\"nu0\">1</span><br/>x5:  <span class=\"kw1\">procedure</span>;                        <span class=\"kw1\">return</span>  <span class=\"nu0\">0</span></pre>"}, {"lang": "Ruby", "loc": 6, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> a<span class=\"br0\">(</span>k, x1, x2, x3, x4, x5<span class=\"br0\">)</span><br/>  b = <span class=\"kw3\">lambda</span> <span class=\"br0\">{</span> k <span class=\"sy0\">-</span>= <span class=\"nu0\">1</span>; a<span class=\"br0\">(</span>k, b, x1, x2, x3, x4<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  k <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">0</span>\u00a0? x4<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">[</span><span class=\"br0\">]</span>\u00a0: b<span class=\"br0\">[</span><span class=\"br0\">]</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> a<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"kw3\">lambda</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"kw3\">lambda</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"kw3\">lambda</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"kw3\">lambda</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"kw3\">lambda</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">)</span></pre>"}, {"lang": "Rust", "loc": 39, "block": "<pre class=\"text highlighted_source\">use std::cell::Cell;<br/>\u00a0<br/>trait Arg {<br/>    fn run(&amp;self) -&gt; i32;<br/>}<br/>\u00a0<br/>impl Arg for i32 {<br/>    fn run(&amp;self) -&gt; i32 { *self }<br/>}<br/>\u00a0<br/>struct B&lt;'a&gt; {<br/>    k: &amp;'a Cell&lt;i32&gt;,<br/>    x1: &amp;'a Arg,<br/>    x2: &amp;'a Arg,<br/>    x3: &amp;'a Arg,<br/>    x4: &amp;'a Arg,<br/>}<br/>\u00a0<br/>impl&lt;'a&gt; Arg for B&lt;'a&gt; {<br/>    fn run(&amp;self) -&gt; i32 {<br/>        self.k.set(self.k.get() - 1);<br/>        a(self.k.get(), self, self.x1, self.x2, self.x3, self.x4)<br/>    }<br/>}<br/>\u00a0<br/>fn a(k: i32, x1: &amp;Arg, x2: &amp;Arg, x3: &amp;Arg, x4: &amp;Arg, x5: &amp;Arg) -&gt; i32 {<br/>    if k &lt;= 0 {<br/>        x4.run() + x5.run()<br/>    } else {<br/>        B{<br/>            k: &amp;Cell::new(k),<br/>            x1, x2, x3, x4<br/>        }.run()<br/>    }<br/>}<br/>\u00a0<br/>pub fn main() {<br/>    println!(\"{}\", a(10, &amp;1, &amp;-1, &amp;-1, &amp;1, &amp;0));<br/>}</pre>"}, {"lang": "Scala", "loc": 9, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> A<span class=\"br0\">(</span>in<span class=\"sy0\">_</span>k<span class=\"sy0\">:</span> Int, x1<span class=\"sy0\">:</span> <span class=\"sy0\">=&gt;</span>Int, x2<span class=\"sy0\">:</span> <span class=\"sy0\">=&gt;</span>Int, x3<span class=\"sy0\">:</span> <span class=\"sy0\">=&gt;</span>Int, x4<span class=\"sy0\">:</span> <span class=\"sy0\">=&gt;</span>Int, x5<span class=\"sy0\">:</span> <span class=\"sy0\">=&gt;</span>Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> k <span class=\"sy0\">=</span> in<span class=\"sy0\">_</span>k<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> B<span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        k <span class=\"sy0\">=</span> k-<span class=\"nu0\">1</span><br/>        A<span class=\"br0\">(</span>k, B, x1, x2, x3, x4<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>k<span class=\"sy0\">&lt;=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> x4+x5 <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> B<br/><span class=\"br0\">}</span><br/>println<span class=\"br0\">(</span>A<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">1</span>, -<span class=\"nu0\">1</span>, -<span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Sidef", "loc": 5, "block": "<pre class=\"ruby highlighted_source\">func a<span class=\"br0\">(</span>k, x1, x2, x3, x4, x5<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    func b <span class=\"br0\">{</span> a<span class=\"br0\">(</span><span class=\"sy0\">--</span>k, b, x1, x2, x3, x4<span class=\"br0\">)</span> <span class=\"br0\">}</span>;<br/>    k <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">0</span>\u00a0? <span class=\"br0\">(</span>x4<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x5<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: b<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/><span class=\"br0\">}</span><br/>say a<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">)</span>;      <span class=\"co1\">#=&gt; -67</span></pre>"}, {"lang": "Snap!", "loc": 9, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>A k x1 x2 x3 x4 x5<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>B<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">set!</span> k <span class=\"br0\">(</span><span class=\"sy0\">-</span> k <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>A k B x1 x2 x3 x4<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> k <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>x4<span class=\"br0\">)</span> <span class=\"br0\">(</span>x5<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>B<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>A <span class=\"nu0\">10</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Scheme", "loc": 9, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>A k x1 x2 x3 x4 x5<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>B<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">set!</span> k <span class=\"br0\">(</span><span class=\"sy0\">-</span> k <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>A k B x1 x2 x3 x4<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> k <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>x4<span class=\"br0\">)</span> <span class=\"br0\">(</span>x5<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>B<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>A <span class=\"nu0\">10</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Smalltalk", "loc": 1, "block": "<pre>Number&gt;&gt;x1: x1 x2: x2 x3: x3 x4: x4 x5: x5\n   | b k |\n   k\u00a0:= self.\n   b\u00a0:= [ k\u00a0:= k - 1. k x1: b x2: x1 x3: x2 x4: x3 x5: x4 ].\n   ^k &lt;= 0 ifTrue: [ x4 value + x5 value ] ifFalse: b\n\n10 x1: [1] x2: [-1] x3: [-1] x4: [1] x5: [0]\n</pre>"}, {"lang": "Sparkling", "loc": 16, "block": "<pre class=\"text highlighted_source\">function a(k, x1, x2, x3, x4, x5) {<br/>\tlet kk = { \"k\": k.k };<br/>\tlet b = function b() {<br/>\t\tkk.k--;<br/>\t\treturn a(kk, b, x1, x2, x3, x4);<br/>\t};<br/>\treturn kk.k &lt;= 0\u00a0? x4() + x5()\u00a0: b();<br/>}<br/>\u00a0<br/>function x(n) {<br/>\treturn function () {<br/>\t\treturn n;<br/>\t};<br/>}<br/>\u00a0<br/>print(a({ \"k\": 10 }, x(1), x(-1), x(-1), x(1), x(0)));</pre>"}, {"lang": "Standard ML", "loc": 15, "block": "<pre class=\"text highlighted_source\">fun a (k, x1, x2, x3, x4, x5) =<br/>  if k &lt;= 0 then<br/>    x4 () + x5 ()<br/>  else let<br/>    val m = ref k<br/>    fun b () = (<br/>      m\u00a0:=\u00a0!m - 1;<br/>      a (!m, b, x1, x2, x3, x4)<br/>    )<br/>  in<br/>    b ()<br/>  end<br/>\u00a0<br/>val () =<br/>  print (Int.toString (a (10, fn () =&gt; 1, fn () =&gt; ~1, fn () =&gt; ~1, fn () =&gt; 1, fn () =&gt; 0)) ^ \"\\n\")</pre>"}, {"lang": "Swift", "loc": 21, "block": "<pre class=\"text highlighted_source\">func A(_ k: Int,                          <br/>       _ x1: @escaping () -&gt; Int,         <br/>       _ x2: @escaping () -&gt; Int,         <br/>       _ x3: @escaping () -&gt; Int,         <br/>       _ x4: @escaping () -&gt; Int,         <br/>       _ x5: @escaping () -&gt; Int) -&gt; Int {<br/>    var k1 = k                            <br/>\u00a0<br/>    func B() -&gt; Int {                     <br/>        k1 -= 1                           <br/>        return A(k1, B, x1, x2, x3, x4)   <br/>    }                                     <br/>\u00a0<br/>    if k1 &lt;= 0 {                          <br/>        return x4() + x5()                <br/>    } else {                              <br/>        return B()                        <br/>    }                                     <br/>}                                         <br/>\u00a0<br/>print(A(10, {1}, {-1}, {-1}, {1}, {0}))</pre>"}, {"lang": "Tcl", "loc": 11, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> A <span class=\"br0\">{</span>k x1 x2 x3 x4 x5<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$k</span><span class=\"sy0\">&lt;</span>=<span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"br0\">[</span><span class=\"kw1\">eval</span> <span class=\"re0\">$x4</span><span class=\"br0\">]</span>+<span class=\"br0\">[</span><span class=\"kw1\">eval</span> <span class=\"re0\">$x5</span><span class=\"br0\">]</span>\u00a0: <span class=\"br0\">[</span>B \\#<span class=\"br0\">[</span><span class=\"kw2\">info</span> level<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">proc</span> B <span class=\"br0\">{</span>level<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">upvar</span> <span class=\"re0\">$level</span> k k x1 x1 x2 x2 x3 x3 x4 x4<br/>    <span class=\"kw2\">incr</span> k -<span class=\"nu0\">1</span><br/>    A <span class=\"re0\">$k</span> <span class=\"br0\">[</span><span class=\"kw2\">info</span> level <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"re0\">$x1</span> <span class=\"re0\">$x2</span> <span class=\"re0\">$x3</span> <span class=\"re0\">$x4</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">proc</span> C <span class=\"br0\">{</span>val<span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"re0\">$val</span><span class=\"br0\">}</span><br/><span class=\"kw2\">interp</span> recursionlimit <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"nu0\">1157</span><br/>A <span class=\"nu0\">10</span> <span class=\"br0\">{</span>C <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>C -<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>C -<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>C <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>C <span class=\"nu0\">0</span><span class=\"br0\">}</span></pre>"}, {"lang": "TSQL", "loc": 145, "block": "<pre class=\"tsql highlighted_source\">\u00a0<br/><span class=\"kw1\">CREATE</span> <span class=\"kw1\">PROCEDURE</span> dbo.<span class=\"me1\">LAMBDA_WRAP_INTEGER</span><br/>\u00a0<br/>\t@v <span class=\"kw1\">INT</span><br/>\u00a0<br/><span class=\"kw1\">AS</span><br/>\t<span class=\"kw1\">DECLARE</span>\t@name <span class=\"kw1\">NVARCHAR</span><span class=\"br0\">(</span><span class=\"kw2\">MAX</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">'LAMBDA_'</span> <span class=\"sy0\">+</span> <span class=\"kw2\">UPPER</span><span class=\"br0\">(</span><span class=\"kw2\">REPLACE</span><span class=\"br0\">(</span>NEWID<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"st0\">'-'</span>, <span class=\"st0\">'_'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">DECLARE</span> @<span class=\"kw1\">SQL</span> <span class=\"kw1\">NVARCHAR</span><span class=\"br0\">(</span><span class=\"kw2\">MAX</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<br/>\t\t\tCREATE PROCEDURE dbo.'</span> <span class=\"sy0\">+</span> @name <span class=\"sy0\">+</span> <span class=\"st0\">'<br/>\t\t\t\tAS <br/>\u00a0<br/>\t\t\tRETURN '</span> <span class=\"sy0\">+</span> <span class=\"kw1\">CAST</span><span class=\"br0\">(</span>@v <span class=\"kw1\">AS</span> <span class=\"kw1\">NVARCHAR</span><span class=\"br0\">(</span><span class=\"kw2\">MAX</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">EXEC</span><span class=\"br0\">(</span>@<span class=\"kw1\">SQL</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">RETURN</span> <span class=\"kw2\">OBJECT_ID</span><span class=\"br0\">(</span>@name<span class=\"br0\">)</span><br/>GO<br/>\u00a0<br/><span class=\"kw1\">CREATE</span> <span class=\"kw1\">PROCEDURE</span> dbo.<span class=\"me1\">LAMBDA_EXEC</span><br/>\t@id <span class=\"kw1\">INT</span><br/>\u00a0<br/><span class=\"kw1\">AS</span><br/>\t<span class=\"kw1\">DECLARE</span> @name SYSNAME <span class=\"sy0\">=</span> <span class=\"kw2\">OBJECT_NAME</span><span class=\"br0\">(</span>@id<span class=\"br0\">)</span><br/>\t,\t@retval <span class=\"kw1\">INT</span><br/>\t<span class=\"kw1\">EXEC</span>\t@retval <span class=\"sy0\">=</span> @name<br/>\t<span class=\"kw1\">RETURN</span>\t@retval<br/>GO<br/>\u00a0<br/><span class=\"co1\">-- B-procedure</span><br/><span class=\"kw1\">CREATE</span> <span class=\"kw1\">PROCEDURE</span> dbo.<span class=\"me1\">LAMBDA_B</span><br/>\t@name_out SYSNAME <span class=\"kw1\">OUTPUT</span><br/>,\t@q <span class=\"kw1\">INT</span><br/><span class=\"kw1\">AS</span><br/><span class=\"kw1\">BEGIN</span><br/>\u00a0<br/>\t<span class=\"kw1\">DECLARE</span>\t@<span class=\"kw1\">SQL</span> <span class=\"kw1\">NVARCHAR</span><span class=\"br0\">(</span><span class=\"kw2\">MAX</span><span class=\"br0\">)</span><br/>\t,\t@name <span class=\"kw1\">NVARCHAR</span><span class=\"br0\">(</span><span class=\"kw2\">MAX</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">'LAMBDA_B_'</span> <span class=\"sy0\">+</span> <span class=\"kw2\">UPPER</span><span class=\"br0\">(</span><span class=\"kw2\">REPLACE</span><span class=\"br0\">(</span>NEWID<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"st0\">'-'</span>, <span class=\"st0\">'_'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">SELECT</span>\t@<span class=\"kw1\">SQL</span> <span class=\"sy0\">=</span> N<span class=\"st0\">'<br/>\t\tCREATE PROCEDURE dbo.'</span> <span class=\"sy0\">+</span> @name <span class=\"sy0\">+</span> N<span class=\"st0\">'<br/>\u00a0<br/>\t\t\tAS <br/>\u00a0<br/>\t\tDECLARE @retval INT, @k INT, @x1 INT, @x2 INT, @x3 INT, @x4 INT<br/>\u00a0<br/>\t\tSELECT\t@k = k - 1, @x1 = x1, @x2 = x2,\t@x3 = x3, @x4 = x4<br/>\t\tFROM\t#t_args t<br/>\t\tWHERE\tt.i = '</span> <span class=\"sy0\">+</span> <span class=\"kw1\">CAST</span><span class=\"br0\">(</span>@q <span class=\"kw1\">AS</span> <span class=\"kw1\">NVARCHAR</span><span class=\"br0\">(</span><span class=\"kw2\">MAX</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">'<br/>\u00a0<br/>\t\tUPDATE\tt<br/>\t\tSET\tk = k -1<br/>\t\tFROM\t#t_args t<br/>\t\tWHERE\tt.i = '</span> <span class=\"sy0\">+</span> <span class=\"kw1\">CAST</span><span class=\"br0\">(</span>@q <span class=\"kw1\">AS</span> <span class=\"kw1\">NVARCHAR</span><span class=\"br0\">(</span><span class=\"kw2\">MAX</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">'<br/>\u00a0<br/>\t\tEXEC\t@retval = LAMBDA_A @k, @@PROCID, @x1, @x2, @x3, @x4<br/>\t\tRETURN @retval'</span><br/>\t<span class=\"kw1\">EXEC</span><span class=\"br0\">(</span>@<span class=\"kw1\">SQL</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">SELECT</span>\t@name_out <span class=\"sy0\">=</span> @name<br/><span class=\"kw1\">END</span><br/>\u00a0<br/>GO<br/><span class=\"co1\">-- A-procedure</span><br/><span class=\"kw1\">CREATE</span> <span class=\"kw1\">PROCEDURE</span> dbo.<span class=\"me1\">LAMBDA_A</span> <br/><span class=\"br0\">(</span><br/>\u00a0<br/>\t@k <span class=\"kw1\">INT</span><br/>,\t@x1 <span class=\"kw1\">INT</span><br/>,\t@x2 <span class=\"kw1\">INT</span><br/>,\t@x3 <span class=\"kw1\">INT</span><br/>,\t@x4 <span class=\"kw1\">INT</span><br/>,\t@x5 <span class=\"kw1\">INT</span><br/><span class=\"br0\">)</span><br/><span class=\"kw1\">AS</span><br/>\t<span class=\"kw1\">SET</span> <span class=\"kw1\">NOCOUNT</span> <span class=\"kw1\">ON</span>;<br/>\t<span class=\"kw1\">DECLARE</span> @res1 <span class=\"kw1\">INT</span><br/>\t,\t@res2 <span class=\"kw1\">INT</span><br/>\t,\t@Name SYSNAME<br/>\t,\t@q <span class=\"kw1\">INT</span><br/>\u00a0<br/>\t<span class=\"co1\">-- First add the arguments to the \"stack\"</span><br/>\t<span class=\"kw1\">INSERT</span> <span class=\"kw1\">INTO</span> #t_args <span class=\"br0\">(</span>k,\tx1, x2, x3, x4, x5<br/>\t<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">SELECT</span>\t@k, @x1, @x2, @x3, @x4, @x5<br/>\u00a0<br/>\t<span class=\"kw1\">SELECT</span>\t@q <span class=\"sy0\">=</span> <span class=\"kw2\">SCOPE_IDENTITY</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">IF</span> @k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">BEGIN</span><br/>\t\t<span class=\"kw1\">EXEC</span>\t@res1 <span class=\"sy0\">=</span> dbo.<span class=\"me1\">LAMBDA_EXEC</span> @x4<br/>\t\t<span class=\"kw1\">EXEC</span>\t@res2 <span class=\"sy0\">=</span> dbo.<span class=\"me1\">LAMBDA_EXEC</span> @x5<br/>\t\t<span class=\"kw1\">RETURN</span>\t@res1 <span class=\"sy0\">+</span> @res2<br/>\t<span class=\"kw1\">END</span><br/>\t<span class=\"kw1\">ELSE</span><br/>\t<span class=\"kw1\">BEGIN</span><br/>\t\t<span class=\"kw1\">EXEC</span>\tdbo.<span class=\"me1\">LAMBDA_B</span> @name_out <span class=\"sy0\">=</span> @Name <span class=\"kw1\">OUTPUT</span>, @q <span class=\"sy0\">=</span> @q<br/>\t\t<span class=\"kw1\">EXEC</span>\t@res1 <span class=\"sy0\">=</span> @Name<br/>\t\t<span class=\"kw1\">RETURN</span>\t@res1<br/>\t<span class=\"kw1\">END</span><br/>\u00a0<br/>GO<br/>\u00a0<br/><span class=\"co1\">-------------------------------------------------------------</span><br/><span class=\"co1\">-- Test script</span><br/><span class=\"co1\">-------------------------------------------------------------</span><br/>\u00a0<br/><span class=\"kw1\">DECLARE</span>\t@x1 <span class=\"kw1\">INT</span><br/>,\t@x2 <span class=\"kw1\">INT</span><br/>,\t@x0 <span class=\"kw1\">INT</span><br/>,\t@x4 <span class=\"kw1\">INT</span><br/>,\t@x5 <span class=\"kw1\">INT</span><br/>,\t@K <span class=\"kw1\">INT</span><br/>,\t@retval <span class=\"kw1\">INT</span><br/>\u00a0<br/><span class=\"co1\">-------------------------------------------------------------</span><br/><span class=\"co1\">-- Create wrapped integers to pass as arguments</span><br/><span class=\"co1\">-------------------------------------------------------------</span><br/><span class=\"kw1\">EXEC</span>\t@x1 <span class=\"sy0\">=</span> LAMBDA_WRAP_<span class=\"sy0\">IN</span>TEGER <span class=\"nu0\">1</span><br/><span class=\"kw1\">EXEC</span>\t@x2 <span class=\"sy0\">=</span> LAMBDA_WRAP_<span class=\"sy0\">IN</span>TEGER <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/><span class=\"kw1\">EXEC</span>\t@x0 <span class=\"sy0\">=</span> LAMBDA_WRAP_<span class=\"sy0\">IN</span>TEGER <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co1\">-------------------------------------------------------------</span><br/><span class=\"co1\">-- Argument storage table</span><br/><span class=\"co1\">-------------------------------------------------------------</span><br/><span class=\"kw1\">CREATE</span> <span class=\"kw1\">TABLE</span> #t_args <span class=\"br0\">(</span><br/>\tk <span class=\"kw1\">INT</span><br/>,\tx1 <span class=\"kw1\">INT</span><br/>,\tx2 <span class=\"kw1\">INT</span><br/>,\tx3 <span class=\"kw1\">INT</span><br/>,\tx4 <span class=\"kw1\">INT</span><br/>,\tx5 <span class=\"kw1\">INT</span><br/>,\ti <span class=\"kw1\">INT</span> <span class=\"kw1\">IDENTITY</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">SELECT</span>\t@K <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"co1\">-- Anything above 5 blows up the stack</span><br/><span class=\"kw1\">WHILE</span> \t@K <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">4</span><br/><span class=\"kw1\">BEGIN</span><br/>\t<span class=\"kw1\">EXEC</span>\t@retval <span class=\"sy0\">=</span> dbo.<span class=\"me1\">LAMBDA_A</span> @K, @x1, @x2, @x2, @x1, @x0<br/>\t<span class=\"kw1\">PRINT</span>\t<span class=\"st0\">'For k='</span> <span class=\"sy0\">+</span> <span class=\"kw1\">CAST</span><span class=\"br0\">(</span>@K <span class=\"kw1\">AS</span> <span class=\"kw1\">VARCHAR</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">', result='</span> <span class=\"sy0\">+</span> <span class=\"kw1\">CAST</span><span class=\"br0\">(</span>@retval <span class=\"kw1\">AS</span> <span class=\"kw1\">VARCHAR</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">SELECT</span>\t@K <span class=\"sy0\">=</span> @K <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/><span class=\"kw1\">END</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "TXR", "loc": 7, "block": "<pre class=\"text highlighted_source\">(defun A (k x1 x2 x3 x4 x5)<br/>  (labels ((B ()<br/>             (dec k)<br/>             [A k B x1 x2 x3 x4]))<br/>    (if (&lt;= k 0) (+ [x4] [x5]) (B))))<br/>\u00a0<br/>(prinl (A 10 (ret 1) (ret -1) (ret -1) (ret 1) (ret 0)))</pre>"}, {"lang": "Visual Prolog", "loc": 23, "block": "<pre class=\"visualprolog highlighted_source\">\u00a0<br/><span class=\"re1\">implement</span> main<br/>    <span class=\"kw1\">open</span> core<br/>\u00a0<br/><span class=\"kw1\">clauses</span><br/>    run<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:-</span><br/>        console<span class=\"sy0\">::</span><span class=\"me1\">init</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<br/>        stdio<span class=\"sy0\">::</span><span class=\"me1\">write</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<br/>\u00a0<br/><span class=\"re1\">class</span> <span class=\"kw1\">predicates</span><br/>    a <span class=\"sy0\">:</span> <span class=\"br0\">(</span>integer <span class=\"re0\">K</span>, function<span class=\"br0\">{</span>integer<span class=\"br0\">}</span> <span class=\"re0\">X1</span>, function<span class=\"br0\">{</span>integer<span class=\"br0\">}</span> <span class=\"re0\">X2</span>, function<span class=\"br0\">{</span>integer<span class=\"br0\">}</span> <span class=\"re0\">X3</span>, function<span class=\"br0\">{</span>integer<span class=\"br0\">}</span> <span class=\"re0\">X4</span>, function<span class=\"br0\">{</span>integer<span class=\"br0\">}</span> <span class=\"re0\">X5</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> integer <span class=\"re0\">Result</span>.<br/><span class=\"kw1\">clauses</span><br/>    a<span class=\"br0\">(</span><span class=\"re0\">K</span>, <span class=\"re0\">X1</span>, <span class=\"re0\">X2</span>, <span class=\"re0\">X3</span>, <span class=\"re0\">X4</span>, <span class=\"re0\">X5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">R</span> <span class=\"sy0\">:-</span><br/>        <span class=\"re0\">KM</span> <span class=\"sy0\">=</span> varM<span class=\"sy0\">::</span><span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"re0\">K</span><span class=\"br0\">)</span>,<br/>        <span class=\"re0\">BM</span> <span class=\"sy0\">=</span> varM<span class=\"br0\">{</span>function<span class=\"br0\">{</span>integer<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">::</span><span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">)</span>,<br/>        <span class=\"re0\">BM</span><span class=\"sy0\">:</span><span class=\"me1\">value</span> <span class=\"sy0\">:=</span><br/>            <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">BR</span> <span class=\"sy0\">:-</span><br/>                <span class=\"re0\">KM</span><span class=\"sy0\">:</span><span class=\"me1\">value</span> <span class=\"sy0\">:=</span> <span class=\"re0\">KM</span><span class=\"sy0\">:</span><span class=\"me1\">value</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<br/>                <span class=\"re0\">BR</span> <span class=\"sy0\">=</span> a<span class=\"br0\">(</span><span class=\"re0\">KM</span><span class=\"sy0\">:</span><span class=\"me1\">value</span>, <span class=\"re0\">BM</span><span class=\"sy0\">:</span><span class=\"me1\">value</span>, <span class=\"re0\">X1</span>, <span class=\"re0\">X2</span>, <span class=\"re0\">X3</span>, <span class=\"re0\">X4</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span>,<br/>        <span class=\"re0\">R</span> <span class=\"sy0\">=</span> <span class=\"re2\">if</span> <span class=\"re0\">KM</span><span class=\"sy0\">:</span><span class=\"me1\">value</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw2\">then</span> <span class=\"re0\">X4</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">X5</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw2\">else</span> <span class=\"re0\">BM</span><span class=\"sy0\">:</span><span class=\"me1\">value</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"re2\">end if</span>.<br/>\u00a0<br/><span class=\"re1\">end implement</span> main</pre>"}, {"lang": "Vorpal", "loc": 29, "block": "<pre class=\"text highlighted_source\">self.a = method(k, x1, x2, x3, x4, x5){<br/>  b = method(){<br/>    code.k = code.k - 1<br/>    return( self.a(code.k, code, code.x1, code.x2, code.x3, code.x4) )<br/>  }<br/>  b.k = k<br/>  b.x1 = x1<br/>  b.x2 = x2<br/>  b.x3 = x3<br/>  b.x4 = x4<br/>  b.x5 = x5<br/>\u00a0<br/>  if(k &lt;= 0){<br/>    return(self.apply(x4) + self.apply(x5))<br/>  }<br/>  else{<br/>    return(self.apply(b))<br/>  }<br/>}<br/>\u00a0<br/>self.K = method(n){<br/>  f = method(){<br/>    return(code.n)<br/>  }<br/>  f.n = n<br/>  return(f)<br/>}<br/>\u00a0<br/>self.a(10, self.K(1), self.K(-1), self.K(-1), self.K(1), self.K(0)).print()</pre>"}, {"lang": "zkl", "loc": 16, "block": "<pre class=\"text highlighted_source\">fcn A(k, x1, x2, x3, x4, x5){ // --&gt;1,0,-2,0,1,0,1,-1,-10,-30,-67,-138\t<br/>   B:=CB(k, x1, x2, x3, x4, x5);<br/>   if(k &lt;= 0) x4()+x5() else B.B();<br/>}<br/>\u00a0<br/>foreach k in (12){<br/>   println(\"k=%2d A=%d\".fmt(k, A(k, 1, -1, -1, 1, 0)))<br/>}<br/>\u00a0<br/>class CB{ var k, x1, x2, x3, x4, x5; <br/>   fcn init{ k, x1, x2, x3, x4, x5 = vm.arglist; }<br/>   fcn B{<br/>      k= k - 1;<br/>      A(k, B, x1, x2, x3, x4);<br/>   }<br/>}</pre>"}]}