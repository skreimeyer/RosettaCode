{"task": "Gamma_function", "blocks": [{"lang": "360 Assembly", "loc": 159, "block": "<pre class=\"text highlighted_source\">GAMMAT   CSECT<br/>         USING GAMMAT,R13<br/>SAVEAR   B     STM-SAVEAR(R15)<br/>         DC    17F'0'<br/>         DC    CL8'GAMMAT'<br/>STM      STM   R14,R12,12(R13)<br/>         ST    R13,4(R15)<br/>         ST    R15,8(R13)<br/>         LR    R13,R15<br/>*        ----  CODE<br/>         LE    F4,=E'0'<br/>         LH    R2,NI<br/>LOOPI    EQU   *<br/>         AE    F4,=E'1'         xi=xi+1<br/>         LER   F0,F4<br/>         DE    F0,=E'10'        x=xi/10<br/>         STE   F0,X<br/>         LE    F6,X<br/>         SE    F6,=E'1'         xx=x-1.0<br/>         LH    R4,NT<br/>         BCTR  R4,0<br/>         SLA   R4,2<br/>         LE    F0,T(R4)         <br/>         STE   F0,SUM           sum=t(nt)<br/>         LH    R3,NT<br/>         BCTR  R3,0<br/>         SH    R4,=H'4'<br/>LOOPJ    CH    R3,=H'1'         for j=nt-1 downto 1<br/>         BL    ENDLOOPJ<br/>         LE    F0,SUM<br/>         MER   F0,F6            sum*xx<br/>         LE    F2,T(R4)         t(j)<br/>         AER   F0,F2<br/>         STE   F0,SUM           sum=sum*xx+t(j)<br/>         BCTR  R3,0<br/>         SH    R4,=H'4'<br/>         B     LOOPJ<br/>ENDLOOPJ EQU   *<br/>         LE    F0,=E'1'<br/>         DE    F0,SUM<br/>         STE   F0,GAMMA         gamma=1/sum<br/>         LE    F0,X<br/>         BAL   R14,CONVERT<br/>         MVC   BUF(8),CONVERTM<br/>         LE    F0,GAMMA<br/>         BAL   R14,CONVERT<br/>         MVC   BUF+9(13),CONVERTM<br/>         WTO   MF=(E,WTOMSG)\t\t  <br/>         BCT   R2,LOOPI<br/>*        ----  END CODE<br/>         CNOP  0,4<br/>         L     R13,4(0,R13)<br/>         LM    R14,R12,12(R13)<br/>         XR    R15,R15<br/>         BR    R14<br/>*        ----  DATA<br/>NI       DC    H'30'<br/>NT       DC    AL2((TEND-T)/4)<br/>T        DC    E'1.00000000000000000000'<br/>         DC    E'0.57721566490153286061'<br/>         DC    E'-0.65587807152025388108'<br/>         DC    E'-0.04200263503409523553'<br/>         DC    E'0.16653861138229148950'<br/>         DC    E'-0.04219773455554433675'<br/>         DC    E'-0.00962197152787697356'<br/>         DC    E'0.00721894324666309954'<br/>         DC    E'-0.00116516759185906511'<br/>         DC    E'-0.00021524167411495097'<br/>         DC    E'0.00012805028238811619'<br/>         DC    E'-0.00002013485478078824'<br/>         DC    E'-0.00000125049348214267'<br/>         DC    E'0.00000113302723198170'<br/>         DC    E'-0.00000020563384169776'<br/>         DC    E'0.00000000611609510448'<br/>         DC    E'0.00000000500200764447'<br/>         DC    E'-0.00000000118127457049'<br/>         DC    E'0.00000000010434267117'<br/>         DC    E'0.00000000000778226344'<br/>         DC    E'-0.00000000000369680562'<br/>         DC    E'0.00000000000051003703'<br/>         DC    E'-0.00000000000002058326'<br/>         DC    E'-0.00000000000000534812'<br/>         DC    E'0.00000000000000122678'<br/>         DC    E'-0.00000000000000011813'<br/>         DC    E'0.00000000000000000119'<br/>         DC    E'0.00000000000000000141'<br/>         DC    E'-0.00000000000000000023'<br/>         DC    E'0.00000000000000000002'<br/>TEND     DS    0E <br/>X        DS    E<br/>SUM      DS    E<br/>GAMMA    DS    E<br/>WTOMSG   DS    0F<br/>         DC    AL2(L'BUF),XL2'0000'<br/>BUF      DC    CL80' '<br/>*        Subroutine             Convertion Float-&gt;Display<br/>CONVERT  CNOP  0,4<br/>         ME    F0,CONVERTC<br/>         STE   F0,CONVERTF<br/>         MVI   CONVERTS,X'00'<br/>         L     R9,CONVERTF<br/>         CH    R9,=H'0'<br/>         BZ    CONVERT7<br/>         BNL   CONVERT1         is negative?<br/>         MVI   CONVERTS,X'80'<br/>         N     R9,=X'7FFFFFFF'  sign bit<br/>CONVERT1 LR    R8,R9<br/>         N     R8,=X'00FFFFFF'<br/>         BNZ   CONVERT2<br/>         SR    R9,R9<br/>         B     CONVERT7<br/>CONVERT2 LR    R8,R9<br/>         N     R8,=X'FF000000'  characteristic<br/>         SRL   R8,24<br/>         CH    R8,=H'64'<br/>         BH    CONVERT3<br/>         SR    R9,R9<br/>         B     CONVERT7<br/>CONVERT3 CH    R8,=H'72'        2**32<br/>         BNH   CONVERT4<br/>         L     R9,=X'7FFFFFFF'  biggest<br/>         B     CONVERT6<br/>CONVERT4 SR    R8,R8<br/>         SLDL  R8,8<br/>         CH    R8,=H'72'<br/>         BL    CONVERT5<br/>         CH    R9,=H'0'<br/>         BP    CONVERT5<br/>         L     R9,=X'7FFFFFFF'<br/>         B     CONVERT6<br/>CONVERT5 SH    R8,=H'72'<br/>         LCR   R8,R8<br/>         SLL   R8,2<br/>         SRL   R9,0(R8)<br/>CONVERT6 SR    R8,R8<br/>         IC    R8,CONVERTS<br/>         CH    R8,=H'0'         sign bit set?<br/>         BZ    CONVERT7<br/>         LCR   R9,R9<br/>CONVERT7 ST    R9,CONVERTB<br/>         CVD   R9,CONVERTP<br/>         MVC   CONVERTD,=X'402020202120202020202020' <br/>         ED    CONVERTD,CONVERTP+2<br/>         MVC   CONVERTM(6),CONVERTD <br/>         MVI   CONVERTM+6,C'.'<br/>         MVC   CONVERTM+7(6),CONVERTD+6<br/>         BR    R14<br/>*<br/>CONVERTC DC    E'1E6'           X'45F42400'<br/>CONVERTF DS    F<br/>CONVERTB DS    F                <br/>CONVERTS DS    X<br/>CONVERTM DS    CL13       <br/>CONVERTD DS    CL12<br/>CONVERTP DS    PL8<br/>*<br/>         EQUREGS<br/>         EQUREGS REGS=FPR<br/>         END   GAMMAT</pre>"}, {"lang": "Ada", "loc": 41, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">function</span> Gamma <span class=\"br0\">(</span>X\u00a0: Long_Float<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Long_Float <span class=\"kw1\">is</span><br/>   A\u00a0: <span class=\"kw3\">constant</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>..<span class=\"nu0\">29</span><span class=\"br0\">)</span> <span class=\"kw3\">of</span> Long_Float\u00a0:=<br/>       <span class=\"br0\">(</span>  <span class=\"nu0\">1.00000</span>_00000_00000_00000,<br/>          <span class=\"nu0\">0.57721</span>_56649_01532_86061,<br/>         -<span class=\"nu0\">0.65587</span>_80715_20253_88108,<br/>         -<span class=\"nu0\">0.04200</span>_26350_34095_23553,<br/>          <span class=\"nu0\">0.16653</span>_86113_82291_48950,<br/>         -<span class=\"nu0\">0.04219</span>_77345_55544_33675,<br/>         -<span class=\"nu0\">0.00962</span>_19715_27876_97356,<br/>          <span class=\"nu0\">0.00721</span>_89432_46663_09954,<br/>         -<span class=\"nu0\">0.00116</span>_51675_91859_06511,<br/>         -<span class=\"nu0\">0.00021</span>_52416_74114_95097,<br/>          <span class=\"nu0\">0.00012</span>_80502_82388_11619,<br/>         -<span class=\"nu0\">0.00002</span>_01348_54780_78824,<br/>         -<span class=\"nu0\">0.00000</span>_12504_93482_14267,<br/>          <span class=\"nu0\">0.00000</span>_11330_27231_98170,<br/>         -<span class=\"nu0\">0.00000</span>_02056_33841_69776,<br/>          <span class=\"nu0\">0.00000</span>_00061_16095_10448,<br/>          <span class=\"nu0\">0.00000</span>_00050_02007_64447,<br/>         -<span class=\"nu0\">0.00000</span>_00011_81274_57049,<br/>          <span class=\"nu0\">0.00000</span>_00001_04342_67117,<br/>          <span class=\"nu0\">0.00000</span>_00000_07782_26344,<br/>         -<span class=\"nu0\">0.00000</span>_00000_03696_80562,<br/>          <span class=\"nu0\">0.00000</span>_00000_00510_03703,<br/>         -<span class=\"nu0\">0.00000</span>_00000_00020_58326,<br/>         -<span class=\"nu0\">0.00000</span>_00000_00005_34812,<br/>          <span class=\"nu0\">0.00000</span>_00000_00001_22678,<br/>         -<span class=\"nu0\">0.00000</span>_00000_00000_11813,<br/>          <span class=\"nu0\">0.00000</span>_00000_00000_00119,<br/>          <span class=\"nu0\">0.00000</span>_00000_00000_00141,<br/>         -<span class=\"nu0\">0.00000</span>_00000_00000_00023,<br/>          <span class=\"nu0\">0.00000</span>_00000_00000_00002<br/>       <span class=\"br0\">)</span>;<br/>   Y  \u00a0: <span class=\"kw3\">constant</span> Long_Float\u00a0:= X - <span class=\"nu0\">1.0</span>;<br/>   Sum\u00a0: Long_Float\u00a0:= A <span class=\"br0\">(</span>A'Last<span class=\"br0\">)</span>;<br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> N <span class=\"kw3\">in</span> <span class=\"kw3\">reverse</span> A'First..<span class=\"me1\">A</span>'Last - <span class=\"nu0\">1</span> <span class=\"kw1\">loop</span><br/>      Sum\u00a0:= Sum * Y + A <span class=\"br0\">(</span>N<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">1.0</span> / Sum;<br/><span class=\"kw1\">end</span> Gamma;</pre>"}, {"lang": "ALGOL 68", "loc": 131, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># Coefficients used by the GNU Scientific Library #</span><br/><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> p <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw4\">LONG</span>    <span class=\"re1\">0.99999 99999 99809 93</span><span class=\"sy1\">,</span> <br/>                  <span class=\"kw4\">LONG</span>  <span class=\"re1\">676.52036 81218 851</span><span class=\"sy1\">,</span>    <br/>                 <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">1259.13921 67224 028</span><span class=\"sy1\">,</span> <br/>                  <span class=\"kw4\">LONG</span>  <span class=\"re1\">771.32342 87776 5313</span><span class=\"sy1\">,</span>  <br/>                 <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span>  <span class=\"re1\">176.61502 91621 4059</span><span class=\"sy1\">,</span>  <br/>                  <span class=\"kw4\">LONG</span>   <span class=\"re1\">12.50734 32786 86905</span><span class=\"sy1\">,</span> <br/>                 <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span>    <span class=\"re1\">0.13857 10952 65720 12</span><span class=\"sy1\">,</span><br/>                  <span class=\"kw4\">LONG</span>    <span class=\"re1\">9.98436 95780 19571 6e-6</span><span class=\"sy1\">,</span><br/>                  <span class=\"kw4\">LONG</span>    <span class=\"re1\">1.50563 27351 49311 6e-7</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> lanczos gamma <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> in z<span class=\"br0\">)</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>  <span class=\"coMULTI\"># Reflection formula #</span><br/>  <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> z <span class=\"sy1\">:=</span> in z<span class=\"sy1\">;</span><br/>  <span class=\"kw2\">IF</span> z <span class=\"sy1\">&lt;</span> <span class=\"kw4\">LONG</span> <span class=\"re1\">0.5</span> <span class=\"kw2\">THEN</span><br/>    <span class=\"kw23\">long pi</span> <span class=\"sy1\">/</span> <span class=\"br0\">(</span><span class=\"kw24\">long sin</span><span class=\"br0\">(</span><span class=\"kw23\">long pi</span><span class=\"sy1\">*</span>z<span class=\"br0\">)</span><span class=\"sy1\">*</span>lanczos gamma<span class=\"br0\">(</span>1<span class=\"sy1\">-</span>z<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">ELSE</span><br/>    z <span class=\"sy1\">-:=</span> 1<span class=\"sy1\">;</span><br/>    <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> x <span class=\"sy1\">:=</span> p<span class=\"br0\">[</span>1<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> p <span class=\"sy1\">-</span> 1 <span class=\"kw2\">DO</span> x <span class=\"sy1\">+:=</span> p<span class=\"br0\">[</span>i<span class=\"sy1\">+</span>1<span class=\"br0\">]</span><span class=\"sy1\">/</span><span class=\"br0\">(</span>z<span class=\"sy1\">+</span>i<span class=\"br0\">)</span> <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> t <span class=\"sy1\">=</span> z <span class=\"sy1\">+</span> <span class=\"kw8\">UPB</span> p <span class=\"sy1\">-</span> <span class=\"kw4\">LONG</span> <span class=\"re1\">1.5</span><span class=\"sy1\">;</span><br/>    <span class=\"kw24\">long sqrt</span><span class=\"br0\">(</span>2<span class=\"sy1\">*</span><span class=\"kw23\">long pi</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span> t<span class=\"sy1\">**</span><span class=\"br0\">(</span>z<span class=\"sy1\">+</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.5</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span> <span class=\"kw24\">long exp</span><span class=\"br0\">(</span><span class=\"sy1\">-</span>t<span class=\"br0\">)</span> <span class=\"sy1\">*</span> x<br/>  <span class=\"kw2\">FI</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> taylor gamma <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> x<span class=\"br0\">)</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"coMULTI\"># good for values between 0 and 1 #</span><br/>    <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> a <span class=\"sy1\">=</span><br/>        <span class=\"br0\">(</span> <span class=\"kw4\">LONG</span> <span class=\"re1\">1.00000 00000 00000 00000</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.57721 56649 01532 86061</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.65587 80715 20253 88108</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.04200 26350 34095 23553</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.16653 86113 82291 48950</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.04219 77345 55544 33675</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00962 19715 27876 97356</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00721 89432 46663 09954</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00116 51675 91859 06511</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00021 52416 74114 95097</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00012 80502 82388 11619</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00002 01348 54780 78824</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 12504 93482 14267</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 11330 27231 98170</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 02056 33841 69776</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00061 16095 10448</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00050 02007 64447</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00011 81274 57049</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00001 04342 67117</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 07782 26344</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 03696 80562</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00510 03703</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00020 58326</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00005 34812</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00001 22678</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00000 11813</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00000 00119</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00000 00141</span><span class=\"sy1\">,</span><br/>         <span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00000 00023</span><span class=\"sy1\">,</span><br/>          <span class=\"kw4\">LONG</span> <span class=\"re1\">0.00000 00000 00000 00002</span><br/>        <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> y <span class=\"sy1\">=</span> x <span class=\"sy1\">-</span> 1<span class=\"sy1\">;</span><br/>    <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> sum <span class=\"sy1\">:=</span> a <span class=\"br0\">[</span><span class=\"kw8\">UPB</span> a<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> n <span class=\"kw2\">FROM</span> <span class=\"kw8\">UPB</span> a <span class=\"sy1\">-</span> 1 <span class=\"kw5\">DOWNTO</span> <span class=\"kw8\">LWB</span> a <span class=\"kw2\">DO</span><br/>       sum <span class=\"sy1\">:=</span> sum <span class=\"sy1\">*</span> y <span class=\"sy1\">+</span> a <span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    1<span class=\"sy1\">/</span>sum<br/><span class=\"kw2\">END</span> <span class=\"coMULTI\"># taylor gamma #</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> long e <span class=\"sy1\">=</span> <span class=\"kw24\">long exp</span><span class=\"br0\">(</span>1<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> sterling gamma <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> n<span class=\"br0\">)</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/><span class=\"br0\">(</span> <span class=\"coMULTI\"># improves for values much greater then 1 #</span><br/>  <span class=\"kw24\">long sqrt</span><span class=\"br0\">(</span>2<span class=\"sy1\">*</span><span class=\"kw23\">long pi</span><span class=\"sy1\">/</span>n<span class=\"br0\">)</span><span class=\"sy1\">*</span><span class=\"br0\">(</span>n<span class=\"sy1\">/</span>long e<span class=\"br0\">)</span><span class=\"sy1\">**</span>n<br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> factorial <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">INT</span> n<span class=\"br0\">)</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>  <span class=\"kw2\">IF</span> n<span class=\"sy1\">=</span>0 <span class=\"kw16\">OR</span> n<span class=\"sy1\">=</span>1 <span class=\"kw2\">THEN</span> 1<br/>  <span class=\"kw2\">ELIF</span> n<span class=\"sy1\">=</span>2 <span class=\"kw2\">THEN</span> 2<br/>  <span class=\"kw2\">ELSE</span> n<span class=\"sy1\">*</span>factorial<span class=\"br0\">(</span>n<span class=\"sy1\">-</span>1<span class=\"br0\">)</span> <span class=\"kw2\">FI</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">REF</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> fm <span class=\"sy1\">:=</span> <span class=\"kw7\">NIL</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> sponge gamma <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> x<span class=\"br0\">)</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>  <span class=\"kw3\">INT</span> a <span class=\"sy1\">=</span> 12<span class=\"sy1\">;</span> <span class=\"coMULTI\"># alter to get required precision #</span><br/>  <span class=\"kw4\">REF</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> fm <span class=\"sy1\">:=</span> <span class=\"kw7\">NIL</span><span class=\"sy1\">;</span><br/>  <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> res<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw2\">IF</span> fm <span class=\"sy1\">:=:</span> <span class=\"kw4\">REF</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"br0\">(</span><span class=\"kw7\">NIL</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span><br/>    fm <span class=\"sy1\">:=</span> <span class=\"kw4\">HEAP</span><span class=\"br0\">[</span>0<span class=\"sy1\">:</span>a<span class=\"sy1\">-</span>1<span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">;</span><br/>    fm<span class=\"br0\">[</span>0<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"kw24\">long sqrt</span><span class=\"br0\">(</span><span class=\"kw4\">LONG</span> 2<span class=\"sy1\">*</span><span class=\"kw23\">long pi</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> k <span class=\"kw2\">TO</span> a<span class=\"sy1\">-</span>1 <span class=\"kw2\">DO</span><br/>      fm<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>k<span class=\"sy1\">-</span>1<span class=\"br0\">)</span> <span class=\"kw12\">MOD</span> 2<span class=\"sy1\">=</span>0<span class=\"br0\">)</span> <span class=\"sy1\">|</span> 1 <span class=\"sy1\">|</span> <span class=\"sy1\">-</span>1<span class=\"br0\">)</span> <span class=\"sy1\">*</span> <span class=\"kw24\">long exp</span><span class=\"br0\">(</span>a<span class=\"sy1\">-</span>k<span class=\"br0\">)</span> <span class=\"sy1\">*</span><br/>\t<span class=\"br0\">(</span>a<span class=\"sy1\">-</span>k<span class=\"br0\">)</span> <span class=\"sy1\">**</span><span class=\"br0\">(</span>k<span class=\"sy1\">-</span><span class=\"kw4\">LONG</span> <span class=\"re1\">0.5</span><span class=\"br0\">)</span> <span class=\"sy1\">/</span> factorial<span class=\"br0\">(</span>k<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><br/>  <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>  res <span class=\"sy1\">:=</span> fm<span class=\"br0\">[</span>0<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">FOR</span> k <span class=\"kw2\">TO</span> a<span class=\"sy1\">-</span>1 <span class=\"kw2\">DO</span><br/>    res <span class=\"sy1\">+:=</span> fm<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy1\">/</span> <span class=\"br0\">(</span> x <span class=\"sy1\">+</span> k <span class=\"br0\">)</span><br/>  <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>  res <span class=\"sy1\">*:=</span> <span class=\"kw24\">long exp</span><span class=\"br0\">(</span><span class=\"sy1\">-</span><span class=\"br0\">(</span>x<span class=\"sy1\">+</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span> <span class=\"br0\">(</span>x<span class=\"sy1\">+</span>a<span class=\"br0\">)</span><span class=\"sy1\">**</span><span class=\"br0\">(</span>x <span class=\"sy1\">+</span> <span class=\"kw4\">LONG</span> <span class=\"re1\">0.5</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  res<span class=\"sy1\">/</span>x<br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw6\">FORMAT</span> <span class=\"kw26\">real</span> fmt <span class=\"sy1\">=</span> $g<span class=\"br0\">(</span><span class=\"sy1\">-</span><span class=\"kw20\"><span class=\"kw26\">real</span> width</span><span class=\"sy1\">,</span> <span class=\"kw20\"><span class=\"kw26\">real</span> width</span> <span class=\"sy1\">-</span> 2<span class=\"br0\">)</span>$<span class=\"sy1\">;</span><br/><span class=\"kw6\">FORMAT</span> long <span class=\"kw26\">real</span> fmt16 <span class=\"sy1\">=</span> $g<span class=\"br0\">(</span><span class=\"sy1\">-</span>17<span class=\"sy1\">,</span> 17 <span class=\"sy1\">-</span> 2<span class=\"br0\">)</span>$<span class=\"sy1\">;</span> <span class=\"coMULTI\"># accurate to about 16 decimal places #</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">STRING</span> methods <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"st0\">\"Genie\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"Lanczos\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"Sponge\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"Taylor\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"Stirling\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$11xg12xg12xg13xg13xgl$<span class=\"sy1\">,</span>methods<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw6\">FORMAT</span> sample fmt <span class=\"sy1\">=</span> $<span class=\"st0\">\"gamma(\"</span>g<span class=\"br0\">(</span><span class=\"sy1\">-</span>3<span class=\"sy1\">,</span>1<span class=\"br0\">)</span><span class=\"st0\">\")=\"</span>f<span class=\"br0\">(</span><span class=\"kw26\">real</span> fmt<span class=\"br0\">)</span>n<span class=\"br0\">(</span><span class=\"kw8\">UPB</span> methods<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span>f<span class=\"br0\">(</span>long <span class=\"kw26\">real</span> fmt16<span class=\"br0\">)</span><span class=\"br0\">)</span>l$<span class=\"sy1\">;</span><br/><span class=\"kw6\">FORMAT</span> sqr sample fmt <span class=\"sy1\">=</span> $<span class=\"st0\">\"gamma(\"</span>g<span class=\"br0\">(</span><span class=\"sy1\">-</span>3<span class=\"sy1\">,</span>1<span class=\"br0\">)</span><span class=\"st0\">\")**2=\"</span>f<span class=\"br0\">(</span><span class=\"kw26\">real</span> fmt<span class=\"br0\">)</span>n<span class=\"br0\">(</span><span class=\"kw8\">UPB</span> methods<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span>f<span class=\"br0\">(</span>long <span class=\"kw26\">real</span> fmt16<span class=\"br0\">)</span><span class=\"br0\">)</span>l$<span class=\"sy1\">;</span><br/><span class=\"kw6\">FORMAT</span> sample <span class=\"kw24\">exp</span> fmt <span class=\"sy1\">=</span> $<span class=\"st0\">\"gamma(\"</span>g<span class=\"br0\">(</span><span class=\"sy1\">-</span>3<span class=\"br0\">)</span><span class=\"st0\">\")=\"</span>g<span class=\"br0\">(</span><span class=\"sy1\">-</span>15<span class=\"sy1\">,</span>11<span class=\"sy1\">,</span>0<span class=\"br0\">)</span>n<span class=\"br0\">(</span><span class=\"kw8\">UPB</span> methods<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span>g<span class=\"br0\">(</span><span class=\"sy1\">-</span>18<span class=\"sy1\">,</span>14<span class=\"sy1\">,</span>0<span class=\"br0\">)</span><span class=\"br0\">)</span>l$<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> sample <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> x<span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/>  <span class=\"br0\">(</span>gamma<span class=\"br0\">(</span><span class=\"kw8\">SHORTEN</span> x<span class=\"br0\">)</span><span class=\"sy1\">,</span> lanczos gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">,</span> sponge gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">,</span> taylor gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">,</span> sterling gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> 1 <span class=\"kw2\">TO</span> 20 <span class=\"kw2\">DO</span><br/>  <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> x <span class=\"sy1\">=</span> i <span class=\"sy1\">/</span> <span class=\"kw4\">LONG</span> 10<span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>sample fmt<span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> sample<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">IF</span> i <span class=\"sy1\">=</span> 5 <span class=\"kw2\">THEN</span> <span class=\"coMULTI\"># insert special case of a half #</span><br/>    <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>sqr sample fmt<span class=\"sy1\">,</span><br/>            x<span class=\"sy1\">,</span> gamma<span class=\"br0\">(</span><span class=\"kw8\">SHORTEN</span> x<span class=\"br0\">)</span><span class=\"sy1\">**</span>2<span class=\"sy1\">,</span>  lanczos gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">**</span>2<span class=\"sy1\">,</span> sponge gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">**</span>2<span class=\"sy1\">,</span><br/>            taylor gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">**</span>2<span class=\"sy1\">,</span> sterling gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">**</span>2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">FI</span><br/><span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/><span class=\"kw2\">FOR</span> x <span class=\"kw2\">FROM</span> 10 <span class=\"kw2\">BY</span> 10 <span class=\"kw2\">TO</span> 70 <span class=\"kw2\">DO</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>sample <span class=\"kw24\">exp</span> fmt<span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> sample<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">OD</span></pre>"}, {"lang": "ANSI Standard BASIC", "loc": 26, "block": "<pre class=\"text highlighted_source\">100 DECLARE EXTERNAL FUNCTION FNlngamma<br/>110 <br/>120 DEF FNgamma(z) = EXP(FNlngamma(z))<br/>130 <br/>140 FOR x = 0.1 TO 2.05 STEP 0.1<br/>150    PRINT USING$(\"#.#\",x), USING$(\"##.############\", FNgamma(x))<br/>160 NEXT x<br/>170 END<br/>180 <br/>190 EXTERNAL FUNCTION FNlngamma(z)<br/>200 DIM lz(0 TO 6)<br/>210 RESTORE<br/>220 MAT READ lz<br/>230 DATA 1.000000000190015, 76.18009172947146, -86.50532032941677, 24.01409824083091, -1.231739572450155, 0.0012086509738662, -0.000005395239385<br/>240 IF z &lt; 0.5 THEN <br/>250    LET FNlngamma = LOG(PI / SIN(PI * z)) - FNlngamma(1.0 - z)<br/>260    EXIT FUNCTION<br/>270 END IF<br/>280 LET z = z - 1.0<br/>290 LET b = z + 5.5<br/>300 LET a = lz(0)<br/>310 FOR i = 1 TO 6<br/>320    LET a  = a + lz(i) / (z + i)<br/>330 NEXT i<br/>340 LET FNlngamma = (LOG(SQR(2*PI)) + LOG(a) - b) + LOG(b) * (z+0.5)<br/>350 END FUNCTION</pre>"}, {"lang": "AutoHotkey", "loc": 82, "block": "<pre class=\"autohotkey highlighted_source\"><span class=\"coMULTI\">/*<br/>Here is the upper incomplete Gamma function. Omitting or setting<br/>the second parameter to 0 we get the (complete) Gamma function.<br/>The code is based on: \"Computation of Special Functions\" Zhang and Jin,<br/>John Wiley and Sons, 1996<br/>*/</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/SetFormat.htm\"><span class=\"kw3\">SetFormat</span></a> FloatFast<span class=\"sy0\">,</span> 0<span class=\"sy0\">.</span>9e <br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"nu0\">10</span> <br/>   <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% GAMMA<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"st0\">\"`n\"</span> GAMMA<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <br/>\u00a0<br/>GAMMA<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>  <span class=\"co1\">; upper incomplete gamma: Integral(t**(a-1)*e**-t, t = x..inf) </span><br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>a <span class=\"sy0\">&gt;</span> <span class=\"nu0\">171</span> || x <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <br/>      <span class=\"kw1\">Return</span> 2<span class=\"sy0\">.</span>e308   <span class=\"co1\">; overflow </span><br/>\u00a0<br/>   xam <span class=\"sy0\">:=</span> x <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span>\u00a0? <span class=\"sy0\">-</span>x<span class=\"sy0\">+</span>a<span class=\"sy0\">*</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">ln</span></a><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\u00a0: <span class=\"nu0\">0</span> <br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>xam <span class=\"sy0\">&gt;</span> <span class=\"nu0\">700</span><span class=\"br0\">)</span> <br/>      <span class=\"kw1\">Return</span> 2<span class=\"sy0\">.</span>e308   <span class=\"co1\">; overflow </span><br/>\u00a0<br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>x <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">+</span>a<span class=\"br0\">)</span> <span class=\"br0\">{</span>     <span class=\"co1\">; no need for gamma(a) </span><br/>      t0 <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> k <span class=\"sy0\">:=</span> <span class=\"nu0\">60</span> <br/>      <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"nu0\">60</span> <br/>          t0 <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>k<span class=\"sy0\">-</span>a<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">+</span>k<span class=\"sy0\">/</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span>t0<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">--</span>k <br/>      <span class=\"kw1\">Return</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">exp</span></a><span class=\"br0\">(</span>xam<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>x<span class=\"sy0\">+</span>t0<span class=\"br0\">)</span> <br/>   <span class=\"br0\">}</span> <br/>\u00a0<br/>   r <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> ga <span class=\"sy0\">:=</span> <span class=\"nu0\">1.0</span>  <span class=\"co1\">; compute ga = gamma(a) ... </span><br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>a <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">round</span></a><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\">; if integer: factorial </span><br/>      <span class=\"kw1\">If</span> <span class=\"br0\">(</span>a <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <br/>         <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a>\u00a0% a<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <br/>            ga <span class=\"sy0\">*=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <br/>      <span class=\"kw1\">Else</span>            <span class=\"co1\">; negative integer </span><br/>         ga <span class=\"sy0\">:=</span> 1<span class=\"sy0\">.</span>7976931348623157e<span class=\"sy0\">+</span>308 <span class=\"co1\">; Dmax </span><br/>   <span class=\"kw1\">Else</span> <span class=\"br0\">{</span>             <span class=\"co1\">; not integer </span><br/>      <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">abs</span></a><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>         z <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">abs</span></a><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <br/>         m <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">floor</span></a><span class=\"br0\">(</span>z<span class=\"br0\">)</span> <br/>         <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"re0\">%m%</span> <br/>             r <span class=\"sy0\">*=</span> <span class=\"br0\">(</span>z<span class=\"sy0\">-</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">)</span> <br/>         z <span class=\"sy0\">-=</span> m <br/>      <span class=\"br0\">}</span> <br/>      <span class=\"kw1\">Else</span> <br/>         z <span class=\"sy0\">:=</span> a <br/>\u00a0<br/>      gr <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>       0<span class=\"sy0\">.</span>14e<span class=\"sy0\">-</span>14 <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>54e<span class=\"sy0\">-</span>14<span class=\"br0\">)</span>             <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>206e<span class=\"sy0\">-</span>13<span class=\"br0\">)</span>          <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>51e<span class=\"sy0\">-</span>12<span class=\"br0\">)</span> <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>36968e<span class=\"sy0\">-</span>11<span class=\"br0\">)</span>          <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>77823e<span class=\"sy0\">-</span>11<span class=\"br0\">)</span>        <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>1043427e<span class=\"sy0\">-</span>9<span class=\"br0\">)</span> <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>11812746e<span class=\"sy0\">-</span>8<span class=\"br0\">)</span>        <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>50020075e<span class=\"sy0\">-</span>8<span class=\"br0\">)</span>      <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>6116095e<span class=\"sy0\">-</span>8<span class=\"br0\">)</span> <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>2056338417e<span class=\"sy0\">-</span>6<span class=\"br0\">)</span>      <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>1133027232e<span class=\"sy0\">-</span>5<span class=\"br0\">)</span>    <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>12504934821e<span class=\"sy0\">-</span>5<span class=\"br0\">)</span> <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>201348547807e<span class=\"sy0\">-</span>4<span class=\"br0\">)</span>    <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>1280502823882e<span class=\"sy0\">-</span>3<span class=\"br0\">)</span> <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>2152416741149e<span class=\"sy0\">-</span>3<span class=\"br0\">)</span> <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>11651675918591e<span class=\"sy0\">-</span>2<span class=\"br0\">)</span>  <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>7218943246663e<span class=\"sy0\">-</span>2<span class=\"br0\">)</span> <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>9621971527877e<span class=\"sy0\">-</span>2<span class=\"br0\">)</span> <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>421977345555443e<span class=\"sy0\">-</span>1<span class=\"br0\">)</span> <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> <span class=\"nu0\">0.1665386113822915</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> 0<span class=\"sy0\">.</span>420026350340952e<span class=\"sy0\">-</span>1<span class=\"br0\">)</span> <br/>          <span class=\"sy0\">*</span>z <span class=\"sy0\">-</span> <span class=\"nu0\">0.6558780715202538</span><span class=\"br0\">)</span>   <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> <span class=\"nu0\">0.5772156649015329</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <br/>\u00a0<br/>      ga <span class=\"sy0\">:=</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>gr<span class=\"sy0\">*</span>z<span class=\"br0\">)</span> <span class=\"sy0\">*</span> r <br/>      <span class=\"kw1\">If</span> <span class=\"br0\">(</span>a <span class=\"sy0\">&lt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <br/>         ga <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">3.1415926535897931</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>a<span class=\"sy0\">*</span>ga<span class=\"sy0\">*</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">sin</span></a><span class=\"br0\">(</span><span class=\"nu0\">3.1415926535897931</span><span class=\"sy0\">*</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">}</span> <br/>\u00a0<br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>         <span class=\"co1\">; complete gamma requested </span><br/>      <span class=\"kw1\">Return</span> ga <br/>\u00a0<br/>   s <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span>a           <span class=\"co1\">; here x &lt;= 1+a </span><br/>   r <span class=\"sy0\">:=</span> s <br/>   <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"nu0\">60</span> <span class=\"br0\">{</span> <br/>      r <span class=\"sy0\">*=</span> x<span class=\"sy0\">/</span><span class=\"br0\">(</span>a<span class=\"sy0\">+</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">)</span> <br/>      s <span class=\"sy0\">+=</span> r <br/>      <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">abs</span></a><span class=\"br0\">(</span>r<span class=\"sy0\">/</span>s<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> 1<span class=\"sy0\">.</span>e<span class=\"sy0\">-</span>15<span class=\"br0\">)</span> <br/>         <a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">break</span></a> <br/>   <span class=\"br0\">}</span> <br/>   <span class=\"kw1\">Return</span> ga <span class=\"sy0\">-</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">exp</span></a><span class=\"br0\">(</span>xam<span class=\"br0\">)</span><span class=\"sy0\">*</span>s <br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/>The 10 results shown:<br/>2.678938535e+000  1.354117939e+000  1.0               8.929795115e-001  9.027452930e-001 <br/>3.628800000e+005  1.216451004e+017  8.841761994e+030  2.039788208e+046  6.082818640e+062 <br/>\u00a0<br/>1.000000000e+000  1.190639348e+000  1.504575489e+000  2.000000000e+000  2.778158479e+000 <br/>1.386831185e+080  1.711224524e+098  8.946182131e+116  1.650795516e+136  9.332621544e+155<br/>*/</span></pre>"}, {"lang": "BBC BASIC", "loc": 23, "block": "<pre class=\"text highlighted_source\">      *FLOAT64<br/>      INSTALL @lib$+\"FNUSING\"<br/>\u00a0<br/>      FOR x = 0.1 TO 2.05 STEP 0.1<br/>        PRINT FNusing(\"#.#\",x), FNusing(\"##.############\", FNgamma(x))<br/>      NEXT<br/>      END<br/>\u00a0<br/>      DEF FNgamma(z) = EXP(FNlngamma(z))<br/>\u00a0<br/>      DEF FNlngamma(z)<br/>      LOCAL a, b, i%, lz()<br/>      DIM lz(6)<br/>      lz() = 1.000000000190015, 76.18009172947146, -86.50532032941677, \\<br/>      \\ 24.01409824083091, -1.231739572450155, 0.0012086509738662, -0.000005395239385<br/>      IF z &lt; 0.5 THEN = LN(PI / SIN(PI * z)) - FNlngamma(1.0 - z)<br/>      z -= 1.0<br/>      b = z + 5.5<br/>      a = lz(0)<br/>      FOR i% = 1 TO 6<br/>        a += lz(i%) / (z + i%)<br/>      NEXT<br/>      = (LNSQR(2*PI) + LN(a) - b) + LN(b) * (z+0.5)</pre>"}, {"lang": "C", "loc": 52, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/><span class=\"co2\">#include &lt;gsl/gsl_sf_gamma.h&gt;</span><br/><span class=\"co2\">#ifndef M_PI</span><br/><span class=\"co2\">#define M_PI 3.14159265358979323846</span><br/><span class=\"co2\">#endif</span><br/>\u00a0<br/><span class=\"coMULTI\">/* very simple approximation */</span><br/><span class=\"kw4\">double</span> st_gamma<span class=\"br0\">(</span><span class=\"kw4\">double</span> x<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span><span class=\"nu16\">2.0</span><span class=\"sy0\">*</span>M_PI<span class=\"sy0\">/</span>x<span class=\"br0\">)</span><span class=\"sy0\">*</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/pow.html\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span>x<span class=\"sy0\">/</span>M_E<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co2\">#define A 12</span><br/><span class=\"kw4\">double</span> sp_gamma<span class=\"br0\">(</span><span class=\"kw4\">double</span> z<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> A<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">static</span> <span class=\"kw4\">double</span> c_space<span class=\"br0\">[</span>A<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">static</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>c <span class=\"sy0\">=</span> NULL<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> k<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">double</span> accm<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span> c <span class=\"sy0\">==</span> NULL <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> k1_factrl <span class=\"sy0\">=</span> <span class=\"nu16\">1.0</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* (k - 1)!*(-1)^k with 0!==1*/</span><br/>    c <span class=\"sy0\">=</span> c_space<span class=\"sy0\">;</span><br/>    c<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span><span class=\"nu16\">2.0</span><span class=\"sy0\">*</span>M_PI<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>k<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> a<span class=\"sy0\">;</span> k<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      c<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span>a<span class=\"sy0\">-</span>k<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/pow.html\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span>a<span class=\"sy0\">-</span>k<span class=\"sy0\">,</span> k<span class=\"sy0\">-</span><span class=\"nu16\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> k1_factrl<span class=\"sy0\">;</span><br/>\t  k1_factrl <span class=\"sy0\">*=</span> <span class=\"sy0\">-</span>k<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  accm <span class=\"sy0\">=</span> c<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>k<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> a<span class=\"sy0\">;</span> k<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    accm <span class=\"sy0\">+=</span> c<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span> z <span class=\"sy0\">+</span> k <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  accm <span class=\"sy0\">*=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"br0\">(</span>z<span class=\"sy0\">+</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/pow.html\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span>z<span class=\"sy0\">+</span>a<span class=\"sy0\">,</span> z<span class=\"sy0\">+</span><span class=\"nu16\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* Gamma(z+1) */</span><br/>  <span class=\"kw1\">return</span> accm<span class=\"sy0\">/</span>z<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">double</span> x<span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%15s%15s%15s%15s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Stirling\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Spouge\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GSL\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"libm\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu16\">1.0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;=</span> <span class=\"nu16\">10.0</span><span class=\"sy0\">;</span> x<span class=\"sy0\">+=</span><span class=\"nu16\">1.0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%15.8lf%15.8lf%15.8lf%15.8lf<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> st_gamma<span class=\"br0\">(</span>x<span class=\"sy0\">/</span><span class=\"nu16\">3.0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> sp_gamma<span class=\"br0\">(</span>x<span class=\"sy0\">/</span><span class=\"nu16\">3.0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <br/>\t   gsl_sf_gamma<span class=\"br0\">(</span>x<span class=\"sy0\">/</span><span class=\"nu16\">3.0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> tgamma<span class=\"br0\">(</span>x<span class=\"sy0\">/</span><span class=\"nu16\">3.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 28, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Numerics</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">static</span> <span class=\"kw4\">int</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> p <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0.99999999999980993</span>, <span class=\"nu0\">676.5203681218851</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1259.1392167224028</span>,<br/>\t     <span class=\"nu0\">771.32342877765313</span>, <span class=\"sy0\">-</span><span class=\"nu0\">176.61502916214059</span>, <span class=\"nu0\">12.507343278686905</span>,<br/>\t     <span class=\"sy0\">-</span><span class=\"nu0\">0.13857109526572012</span>, 9<span class=\"sy0\">.</span>9843695780195716e<span class=\"sy0\">-</span>6, 1<span class=\"sy0\">.</span>5056327351493116e<span class=\"sy0\">-</span>7<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>Complex Gamma<span class=\"br0\">(</span>Complex z<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"co1\">// Reflection formula</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>z<span class=\"sy0\">.</span><span class=\"me1\">Real</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> Math<span class=\"sy0\">.</span><span class=\"me1\">PI</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>Complex<span class=\"sy0\">.</span><span class=\"me1\">Sin</span><span class=\"br0\">(</span> Math<span class=\"sy0\">.</span><span class=\"me1\">PI</span> <span class=\"sy0\">*</span> z<span class=\"br0\">)</span> <span class=\"sy0\">*</span> Gamma<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> z<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span><br/>\t<span class=\"br0\">{</span><br/>        z <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        Complex x <span class=\"sy0\">=</span> p<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> g <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>            x <span class=\"sy0\">+=</span> p<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>z<span class=\"sy0\">+</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>        Complex t <span class=\"sy0\">=</span> z <span class=\"sy0\">+</span> g <span class=\"sy0\">+</span> <span class=\"nu0\">0.5</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> Complex<span class=\"sy0\">.</span><span class=\"me1\">Sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> Math<span class=\"sy0\">.</span><span class=\"me1\">PI</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>Complex<span class=\"sy0\">.</span><span class=\"me1\">Pow</span><span class=\"br0\">(</span>t, z <span class=\"sy0\">+</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> Complex<span class=\"sy0\">.</span><span class=\"me1\">Exp</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>t<span class=\"br0\">)</span> <span class=\"sy0\">*</span> x<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Clojure", "loc": 15, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defn</span> gamma <br/>  <span class=\"st0\">\"Returns Gamma(z + 1 = number) using Lanczos approximation.\"</span><br/>  <span class=\"br0\">[</span>number<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> number <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"sy0\">/</span> Math<span class=\"sy0\">/</span>PI <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>sin <span class=\"br0\">(</span><span class=\"sy0\">*</span> Math<span class=\"sy0\">/</span>PI number<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t             <span class=\"br0\">(</span>gamma <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"nu0\">1</span> number<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>n <span class=\"br0\">(</span><span class=\"kw1\">dec</span> number<span class=\"br0\">)</span><br/>      \t     c <span class=\"br0\">[</span><span class=\"nu0\">0.99999999999980993</span> <span class=\"nu0\">676.5203681218851</span> <span class=\"sy0\">-</span><span class=\"nu0\">1259.1392167224028</span><br/>\t        <span class=\"nu0\">771.32342877765313</span> <span class=\"sy0\">-</span><span class=\"nu0\">176.61502916214059</span> <span class=\"nu0\">12.507343278686905</span><br/>\t        <span class=\"sy0\">-</span><span class=\"nu0\">0.13857109526572012</span> 9<span class=\"sy0\">.</span>9843695780195716e<span class=\"sy0\">-</span>6 1<span class=\"sy0\">.</span>5056327351493116e<span class=\"sy0\">-</span>7<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>         <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>sqrt <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">2</span> Math<span class=\"sy0\">/</span>PI<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>pow <span class=\"br0\">(</span><span class=\"sy0\">+</span> n <span class=\"nu0\">7</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> n <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>exp <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> n <span class=\"nu0\">7</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">first</span> c<span class=\"br0\">)</span> <br/>               <span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>map<span class=\"sy0\">-</span>indexed #<span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"sy0\">%</span>2 <span class=\"br0\">(</span><span class=\"sy0\">+</span> n <span class=\"sy0\">%</span>1 <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>next c<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Common Lisp", "loc": 26, "block": "<pre class=\"lisp highlighted_source\"><span class=\"co1\">; Taylor series coefficients</span><br/><span class=\"br0\">(</span>defconstant tcoeff<br/>  '<span class=\"br0\">(</span> <span class=\"nu0\">1.00000000000000000000</span>  <span class=\"nu0\">0.57721566490153286061</span> -<span class=\"nu0\">0.65587807152025388108</span><br/>    -<span class=\"nu0\">0.04200263503409523553</span>  <span class=\"nu0\">0.16653861138229148950</span> -<span class=\"nu0\">0.04219773455554433675</span><br/>    -<span class=\"nu0\">0.00962197152787697356</span>  <span class=\"nu0\">0.00721894324666309954</span> -<span class=\"nu0\">0.00116516759185906511</span><br/>    -<span class=\"nu0\">0.00021524167411495097</span>  <span class=\"nu0\">0.00012805028238811619</span> -<span class=\"nu0\">0.00002013485478078824</span><br/>    -<span class=\"nu0\">0.00000125049348214267</span>  <span class=\"nu0\">0.00000113302723198170</span> -<span class=\"nu0\">0.00000020563384169776</span><br/>     <span class=\"nu0\">0.00000000611609510448</span>  <span class=\"nu0\">0.00000000500200764447</span> -<span class=\"nu0\">0.00000000118127457049</span><br/>     <span class=\"nu0\">0.00000000010434267117</span>  <span class=\"nu0\">0.00000000000778226344</span> -<span class=\"nu0\">0.00000000000369680562</span><br/>     <span class=\"nu0\">0.00000000000051003703</span> -<span class=\"nu0\">0.00000000000002058326</span> -<span class=\"nu0\">0.00000000000000534812</span><br/>     <span class=\"nu0\">0.00000000000000122678</span> -<span class=\"nu0\">0.00000000000000011813</span>  <span class=\"nu0\">0.00000000000000000119</span><br/>     <span class=\"nu0\">0.00000000000000000141</span> -<span class=\"nu0\">0.00000000000000000023</span>  <span class=\"nu0\">0.00000000000000000002</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; number of coefficients</span><br/><span class=\"br0\">(</span>defconstant numcoeff <span class=\"br0\">(</span><span class=\"kw1\">length</span> tcoeff<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> gamma <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>y <span class=\"br0\">(</span>- x <span class=\"nu0\">1.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>sum <span class=\"br0\">(</span><span class=\"kw1\">nth</span> <span class=\"br0\">(</span>- numcoeff <span class=\"nu0\">1</span><span class=\"br0\">)</span> tcoeff<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>loop for i from <span class=\"br0\">(</span>- numcoeff <span class=\"nu0\">2</span><span class=\"br0\">)</span> downto <span class=\"nu0\">0</span> <span class=\"kw1\">do</span> <br/>          <span class=\"br0\">(</span><span class=\"kw1\">setf</span> sum <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* sum y<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">nth</span> i tcoeff<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>/ <span class=\"nu0\">1.0</span> sum<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>loop for i from <span class=\"nu0\">1</span> to <span class=\"nu0\">10</span><br/>   <span class=\"kw1\">do</span> <span class=\"br0\">(</span><br/>     format t <span class=\"st0\">\"~12,10f~%\"</span> <span class=\"br0\">(</span>gamma <span class=\"br0\">(</span>/ i <span class=\"nu0\">3.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 62, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"me1\">mathspecial</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">real</span> taylorGamma<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">real</span> x<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"br0\">]</span> table <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>     0x1p<span class=\"sy0\">+</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>                    0x1.2788cfc6fb618f4cp<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0x1.4fcf4026afa2dcecp<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"sy0\">-</span>0x1.5815e8fa27047c8cp<span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><br/>     0x1.5512320b43fbe5dep<span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"sy0\">-</span>0x1.59af103c340927bep<span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0x1.3b4af28483e214e4p<span class=\"sy0\">-</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span>   <span class=\"nu12\">0x1</span>.<span class=\"me1\">d919c527f60b195ap</span><span class=\"sy0\">-</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0x1.317112ce3a2a7bd2p<span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu12\">0x1</span>.<span class=\"me1\">c364fe6f1563ce9cp</span><span class=\"sy0\">-</span><span class=\"nu0\">13</span><span class=\"sy0\">,</span><br/>     0x1.0c8a78cd9f9d1a78p<span class=\"sy0\">-</span><span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0x1.51ce8af47eabdfdcp<span class=\"sy0\">-</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0x1.4fad41fc34fbb2p<span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span>    0x1.302509dbc0de2c82p<span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span><span class=\"nu12\">0x1</span>.<span class=\"me1\">b9986666c225d1d4p</span><span class=\"sy0\">-</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span>  <span class=\"nu12\">0x1</span>.<span class=\"me1\">a44b7ba22d628acap</span><span class=\"sy0\">-</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><br/>     0x1.57bc3fc384333fb2p<span class=\"sy0\">-</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0x1.44b4cedca388f7c6p<span class=\"sy0\">-</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span><br/>     <span class=\"nu12\">0x1</span>.<span class=\"me1\">cae7675c18606c6p</span><span class=\"sy0\">-</span><span class=\"nu0\">34</span><span class=\"sy0\">,</span>   0x1.11d065bfaf06745ap<span class=\"sy0\">-</span><span class=\"nu0\">37</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0x1.0423bac8ca3faaa4p<span class=\"sy0\">-</span><span class=\"nu0\">38</span><span class=\"sy0\">,</span>  0x1.1f20151323cd0392p<span class=\"sy0\">-</span><span class=\"nu0\">41</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0x1.72cb88ea5ae6e778p<span class=\"sy0\">-</span><span class=\"nu0\">46</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0x1.815f72a05f16f348p<span class=\"sy0\">-</span><span class=\"nu0\">48</span><span class=\"sy0\">,</span><br/>     0x1.6198491a83bccbep<span class=\"sy0\">-</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span>  <span class=\"sy0\">-</span>0x1.10613dde57a88bd6p<span class=\"sy0\">-</span><span class=\"nu0\">53</span><span class=\"sy0\">,</span><br/>     0x1.5e3fee81de0e9c84p<span class=\"sy0\">-</span><span class=\"nu0\">60</span><span class=\"sy0\">,</span>  <span class=\"nu12\">0x1</span>.<span class=\"me1\">a0dc770fb8a499b6p</span><span class=\"sy0\">-</span><span class=\"nu0\">60</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0x1.0f635344a29e9f8ep<span class=\"sy0\">-</span><span class=\"nu0\">62</span><span class=\"sy0\">,</span>  0x1.43d79a4b90ce8044p<span class=\"sy0\">-</span><span class=\"nu0\">66</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span> y <span class=\"sy0\">=</span> x <span class=\"sy0\">-</span> 1.0L<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">real</span> sm <span class=\"sy0\">=</span> table<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach_reverse</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> an<span class=\"sy0\">;</span> table<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> $ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        sm <span class=\"sy0\">=</span> sm <span class=\"sy0\">*</span> y <span class=\"sy0\">+</span> an<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> 1.0L <span class=\"sy0\">/</span> sm<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">real</span> lanczosGamma<span class=\"br0\">(</span><span class=\"kw4\">real</span> z<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Coefficients used by the GNU Scientific Library.</span><br/>    <span class=\"co1\">// http://en.wikipedia.org/wiki/Lanczos_approximation</span><br/>    <span class=\"kw4\">enum</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"br0\">]</span> table <span class=\"sy0\">=</span><br/>        <span class=\"br0\">[</span>    <span class=\"nu16\">0.99999</span>_99999_99809_93<span class=\"sy0\">,</span><br/>           <span class=\"nu16\">676.52036</span>_81218_851<span class=\"sy0\">,</span><br/>         <span class=\"sy0\">-</span><span class=\"nu16\">1259.13921</span>_67224_028<span class=\"sy0\">,</span><br/>           <span class=\"nu16\">771.32342</span>_87776_5313<span class=\"sy0\">,</span><br/>          <span class=\"sy0\">-</span><span class=\"nu16\">176.61502</span>_91621_4059<span class=\"sy0\">,</span><br/>            <span class=\"nu16\">12.50734</span>_32786_86905<span class=\"sy0\">,</span><br/>            <span class=\"sy0\">-</span><span class=\"nu16\">0.13857</span>_10952_65720_12<span class=\"sy0\">,</span><br/>             <span class=\"nu16\">9.98436</span>_95780_19571_6e<span class=\"sy0\">-</span>6<span class=\"sy0\">,</span><br/>             <span class=\"nu16\">1.50563</span>_27351_49311_6e<span class=\"sy0\">-</span>7<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Reflection formula.</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>z <span class=\"sy0\">&lt;</span> 0.5L<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> PI <span class=\"sy0\">/</span> <span class=\"br0\">(</span>sin<span class=\"br0\">(</span>PI <span class=\"sy0\">*</span> z<span class=\"br0\">)</span> <span class=\"sy0\">*</span> lanczosGamma<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> z<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        z <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">real</span> x <span class=\"sy0\">=</span> table<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">g</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            x <span class=\"sy0\">+=</span> table<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>z <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span> t <span class=\"sy0\">=</span> z <span class=\"sy0\">+</span> g <span class=\"sy0\">+</span> 0.5L<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> sqrt<span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> PI<span class=\"br0\">)</span> <span class=\"sy0\">*</span> t <span class=\"sy0\">^^</span> <span class=\"br0\">(</span>z <span class=\"sy0\">+</span> 0.5L<span class=\"br0\">)</span> <span class=\"sy0\">*</span> exp<span class=\"br0\">(</span><span class=\"sy0\">-</span>t<span class=\"br0\">)</span> <span class=\"sy0\">*</span> x<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span> x <span class=\"sy0\">=</span> i <span class=\"sy0\">/</span> 3.0L<span class=\"sy0\">;</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"%f:\u00a0%20.19e\u00a0%20.19e\u00a0%20.19e\"</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span><br/>                 x.<span class=\"me1\">taylorGamma</span><span class=\"sy0\">,</span> x.<span class=\"me1\">lanczosGamma</span><span class=\"sy0\">,</span> x.<span class=\"me1\">gamma</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Elixir", "loc": 21, "block": "<pre class=\"text highlighted_source\">defmodule Gamma do<br/>  @a [ 1.00000_00000_00000_00000,  0.57721_56649_01532_86061, -0.65587_80715_20253_88108,<br/>      -0.04200_26350_34095_23553,  0.16653_86113_82291_48950, -0.04219_77345_55544_33675,<br/>      -0.00962_19715_27876_97356,  0.00721_89432_46663_09954, -0.00116_51675_91859_06511,<br/>      -0.00021_52416_74114_95097,  0.00012_80502_82388_11619, -0.00002_01348_54780_78824,<br/>      -0.00000_12504_93482_14267,  0.00000_11330_27231_98170, -0.00000_02056_33841_69776,<br/>       0.00000_00061_16095_10448,  0.00000_00050_02007_64447, -0.00000_00011_81274_57049,<br/>       0.00000_00001_04342_67117,  0.00000_00000_07782_26344, -0.00000_00000_03696_80562,<br/>       0.00000_00000_00510_03703, -0.00000_00000_00020_58326, -0.00000_00000_00005_34812,<br/>       0.00000_00000_00001_22678, -0.00000_00000_00000_11813,  0.00000_00000_00000_00119,<br/>       0.00000_00000_00000_00141, -0.00000_00000_00000_00023,  0.00000_00000_00000_00002 ]<br/>     |&gt; Enum.reverse<br/>  def taylor(x) do<br/>    y = x - 1<br/>    1 / Enum.reduce(@a, 0, fn a,sum -&gt; sum * y + a end)<br/>  end<br/>end<br/>\u00a0<br/>Enum.each(Enum.map(1..10, &amp;(&amp;1/3)), fn x -&gt;<br/> \u00a0:io.format \"~f  ~18.15f~n\", [x, Gamma.taylor(x)]<br/>end)</pre>"}, {"lang": "Forth", "loc": 15, "block": "<pre class=\"text highlighted_source\">8 constant (gamma-shift)<br/>\u00a0<br/>: (mortici)                            ( f1 -- f2)<br/>  -1 s&gt;f f+ 1 s&gt;f<br/>  fover 271828183e-8 f* 12 s&gt;f f* f/<br/>  fover 271828183e-8 f/ f+<br/>  fover f** fswap<br/>  628318530e-8 f* fsqrt f*             \\ 2*pi<br/>;<br/>\u00a0<br/>: gamma                                ( f1 -- f2)<br/>  fdup f0&lt; &gt;r fdup f0= r&gt; or abort\" Gamma less or equal to zero\"<br/>  fdup (gamma-shift) s&gt;f f+ (mortici) fswap<br/>  1 s&gt;f (gamma-shift) 0 do fover i s&gt;f f+ f* loop fswap fdrop f/<br/>;</pre>"}, {"lang": "Fortran", "loc": 98, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> ComputeGammaInt<br/>\u00a0<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span><br/>\u00a0<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(3A15)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"Simpson\"</span>, <span class=\"st0\">\"Lanczos\"</span>, <span class=\"st0\">\"Builtin\"</span><br/>  <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, <span class=\"nu0\">10</span><br/>     write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(3F15.8)\"</span><span class=\"br0\">)</span> my_gamma<span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">3.0</span><span class=\"br0\">)</span>, lacz_gamma<span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">3.0</span><span class=\"br0\">)</span>, gamma<span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">3.0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/>  pure <span class=\"kw1\">function</span> intfuncgamma<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">z</span><br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span>, y<br/>\u00a0<br/>    z <span class=\"sy0\">=</span> x<span class=\"sy0\">**</span><span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1.0</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"kw4\">exp</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>x<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> intfuncgamma<br/>\u00a0<br/>\u00a0<br/>  <span class=\"kw1\">function</span> my_gamma<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">g</span><br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">a</span><br/>\u00a0<br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">small</span> <span class=\"sy0\">=</span> 1.0e<span class=\"sy0\">-</span>4<br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">points</span> <span class=\"sy0\">=</span> <span class=\"nu0\">100000</span><br/>\u00a0<br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">infty</span>, dx, p, sp<span class=\"br0\">(</span><span class=\"nu0\">2</span>, points<span class=\"br0\">)</span>, x<br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span><br/>    <span class=\"kw3\">logical</span> <span class=\"sy0\">::</span> <span class=\"me2\">correction</span><br/>\u00a0<br/>    x <span class=\"sy0\">=</span> a<br/>\u00a0<br/>    correction <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">false</span>.</span><br/>    <span class=\"co1\">! value with x&lt;1 gives \\infty, so we use</span><br/>    <span class=\"co1\">! \\Gamma(x+1) = x\\Gamma(x)</span><br/>    <span class=\"co1\">! to avoid the problem</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> x &lt; <span class=\"nu0\">1.0</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>       correction <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">true</span>.</span><br/>       x <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    <span class=\"co1\">! find a \"reasonable\" infinity...</span><br/>    <span class=\"co1\">! we compute this integral indeed</span><br/>    <span class=\"co1\">! \\int_0^M dt t^{x-1} e^{-t}</span><br/>    <span class=\"co1\">! where M is such that M^{x-1} e^{-M} \u2264 \\epsilon</span><br/>    infty <span class=\"sy0\">=</span> 1.0e4<br/>    <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span> intfuncgamma<span class=\"br0\">(</span>infty, x<span class=\"br0\">)</span> &gt; small <span class=\"br0\">)</span><br/>       infty <span class=\"sy0\">=</span> infty <span class=\"sy0\">*</span> <span class=\"nu0\">10.0</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/>    <span class=\"co1\">! using simpson</span><br/>    dx <span class=\"sy0\">=</span> infty<span class=\"sy0\">/</span><span class=\"kw3\">real</span><span class=\"br0\">(</span>points<span class=\"br0\">)</span><br/>    sp <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    forall<span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>points<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> sp<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"sy0\">*</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> intfuncgamma<span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">*</span>dx, x<span class=\"br0\">)</span><br/>    forall<span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>points<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> sp<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">2</span><span class=\"sy0\">*</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> intfuncgamma<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1.0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>dx, x<span class=\"br0\">)</span><br/>    g <span class=\"sy0\">=</span> <span class=\"br0\">(</span>intfuncgamma<span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, x<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">*</span>sum<span class=\"br0\">(</span>sp<span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"sy0\">:</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4.0</span><span class=\"sy0\">*</span>sum<span class=\"br0\">(</span>sp<span class=\"br0\">(</span><span class=\"nu0\">2</span>,<span class=\"sy0\">:</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"sy0\">&amp;</span><br/>         intfuncgamma<span class=\"br0\">(</span>infty, x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>dx<span class=\"sy0\">/</span><span class=\"nu0\">3.0</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> correction <span class=\"br0\">)</span> g <span class=\"sy0\">=</span> g<span class=\"sy0\">/</span>a<br/>\u00a0<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> my_gamma<br/>\u00a0<br/>\u00a0<br/>  <span class=\"kw1\">recursive</span> <span class=\"kw1\">function</span> lacz_gamma<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">a</span><br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">g</span><br/>\u00a0<br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">pi</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3.14159265358979324</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">cg</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/>\u00a0<br/>    <span class=\"co1\">! these precomputed values are taken by the sample code in Wikipedia,</span><br/>    <span class=\"co1\">! and the sample itself takes them from the GNU Scientific Library</span><br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">:</span><span class=\"nu0\">8</span><span class=\"br0\">)</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">p</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span><br/>         <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"nu0\">0.99999999999980993</span>, <span class=\"nu0\">676.5203681218851</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1259.1392167224028</span>, <span class=\"sy0\">&amp;</span><br/>         <span class=\"nu0\">771.32342877765313</span>, <span class=\"sy0\">-</span><span class=\"nu0\">176.61502916214059</span>, <span class=\"nu0\">12.507343278686905</span>, <span class=\"sy0\">&amp;</span><br/>         <span class=\"sy0\">-</span><span class=\"nu0\">0.13857109526572012</span>, 9.9843695780195716e<span class=\"sy0\">-</span>6, 1.5056327351493116e<span class=\"sy0\">-</span>7 <span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">t</span>, w, x<br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span><br/>\u00a0<br/>    x <span class=\"sy0\">=</span> a<br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> x &lt; <span class=\"nu0\">0.5</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>       g <span class=\"sy0\">=</span> pi <span class=\"sy0\">/</span> <span class=\"br0\">(</span> <span class=\"kw4\">sin</span><span class=\"br0\">(</span>pi<span class=\"sy0\">*</span>x<span class=\"br0\">)</span> <span class=\"sy0\">*</span> lacz_gamma<span class=\"br0\">(</span><span class=\"nu0\">1.0</span><span class=\"sy0\">-</span>x<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>       x <span class=\"sy0\">=</span> x <span class=\"sy0\">-</span> <span class=\"nu0\">1.0</span><br/>       t <span class=\"sy0\">=</span> p<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>       <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, cg<span class=\"sy0\">+</span><span class=\"nu0\">2</span><br/>          t <span class=\"sy0\">=</span> t <span class=\"sy0\">+</span> p<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"kw3\">real</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>       w <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> <span class=\"kw3\">real</span><span class=\"br0\">(</span>cg<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">0.5</span><br/>       g <span class=\"sy0\">=</span> <span class=\"kw4\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"sy0\">*</span>pi<span class=\"br0\">)</span> <span class=\"sy0\">*</span> w<span class=\"sy0\">**</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"kw4\">exp</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>w<span class=\"br0\">)</span> <span class=\"sy0\">*</span> t<br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> lacz_gamma<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> ComputeGammaInt</pre>"}, {"lang": "FreeBASIC", "loc": 47, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Const</span> pi = <span class=\"nu0\">3.1415926535897932</span><br/><span class=\"kw1\">Const</span> e  = <span class=\"nu0\">2.7182818284590452</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> gammaStirling <span class=\"br0\">(</span>x <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span><br/>  <span class=\"kw1\">Return</span> <span class=\"kw1\">Sqr</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span> * pi / x<span class=\"br0\">)</span> * <span class=\"br0\">(</span><span class=\"br0\">(</span>x / e<span class=\"br0\">)</span> ^ x<span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> gammaLanczos <span class=\"br0\">(</span>x <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span><br/>  <span class=\"kw1\">Dim</span> p<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> = _ <br/>  <span class=\"br0\">{</span> _<br/>       <span class=\"nu0\">0.99999999999980993</span>, _ <br/>     <span class=\"nu0\">676.5203681218851</span>, _ <br/>   -<span class=\"nu0\">1259.1392167224028</span>, _\t\t\t     \t  <br/>     <span class=\"nu0\">771.32342877765313</span>, _ <br/>    -<span class=\"nu0\">176.61502916214059</span>, _ <br/>      <span class=\"nu0\">12.507343278686905</span>, _<br/>      -<span class=\"nu0\">0.13857109526572012</span>, _ <br/>       9.9843695780195716e-6, _<br/>       1.5056327351493116e-7 _<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> g = <span class=\"nu0\">7</span><br/>  <span class=\"kw1\">If</span> x &lt; <span class=\"nu0\">0.5</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> pi / <span class=\"br0\">(</span><span class=\"kw1\">Sin</span><span class=\"br0\">(</span>pi * x<span class=\"br0\">)</span> * gammaLanczos<span class=\"br0\">(</span><span class=\"nu0\">1</span>-x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  x -= <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Dim</span> a <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> = p<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Dim</span> t <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> = x + g + <span class=\"nu0\">0.5</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">8</span><br/>    a += p<span class=\"br0\">(</span>i<span class=\"br0\">)</span> / <span class=\"br0\">(</span>x + i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span>\t\t <br/>\u00a0<br/>  <span class=\"kw1\">Return</span> <span class=\"kw1\">Sqr</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span> * pi<span class=\"br0\">)</span> * <span class=\"br0\">(</span>t ^ <span class=\"br0\">(</span>x + <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> * <span class=\"kw1\">Exp</span><span class=\"br0\">(</span>-t<span class=\"br0\">)</span> * a  <br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Print</span> <span class=\"st0\">\" x\"</span>, <span class=\"st0\">\"    Stirling\"</span>,, <span class=\"st0\">\"    Lanczos\"</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">20</span><br/>   <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> d = i / <span class=\"nu0\">10.0</span><br/>   <span class=\"kw1\">Print</span>   <span class=\"kw1\">Using</span> <span class=\"st0\">\"#.##\"</span>; d; <br/>   <span class=\"kw1\">Print</span> , <span class=\"kw1\">Using</span> <span class=\"st0\">\"#.###############\"</span>; gammaStirling<span class=\"br0\">(</span>d<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">Print</span> , <span class=\"kw1\">Using</span> <span class=\"st0\">\"#.###############\"</span>; gammaLanczos<span class=\"br0\">(</span>d<span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "F#", "loc": 18, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>\u00a0<br/>open System<br/>\u00a0<br/>let gamma z = <br/>    let lanczosCoefficients = [76.18009172947146;-86.50532032941677;24.01409824083091;-1.231739572450155;0.1208650973866179e-2;-0.5395239384953e-5]<br/>    let rec sumCoefficients acc i coefficients =<br/>        match coefficients with<br/>        | []   -&gt; acc<br/>        | h::t -&gt; sumCoefficients (acc + (h/i)) (i+1.0) t<br/>    let gamma = 5.0<br/>    let x = z - 1.0<br/>    Math.Pow(x + gamma + 0.5, x + 0.5) * Math.Exp( -(x + gamma + 0.5) ) * Math.Sqrt( 2.0 * Math.PI ) * sumCoefficients 1.000000000190015 (x + 1.0) lanczosCoefficients<br/>\u00a0<br/>seq { for i in 1 .. 20 do yield ((double)i/10.0) } |&gt; Seq.iter ( fun v -&gt; System.Console.WriteLine(\"{0}\u00a0: {1}\", v, gamma v ) )<br/>seq { for i in 1 .. 10 do yield ((double)i*10.0) } |&gt; Seq.iter ( fun v -&gt; System.Console.WriteLine(\"{0}\u00a0: {1}\", v, gamma v ) )<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Go", "loc": 27, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"    x               math.Gamma                 Lanczos7\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> x <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> <span class=\"sy1\">[]</span><span class=\"kw4\">float64</span><span class=\"sy1\">{</span><span class=\"sy3\">-.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"sy3\">.</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">140</span><span class=\"sy1\">,</span> <span class=\"nu0\">170</span><span class=\"sy1\">}</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%5.1f\u00a0%24.16g\u00a0%24.16g<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> math<span class=\"sy3\">.</span>Gamma<span class=\"sy1\">(</span>x<span class=\"sy1\">),</span> lanczos7<span class=\"sy1\">(</span>x<span class=\"sy1\">))</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> lanczos7<span class=\"sy1\">(</span>z <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    t <span class=\"sy2\">:=</span> z <span class=\"sy3\">+</span> <span class=\"nu0\">6</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><br/>    x <span class=\"sy2\">:=</span> <span class=\"sy3\">.</span><span class=\"nu0\">99999999999980993</span> <span class=\"sy3\">+</span><br/>        <span class=\"nu0\">676</span><span class=\"sy3\">.</span><span class=\"nu0\">5203681218851</span><span class=\"sy3\">/</span>z <span class=\"sy3\">-</span><br/>        <span class=\"nu0\">1259</span><span class=\"sy3\">.</span><span class=\"nu0\">1392167224028</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>z<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span> <span class=\"sy3\">+</span><br/>        <span class=\"nu0\">771</span><span class=\"sy3\">.</span><span class=\"nu0\">32342877765313</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>z<span class=\"sy3\">+</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span> <span class=\"sy3\">-</span><br/>        <span class=\"nu0\">176</span><span class=\"sy3\">.</span><span class=\"nu0\">61502916214059</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>z<span class=\"sy3\">+</span><span class=\"nu0\">3</span><span class=\"sy1\">)</span> <span class=\"sy3\">+</span><br/>        <span class=\"nu0\">12</span><span class=\"sy3\">.</span><span class=\"nu0\">507343278686905</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>z<span class=\"sy3\">+</span><span class=\"nu0\">4</span><span class=\"sy1\">)</span> <span class=\"sy3\">-</span><br/>        <span class=\"sy3\">.</span><span class=\"nu0\">13857109526572012</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>z<span class=\"sy3\">+</span><span class=\"nu0\">5</span><span class=\"sy1\">)</span> <span class=\"sy3\">+</span><br/>        <span class=\"nu0\">9</span><span class=\"sy3\">.</span>9843695780195716e<span class=\"sy3\">-</span><span class=\"nu0\">6</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>z<span class=\"sy3\">+</span><span class=\"nu0\">6</span><span class=\"sy1\">)</span> <span class=\"sy3\">+</span><br/>        <span class=\"nu0\">1</span><span class=\"sy3\">.</span>5056327351493116e<span class=\"sy3\">-</span><span class=\"nu0\">7</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>z<span class=\"sy3\">+</span><span class=\"nu0\">7</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">return</span> math<span class=\"sy3\">.</span>Sqrt2 <span class=\"sy3\">*</span> math<span class=\"sy3\">.</span>SqrtPi <span class=\"sy3\">*</span> math<span class=\"sy3\">.</span>Pow<span class=\"sy1\">(</span>t<span class=\"sy1\">,</span> z<span class=\"sy3\">-.</span><span class=\"nu0\">5</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span> math<span class=\"sy3\">.</span>Exp<span class=\"sy1\">(</span><span class=\"sy3\">-</span>t<span class=\"sy1\">)</span> <span class=\"sy3\">*</span> x<br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 15, "block": "<pre class=\"groovy highlighted_source\">a <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"nu0\">1.00000000000000000000</span>, <span class=\"nu0\">0.57721566490153286061</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.65587807152025388108</span>,<br/>     <span class=\"sy0\">-</span><span class=\"nu0\">0.04200263503409523553</span>, <span class=\"nu0\">0.16653861138229148950</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.04219773455554433675</span>,<br/>     <span class=\"sy0\">-</span><span class=\"nu0\">0.00962197152787697356</span>, <span class=\"nu0\">0.00721894324666309954</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00116516759185906511</span>,<br/>     <span class=\"sy0\">-</span><span class=\"nu0\">0.00021524167411495097</span>, <span class=\"nu0\">0.00012805028238811619</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00002013485478078824</span>,<br/>     <span class=\"sy0\">-</span><span class=\"nu0\">0.00000125049348214267</span>, <span class=\"nu0\">0.00000113302723198170</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000020563384169776</span>,<br/>      <span class=\"nu0\">0.00000000611609510448</span>, <span class=\"nu0\">0.00000000500200764447</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000118127457049</span>,<br/>      <span class=\"nu0\">0.00000000010434267117</span>, <span class=\"nu0\">0.00000000000778226344</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000369680562</span>,<br/>      <span class=\"nu0\">0.00000000000051003703</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000002058326</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000534812</span>,<br/>      <span class=\"nu0\">0.00000000000000122678</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000011813</span>, <span class=\"nu0\">0.00000000000000000119</span>,<br/>      <span class=\"nu0\">0.00000000000000000141</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000000023</span>, <span class=\"nu0\">0.00000000000000000002</span><span class=\"br0\">]</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20reverse\"><span class=\"kw5\">reverse</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> gamma <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1.0</span> / a.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20inject\"><span class=\"kw5\">inject</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> sm, a_i <span class=\"sy0\">-&gt;</span> sm <span class=\"sy0\">*</span> <span class=\"br0\">(</span>it <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> a_i <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">10</span><span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a><span class=\"br0\">{</span> printf<span class=\"br0\">(</span><span class=\"st0\">\"%  1.9e<span class=\"es0\">\\n</span>\"</span>, gamma<span class=\"br0\">(</span>it / <span class=\"nu0\">3.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Haskell", "loc": 21, "block": "<pre class=\"haskell highlighted_source\">cof <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">]</span><br/>cof <span class=\"sy0\">=</span><br/>  <span class=\"br0\">[</span> <span class=\"nu0\">76.18009172947146</span><br/>  <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">86.50532032941677</span><br/>  <span class=\"sy0\">,</span> <span class=\"nu0\">24.01409824083091</span><br/>  <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.231739572450155</span><br/>  <span class=\"sy0\">,</span> <span class=\"nu0\">0.001208650973866179</span><br/>  <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.000005395239384953</span><br/>  <span class=\"br0\">]</span><br/>\u00a0<br/>ser <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>ser <span class=\"sy0\">=</span> <span class=\"nu0\">1.000000000190015</span><br/>\u00a0<br/>gammaln <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>gammaln xx <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> tmp<span class=\"sy0\">_</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>xx <span class=\"sy0\">+</span> <span class=\"nu0\">5.5</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>xx <span class=\"sy0\">+</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:log\"><span class=\"kw3\">log</span></a> <span class=\"br0\">(</span>xx <span class=\"sy0\">+</span> <span class=\"nu0\">5.5</span><span class=\"br0\">)</span><br/>      ser<span class=\"sy0\">_</span> <span class=\"sy0\">=</span> ser <span class=\"sy0\">+</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zipWith\"><span class=\"kw3\">zipWith</span></a> <span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"br0\">)</span> cof <span class=\"br0\">[</span>xx <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">in</span> <span class=\"sy0\">-</span>tmp<span class=\"sy0\">_</span> <span class=\"sy0\">+</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:log\"><span class=\"kw3\">log</span></a> <span class=\"br0\">(</span><span class=\"nu0\">2.5066282746310005</span> <span class=\"sy0\">*</span> ser<span class=\"sy0\">_</span> <span class=\"sy0\">/</span> xx<span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">$</span> gammaln <span class=\"sy0\">&lt;$&gt;</span> <span class=\"br0\">[</span><span class=\"nu0\">0.1</span><span class=\"sy0\">,</span><span class=\"nu0\">0.2</span> <span class=\"sy0\">..</span> <span class=\"nu0\">1.0</span><span class=\"br0\">]</span></pre>"}, {"lang": "Icon and Unicon", "loc": 7, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"kw4\">left</span><span class=\"br0\">(</span>i <span class=\"sy0\">:=</span> <span class=\"sy0\">!</span><span class=\"nu0\">10</span><span class=\"sy0\">/</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>gamma<span class=\"br0\">(</span><span class=\"sy0\">.</span><span class=\"me1\">i</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> gamma<span class=\"br0\">(</span>z<span class=\"br0\">)</span>\t<span class=\"co1\"># Stirling's approximation</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*&amp;</span><span class=\"kw3\">pi</span><span class=\"sy0\">/</span>z<span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>z<span class=\"sy0\">/&amp;</span><span class=\"kw3\">e</span><span class=\"br0\">)</span><span class=\"sy0\">^</span>z<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 1, "block": "<pre class=\"j highlighted_source\">gamma=:\u00a0<a class=\"__cf_email__\" data-cfemail=\"1c3d5c\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>&lt;:</pre>"}, {"lang": "Java", "loc": 31, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> GammaFunction <span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">double</span> st_gamma<span class=\"br0\">(</span><span class=\"kw4\">double</span> x<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">PI</span><span class=\"sy0\">/</span>x<span class=\"br0\">)</span><span class=\"sy0\">*</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"sy0\">/</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">E</span><span class=\"br0\">)</span>, x<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">double</span> la_gamma<span class=\"br0\">(</span><span class=\"kw4\">double</span> x<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> p <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0.99999999999980993</span>, <span class=\"nu0\">676.5203681218851</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1259.1392167224028</span>,<br/>\t\t\t     \t  <span class=\"nu0\">771.32342877765313</span>, <span class=\"sy0\">-</span><span class=\"nu0\">176.61502916214059</span>, <span class=\"nu0\">12.507343278686905</span>,<br/>\t\t\t     \t  <span class=\"sy0\">-</span><span class=\"nu0\">0.13857109526572012</span>, 9.9843695780195716e<span class=\"sy0\">-</span>6, 1.5056327351493116e<span class=\"sy0\">-</span>7<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">int</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">PI</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sin</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">PI</span> <span class=\"sy0\">*</span> x<span class=\"br0\">)</span><span class=\"sy0\">*</span>la_gamma<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tx <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">double</span> a <span class=\"sy0\">=</span> p<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">double</span> t <span class=\"sy0\">=</span> x<span class=\"sy0\">+</span>g<span class=\"sy0\">+</span><span class=\"nu0\">0.5</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> p.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\ta <span class=\"sy0\">+=</span> p<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">PI</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">pow</span><span class=\"br0\">(</span>t, x<span class=\"sy0\">+</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">exp</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>t<span class=\"br0\">)</span><span class=\"sy0\">*</span>a<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tGammaFunction test <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> GammaFunction<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Gamma <span class=\"es0\">\\t</span><span class=\"es0\">\\t</span>Stirling <span class=\"es0\">\\t</span><span class=\"es0\">\\t</span>Lanczos\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span> <span class=\"sy0\">+</span> i<span class=\"sy0\">/</span><span class=\"nu0\">10.0</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span><span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> test.<span class=\"me1\">st_gamma</span><span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">10.0</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> test.<span class=\"me1\">la_gamma</span><span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 20, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> p <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0.99999999999980993</span><span class=\"sy0\">,</span> <span class=\"nu0\">676.5203681218851</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1259.1392167224028</span><span class=\"sy0\">,</span><br/>        <span class=\"nu0\">771.32342877765313</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">176.61502916214059</span><span class=\"sy0\">,</span> <span class=\"nu0\">12.507343278686905</span><span class=\"sy0\">,</span><br/>        <span class=\"sy0\">-</span><span class=\"nu0\">0.13857109526572012</span><span class=\"sy0\">,</span> 9.9843695780195716e<span class=\"sy0\">-</span>6<span class=\"sy0\">,</span> 1.5056327351493116e<span class=\"sy0\">-</span>7<br/>    <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">var</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span> <span class=\"sy0\">*</span> x<span class=\"br0\">)</span> <span class=\"sy0\">*</span> gamma<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    x <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> a <span class=\"sy0\">=</span> p<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> t <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> g <span class=\"sy0\">+</span> <span class=\"nu0\">0.5</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> p.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        a <span class=\"sy0\">+=</span> p<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span>t<span class=\"sy0\">,</span> x <span class=\"sy0\">+</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">exp</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>t<span class=\"br0\">)</span> <span class=\"sy0\">*</span> a<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "jq", "loc": 16, "block": "<pre class=\"text highlighted_source\">def gamma:<br/>  [<br/>    1.00000000000000000000,  0.57721566490153286061,  -0.65587807152025388108, -0.04200263503409523553,<br/>    0.16653861138229148950, -0.04219773455554433675,  -0.00962197152787697356,  0.00721894324666309954,<br/>   -0.00116516759185906511, -0.00021524167411495097,   0.00012805028238811619, -0.00002013485478078824,<br/>   -0.00000125049348214267,  0.00000113302723198170,  -0.00000020563384169776,  0.00000000611609510448,<br/>    0.00000000500200764447, -0.00000000118127457049,   0.00000000010434267117,  0.00000000000778226344,<br/>   -0.00000000000369680562,  0.00000000000051003703,  -0.00000000000002058326, -0.00000000000000534812,<br/>    0.00000000000000122678, -0.00000000000000011813,   0.00000000000000000119,  0.00000000000000000141,<br/>   -0.00000000000000000023,  0.00000000000000000002<br/>  ] as $a<br/>  | (. - 1) as $y<br/>  | ($a|length) as $n<br/>  | reduce range(2; 1+$n) as $an<br/>      ($a[$n-1]; (. * $y) + $a[$n - $an])<br/>  | 1 / .\u00a0;</pre>"}, {"lang": "Julia", "loc": 1, "block": "<pre class=\"text highlighted_source\">@show gamma(1)</pre>"}, {"lang": "Kotlin", "loc": 35, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/>fun gammaStirling<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> Math.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> Math.<span class=\"me1\">PI</span> / x<span class=\"br0\">)</span> <span class=\"sy0\">*</span> Math.<span class=\"me1\">pow</span><span class=\"br0\">(</span>x / Math.<span class=\"me1\">E</span>, x<span class=\"br0\">)</span><br/>\u00a0<br/>fun gammaLanczos<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> xx <span class=\"sy0\">=</span> x<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> doubleArrayOf<span class=\"br0\">(</span><br/>        <span class=\"nu0\">0.99999999999980993</span>, <br/>      <span class=\"nu0\">676.5203681218851</span>,<br/>    -<span class=\"nu0\">1259.1392167224028</span>,\t\t\t     \t  <br/>      <span class=\"nu0\">771.32342877765313</span>,<br/>     -<span class=\"nu0\">176.61502916214059</span>,<br/>       <span class=\"nu0\">12.507343278686905</span>,<br/>       -<span class=\"nu0\">0.13857109526572012</span>,<br/>        9.9843695780195716e-6,<br/>        1.5056327351493116e-7<br/>    <span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> g <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>xx <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Math.<span class=\"me1\">PI</span> / <span class=\"br0\">(</span>Math.<span class=\"me1\">sin</span><span class=\"br0\">(</span>Math.<span class=\"me1\">PI</span> <span class=\"sy0\">*</span> xx<span class=\"br0\">)</span> <span class=\"sy0\">*</span> gammaLanczos<span class=\"br0\">(</span><span class=\"nu0\">1.0</span> - xx<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    xx--<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> a <span class=\"sy0\">=</span> p<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> t <span class=\"sy0\">=</span> xx + g + <span class=\"nu0\">0.5</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span> until p.<span class=\"me1\">size</span><span class=\"br0\">)</span> a +<span class=\"sy0\">=</span> p<span class=\"br0\">[</span>i<span class=\"br0\">]</span> / <span class=\"br0\">(</span>xx + i<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Math.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> Math.<span class=\"me1\">PI</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> Math.<span class=\"me1\">pow</span><span class=\"br0\">(</span>t, xx + <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> Math.<span class=\"me1\">exp</span><span class=\"br0\">(</span>-t<span class=\"br0\">)</span> <span class=\"sy0\">*</span> a<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\" x<span class=\"es1\">\\t</span>Stirling<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>Lanczos<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span> .. <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d <span class=\"sy0\">=</span> i / <span class=\"nu0\">10.0</span><br/>        print<span class=\"br0\">(</span><span class=\"st0\">\"%4.2f<span class=\"es1\">\\t</span>\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        print<span class=\"br0\">(</span><span class=\"st0\">\"%17.15f<span class=\"es1\">\\t</span>\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>gammaStirling<span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"%17.15f\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>gammaLanczos<span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Limbo", "loc": 45, "block": "<pre class=\"text highlighted_source\">implement Lanczos7;<br/>\u00a0<br/>include \"sys.m\"; sys: Sys;<br/>include \"draw.m\";<br/>include \"math.m\"; math: Math;<br/>\tlgamma, exp, pow, sqrt: import math;<br/>\u00a0<br/>Lanczos7: module {<br/>\tinit: fn(nil: ref Draw-&gt;Context, nil: list of string);<br/>};<br/>\u00a0<br/>init(nil: ref Draw-&gt;Context, nil: list of string)<br/>{<br/>\tsys = load Sys Sys-&gt;PATH;<br/>\tmath = load Math Math-&gt;PATH;<br/>\t# We ignore some floating point exceptions:<br/>\tmath-&gt;FPcontrol(0, Math-&gt;OVFL|Math-&gt;UNFL);<br/>\tns\u00a0: list of real = -0.5\u00a0:: 0.1\u00a0:: 0.5\u00a0:: 1.0\u00a0:: 1.5\u00a0:: 2.0\u00a0:: 3.0\u00a0:: 10.0\u00a0:: 140.0\u00a0:: 170.0\u00a0:: nil;<br/>\u00a0<br/>\tsys-&gt;print(\"%5s\u00a0%24s\u00a0%24s\\n\", \"x\", \"math-&gt;lgamma\", \"lanczos7\");<br/>\twhile(ns\u00a0!= nil) {<br/>\t\tx\u00a0:= hd ns;<br/>\t\tns = tl ns;<br/>\t\t# math-&gt;lgamma returns a tuple.<br/>\t\t(i, r)\u00a0:= lgamma(x);<br/>\t\tg\u00a0:= real i * exp(r);<br/>\t\tsys-&gt;print(\"%5.1f\u00a0%24.16g\u00a0%24.16g\\n\", x, g, lanczos7(x));<br/>\t}<br/>}<br/>\u00a0<br/>lanczos7(z: real): real<br/>{<br/>\tt\u00a0:= z + 6.5;<br/>\tx\u00a0:= 0.99999999999980993 +<br/>\t\t676.5203681218851/z -<br/>\t\t1259.1392167224028/(z+1.0) +<br/>\t\t771.32342877765313/(z+2.0) -<br/>\t\t176.61502916214059/(z+3.0) +<br/>\t\t12.507343278686905/(z+4.0) -<br/>\t\t0.13857109526572012/(z+5.0) +<br/>\t\t9.9843695780195716e-6/(z+6.0) +<br/>\t\t1.5056327351493116e-7/(z+7.0);<br/>\treturn sqrt(2.0) * sqrt(Math-&gt;Pi) * pow(t, z - 0.5) * exp(-t) * x;<br/>}<br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 11, "block": "<pre class=\"lua highlighted_source\">gamma<span class=\"sy0\">,</span> coeff<span class=\"sy0\">,</span> quad<span class=\"sy0\">,</span> qui<span class=\"sy0\">,</span> set <span class=\"sy0\">=</span> <span class=\"nu0\">0.577215664901</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.65587807152056</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.042002635033944</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.16653861138228</span><span class=\"sy0\">,</span>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.042197734555571</span><br/><span class=\"kw1\">function</span> recigamma<span class=\"br0\">(</span>z<span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> z <span class=\"sy0\">+</span> gamma <span class=\"sy0\">*</span> z<span class=\"sy0\">^</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> coeff <span class=\"sy0\">*</span> z<span class=\"sy0\">^</span><span class=\"nu0\">3</span> <span class=\"sy0\">+</span> quad <span class=\"sy0\">*</span> z<span class=\"sy0\">^</span><span class=\"nu0\">4</span> <span class=\"sy0\">+</span> qui <span class=\"sy0\">*</span> z<span class=\"sy0\">^</span><span class=\"nu0\">5</span> <span class=\"sy0\">+</span> set <span class=\"sy0\">*</span> z<span class=\"sy0\">^</span><span class=\"nu0\">6</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> gammafunc<span class=\"br0\">(</span>z<span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> z <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">elseif</span> <span class=\"kw3\">math.abs</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0.5</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> recigamma<span class=\"br0\">(</span>z<span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span>z <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> gammafunc<span class=\"br0\">(</span>z<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 33, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module PrepareLambdaFunctions {<br/>      Const e = <a class=\"__cf_email__\" data-cfemail=\"bf8d91888e878d878e878d878b8a868f8b8a8dff\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>      Exp= Lambda e (x) -&gt; e^x<br/>      gammaStirling=lambda e (x As Double)-&gt;Sqrt(2.0 * pi / x) * ((x / e) ^ x)<br/>      Rad2Deg =Lambda pidivby180=pi/180 (RadAngle)-&gt;RadAngle / pidivby180<br/>      Dim p(9)<br/>      p(0)=0.99999999999980993, 676.5203681218851,   -1259.1392167224028,  771.32342877765313<br/>      p(4)=-176.61502916214059,  12.507343278686905,  -0.13857109526572012,  9.9843695780195716e-6<br/>      p(8)=1.5056327351493116e-7<br/>      gammaLanczos =Lambda p(), Rad2Deg, Exp (x As Double) -&gt; {<br/>            If x &lt; 0.5 Then =pi / (Sin(Rad2Deg(pi * x)) *Lambda(1-x))\u00a0: Exit<br/>            x -= 1<br/>            a=p(0)<br/>            t = x + 7.5<br/>            For i= 1% To 8% {<br/>                  a += p(i) / (x + i)<br/>            }<br/>             = Sqrt(2.0 * pi) * (t ^ (x + 0.5)) * Exp(-t) * a  <br/>      }<br/>      Push gammaStirling, gammaLanczos<br/>}<br/>Call PrepareLambdaFunctions<br/>Read gammaLanczos, gammaStirling<br/>Form 60, 80 <br/>Print $(2,20),\"x\", \"Stirling\",\"Lanczos\", $(0)<br/>For d = 0.1 To 2 step 0.1<br/>      Print   $(\"0.00\"), d,<br/>      Print  $(\"0.000000000000000\"), gammaStirling(d),<br/>      Print  $(\"0.000000000000000\"), gammaLanczos(d)<br/>Next d<br/>Print $(\"\")<br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 4, "block": "<pre class=\"text highlighted_source\">GAMMA(17/2);<br/>GAMMA(7*I);<br/>M\u00a0:= Matrix(2, 3, 'fill' = -3.6);<br/>MTM:-gamma(M);</pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre class=\"text highlighted_source\">Gamma[x]</pre>"}, {"lang": "Maxima", "loc": 21, "block": "<pre class=\"text highlighted_source\">fpprec: 30$<br/>\u00a0<br/>gamma_coeff(n)\u00a0:= block([a: makelist(1, n)],<br/>   a[2]: bfloat(%gamma),<br/>   for k from 3 thru n do<br/>      a[k]: bfloat((sum((-1)^j * zeta(j) * a[k - j], j, 2, k - 1) - a[2] * a[k - 1]) / (1 - k * a[1])),<br/>   a)$<br/>\u00a0<br/>poleval(a, x)\u00a0:= block([y: 0],<br/>   for k from length(a) thru 1 step -1 do<br/>      y: y * x + a[k],<br/>   y)$<br/>\u00a0<br/>gc: gamma_coeff(20)$<br/>\u00a0<br/>gamma_approx(x)\u00a0:= block([y: 1],<br/>   while x &gt; 2 do (x: x - 1, y: y * x),<br/>   y / (poleval(gc, x - 1)))$<br/>\u00a0<br/>gamma_approx(12.3b0) - gamma(12.3b0);<br/>/* -9.25224705314470500985141176997b-15 */</pre>"}, {"lang": "Modula-3", "loc": 37, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> Gamma <span class=\"kw1\">EXPORTS</span> Main;<br/>\u00a0<br/><span class=\"kw1\">FROM</span> IO <span class=\"kw1\">IMPORT</span> Put;<br/><span class=\"kw1\">FROM</span> Fmt <span class=\"kw1\">IMPORT</span> Extended<span class=\"sy0\">,</span> Style;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Taylor<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> <span class=\"kw3\">EXTENDED</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw3\">EXTENDED</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">CONST</span> a <span class=\"sy0\">=</span> <span class=\"kw1\">ARRAY</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">29</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw3\">EXTENDED</span> <span class=\"br0\">{</span><br/>    1.00000000000000000000X0<span class=\"sy0\">,</span> 0.57721566490153286061X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.65587807152025388108X0<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0.04200263503409523553X0<span class=\"sy0\">,</span><br/>    0.16653861138229148950X0<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0.04219773455554433675X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.00962197152787697356X0<span class=\"sy0\">,</span> 0.00721894324666309954X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.00116516759185906511X0<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0.00021524167411495097X0<span class=\"sy0\">,</span><br/>    0.00012805028238811619X0<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0.00002013485478078824X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.00000125049348214267X0<span class=\"sy0\">,</span> 0.00000113302723198170X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.00000020563384169776X0<span class=\"sy0\">,</span> 0.00000000611609510448X0<span class=\"sy0\">,</span><br/>    0.00000000500200764447X0<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0.00000000118127457049X0<span class=\"sy0\">,</span><br/>    0.00000000010434267117X0<span class=\"sy0\">,</span> 0.00000000000778226344X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.00000000000369680562X0<span class=\"sy0\">,</span> 0.00000000000051003703X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.00000000000002058326X0<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0.00000000000000534812X0<span class=\"sy0\">,</span><br/>    0.00000000000000122678X0<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>0.00000000000000011813X0<span class=\"sy0\">,</span><br/>    0.00000000000000000119X0<span class=\"sy0\">,</span> 0.00000000000000000141X0<span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-</span>0.00000000000000000023X0<span class=\"sy0\">,</span> 0.00000000000000000002X0 <span class=\"br0\">}</span>;<br/>  <span class=\"kw1\">VAR</span> y <span class=\"sy0\">:=</span> x <span class=\"sy0\">-</span> 1.0X0;<br/>      sum <span class=\"sy0\">:=</span> a<span class=\"br0\">[</span><span class=\"kw3\">LAST</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/>\u00a0<br/>  <span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"kw3\">LAST</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"kw3\">FIRST</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">BY</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>      sum <span class=\"sy0\">:=</span> sum <span class=\"sy0\">*</span> y <span class=\"sy0\">+</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span>;<br/>    <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">RETURN</span> 1.0X0 <span class=\"sy0\">/</span> sum;<br/>  <span class=\"kw1\">END</span> Taylor;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  <span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">10</span> <span class=\"kw1\">DO</span><br/>    Put<span class=\"br0\">(</span>Extended<span class=\"br0\">(</span>Taylor<span class=\"br0\">(</span><span class=\"kw3\">FLOAT</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"kw3\">EXTENDED</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> 3.0X0<span class=\"br0\">)</span><span class=\"sy0\">,</span> style <span class=\"sy0\">:=</span> Style.<span class=\"me1\">Sci</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">END</span>;<br/><span class=\"kw1\">END</span> Gamma.</pre>"}, {"lang": "\u041c\u041a-61/52", "loc": 1, "block": "<pre>\u041f9\t9\t\u041f0\t\u0418\u041f9\t\u0418\u041f9\t1\t+\t*\t\u0412x\tL0\n05\t1\t+\t\u041f9\t^\tln\t1\t-\t*\t\u0418\u041f9\n1\t2\t*\t1/x\t+\te^x\t&lt;-&gt;\t/\t2\t\u043f\u0438\n*\t\u0418\u041f9\t/\t\u041a\u0432\u041a\u043e\u0440\t*\t^\t\u0412\u041f\t3\t+\t\u0412x\n-\t\u0421/\u041f\n</pre>"}, {"lang": "Nim", "loc": 21, "block": "<pre class=\"text highlighted_source\">const a = [<br/> 1.00000000000000000000,  0.57721566490153286061, -0.65587807152025388108,<br/>-0.04200263503409523553,  0.16653861138229148950, -0.04219773455554433675,<br/>-0.00962197152787697356,  0.00721894324666309954, -0.00116516759185906511,<br/>-0.00021524167411495097,  0.00012805028238811619, -0.00002013485478078824,<br/>-0.00000125049348214267,  0.00000113302723198170, -0.00000020563384169776,<br/> 0.00000000611609510448,  0.00000000500200764447, -0.00000000118127457049,<br/> 0.00000000010434267117,  0.00000000000778226344, -0.00000000000369680562,<br/> 0.00000000000051003703, -0.00000000000002058326, -0.00000000000000534812,<br/> 0.00000000000000122678, -0.00000000000000011813,  0.00000000000000000119,<br/> 0.00000000000000000141, -0.00000000000000000023,  0.00000000000000000002 ]<br/>\u00a0<br/>proc gamma(x): float =<br/>  let y = x.float - 1.0<br/>  result = a[a.high]<br/>  for n in countdown(high(a) - 1, low(a)):<br/>    result = result * y + a[n]<br/>  result = 1.0 / result<br/>\u00a0<br/>for i in 1..10:<br/>  echo gamma(i.float / 3.0)</pre>"}, {"lang": "OCaml", "loc": 63, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> e <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexp\"><span class=\"kw3\">exp</span></a> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">let</span> pi <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">.</span> <span class=\"sy0\">*.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALatan\"><span class=\"kw3\">atan</span></a> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">let</span> sqrttwopi <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsqrt\"><span class=\"kw3\">sqrt</span></a> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">.</span> <span class=\"sy0\">*.</span> pi<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">module</span> Lanczos <span class=\"sy0\">=</span> <span class=\"kw1\">struct</span><br/>  <span class=\"co1\">(* Lanczos method *)</span><br/>  <span class=\"co1\">(* Coefficients used by the GNU Scientific Library *)</span><br/>  <span class=\"kw1\">let</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">.</span><br/>  <span class=\"kw1\">let</span> c <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span><span class=\"nu0\">0.99999999999980993</span><span class=\"sy0\">;</span> <span class=\"nu0\">676.5203681218851</span><span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1259.1392167224028</span><span class=\"sy0\">;</span><br/>\t    <span class=\"nu0\">771.32342877765313</span><span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">176.61502916214059</span><span class=\"sy0\">;</span> <span class=\"nu0\">12.507343278686905</span><span class=\"sy0\">;</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.13857109526572012</span><span class=\"sy0\">;</span> 9<span class=\"sy0\">.</span>9843695780195716e<span class=\"sy0\">-</span>6<span class=\"sy0\">;</span> 1<span class=\"sy0\">.</span>5056327351493116e<span class=\"sy0\">-</span>7<span class=\"sy0\">|</span><span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> ag z d <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> d <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> c<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">+.</span> ag z <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> d <span class=\"sy0\">&lt;</span> <span class=\"nu0\">8</span> <span class=\"kw1\">then</span> c<span class=\"sy0\">.</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span> <span class=\"sy0\">/.</span> <span class=\"br0\">(</span>z <span class=\"sy0\">+.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> d<span class=\"br0\">)</span> <span class=\"sy0\">+.</span> ag z <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> d<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> c<span class=\"sy0\">.</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span> <span class=\"sy0\">/.</span> <span class=\"br0\">(</span>z <span class=\"sy0\">+.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> d<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">let</span> gamma z <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> z <span class=\"sy0\">=</span> z <span class=\"sy0\">-.</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">let</span> p <span class=\"sy0\">=</span> z <span class=\"sy0\">+.</span> g <span class=\"sy0\">+.</span> <span class=\"nu0\">0.5</span> <span class=\"kw1\">in</span><br/>    sqrttwopi <span class=\"sy0\">*.</span> p <span class=\"sy0\">**</span> <span class=\"br0\">(</span>z <span class=\"sy0\">+.</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">*.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexp\"><span class=\"kw3\">exp</span></a> <span class=\"br0\">(</span><span class=\"sy0\">-.</span> p<span class=\"br0\">)</span> <span class=\"sy0\">*.</span> ag z <span class=\"nu0\">0</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">module</span> Stirling <span class=\"sy0\">=</span> <span class=\"kw1\">struct</span><br/>  <span class=\"co1\">(* Stirling method *)</span><br/>  <span class=\"kw1\">let</span> gamma z <span class=\"sy0\">=</span><br/>    sqrttwopi <span class=\"sy0\">/.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsqrt\"><span class=\"kw3\">sqrt</span></a> z <span class=\"sy0\">*.</span> <span class=\"br0\">(</span>z <span class=\"sy0\">/.</span> e<span class=\"br0\">)</span> <span class=\"sy0\">**</span> z<br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">module</span> Stirling2 <span class=\"sy0\">=</span> <span class=\"kw1\">struct</span><br/>  <span class=\"co1\">(* Extended Stirling method seen in Abramowitz and Stegun *)</span><br/>  <span class=\"kw1\">let</span> d <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span><span class=\"nu0\">1</span><span class=\"sy0\">./.</span>12<span class=\"sy0\">.;</span> <span class=\"nu0\">1</span><span class=\"sy0\">./.</span>288<span class=\"sy0\">.;</span> <span class=\"sy0\">-</span><span class=\"nu0\">139</span><span class=\"sy0\">./.</span>51840<span class=\"sy0\">.;</span> <span class=\"sy0\">-</span><span class=\"nu0\">571</span><span class=\"sy0\">./.</span>2488320<span class=\"sy0\">.|</span><span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> corr z x n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> n <span class=\"sy0\">&lt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>length d <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> d<span class=\"sy0\">.</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">/.</span> x <span class=\"sy0\">+.</span> corr z <span class=\"br0\">(</span>x <span class=\"sy0\">*.</span> z<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> d<span class=\"sy0\">.</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">/.</span> x<br/>\u00a0<br/>  <span class=\"kw1\">let</span> gamma z <span class=\"sy0\">=</span> Stirling<span class=\"sy0\">.</span>gamma z <span class=\"sy0\">*.</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"sy0\">+.</span> corr z z <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">let</span> mirror gma z <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">if</span> z <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.5</span> <span class=\"kw1\">then</span> gma z<br/>  <span class=\"kw1\">else</span> pi <span class=\"sy0\">/.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsin\"><span class=\"kw3\">sin</span></a> <span class=\"br0\">(</span>pi <span class=\"sy0\">*.</span> z<span class=\"br0\">)</span> <span class=\"sy0\">/.</span> gma <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"sy0\">-.</span> z<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"z\\t\\tLanczos\\t\\tStirling\\tStirling2\\n\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">20</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">let</span> z <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> i <span class=\"sy0\">/.</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span> <span class=\"kw1\">in</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%-10.8g\\t%10.8e\\t%10.8e\\t%10.8e\\n\"</span><br/>    \t\t  z <br/>\t\t  <span class=\"br0\">(</span>mirror Lanczos<span class=\"sy0\">.</span>gamma z<span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span>mirror Stirling<span class=\"sy0\">.</span>gamma z<span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span>mirror Stirling2<span class=\"sy0\">.</span>gamma z<span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">7</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">let</span> z <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span> <span class=\"sy0\">*.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> i <span class=\"kw1\">in</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%-10.8g\\t%10.8e\\t%10.8e\\t%10.8e\\n\"</span><br/>    \t\t  z<br/>\t\t  <span class=\"br0\">(</span>Lanczos<span class=\"sy0\">.</span>gamma z<span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span>Stirling<span class=\"sy0\">.</span>gamma z<span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span>Stirling2<span class=\"sy0\">.</span>gamma z<span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span></pre>"}, {"lang": "Octave", "loc": 22, "block": "<pre class=\"octave highlighted_source\"><span class=\"kw4\">function</span> g <span class=\"sy3\">=</span> lacz_gamma<span class=\"br0\">(</span>a<span class=\"sy5\">,</span> cg<span class=\"sy3\">=</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>  p <span class=\"sy3\">=</span> <span class=\"br0\">[</span> <span class=\"nu19\">0.99999999999980993</span><span class=\"sy5\">,</span> <span class=\"nu19\">676.5203681218851</span><span class=\"sy5\">,</span> <span class=\"sy1\">-</span><span class=\"nu19\">1259.1392167224028</span><span class=\"sy5\">,</span> <span class=\"sy1\">\\</span><br/>        <span class=\"nu19\">771.32342877765313</span><span class=\"sy5\">,</span> <span class=\"sy1\">-</span><span class=\"nu19\">176.61502916214059</span><span class=\"sy5\">,</span> <span class=\"nu19\">12.507343278686905</span><span class=\"sy5\">,</span> <span class=\"sy1\">\\</span><br/>        <span class=\"sy1\">-</span><span class=\"nu19\">0.13857109526572012</span><span class=\"sy5\">,</span> <span class=\"nu19\">9.9843695780195716e-6</span><span class=\"sy5\">,</span> <span class=\"nu19\">1.5056327351493116e-7</span> <span class=\"br0\">]</span><span class=\"sy5\">;</span><br/>  x<span class=\"sy3\">=</span>a<span class=\"sy5\">;</span><br/>  <span class=\"kw4\">if</span> <span class=\"br0\">(</span> x <span class=\"sy0\">&lt;</span> <span class=\"nu19\">0.5</span> <span class=\"br0\">)</span><br/>    g <span class=\"sy3\">=</span> <a href=\"http://octave.sourceforge.net/octave/function/pi.html\"><span class=\"kw10\">pi</span></a> <span class=\"sy1\">/</span> <span class=\"br0\">(</span> <a href=\"http://octave.sourceforge.net/octave/function/sin.html\"><span class=\"kw5\">sin</span></a><span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/pi.html\"><span class=\"kw10\">pi</span></a><span class=\"sy1\">*</span>x<span class=\"br0\">)</span> <span class=\"sy1\">*</span> lacz_gamma<span class=\"br0\">(</span><span class=\"nu19\">1.0</span><span class=\"sy1\">-</span>x<span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>  <span class=\"kw4\">else</span><br/>    x <span class=\"sy3\">=</span> x <span class=\"sy1\">-</span> <span class=\"nu19\">1.0</span><span class=\"sy5\">;</span><br/>    t <span class=\"sy3\">=</span> p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>    <span class=\"kw4\">for</span> <a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"sy3\">=</span><span class=\"nu0\">1</span><span class=\"sy4\">:</span><span class=\"br0\">(</span>cg<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      t <span class=\"sy3\">=</span> t <span class=\"sy1\">+</span> p<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">/</span><span class=\"br0\">(</span>x<span class=\"sy1\">+</span><a href=\"http://octave.sourceforge.net/octave/&lt;span class=\" kw4=\"\">function<span class=\"sy1\">/</span>double.html\"&gt;<span class=\"kw1\">double</span></a><span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>    <span class=\"kw4\">endfor</span><br/>    w <span class=\"sy3\">=</span> x <span class=\"sy1\">+</span> <a href=\"http://octave.sourceforge.net/octave/&lt;span class=\" kw4=\"\">function<span class=\"sy1\">/</span>double.html\"&gt;<span class=\"kw1\">double</span></a><span class=\"br0\">(</span>cg<span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"nu19\">0.5</span><span class=\"sy5\">;</span><br/>    g <span class=\"sy3\">=</span> <a href=\"http://octave.sourceforge.net/octave/function/sqrt.html\"><span class=\"kw5\">sqrt</span></a><span class=\"br0\">(</span><span class=\"nu19\">2.0</span><span class=\"sy1\">*</span><a href=\"http://octave.sourceforge.net/octave/function/pi.html\"><span class=\"kw10\">pi</span></a><span class=\"br0\">)</span> <span class=\"sy1\">*</span> w<span class=\"sy1\">**</span><span class=\"br0\">(</span>x<span class=\"sy1\">+</span><span class=\"nu19\">0.5</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span> <a href=\"http://octave.sourceforge.net/octave/function/exp.html\"><span class=\"kw5\">exp</span></a><span class=\"br0\">(</span><span class=\"sy1\">-</span>w<span class=\"br0\">)</span> <span class=\"sy1\">*</span> t<span class=\"sy5\">;</span><br/>  <span class=\"kw4\">endif</span><br/><span class=\"kw4\">endfunction</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">for</span> <a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a> <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">:</span><span class=\"nu0\">10</span><br/>  <a href=\"http://octave.sourceforge.net/octave/function/printf.html\"><span class=\"kw5\">printf</span></a><span class=\"br0\">(</span><span class=\"co4\">\"%f\u00a0%f\\n\"</span><span class=\"sy5\">,</span> <a href=\"http://octave.sourceforge.net/octave/function/gamma.html\"><span class=\"kw5\">gamma</span></a><span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"sy1\">/</span><span class=\"nu19\">3.0</span><span class=\"br0\">)</span><span class=\"sy5\">,</span> lacz_gamma<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"sy1\">/</span><span class=\"nu19\">3.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy5\">;</span><br/><span class=\"kw4\">endfor</span></pre>"}, {"lang": "Oforth", "loc": 17, "block": "<pre class=\"text highlighted_source\">import: math<br/>\u00a0<br/>[ <br/>   676.5203681218851,  -1259.1392167224028, 771.32342877765313, <br/>  -176.61502916214059, 12.507343278686905, -0.13857109526572012, <br/>   9.9843695780195716e-6, 1.5056327351493116e-7<br/>] const: Gamma.Lanczos<br/>\u00a0<br/>: gamma(z)<br/>| i t |<br/>   z 0.5 &lt; ifTrue: [ Pi dup z * sin 1.0 z - gamma * / return ]<br/>   z 1.0 - -&gt;z<br/>   0.99999999999980993 Gamma.Lanczos size loop: i [ i Gamma.Lanczos at z i + / + ]<br/>   z Gamma.Lanczos size + 0.5 - -&gt;t<br/>   2 Pi * sqrt * <br/>   t z 0.5 + powf *<br/>   t neg exp *\u00a0;</pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">gamma</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 70, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> constant pi <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">*</span><a href=\"http://perldoc.perl.org/functions/atan2.html\"><span class=\"kw3\">atan2</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> constant e  <span class=\"sy0\">=&gt;</span> <a href=\"http://perldoc.perl.org/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># Normally would be:  use Math::MPFR</span><br/><span class=\"co1\"># but this will use it if it's installed and ignore otherwise</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$have_MPFR</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/require.html\"><span class=\"kw3\">require</span></a> Math<span class=\"sy0\">::</span><span class=\"me2\">MPFR</span><span class=\"sy0\">;</span> Math<span class=\"sy0\">::</span><span class=\"me2\">MPFR</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/import.html\"><span class=\"kw3\">import</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> Gamma <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$method</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"sy0\">//</span> <span class=\"st_h\">'lanczos'</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$method</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'lanczos'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">use</span> constant g <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$z</span> <span class=\"sy0\">&lt;</span>  <span class=\"sy0\">.</span>5 <span class=\"sy0\">?</span>  pi <span class=\"co2\">/ sin(pi * $z) /</span> Gamma<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$z</span><span class=\"sy0\">,</span> <span class=\"re0\">$method</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><br/>        <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span> pi<span class=\"br0\">)</span> <span class=\"sy0\">*</span><br/>        <span class=\"br0\">(</span><span class=\"re0\">$z</span> <span class=\"sy0\">+</span> g <span class=\"sy0\">-</span> <span class=\"sy0\">.</span>5<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"br0\">(</span><span class=\"re0\">$z</span> <span class=\"sy0\">-</span> <span class=\"sy0\">.</span>5<span class=\"br0\">)</span> <span class=\"sy0\">*</span><br/>        <a href=\"http://perldoc.perl.org/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"br0\">(</span><span class=\"re0\">$z</span> <span class=\"sy0\">+</span> g <span class=\"sy0\">-</span> <span class=\"sy0\">.</span>5<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><br/>        <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">@coeff</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">{</span><br/>            <span class=\"nu0\">1.000000000000000174663</span><br/>        <span class=\"nu0\">5716.400188274341379136</span><br/>      <span class=\"sy0\">-</span><span class=\"nu0\">14815.30426768413909044</span><br/>       <span class=\"nu0\">14291.49277657478554025</span><br/>       <span class=\"sy0\">-</span><span class=\"nu0\">6348.160217641458813289</span><br/>        <span class=\"nu0\">1301.608286058321874105</span><br/>        <span class=\"sy0\">-</span><span class=\"nu0\">108.1767053514369634679</span><br/>           <span class=\"nu0\">2.605696505611755827729</span><br/>          <span class=\"sy0\">-</span>0<span class=\"sy0\">.</span>7423452510201416151527e<span class=\"sy0\">-</span>2<br/>           0<span class=\"sy0\">.</span>5384136432509564062961e<span class=\"sy0\">-</span>7<br/>          <span class=\"sy0\">-</span>0<span class=\"sy0\">.</span>4023533141268236372067e<span class=\"sy0\">-</span>8<br/>            <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$sum</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">(</span><span class=\"re0\">@coeff</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$sum</span> <span class=\"sy0\">+=</span> <span class=\"co5\">$_</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"re0\">$z</span> <span class=\"sy0\">+</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> <span class=\"re0\">@coeff</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$sum</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$method</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'taylor'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$z</span> <span class=\"sy0\">&lt;</span>  <span class=\"sy0\">.</span>5 <span class=\"sy0\">?</span> Gamma<span class=\"br0\">(</span><span class=\"re0\">$z</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$method</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"re0\">$z</span>     <span class=\"sy0\">:</span><br/>        <span class=\"re0\">$z</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1.5</span> <span class=\"sy0\">?</span> <span class=\"br0\">(</span><span class=\"re0\">$z</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"re0\">*Gamma</span><span class=\"br0\">(</span><span class=\"re0\">$z</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$method</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><br/>\t<span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"re0\">$s</span> <span class=\"sy0\">*=</span> <span class=\"re0\">$z</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+=</span> <span class=\"co5\">$_</span> <span class=\"kw1\">for</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">{</span><br/>\t    <span class=\"nu0\">0.00000000000000000002</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000000023</span> <span class=\"nu0\">0.00000000000000000141</span><br/>\t    <span class=\"nu0\">0.00000000000000000119</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000011813</span> <span class=\"nu0\">0.00000000000000122678</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000534812</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000002058326</span> <span class=\"nu0\">0.00000000000051003703</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000369680562</span> <span class=\"nu0\">0.00000000000778226344</span> <span class=\"nu0\">0.00000000010434267117</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000118127457049</span> <span class=\"nu0\">0.00000000500200764447</span> <span class=\"nu0\">0.00000000611609510448</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.00000020563384169776</span> <span class=\"nu0\">0.00000113302723198170</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00000125049348214267</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.00002013485478078824</span> <span class=\"nu0\">0.00012805028238811619</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00021524167411495097</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.00116516759185906511</span> <span class=\"nu0\">0.00721894324666309954</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00962197152787697356</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.04219773455554433675</span> <span class=\"nu0\">0.16653861138229148950</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.04200263503409523553</span><br/>\t    <span class=\"sy0\">-</span><span class=\"nu0\">0.65587807152025388108</span> <span class=\"nu0\">0.57721566490153286061</span> <span class=\"nu0\">1.00000000000000000000</span><br/>\t    <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$method</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'stirling'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/no.html\"><span class=\"kw3\">no</span></a> warnings <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>recursion<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$z</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span> <span class=\"sy0\">?</span> Gamma<span class=\"br0\">(</span><span class=\"re0\">$z</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$method</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"re0\">$z</span> <span class=\"sy0\">:</span><br/>        <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"re0\">*pi</span><span class=\"re0\">*$z</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"re0\">$z</span><span class=\"sy0\">/</span>e <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"re0\">*e</span><span class=\"re0\">*$z</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">*$z</span> <span class=\"sy0\">/</span> <span class=\"re0\">$z</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$method</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'MPFR'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$result</span> <span class=\"sy0\">=</span> Math<span class=\"sy0\">::</span><span class=\"me2\">MPFR</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Math<span class=\"sy0\">::</span><span class=\"me2\">MPFR</span><span class=\"sy0\">::</span><span class=\"me2\">Rmpfr_gamma</span><span class=\"br0\">(</span><span class=\"re0\">$result</span><span class=\"sy0\">,</span> Math<span class=\"sy0\">::</span><span class=\"me2\">MPFR</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"re0\">$z</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$result</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"unknown method '$method'\"</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$method</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>MPFR lanczos taylor stirling<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"re0\">$method</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'MPFR'</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><span class=\"re0\">$have_MPFR</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%10s: \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$method</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <a href=\"http://perldoc.perl.org/functions/join.html\"><span class=\"kw3\">join</span></a><span class=\"br0\">(</span><span class=\"st_h\">' '</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a> <span class=\"st0\">\"%.12f\"</span><span class=\"sy0\">,</span> Gamma<span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"re0\">$method</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 22, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> \u0393<span class=\"br0\">(</span>\\z<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">constant</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span><br/>    z <span class=\"sy0\">&lt;</span> <span class=\"sy0\">.</span>5 <span class=\"sy0\">??</span> pi<span class=\"sy0\">/</span> sin<span class=\"br0\">(</span>pi <span class=\"sy0\">*</span> z<span class=\"br0\">)</span> <span class=\"sy0\">/</span> \u0393<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> z<span class=\"br0\">)</span> <span class=\"sy0\">!!</span><br/>    <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>pi<span class=\"br0\">)</span> <span class=\"sy0\">*</span><br/>    <span class=\"br0\">(</span>z <span class=\"sy0\">+</span> g <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"br0\">(</span>z <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><br/>    <span class=\"kw3\">exp</span><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"br0\">(</span>z <span class=\"sy0\">+</span> g <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><br/>    <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span><br/>        <span class=\"nu0\">1.000000000000000174663</span><br/>     <span class=\"nu0\">5716.400188274341379136</span><br/>   <span class=\"sy0\">-</span><span class=\"nu0\">14815.30426768413909044</span><br/>    <span class=\"nu0\">14291.49277657478554025</span><br/>    <span class=\"sy0\">-</span><span class=\"nu0\">6348.160217641458813289</span><br/>     <span class=\"nu0\">1301.608286058321874105</span><br/>     <span class=\"sy0\">-</span><span class=\"nu0\">108.1767053514369634679</span><br/>        <span class=\"nu0\">2.605696505611755827729</span><br/>       <span class=\"sy0\">-</span>0<span class=\"sy0\">.</span>7423452510201416151527e<span class=\"sy0\">-</span>2<br/>        0<span class=\"sy0\">.</span>5384136432509564062961e<span class=\"sy0\">-</span>7<br/>       <span class=\"sy0\">-</span>0<span class=\"sy0\">.</span>4023533141268236372067e<span class=\"sy0\">-</span>8<br/>    <span class=\"sy0\">&gt;</span> <span class=\"kw1\">Z</span><span class=\"sy0\">*</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">|</span><span class=\"kw3\">map</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>z <span class=\"sy0\">+</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">..*</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> \u0393<span class=\"br0\">(</span><span class=\"re0\">$_</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">/</span><span class=\"nu0\">3</span> <span class=\"sy0\">...</span> <span class=\"nu0\">10</span><span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 39, "block": "<pre class=\"text highlighted_source\">sequence c = repeat(0,12)<br/>\u00a0<br/>function gamma(atom z)<br/>    atom accm = c[1]<br/>    if accm=0 then<br/>        accm = sqrt(2*PI)<br/>        c[1] = accm<br/>        atom k1_factrl = 1  -- (k - 1)!*(-1)^k with 0!==1<br/>        for k=2 to 12 do<br/>            c[k] = exp(13-k)*power(13-k,k-1.5)/k1_factrl<br/>            k1_factrl *= -(k-1)<br/>        end for<br/>    end if<br/>    for k=2 to 12 do<br/>        accm += c[k]/(z+k-1)<br/>    end for<br/>    accm *= exp(-(z+12))*power(z+12,z+0.5) -- Gamma(z+1)<br/>    return accm/z<br/>end function<br/>\u00a0<br/>procedure sq(atom x, atom mul)<br/>atom p = x*mul<br/>    printf(1,\"%18.16g,%18.15g\\n\",{x,p*p})<br/>end procedure<br/>\u00a0<br/>procedure si(atom x)<br/>    printf(1,\"%18.15f\\n\",{x})<br/>end procedure<br/>\u00a0<br/>sq(gamma(-3/2),3/4)<br/>sq(gamma(-1/2),-1/2)<br/>sq(gamma(1/2),1)<br/>si(gamma(1))<br/>sq(gamma(3/2),2)<br/>si(gamma(2))<br/>sq(gamma(5/2),4/3)<br/>si(gamma(3))<br/>sq(gamma(7/2),8/15)<br/>si(gamma(4))</pre>"}, {"lang": "PicoLisp", "loc": 20, "block": "<pre class=\"text highlighted_source\">(scl 28)<br/>\u00a0<br/>(de *A<br/>   ~(flip<br/>      (1.00000000000000000000  0.57721566490153286061 -0.65587807152025388108<br/>      -0.04200263503409523553  0.16653861138229148950 -0.04219773455554433675<br/>      -0.00962197152787697356  0.00721894324666309954 -0.00116516759185906511<br/>      -0.00021524167411495097  0.00012805028238811619 -0.00002013485478078824<br/>      -0.00000125049348214267  0.00000113302723198170 -0.00000020563384169776<br/>       0.00000000611609510448  0.00000000500200764447 -0.00000000118127457049<br/>       0.00000000010434267117  0.00000000000778226344 -0.00000000000369680562<br/>       0.00000000000051003703 -0.00000000000002058326 -0.00000000000000534812<br/>       0.00000000000000122678 -0.00000000000000011813  0.00000000000000000119<br/>       0.00000000000000000141 -0.00000000000000000023  0.00000000000000000002 ) ) )<br/>\u00a0<br/>(de gamma (X)<br/>   (let (Y (- X 1.0)  Sum (car *A))<br/>      (for A (cdr *A)<br/>         (setq Sum (+ A (*/ Sum Y 1.0))) )<br/>      (*/ 1.0 1.0 Sum) ) )</pre>"}, {"lang": "PL/I", "loc": 45, "block": "<pre class=\"text highlighted_source\">/* From Rosetta Fortran */<br/>test: procedure options (main);<br/>\u00a0<br/>  declare i fixed binary;<br/>\u00a0<br/>  on underflow\u00a0;<br/>\u00a0<br/>  put skip list ('Lanczos', 'Builtin' );<br/>  do i = 1 to 10;<br/>     put skip list (lanczos_gamma(i/3.0q0), gamma(i/3.0q0) );<br/>  end;<br/>\u00a0<br/>\u00a0<br/>lanczos_gamma: procedure (a) returns (float (18)) recursive;<br/>    declare a float (18);<br/>    declare pi float (18) value (3.14159265358979324E0);<br/>    declare cg fixed binary initial ( 7 );<br/>\u00a0<br/>    /* these precomputed values are taken by the sample code in Wikipedia, */<br/>    /* and the sample itself takes them from the GNU Scientific Library */<br/>    declare p(0:8) float (18) static initial<br/>         ( 0.99999999999980993e0, 676.5203681218851e0, -1259.1392167224028e0,<br/>         771.32342877765313e0, -176.61502916214059e0, 12.507343278686905e0,<br/>         -0.13857109526572012e0, 9.9843695780195716e-6, 1.5056327351493116e-7 );<br/>\u00a0<br/>    declare ( t, w, x ) float (18);<br/>    declare i fixed binary;<br/>\u00a0<br/>    x = a;<br/>\u00a0<br/>    if x &lt; 0.5 then<br/>       return ( pi / ( sin(pi*x) * lanczos_gamma(1.0-x) ) );<br/>    else<br/>       do;<br/>          x = x - 1.0;<br/>          t = p(0);<br/>          do i = 1 to cg+2;<br/>             t = t + p(i)/(x+i);<br/>          end;<br/>          w = x + float(cg) + 0.5;<br/>          return ( sqrt(2*pi) * w**(x+0.5) * exp(-w) * t );<br/>       end;<br/>  end lanczos_gamma;<br/>\u00a0<br/>end test;</pre>"}, {"lang": "PowerShell", "loc": 5, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/>Add<span class=\"sy0\">-</span><span class=\"kw2\">Type</span> <span class=\"kw5\">-Path</span> <span class=\"st0\">\"C:\\Program Files (x86)\\Math\\MathNet.Numerics.3.12.0\\lib\\net40\\MathNet.Numerics.dll\"</span><br/>\u00a0<br/><span class=\"nu0\">1</span>..<span class=\"nu0\">20</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>MathNet.Numerics.SpecialFunctions<span class=\"br0\">]</span>::Gamma<span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"sy0\">/</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 82, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Procedure</span>.d Gamma<span class=\"br0\">(</span>x.d<span class=\"br0\">)</span> <span class=\"co1\">; AKJ  01-May-10</span><br/><span class=\"co1\">; Complete Gamma function for x&gt;0 and x&lt;2 (approx)</span><br/><span class=\"co1\">; Extended outside this range via: Gamma(x+1) = x*Gamma(x)</span><br/><span class=\"co1\">; Based on http://rosettacode.org/wiki/Gamma_function  [Ada]</span><br/><span class=\"kw1\">Protected</span> <span class=\"kw1\">Dim</span> A.d<span class=\"br0\">(</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.5772156649015328606</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.6558780715202538811</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0420026350340952355</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.1665386113822914895</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0421977345555443368</span> <span class=\"co1\">; was ...33675</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0096219715278769736</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0072189432466630995</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0011651675918590651</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0002152416741149510</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0001280502823881162</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000201348547807882</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000012504934821427</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000011330272319817</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">14</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000002056338416978</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000061160951045</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000050020076445</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000000011812745705</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000001043426712</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000000077822634</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000000000036968056</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">21</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000000005100370</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">22</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000000000000205833</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">23</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000000000000053481</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">24</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000000000012268</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">25</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000000000000001181</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">26</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000000000000012</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">27</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0000000000000000014</span><br/>A<span class=\"br0\">(</span><span class=\"nu0\">28</span><span class=\"br0\">)</span> <span class=\"sy0\">=-</span><span class=\"nu0\">0.0000000000000000002</span><br/><span class=\"co1\">;A(29) = 0.00000000000000000002</span><br/><span class=\"kw1\">Protected</span> y.d, Prod.d, Sum.d, N<br/><span class=\"kw1\">If</span> x<span class=\"sy0\">&lt;=</span><span class=\"nu0\">0.0</span>: <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">0.0</span>: <span class=\"kw1\">EndIf</span> <span class=\"co1\">; Error</span><br/>y <span class=\"sy0\">=</span> x<span class=\"sy0\">-</span><span class=\"nu0\">1.0</span>: Prod <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><br/><span class=\"kw1\">While</span> y<span class=\"sy0\">&gt;=</span><span class=\"nu0\">1.0</span><br/>  Prod<span class=\"sy0\">*</span>y: y<span class=\"sy0\">-</span><span class=\"nu0\">1.0</span> <span class=\"co1\">; Recurse using Gamma(x+1) = x*Gamma(x)</span><br/><span class=\"kw1\">Wend</span><br/>Sum<span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><br/><span class=\"kw1\">For</span> N <span class=\"sy0\">=</span> <span class=\"nu0\">27</span> <span class=\"kw1\">To</span> <span class=\"nu0\">0</span> <span class=\"kw1\">Step</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>  Sum<span class=\"sy0\">*</span>y<span class=\"sy0\">+</span>A<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span> N<br/><span class=\"kw1\">If</span> Sum<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span>: <span class=\"kw1\">ProcedureReturn</span> Infinity<span class=\"br0\">(</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">ProcedureReturn</span> Prod <span class=\"sy0\">/</span> Sum<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.d GammLn<span class=\"br0\">(</span>x.d<span class=\"br0\">)</span> <span class=\"co1\">; AKJ  01-May-10</span><br/><span class=\"co1\">; Returns Ln(Gamma()) or 0 on error</span><br/><span class=\"co1\">; Based on Numerical Recipes gamma.h</span><br/><span class=\"kw1\">Protected</span> j, tmp.d, y.d, ser.d<br/><span class=\"kw1\">Protected</span> <span class=\"kw1\">Dim</span> cof.d<span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span><br/>cof<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">57.1562356658629235</span><br/>cof<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">59.5979603554754912</span><br/>cof<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">14.1360979747417471</span><br/>cof<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.491913816097620199</span><br/>cof<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> 0.339946499848118887e<span class=\"sy0\">-</span>4<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> 0.465236289270485756e<span class=\"sy0\">-</span>4<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>0.983744753048795646e<span class=\"sy0\">-</span>4<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> 0.158088703224912494e<span class=\"sy0\">-</span>3<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>0.210264441724104883e<span class=\"sy0\">-</span>3<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> 0.217439618115212643e<span class=\"sy0\">-</span>3<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>0.164318106536763890e<span class=\"sy0\">-</span>3<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> 0.844182239838527433e<span class=\"sy0\">-</span>4<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>0.261908384015814087e<span class=\"sy0\">-</span>4<br/>cof<span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> 0.368991826595316234e<span class=\"sy0\">-</span>5<br/><span class=\"kw1\">If</span> x<span class=\"sy0\">&lt;=</span><span class=\"nu0\">0</span>: <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">0</span>: <span class=\"kw1\">EndIf</span> <span class=\"co1\">; Bad argument</span><br/>y <span class=\"sy0\">=</span> x<br/>tmp <span class=\"sy0\">=</span> x<span class=\"sy0\">+</span><span class=\"nu0\">5.2421875</span><br/>tmp <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw2\">Log</span><span class=\"br0\">(</span>tmp<span class=\"br0\">)</span><span class=\"sy0\">-</span>tmp<br/>ser <span class=\"sy0\">=</span> <span class=\"nu0\">0.999999999999997092</span><br/><span class=\"kw1\">For</span> j<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">13</span><br/>  y <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>: ser <span class=\"sy0\">+</span> cof<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">/</span>y<br/><span class=\"kw1\">Next</span> j<br/><span class=\"kw1\">ProcedureReturn</span> tmp<span class=\"sy0\">+</span><span class=\"kw2\">Log</span><span class=\"br0\">(</span><span class=\"nu0\">2.5066282746310005</span><span class=\"sy0\">*</span>ser<span class=\"sy0\">/</span>x<span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> Factorial<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"co1\">; AKJ  01-May-10</span><br/>  <span class=\"kw1\">ProcedureReturn</span> Gamma<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span></pre>"}, {"lang": "Python", "loc": 23, "block": "<pre class=\"python highlighted_source\">_a <span class=\"sy0\">=</span>    <span class=\"br0\">(</span> <span class=\"nu0\">1.00000000000000000000</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.57721566490153286061</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.65587807152025388108</span><span class=\"sy0\">,</span><br/>         -<span class=\"nu0\">0.04200263503409523553</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.16653861138229148950</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.04219773455554433675</span><span class=\"sy0\">,</span><br/>         -<span class=\"nu0\">0.00962197152787697356</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.00721894324666309954</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00116516759185906511</span><span class=\"sy0\">,</span><br/>         -<span class=\"nu0\">0.00021524167411495097</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.00012805028238811619</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00002013485478078824</span><span class=\"sy0\">,</span><br/>         -<span class=\"nu0\">0.00000125049348214267</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.00000113302723198170</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00000020563384169776</span><span class=\"sy0\">,</span><br/>          <span class=\"nu0\">0.00000000611609510448</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.00000000500200764447</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00000000118127457049</span><span class=\"sy0\">,</span><br/>          <span class=\"nu0\">0.00000000010434267117</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.00000000000778226344</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00000000000369680562</span><span class=\"sy0\">,</span><br/>          <span class=\"nu0\">0.00000000000051003703</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00000000000002058326</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00000000000000534812</span><span class=\"sy0\">,</span><br/>          <span class=\"nu0\">0.00000000000000122678</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00000000000000011813</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.00000000000000000119</span><span class=\"sy0\">,</span><br/>          <span class=\"nu0\">0.00000000000000000141</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.00000000000000000023</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.00000000000000000002</span><br/>       <span class=\"br0\">)</span><br/><span class=\"kw1\">def</span> gamma <span class=\"br0\">(</span>x<span class=\"br0\">)</span>: <br/>   y  <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> - <span class=\"nu0\">1.0</span><span class=\"sy0\">;</span><br/>   sm <span class=\"sy0\">=</span> _a<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">for</span> an <span class=\"kw1\">in</span> _a<span class=\"br0\">[</span>-<span class=\"nu0\">2</span>::-<span class=\"nu0\">1</span><span class=\"br0\">]</span>:<br/>      sm <span class=\"sy0\">=</span> sm * y + an<span class=\"sy0\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">1.0</span> / sm<span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\" \u00a0%20.14e\"</span>\u00a0% gamma<span class=\"br0\">(</span>i/<span class=\"nu0\">3.0</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "R", "loc": 50, "block": "<pre class=\"text highlighted_source\">stirling &lt;- function(z) sqrt(2*pi/z) * (exp(-1)*z)^z<br/>\u00a0<br/>nemes &lt;- function(z) sqrt(2*pi/z) * (exp(-1)*(z + (12*z - (10*z)^-1)^-1))^z<br/>\u00a0<br/>lanczos &lt;- function(z)<br/>{<br/>   if(length(z) &gt; 1)<br/>   {<br/>      sapply(z, lanczos)<br/>   } else<br/>   {<br/>     g &lt;- 7<br/>      p &lt;- c(0.99999999999980993, 676.5203681218851, -1259.1392167224028,<br/>        771.32342877765313, -176.61502916214059, 12.507343278686905,<br/>        -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7)<br/>      z &lt;- as.complex(z) <br/>      if(Re(z) &lt; 0.5) <br/>      {<br/>         pi / (sin(pi*z) * lanczos(1-z)) <br/>      } else<br/>      {<br/>         z &lt;- z - 1<br/>         x &lt;- p[1] + sum(p[-1]/seq.int(z+1, z+g+1))<br/>         tt &lt;- z + g + 0.5<br/>         sqrt(2*pi) * tt^(z+0.5) * exp(-tt) * x<br/>      }<br/>   }   <br/>}<br/>\u00a0<br/>spouge &lt;- function(z, a=49)<br/>{<br/>   if(length(z) &gt; 1)<br/>   {<br/>      sapply(z, spouge)<br/>   } else<br/>   {<br/>      z &lt;- z-1<br/>      k &lt;- seq.int(1, a-1)<br/>      ck &lt;- rep(c(1, -1), len=a-1) / factorial(k-1) * (a-k)^(k-0.5) * exp(a-k)<br/>      (z + a)^(z+0.5) * exp(-z - a) * (sqrt(2*pi) + sum(ck/(z+k)))<br/>   }<br/>}<br/>\u00a0<br/># Checks<br/>z &lt;- (1:10)/3<br/>all.equal(gamma(z), stirling(z))             # Mean relative difference: 0.07181942<br/>all.equal(gamma(z), nemes(z))                # Mean relative difference: 0.003460549<br/>all.equal(as.complex(gamma(z)), lanczos(z))  # TRUE<br/>all.equal(gamma(z), spouge(z))               # TRUE<br/>data.frame(z=z, stirling=stirling(z), nemes=nemes(z), lanczos=lanczos(z), spouge=spouge(z), builtin=gamma(z))</pre>"}, {"lang": "Racket", "loc": 29, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(define (gamma number)<br/>  (if (&gt; 1/2 number)<br/>      (/ pi (* (sin (* pi number))<br/>               (gamma (- 1.0 number))))<br/>      (let ((n (sub1 number))<br/>            (c '(0.99999999999980993 676.5203681218851 -1259.1392167224028<br/>                 771.32342877765313 -176.61502916214059 12.507343278686905<br/>\t             -0.13857109526572012 9.9843695780195716e-6 1.5056327351493116e-7)))<br/>        (* (sqrt (* pi 2))<br/>           (expt (+ n 7 0.5) (+ n 0.5))<br/>           (exp (- (+ n 7 0.5)))<br/>           (+ (car c)<br/>              (apply +<br/>                (for/list ((i (in-range (length (cdr c)))) (x (in-list (cdr c))))<br/>                  (/ x (+ 1 n i)))))))))<br/>\u00a0<br/>(map gamma '(0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0))<br/>;-&gt;<br/>;'(9.513507698668736<br/>;  4.590843711998802<br/>;  2.9915689876875904<br/>;  2.218159543757687<br/>;  1.7724538509055159<br/>;  1.489192248812818<br/>;  1.2980553326475577<br/>;  1.1642297137253037<br/>;  1.068628702119319<br/>;  1.0)</pre>"}, {"lang": "REXX", "loc": 68, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program calculates GAMMA using the Taylor series coefficients; \u224880 decimal digits*/</span><br/>                            <span class=\"coMULTI\">/*The GAMMA function symbol is the Greek capital letter:  \u0393 */</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> <span class=\"nu0\">90</span>                                <span class=\"coMULTI\">/*be able to handle extended precision.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> LO HI <span class=\"sy0\">.</span>                                <span class=\"coMULTI\">/*allow specification of gamma arg/args*/</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]  either show a range or a \u00b7\u00b7\u00b7   */</span><br/>        <span class=\"kw1\">do</span> j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>LO <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"kw2\">to</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span>HI LO <span class=\"nu0\">9</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"coMULTI\">/*              \u00b7\u00b7\u00b7 single gamma value.*/</span><br/>        <span class=\"kw1\">say</span> <span class=\"st0\">'gamma('</span>j<span class=\"st0\">\") =\"</span>  gamma<span class=\"br0\">(</span>j<span class=\"br0\">)</span>             <span class=\"coMULTI\">/*compute gamma of J and display value.*/</span><br/>        <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span>                              <span class=\"coMULTI\">/* [\u2191]  default LO is one;  HI is nine.*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>gamma:  <span class=\"kw1\">procedure</span>;   <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;    xm=x-<span class=\"nu0\">1</span>;    sum=<span class=\"nu0\">0</span><br/>                                <span class=\"coMULTI\">/*coefficients thanks to: Arne Frans\u00e9n &amp; Staffan Wrigge.*/</span><br/> #<span class=\"sy0\">.</span>1 =  <span class=\"nu0\">1</span>                       <span class=\"coMULTI\">/* [\u2193]    #.2   is the   Euler-Mascheroni  constant.    */</span><br/> #<span class=\"sy0\">.</span>2 =  <span class=\"nu0\">0.57721566490153286060651209008240243104215933593992359880576723488486772677766467</span><br/> #<span class=\"sy0\">.</span>3 = -<span class=\"nu0\">0.65587807152025388107701951514539048127976638047858434729236244568387083835372210</span><br/> #<span class=\"sy0\">.</span>4 = -<span class=\"nu0\">0.04200263503409523552900393487542981871139450040110609352206581297618009687597599</span><br/> #<span class=\"sy0\">.</span>5 =  <span class=\"nu0\">0.16653861138229148950170079510210523571778150224717434057046890317899386605647425</span><br/> #<span class=\"sy0\">.</span>6 = -<span class=\"nu0\">0.04219773455554433674820830128918739130165268418982248637691887327545901118558900</span><br/> #<span class=\"sy0\">.</span>7 = -<span class=\"nu0\">0.00962197152787697356211492167234819897536294225211300210513886262731167351446074</span><br/> #<span class=\"sy0\">.</span>8 =  <span class=\"nu0\">0.00721894324666309954239501034044657270990480088023831800109478117362259497415854</span><br/> #<span class=\"sy0\">.</span>9 = -<span class=\"nu0\">0.00116516759185906511211397108401838866680933379538405744340750527562002584816653</span><br/>#<span class=\"sy0\">.</span>10 = -<span class=\"nu0\">0.00021524167411495097281572996305364780647824192337833875035026748908563946371678</span><br/>#<span class=\"sy0\">.</span>11 =  <span class=\"nu0\">0.00012805028238811618615319862632816432339489209969367721490054583804120355204347</span><br/>#<span class=\"sy0\">.</span>12 = -<span class=\"nu0\">0.00002013485478078823865568939142102181838229483329797911526116267090822918618897</span><br/>#<span class=\"sy0\">.</span>13 = -<span class=\"nu0\">0.00000125049348214267065734535947383309224232265562115395981534992315749121245561</span><br/>#<span class=\"sy0\">.</span>14 =  <span class=\"nu0\">0.00000113302723198169588237412962033074494332400483862107565429550539546040842730</span><br/>#<span class=\"sy0\">.</span>15 = -<span class=\"nu0\">0.00000020563384169776071034501541300205728365125790262933794534683172533245680371</span><br/>#<span class=\"sy0\">.</span>16 =  <span class=\"nu0\">0.00000000611609510448141581786249868285534286727586571971232086732402927723507435</span><br/>#<span class=\"sy0\">.</span>17 =  <span class=\"nu0\">0.00000000500200764446922293005566504805999130304461274249448171895337887737472132</span><br/>#<span class=\"sy0\">.</span>18 = -<span class=\"nu0\">0.00000000118127457048702014458812656543650557773875950493258759096189263169643391</span><br/>#<span class=\"sy0\">.</span>19 =  <span class=\"nu0\">0.00000000010434267116911005104915403323122501914007098231258121210871073927347588</span><br/>#<span class=\"sy0\">.</span>20 =  <span class=\"nu0\">0.00000000000778226343990507125404993731136077722606808618139293881943550732692987</span><br/>#<span class=\"sy0\">.</span>21 = -<span class=\"nu0\">0.00000000000369680561864220570818781587808576623657096345136099513648454655443000</span><br/>#<span class=\"sy0\">.</span>22 =  <span class=\"nu0\">0.00000000000051003702874544759790154813228632318027268860697076321173501048565735</span><br/>#<span class=\"sy0\">.</span>23 = -<span class=\"nu0\">0.00000000000002058326053566506783222429544855237419746091080810147188058196444349</span><br/>#<span class=\"sy0\">.</span>24 = -<span class=\"nu0\">0.00000000000000534812253942301798237001731872793994898971547812068211168095493211</span><br/>#<span class=\"sy0\">.</span>25 =  <span class=\"nu0\">0.00000000000000122677862823826079015889384662242242816545575045632136601135999606</span><br/>#<span class=\"sy0\">.</span>26 = -<span class=\"nu0\">0.00000000000000011812593016974587695137645868422978312115572918048478798375081233</span><br/>#<span class=\"sy0\">.</span>27 =  <span class=\"nu0\">0.00000000000000000118669225475160033257977724292867407108849407966482711074006109</span><br/>#<span class=\"sy0\">.</span>28 =  <span class=\"nu0\">0.00000000000000000141238065531803178155580394756670903708635075033452562564122263</span><br/>#<span class=\"sy0\">.</span>29 = -<span class=\"nu0\">0.00000000000000000022987456844353702065924785806336992602845059314190367014889830</span><br/>#<span class=\"sy0\">.</span>30 =  <span class=\"nu0\">0.00000000000000000001714406321927337433383963370267257066812656062517433174649858</span><br/>#<span class=\"sy0\">.</span>31 =  <span class=\"nu0\">0.00000000000000000000013373517304936931148647813951222680228750594717618947898583</span><br/>#<span class=\"sy0\">.</span>32 = -<span class=\"nu0\">0.00000000000000000000020542335517666727893250253513557337960820379352387364127301</span><br/>#<span class=\"sy0\">.</span>33 =  <span class=\"nu0\">0.00000000000000000000002736030048607999844831509904330982014865311695836363370165</span><br/>#<span class=\"sy0\">.</span>34 = -<span class=\"nu0\">0.00000000000000000000000173235644591051663905742845156477979906974910879499841377</span><br/>#<span class=\"sy0\">.</span>35 = -<span class=\"nu0\">0.00000000000000000000000002360619024499287287343450735427531007926413552145370486</span><br/>#<span class=\"sy0\">.</span>36 =  <span class=\"nu0\">0.00000000000000000000000001864982941717294430718413161878666898945868429073668232</span><br/>#<span class=\"sy0\">.</span>37 = -<span class=\"nu0\">0.00000000000000000000000000221809562420719720439971691362686037973177950067567580</span><br/>#<span class=\"sy0\">.</span>38 =  <span class=\"nu0\">0.00000000000000000000000000012977819749479936688244144863305941656194998646391332</span><br/>#<span class=\"sy0\">.</span>39 =  <span class=\"nu0\">0.00000000000000000000000000000118069747496652840622274541550997151855968463784158</span><br/>#<span class=\"sy0\">.</span>40 = -<span class=\"nu0\">0.00000000000000000000000000000112458434927708809029365467426143951211941179558301</span><br/>#<span class=\"sy0\">.</span>41 =  <span class=\"nu0\">0.00000000000000000000000000000012770851751408662039902066777511246477487720656005</span><br/>#<span class=\"sy0\">.</span>42 = -<span class=\"nu0\">0.00000000000000000000000000000000739145116961514082346128933010855282371056899245</span><br/>#<span class=\"sy0\">.</span>43 =  <span class=\"nu0\">0.00000000000000000000000000000000001134750257554215760954165259469306393008612196</span><br/>#<span class=\"sy0\">.</span>44 =  <span class=\"nu0\">0.00000000000000000000000000000000004639134641058722029944804907952228463057968680</span><br/>#<span class=\"sy0\">.</span>45 = -<span class=\"nu0\">0.00000000000000000000000000000000000534733681843919887507741819670989332090488591</span><br/>#<span class=\"sy0\">.</span>46 =  <span class=\"nu0\">0.00000000000000000000000000000000000032079959236133526228612372790827943910901464</span><br/>#<span class=\"sy0\">.</span>47 = -<span class=\"nu0\">0.00000000000000000000000000000000000000444582973655075688210159035212464363740144</span><br/>#<span class=\"sy0\">.</span>48 = -<span class=\"nu0\">0.00000000000000000000000000000000000000131117451888198871290105849438992219023663</span><br/>#<span class=\"sy0\">.</span>49 =  <span class=\"nu0\">0.00000000000000000000000000000000000000016470333525438138868182593279063941453996</span><br/>#<span class=\"sy0\">.</span>50 = -<span class=\"nu0\">0.00000000000000000000000000000000000000001056233178503581218600561071538285049997</span><br/>#<span class=\"sy0\">.</span>51 =  <span class=\"nu0\">0.00000000000000000000000000000000000000000026784429826430494783549630718908519485</span><br/>#<span class=\"sy0\">.</span>52 =  <span class=\"nu0\">0.00000000000000000000000000000000000000000002424715494851782689673032938370921241</span><br/>#=<span class=\"nu0\">52</span>;                           <span class=\"kw1\">do</span> k=#  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> #<br/>                                sum=sum<span class=\"sy0\">*</span>xm  +  #<span class=\"sy0\">.</span>k<br/>                                <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span><br/><span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span>sum</pre>"}, {"lang": "Ring", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>decimals(3)<br/>gamma = 0.577<br/>coeff = -0.655<br/>quad = -0.042<br/>qui = 0.166<br/>set = -0.042<br/>\u00a0<br/>for i=1 to 10<br/>    see gammafunc(i / 3.0) + nl<br/>next<br/>\u00a0<br/>func recigamma z<br/>     return z + gamma * pow(z,2) + coeff * pow(z,3) + quad * pow(z,4) + qui * pow(z,5) + set * pow(z,6)<br/>\u00a0<br/>func gammafunc z<br/>     if z = 1 return 1<br/>     but fabs(z) &lt;= 0.5 return 1 / recigamma(z)<br/>     else return (z - 1) * gammafunc(z-1) ok<br/>\u00a0</pre>"}, {"lang": "RLaB", "loc": 17, "block": "<pre class=\"ruby highlighted_source\"><span class=\"re0\">$a</span> = <span class=\"br0\">[</span> <span class=\"nu0\">1.00000</span>_00000_00000_00000,  <span class=\"nu0\">0.57721</span>_56649_01532_86061, <span class=\"sy0\">-</span><span class=\"nu0\">0.65587</span>_80715_20253_88108,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.04200</span>_26350_34095_23553,  <span class=\"nu0\">0.16653</span>_86113_82291_48950, <span class=\"sy0\">-</span><span class=\"nu0\">0.04219</span>_77345_55544_33675,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.00962</span>_19715_27876_97356,  <span class=\"nu0\">0.00721</span>_89432_46663_09954, <span class=\"sy0\">-</span><span class=\"nu0\">0.00116</span>_51675_91859_06511,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.00021</span>_52416_74114_95097,  <span class=\"nu0\">0.00012</span>_80502_82388_11619, <span class=\"sy0\">-</span><span class=\"nu0\">0.00002</span>_01348_54780_78824,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_12504_93482_14267,  <span class=\"nu0\">0.00000</span>_11330_27231_98170, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_02056_33841_69776,<br/>       <span class=\"nu0\">0.00000</span>_00061_16095_10448,  <span class=\"nu0\">0.00000</span>_00050_02007_64447, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00011_81274_57049,<br/>       <span class=\"nu0\">0.00000</span>_00001_04342_67117,  <span class=\"nu0\">0.00000</span>_00000_07782_26344, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_03696_80562,<br/>       <span class=\"nu0\">0.00000</span>_00000_00510_03703, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00020_58326, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00005_34812,<br/>       <span class=\"nu0\">0.00000</span>_00000_00001_22678, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00000_11813,  <span class=\"nu0\">0.00000</span>_00000_00000_00119,<br/>       <span class=\"nu0\">0.00000</span>_00000_00000_00141, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00000_00023,  <span class=\"nu0\">0.00000</span>_00000_00000_00002 <span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">def</span> gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>  y = <span class=\"kw3\">Float</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>  <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> <span class=\"re0\">$a</span>.<span class=\"me1\">reverse</span>.<span class=\"me1\">inject</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>sum, an<span class=\"sy0\">|</span> sum <span class=\"sy0\">*</span> y <span class=\"sy0\">+</span> an<span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">10</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> <span class=\"kw3\">puts</span> <span class=\"kw3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"%.14e\"</span>, gamma<span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">3.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span></pre>"}, {"lang": "Ruby", "loc": 17, "block": "<pre class=\"ruby highlighted_source\"><span class=\"re0\">$a</span> = <span class=\"br0\">[</span> <span class=\"nu0\">1.00000</span>_00000_00000_00000,  <span class=\"nu0\">0.57721</span>_56649_01532_86061, <span class=\"sy0\">-</span><span class=\"nu0\">0.65587</span>_80715_20253_88108,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.04200</span>_26350_34095_23553,  <span class=\"nu0\">0.16653</span>_86113_82291_48950, <span class=\"sy0\">-</span><span class=\"nu0\">0.04219</span>_77345_55544_33675,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.00962</span>_19715_27876_97356,  <span class=\"nu0\">0.00721</span>_89432_46663_09954, <span class=\"sy0\">-</span><span class=\"nu0\">0.00116</span>_51675_91859_06511,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.00021</span>_52416_74114_95097,  <span class=\"nu0\">0.00012</span>_80502_82388_11619, <span class=\"sy0\">-</span><span class=\"nu0\">0.00002</span>_01348_54780_78824,<br/>      <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_12504_93482_14267,  <span class=\"nu0\">0.00000</span>_11330_27231_98170, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_02056_33841_69776,<br/>       <span class=\"nu0\">0.00000</span>_00061_16095_10448,  <span class=\"nu0\">0.00000</span>_00050_02007_64447, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00011_81274_57049,<br/>       <span class=\"nu0\">0.00000</span>_00001_04342_67117,  <span class=\"nu0\">0.00000</span>_00000_07782_26344, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_03696_80562,<br/>       <span class=\"nu0\">0.00000</span>_00000_00510_03703, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00020_58326, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00005_34812,<br/>       <span class=\"nu0\">0.00000</span>_00000_00001_22678, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00000_11813,  <span class=\"nu0\">0.00000</span>_00000_00000_00119,<br/>       <span class=\"nu0\">0.00000</span>_00000_00000_00141, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00000_00023,  <span class=\"nu0\">0.00000</span>_00000_00000_00002 <span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">def</span> gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>  y = <span class=\"kw3\">Float</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>  <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> <span class=\"re0\">$a</span>.<span class=\"me1\">reverse</span>.<span class=\"me1\">inject</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>sum, an<span class=\"sy0\">|</span> sum <span class=\"sy0\">*</span> y <span class=\"sy0\">+</span> an<span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">10</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> <span class=\"kw3\">puts</span> <span class=\"kw3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"%.14e\"</span>, gamma<span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">3.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span></pre>"}, {"lang": "Scala", "loc": 26, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Locale</span>.<span class=\"sy0\">_</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Gamma <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> stGamma<span class=\"br0\">(</span>x<span class=\"sy0\">:</span>Double<span class=\"br0\">)</span><span class=\"sy0\">:</span>Double<span class=\"sy0\">=</span>math.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>math.<span class=\"me1\">Pi</span>/x<span class=\"br0\">)</span><span class=\"sy0\">*</span>math.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x/math.<span class=\"me1\">E</span><span class=\"br0\">)</span>, x<span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> laGamma<span class=\"br0\">(</span>x<span class=\"sy0\">:</span>Double<span class=\"br0\">)</span><span class=\"sy0\">:</span>Double<span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p<span class=\"sy0\">=</span>Seq<span class=\"br0\">(</span><span class=\"nu0\">676.5203681218851</span>, -<span class=\"nu0\">1259.1392167224028</span>, <span class=\"nu0\">771.32342877765313</span>, <br/>             -<span class=\"nu0\">176.61502916214059</span>, <span class=\"nu0\">12.507343278686905</span>, -<span class=\"nu0\">0.13857109526572012</span>,<br/>                9.9843695780195716e-6, 1.5056327351493116e-7<span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      math.<span class=\"me1\">Pi</span>/<span class=\"br0\">(</span>math.<span class=\"me1\">sin</span><span class=\"br0\">(</span>math.<span class=\"me1\">Pi</span><span class=\"sy0\">*</span>x<span class=\"br0\">)</span><span class=\"sy0\">*</span>laGamma<span class=\"br0\">(</span><span class=\"nu0\">1</span>-x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x2<span class=\"sy0\">=</span>x-<span class=\"nu0\">1</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> t<span class=\"sy0\">=</span>x2+<span class=\"nu0\">7</span>+<span class=\"nu0\">0.5</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> a<span class=\"sy0\">=</span>p.<span class=\"me1\">zipWithIndex</span>.<span class=\"me1\">foldLeft</span><span class=\"br0\">(</span><span class=\"nu0\">0.99999999999980993</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">(</span>r,v<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> r+v.<span class=\"sy0\">_</span>1/<span class=\"br0\">(</span>x2+v.<span class=\"sy0\">_</span>2+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      math.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>math.<span class=\"me1\">Pi</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>math.<span class=\"me1\">pow</span><span class=\"br0\">(</span>t, x2+<span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>math.<span class=\"me1\">exp</span><span class=\"br0\">(</span>-t<span class=\"br0\">)</span><span class=\"sy0\">*</span>a<br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Gamma    Stirling             Lanczos\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a><span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0.1</span> to <span class=\"nu0\">2.0</span> by <span class=\"nu0\">0.1</span><span class=\"br0\">)</span><br/>      println<span class=\"br0\">(</span><span class=\"st0\">\"%.1f  -&gt; \u00a0%.16f  \u00a0%.16f\"</span>.<span class=\"me1\">formatLocal</span><span class=\"br0\">(</span>ENGLISH, x, stGamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span>, laGamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 64, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>import <span class=\"br0\">(</span>scheme base<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>scheme inexact<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>scheme <span class=\"kw1\">write</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> PI <span class=\"nu0\">3.14159265358979323846264338327950</span><span class=\"br0\">)</span>  <br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"kw1\">e</span> <span class=\"nu0\">2.7182818284590452353602875</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> gamma<span class=\"sy0\">-</span>lanczos<br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>p '<span class=\"br0\">(</span><span class=\"nu0\">676.5203681218851</span> <span class=\"sy0\">-</span><span class=\"nu0\">1259.1392167224028</span> <span class=\"nu0\">771.32342877765313</span> <br/>             <span class=\"sy0\">-</span><span class=\"nu0\">176.61502916214059</span> <span class=\"nu0\">12.507343278686905</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.13857109526572012</span><br/>             9.9843695780195716e<span class=\"sy0\">-</span>6 1.5056327351493116e<span class=\"sy0\">-</span>7<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> x <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">/</span> PI <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sin</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> PI x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>gamma<span class=\"sy0\">-</span>lanczos <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"nu0\">1</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x2 <span class=\"br0\">(</span><span class=\"sy0\">-</span> x <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">t</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> x2 <span class=\"nu0\">7</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>a <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>ps p <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> ps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                       <span class=\"br0\">(</span>idx <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> idx<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                       <span class=\"br0\">(</span>res <span class=\"nu0\">0.99999999999980993</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> res <br/>                                                   <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> ps<span class=\"br0\">)</span><br/>                                                      <span class=\"br0\">(</span><span class=\"sy0\">+</span> x2 idx <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null?</span> ps<span class=\"br0\">)</span> res<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">2</span> PI<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"kw1\">t</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> x2 <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">exp</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"kw1\">t</span><span class=\"br0\">)</span><span class=\"br0\">)</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>gamma<span class=\"sy0\">-</span>stirling x<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> PI x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> x <span class=\"kw1\">e</span><span class=\"br0\">)</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> gamma<span class=\"sy0\">-</span>taylor<br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>a <span class=\"br0\">(</span><span class=\"kw1\">reverse</span><br/>             '<span class=\"br0\">(</span><span class=\"nu0\">1.00000000000000000000</span>  <span class=\"nu0\">0.57721566490153286061</span> <br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.65587807152025388108</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.04200263503409523553</span>  <br/>               <span class=\"nu0\">0.16653861138229148950</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.04219773455554433675</span><br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.00962197152787697356</span>  <span class=\"nu0\">0.00721894324666309954</span> <br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.00116516759185906511</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00021524167411495097</span>  <br/>               <span class=\"nu0\">0.00012805028238811619</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00002013485478078824</span><br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.00000125049348214267</span>  <span class=\"nu0\">0.00000113302723198170</span> <br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.00000020563384169776</span> <span class=\"nu0\">0.00000000611609510448</span>  <br/>               <span class=\"nu0\">0.00000000500200764447</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000118127457049</span><br/>               <span class=\"nu0\">0.00000000010434267117</span> <span class=\"nu0\">0.00000000000778226344</span> <br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000369680562</span> <span class=\"nu0\">0.00000000000051003703</span> <br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000002058326</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000534812</span><br/>               <span class=\"nu0\">0.00000000000000122678</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000011813</span>  <br/>               <span class=\"nu0\">0.00000000000000000119</span> <span class=\"nu0\">0.00000000000000000141</span> <br/>               <span class=\"sy0\">-</span><span class=\"nu0\">0.00000000000000000023</span>  <span class=\"nu0\">0.00000000000000000002</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>y <span class=\"br0\">(</span><span class=\"sy0\">-</span> x <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>as a <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> as<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>res <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> as<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> res y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null?</span> as<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"nu0\">1</span> res<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"nu0\">0.1</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> i <span class=\"nu0\">0.1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> i <span class=\"nu0\">2.01</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span><span class=\"kw1\">string-append</span> <span class=\"st0\">\"Gamma (\"</span><br/>                          <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> i<span class=\"br0\">)</span><br/>                          <span class=\"st0\">\"): \"</span><br/>                          <span class=\"st0\">\"<span class=\"es0\">\\n</span> --- Lanczos\u00a0: \"</span><br/>                          <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span>gamma<span class=\"sy0\">-</span>lanczos i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                          <span class=\"st0\">\"<span class=\"es0\">\\n</span> --- Stirling: \"</span><br/>                          <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span>gamma<span class=\"sy0\">-</span>stirling i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                          <span class=\"st0\">\"<span class=\"es0\">\\n</span> --- Taylor \u00a0: \"</span><br/>                          <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span>gamma<span class=\"sy0\">-</span>taylor i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                          <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Scilab", "loc": 22, "block": "<pre class=\"text highlighted_source\">function x=gammal(z)  // Lanczos'<br/>    lz=[  1.000000000190015 ..<br/>          76.18009172947146  -86.50532032941677      24.01409824083091    ..<br/>         -1.231739572450155   1.208650973866179e-3  -5.395239384953129e-6 ]<br/>    if z &lt; 0.5 then <br/>        x=%pi/sin(%pi*z)-gammal(1-z)<br/>    else<br/>        z=z-1.0<br/>        b=z+5.5<br/>        a=lz(1)<br/>        for i=1:6<br/>            a=a+(lz(i+1)/(z+i))<br/>        end<br/>        x=exp((log(sqrt(2*%pi))+log(a)-b)+log(b)*(z+0.5))<br/>    end<br/>endfunction<br/>\u00a0<br/>printf(\"%4s\u00a0%-9s\u00a0%-9s\\n\",\"x\",\"gamma(x)\",\"gammal(x)\")<br/>for i=1:30<br/>    x=i/10<br/>    printf(\"%4.1f\u00a0%9f\u00a0%9f\\n\",x,gamma(x),gammal(x))<br/>end</pre>"}, {"lang": "Seed7", "loc": 42, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"float.s7i\";<br/>\u00a0<br/>const func float: gamma (in float: X) is func<br/>  result<br/>    var float: result is 0.0;<br/>  local<br/>    const array float: A is [] (<br/>         1.00000000000000000000,  0.57721566490153286061,<br/>        -0.65587807152025388108, -0.04200263503409523553,<br/>         0.16653861138229148950, -0.04219773455554433675,<br/>        -0.00962197152787697356,  0.00721894324666309954,<br/>        -0.00116516759185906511, -0.00021524167411495097,<br/>         0.00012805028238811619, -0.00002013485478078824,<br/>        -0.00000125049348214267,  0.00000113302723198170,<br/>        -0.00000020563384169776,  0.00000000611609510448,<br/>         0.00000000500200764447, -0.00000000118127457049,<br/>         0.00000000010434267117,  0.00000000000778226344,<br/>        -0.00000000000369680562,  0.00000000000051003703,<br/>        -0.00000000000002058326, -0.00000000000000534812,<br/>         0.00000000000000122678, -0.00000000000000011813,<br/>         0.00000000000000000119,  0.00000000000000000141,<br/>        -0.00000000000000000023,  0.00000000000000000002);<br/>    var float: Y is 0.0;<br/>    var float: Sum is A[maxIdx(A)];<br/>    var integer: N is 0;<br/>  begin<br/>    Y\u00a0:= X - 1.0;<br/>    for N range pred(maxIdx(A)) downto minIdx(A) do<br/>      Sum\u00a0:= Sum * Y + A[N];<br/>    end for;<br/>    result\u00a0:= 1.0 / Sum;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var integer: I is 0;<br/>  begin<br/>    for I range 1 to 10 do<br/>      writeln((gamma(flt(I) / 3.0)) digits 15);<br/>    end for;<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 19, "block": "<pre class=\"ruby highlighted_source\">var a = <span class=\"br0\">[</span> <span class=\"nu0\">1.00000</span>_00000_00000_00000,  <span class=\"nu0\">0.57721</span>_56649_01532_86061, <span class=\"sy0\">-</span><span class=\"nu0\">0.65587</span>_80715_20253_88108,<br/>         <span class=\"sy0\">-</span><span class=\"nu0\">0.04200</span>_26350_34095_23553,  <span class=\"nu0\">0.16653</span>_86113_82291_48950, <span class=\"sy0\">-</span><span class=\"nu0\">0.04219</span>_77345_55544_33675,<br/>         <span class=\"sy0\">-</span><span class=\"nu0\">0.00962</span>_19715_27876_97356,  <span class=\"nu0\">0.00721</span>_89432_46663_09954, <span class=\"sy0\">-</span><span class=\"nu0\">0.00116</span>_51675_91859_06511,<br/>         <span class=\"sy0\">-</span><span class=\"nu0\">0.00021</span>_52416_74114_95097,  <span class=\"nu0\">0.00012</span>_80502_82388_11619, <span class=\"sy0\">-</span><span class=\"nu0\">0.00002</span>_01348_54780_78824,<br/>         <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_12504_93482_14267,  <span class=\"nu0\">0.00000</span>_11330_27231_98170, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_02056_33841_69776,<br/>          <span class=\"nu0\">0.00000</span>_00061_16095_10448,  <span class=\"nu0\">0.00000</span>_00050_02007_64447, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00011_81274_57049,<br/>          <span class=\"nu0\">0.00000</span>_00001_04342_67117,  <span class=\"nu0\">0.00000</span>_00000_07782_26344, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_03696_80562,<br/>          <span class=\"nu0\">0.00000</span>_00000_00510_03703, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00020_58326, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00005_34812,<br/>          <span class=\"nu0\">0.00000</span>_00000_00001_22678, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00000_11813,  <span class=\"nu0\">0.00000</span>_00000_00000_00119,<br/>          <span class=\"nu0\">0.00000</span>_00000_00000_00141, <span class=\"sy0\">-</span><span class=\"nu0\">0.00000</span>_00000_00000_00023,  <span class=\"nu0\">0.00000</span>_00000_00000_00002 <span class=\"br0\">]</span><br/>\u00a0<br/>func gamma<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var y = <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> a.<span class=\"me1\">reverse</span>.<span class=\"me1\">reduce</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>sum, an<span class=\"sy0\">|</span> sum<span class=\"sy0\">*</span>y <span class=\"sy0\">+</span> an<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">10</span> <span class=\"br0\">{</span><br/>    say <span class=\"br0\">(</span><span class=\"st0\">\"%.14e\"</span> <span class=\"sy0\">%</span> gamma<span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Stata", "loc": 42, "block": "<pre class=\"text highlighted_source\">mata<br/>_gamma_coef = 1.0,<br/>5.7721566490153286061e-1,-6.5587807152025388108e-1,<br/>-4.2002635034095235529e-2,1.665386113822914895e-1,<br/>-4.2197734555544336748e-2,-9.6219715278769735621e-3,<br/>7.2189432466630995424e-3,-1.1651675918590651121e-3,<br/>-2.1524167411495097282e-4,1.2805028238811618615e-4,<br/>-2.0134854780788238656e-5,-1.2504934821426706573e-6,<br/>1.1330272319816958824e-6,-2.0563384169776071035e-7,<br/>6.1160951044814158179e-9,5.0020076444692229301e-9,<br/>-1.1812745704870201446e-9,1.0434267116911005105e-10,<br/>7.782263439905071254e-12,-3.6968056186422057082e-12,<br/>5.100370287454475979e-13,-2.0583260535665067832e-14,<br/>-5.3481225394230179824e-15<br/>\u00a0<br/>function gamma_(x_) {<br/>\texternal _gamma_coef<br/>\tx = x_<br/>\tfor (y=1; x&gt;2;) y = --x*y<br/>\tz = _gamma_coef[24]<br/>\tx--<br/>\tfor (i=23; i&gt;=1; i--) z = z*x+_gamma_coef[i]<br/>\treturn(y/z)<br/>}<br/>\u00a0<br/>function map(f,a) {<br/>\tn = rows(a)<br/>\tp = cols(a)<br/>\tb = J(n,p,.)<br/>\tfor (i=1; i&lt;=n; i++) {<br/>\t\tfor (j=1; j&lt;=p; j++) {<br/>\t\t\tb[i,j] = (*f)(a[i,j])<br/>\t\t}<br/>\t}<br/>\treturn(b)<br/>}<br/>\u00a0<br/>x=(1::10000)/100<br/>u=map(&amp;gamma(),x)<br/>v=map(&amp;gamma_(),x)<br/>max(abs((u-v):/u))<br/>end</pre>"}, {"lang": "Tcl", "loc": 35, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require math<br/><span class=\"kw2\">package</span> require math::<span class=\"me1\">calculus</span><br/>\u00a0<br/><span class=\"co1\"># gamma(1) and gamma(1.5)</span><br/>\u00a0<br/><span class=\"kw1\">set</span> f <span class=\"nu0\">1.0</span><br/><span class=\"kw1\">set</span> f2 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>sqrt<span class=\"br0\">(</span>acos<span class=\"br0\">(</span>-<span class=\"nu0\">1</span>.<span class=\"br0\">)</span><span class=\"br0\">)</span>/<span class=\"nu0\">2</span>.<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> x <span class=\"nu0\">1.0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">10.0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> + <span class=\"nu0\">0.5</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"co1\"># method 1 - numerical integration, Romberg's method, special</span><br/>    <span class=\"co1\">#            case for an improper integral</span><br/>\u00a0<br/>    <span class=\"kw1\">set</span> g1 <span class=\"br0\">[</span>math::<span class=\"me1\">calculus</span>::<span class=\"me1\">romberg</span>  \\<br/>                <span class=\"br0\">[</span><span class=\"kw2\">list</span> apply <span class=\"br0\">{</span><span class=\"br0\">{</span>x t<span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$t</span> <span class=\"sy0\">**</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> exp<span class=\"br0\">(</span>-<span class=\"re0\">$t</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span> \\<br/>                <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> -relerror 1e-8<span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> g2 <span class=\"br0\">[</span>math::<span class=\"me1\">calculus</span>::<span class=\"me1\">romberg_infinity</span> \\<br/>                <span class=\"br0\">[</span><span class=\"kw2\">list</span> apply <span class=\"br0\">{</span><span class=\"br0\">{</span>x t<span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$t</span> <span class=\"sy0\">**</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> exp<span class=\"br0\">(</span>-<span class=\"re0\">$t</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span> \\<br/>                <span class=\"nu0\">1</span> Inf -relerror 1e-8<span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> gamma <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$g1</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> + <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$g2</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"co1\"># method 2 - library function</span><br/>\u00a0<br/>    <span class=\"kw1\">set</span> libgamma <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>exp<span class=\"br0\">(</span><span class=\"br0\">[</span>math::<span class=\"me1\">ln_Gamma</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"co1\"># method 3 - special forms for integer and half-integer arguments</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> == entier<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"br0\">{</span><span class=\"sy0\">%</span>4.1f <span class=\"sy0\">%</span>13.6f <span class=\"sy0\">%</span>13.6f <span class=\"sy0\">%</span>13.6f<span class=\"br0\">}</span> <span class=\"re0\">$x</span> <span class=\"re0\">$gamma</span> <span class=\"re0\">$libgamma</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> f <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"re0\">$f</span> <span class=\"sy0\">*</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"br0\">{</span><span class=\"sy0\">%</span>4.1f <span class=\"sy0\">%</span>13.6f <span class=\"sy0\">%</span>13.6f <span class=\"sy0\">%</span>13.6f<span class=\"br0\">}</span> <span class=\"re0\">$x</span> <span class=\"re0\">$gamma</span> <span class=\"re0\">$libgamma</span> <span class=\"re0\">$f2</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> f2 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"re0\">$f2</span> <span class=\"sy0\">*</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "TI-83 BASIC", "loc": 1, "block": "<pre>.5! -&gt; .8862269255 \n</pre>"}, {"lang": "Visual FoxPro", "loc": 62, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>LOCAL i As Integer, x As Double, o As lanczos<br/>CLOSE DATABASES ALL<br/>CLEAR<br/>CREATE CURSOR results (ZVal B(1), GamVal B(15))<br/>INDEX ON zval TAG ZVal COLLATE \"Machine\"<br/>SET ORDER TO 0<br/>o = CREATEOBJECT(\"lanczos\")<br/>FOR i = 1 TO 20<br/>x = i/10<br/>    INSERT INTO results VALUES (x, o.Gamma(x))<br/>ENDFOR<br/>UPDATE results SET GamVal = ROUND(GamVal, 0) WHERE ZVal = INT(ZVal)<br/>*!* This just creates the output text - it is not part of the algorithm<br/>DO cursor2txt.prg WITH \"results\", .T.<br/>\u00a0<br/>DEFINE CLASS lanczos As Session<br/>#DEFINE FPF 5.5<br/>#DEFINE HALF 0.5<br/>#DEFINE PY PI()<br/>DIMENSION LanCoeff[7]<br/>nSize = 0<br/>\u00a0<br/>PROCEDURE Init<br/>DODEFAULT()<br/>WITH THIS<br/>    .LanCoeff[1] = 1.000000000190015<br/>    .LanCoeff[2] = 76.18009172947146<br/>    .LanCoeff[3] = -86.50532032941677<br/>    .LanCoeff[4] = 24.01409824083091<br/>    .LanCoeff[5] = -1.231739572450155<br/>    .LanCoeff[6] = 0.0012086509738662<br/>    .LanCoeff[7] = -0.000005395239385<br/>    .nSize = ALEN(.LanCoeff)<br/>ENDWITH <br/>ENDPROC<br/>\u00a0<br/>FUNCTION Gamma(z)<br/>RETURN EXP(THIS.LogGamma(z))<br/>ENDFUNC<br/>\u00a0<br/>FUNCTION LogGamma(z)<br/>LOCAL a As Double, b As Double, i As Integer, j As Integer, lg As Double<br/>IF z &lt; 0.5<br/>    lg = LOG(PY/SIN(PY*z)) - THIS.LogGamma(1 - z)<br/>ELSE<br/>    WITH THIS\t<br/>\tz = z - 1 <br/>\tb = z + FPF<br/>\ta = .LanCoeff[1]<br/>\tFOR i = 2 TO .nSize<br/>\t    j = i - 1<br/>\t    a = a + .LanCoeff[i]/(z + j)<br/>\tENDFOR<br/>\tlg = (LOG(SQRT(2*PY)) + LOG(a) - b) + LOG(b)*(z + HALF)<br/>    ENDWITH\t<br/>ENDIF<br/>RETURN lg<br/>ENDFUNC\t<br/>\u00a0<br/>ENDDEFINE<br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 23, "block": "<pre class=\"text highlighted_source\">fcn taylorGamma(x){<br/>   var table = T(<br/>     0x1p+0,                    0x1.2788cfc6fb618f4cp-1,<br/>    -0x1.4fcf4026afa2dcecp-1,  -0x1.5815e8fa27047c8cp-5,<br/>     0x1.5512320b43fbe5dep-3,  -0x1.59af103c340927bep-5,<br/>    -0x1.3b4af28483e214e4p-7,   0x1.d919c527f60b195ap-8,<br/>    -0x1.317112ce3a2a7bd2p-10, -0x1.c364fe6f1563ce9cp-13,<br/>     0x1.0c8a78cd9f9d1a78p-13, -0x1.51ce8af47eabdfdcp-16,<br/>    -0x1.4fad41fc34fbb2p-20,    0x1.302509dbc0de2c82p-20,<br/>    -0x1.b9986666c225d1d4p-23,  0x1.a44b7ba22d628acap-28,<br/>     0x1.57bc3fc384333fb2p-28, -0x1.44b4cedca388f7c6p-30,<br/>     0x1.cae7675c18606c6p-34,   0x1.11d065bfaf06745ap-37,<br/>    -0x1.0423bac8ca3faaa4p-38,  0x1.1f20151323cd0392p-41,<br/>    -0x1.72cb88ea5ae6e778p-46, -0x1.815f72a05f16f348p-48,<br/>     0x1.6198491a83bccbep-50,  -0x1.10613dde57a88bd6p-53,<br/>     0x1.5e3fee81de0e9c84p-60,  0x1.a0dc770fb8a499b6p-60,<br/>    -0x1.0f635344a29e9f8ep-62,  0x1.43d79a4b90ce8044p-66).reverse();<br/>\u00a0<br/>    y \u00a0:= x.toFloat() - 1.0;<br/>    sm\u00a0:= table[1,*].reduce('wrap(sm,an){ sm * y + an },table[0]);<br/>\u00a0<br/>    return(1.0 / sm);<br/>}</pre>"}]}