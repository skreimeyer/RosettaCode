{"task": "Retrieve_and_search_chat_history", "blocks": [{"lang": "C", "loc": 77, "block": "<pre class=\"c highlighted_source\">\u00a0<br/><span class=\"co2\">#include&lt;curl/curl.h&gt;</span><br/><span class=\"co2\">#include&lt;string.h&gt;</span><br/><span class=\"co2\">#include&lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define MAX_LEN 1000</span><br/>\u00a0<br/><span class=\"kw4\">void</span> searchChatLogs<span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span> searchString<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">char</span><span class=\"sy0\">*</span> baseURL <span class=\"sy0\">=</span> <span class=\"st0\">\"http://tclers.tk/conferences/tcl/\"</span><span class=\"sy0\">;</span><br/>\ttime_t t<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">struct</span> tm<span class=\"sy0\">*</span> currentDate<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">char</span> dateString<span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>dateStringFile<span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>lineData<span class=\"br0\">[</span>MAX_LEN<span class=\"br0\">]</span><span class=\"sy0\">,</span>targetURL<span class=\"br0\">[</span><span class=\"nu0\">100</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>flag<span class=\"sy0\">;</span><br/>\tFILE <span class=\"sy0\">*</span>fp<span class=\"sy0\">;</span><br/>\u00a0<br/>\tCURL <span class=\"sy0\">*</span>curl<span class=\"sy0\">;</span><br/>\tCURLcode res<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tcurrentDate <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/localtime.html\"><span class=\"kw3\">localtime</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strftime.html\"><span class=\"kw3\">strftime</span></a><span class=\"br0\">(</span>dateString<span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"st0\">\"%Y-%m-%d\"</span><span class=\"sy0\">,</span> currentDate<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Today is\u00a0:\u00a0%s\"</span><span class=\"sy0\">,</span>dateString<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>curl <span class=\"sy0\">=</span> curl_easy_init<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">!=</span>NULL<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;=</span><span class=\"nu0\">10</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\u00a0<br/>\t\tflag <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a><span class=\"br0\">(</span>targetURL<span class=\"sy0\">,</span><span class=\"st0\">\"%s%s.tcl\"</span><span class=\"sy0\">,</span>baseURL<span class=\"sy0\">,</span>dateString<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strcpy.html\"><span class=\"kw3\">strcpy</span></a><span class=\"br0\">(</span>dateStringFile<span class=\"sy0\">,</span>dateString<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Retrieving chat logs from\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>targetURL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>fp <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html\"><span class=\"kw3\">fopen</span></a><span class=\"br0\">(</span><span class=\"st0\">\"nul\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"w\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Cant's read from\u00a0%s\"</span><span class=\"sy0\">,</span>targetURL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>\t\t\tcurl_easy_setopt<span class=\"br0\">(</span>curl<span class=\"sy0\">,</span> CURLOPT_URL<span class=\"sy0\">,</span> targetURL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tcurl_easy_setopt<span class=\"br0\">(</span>curl<span class=\"sy0\">,</span> CURLOPT_WRITEDATA<span class=\"sy0\">,</span> fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tres <span class=\"sy0\">=</span> curl_easy_perform<span class=\"br0\">(</span>curl<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>res <span class=\"sy0\">==</span> CURLE_OK<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fgets.html\"><span class=\"kw3\">fgets</span></a><span class=\"br0\">(</span>lineData<span class=\"sy0\">,</span>MAX_LEN<span class=\"sy0\">,</span>fp<span class=\"br0\">)</span><span class=\"sy0\">!=</span>NULL<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strstr.html\"><span class=\"kw3\">strstr</span></a><span class=\"br0\">(</span>lineData<span class=\"sy0\">,</span>searchString<span class=\"br0\">)</span><span class=\"sy0\">!=</span>NULL<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t\tflag <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fputs.html\"><span class=\"kw3\">fputs</span></a><span class=\"br0\">(</span>lineData<span class=\"sy0\">,</span>stdout<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>flag<span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>No matching lines found.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fflush.html\"><span class=\"kw3\">fflush</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\tcurrentDate<span class=\"sy0\">-&gt;</span>tm_mday<span class=\"sy0\">--;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/mktime.html\"><span class=\"kw3\">mktime</span></a><span class=\"br0\">(</span>currentDate<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strftime.html\"><span class=\"kw3\">strftime</span></a><span class=\"br0\">(</span>dateString<span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"st0\">\"%Y-%m-%d\"</span><span class=\"sy0\">,</span> currentDate<span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<br/>\u00a0<br/>\t<span class=\"br0\">}</span><br/>\tcurl_easy_cleanup<span class=\"br0\">(</span>curl<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> argC<span class=\"sy0\">,</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span> argV<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>argC<span class=\"sy0\">!=</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Usage\u00a0:\u00a0%s &lt;followed by search string, enclosed by <span class=\"es1\">\\\"</span> if it contains spaces&gt;\"</span><span class=\"sy0\">,</span>argV<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">else</span><br/>\t\tsearchChatLogs<span class=\"br0\">(</span>argV<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 48, "block": "<pre class=\"text highlighted_source\">#! /usr/bin/env elixir<br/>defmodule Mentions do<br/>  def get(url) do<br/>    {:ok, {{_, 200, _}, _, body}} =<br/>      url<br/>      |&gt; String.to_charlist()<br/>      |&gt;\u00a0:httpc.request()<br/>    data = List.to_string(body)<br/>    if Regex.match?(~r|&lt;!Doctype HTML.*&lt;Title&gt;URL Not Found&lt;/Title&gt;|s, data) do<br/>      {:error, \"log file not found\"}<br/>    else<br/>      {:ok, data}<br/>    end<br/>  end<br/>\u00a0<br/>  def perg(haystack, needle) do<br/>    haystack<br/>    |&gt; String.split(\"\\n\")<br/>    |&gt; Enum.filter(fn x -&gt; String.contains?(x, needle) end)<br/>  end<br/>\u00a0<br/>  def generate_url(n) do<br/>    date_str =<br/>      DateTime.utc_now()<br/>      |&gt; DateTime.to_unix()<br/>      |&gt; (fn x -&gt; x + 60*60*24*n end).()<br/>      |&gt; DateTime.from_unix!()<br/>      |&gt; (fn\u00a0%{year: y, month: m, day: d} -&gt;<br/>       \u00a0:io_lib.format(\"~B-~2..0B-~2..0B\", [y, m, d])<br/>      end).()<br/>    \"http://tclers.tk/conferences/tcl/#{date_str}.tcl\"<br/>  end<br/>end<br/>\u00a0<br/>[needle] = System.argv()<br/>:application.start(:inets)<br/>back = 10<br/># Elixir does not come standard with time zone definitions, so we add an extra<br/># day to account for the possible difference between the local and the server<br/># time.<br/>for i &lt;- -back..1 do<br/>  url = Mentions.generate_url(i)<br/>  with {:ok, haystack} &lt;- Mentions.get(url),<br/>       # If the result is a non-empty list...<br/>       [h | t] &lt;-  Mentions.perg(haystack, needle) do<br/>    IO.puts(\"#{url}\\n------\\n#{Enum.join([h | t], \"\\n\")}\\n------\\n\")<br/>  end<br/>end</pre>"}, {"lang": "F#", "loc": 40, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"co2\">#!/usr/bin/env fsharpi</span><br/><span class=\"kw1\">let</span> server_tz <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">try</span><br/>        <span class=\"co1\">// CLR on Windows</span><br/>        System.<span class=\"me1\">TimeZoneInfo</span>.<span class=\"me1\">FindSystemTimeZoneById</span><span class=\"br0\">(</span><span class=\"st0\">\"W. Europe Standard Time\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">with</span><br/>        <span class=\"co1\">// Mono</span><br/>       \u00a0:? System.<span class=\"me1\">TimeZoneNotFoundException</span> <span class=\"sy0\">-&gt;</span><br/>            System.<span class=\"me1\">TimeZoneInfo</span>.<span class=\"me1\">FindSystemTimeZoneById</span><span class=\"br0\">(</span><span class=\"st0\">\"Europe/Berlin\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> get url <span class=\"sy0\">=</span>        <br/>    <span class=\"kw1\">let</span> req <span class=\"sy0\">=</span> System.<span class=\"me1\">Net</span>.<span class=\"me1\">WebRequest</span>.<span class=\"me1\">Create</span><span class=\"br0\">(</span>System.<span class=\"me1\">Uri</span><span class=\"br0\">(</span>url<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">use</span> resp <span class=\"sy0\">=</span> req.<span class=\"me1\">GetResponse</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">use</span> stream <span class=\"sy0\">=</span> resp.<span class=\"me1\">GetResponseStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">use</span> reader <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> System.<span class=\"me1\">IO</span>.<span class=\"me1\">StreamReader</span><span class=\"br0\">(</span>stream<span class=\"br0\">)</span> <br/>    reader.<span class=\"me1\">ReadToEnd</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> grep needle <span class=\"br0\">(</span>haystack\u00a0: <span class=\"kw4\">string</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    haystack.<span class=\"me1\">Split</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">toList</span><br/>    <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">filter</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> x <span class=\"sy0\">-&gt;</span> x.<span class=\"me1\">Contains</span><span class=\"br0\">(</span>needle<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> genUrl n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> day <span class=\"sy0\">=</span> System.<span class=\"me1\">DateTime</span>.<span class=\"me1\">UtcNow</span>.<span class=\"me1\">AddDays</span><span class=\"br0\">(</span><span class=\"kw4\">float</span> n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> server_dt <span class=\"sy0\">=</span> System.<span class=\"me1\">TimeZoneInfo</span>.<span class=\"me1\">ConvertTimeFromUtc</span><span class=\"br0\">(</span>day, server_tz<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> timestamp <span class=\"sy0\">=</span> server_dt.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"yyyy-MM-dd\"</span><span class=\"br0\">)</span><br/>    sprintf <span class=\"st0\">\"http://tclers.tk/conferences/tcl/%s.tcl\"</span> timestamp<br/>\u00a0<br/><span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> fsi.<span class=\"me1\">CommandLineArgs</span> <span class=\"kw1\">with</span><br/>    | <span class=\"br0\">[</span>|_<span class=\"sy0\">;</span> needle|<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span><br/>        <span class=\"kw1\">let</span> back <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>        <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"sy0\">-</span>back .. <span class=\"nu0\">0</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">let</span> url <span class=\"sy0\">=</span> genUrl i<br/>            <span class=\"kw1\">let</span> found <span class=\"sy0\">=</span> url <span class=\"sy0\">|&gt;</span> get <span class=\"sy0\">|&gt;</span> grep needle <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">String</span></a>.<span class=\"me1\">concat</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><br/>            <span class=\"kw1\">if</span> found <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">then</span> printfn <span class=\"st0\">\"%s<span class=\"es0\">\\n</span>------<span class=\"es0\">\\n</span>%s<span class=\"es0\">\\n</span>------<span class=\"es0\">\\n</span>\"</span> url found<br/>            <span class=\"kw1\">else</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    | x <span class=\"sy0\">-&gt;</span><br/>        printfn <span class=\"st0\">\"Usage:\u00a0%s literal\"</span> <span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">get</span> x <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        System.<span class=\"me1\">Environment</span>.<span class=\"me1\">Exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre>"}, {"lang": "Go", "loc": 61, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"io/ioutil\"</span><br/>\t<span class=\"st0\">\"log\"</span><br/>\t<span class=\"st0\">\"net/http\"</span><br/>\t<span class=\"st0\">\"os\"</span><br/>\t<span class=\"st0\">\"strings\"</span><br/>\t<span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> get<span class=\"sy1\">(</span>url <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>res <span class=\"kw4\">string</span><span class=\"sy1\">,</span> err error<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\tresp<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> http<span class=\"sy3\">.</span>Get<span class=\"sy1\">(</span>url<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> err<br/>\t<span class=\"sy1\">}</span><br/>\tbuf<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> ioutil<span class=\"sy3\">.</span>ReadAll<span class=\"sy1\">(</span>resp<span class=\"sy3\">.</span>Body<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> err<br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"kw4\">string</span><span class=\"sy1\">(</span>buf<span class=\"sy1\">),</span> <span class=\"kw2\">nil</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> grep<span class=\"sy1\">(</span>needle <span class=\"kw4\">string</span><span class=\"sy1\">,</span> haystack <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>res <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> line <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> strings<span class=\"sy3\">.</span>Split<span class=\"sy1\">(</span>haystack<span class=\"sy1\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">if</span> strings<span class=\"sy3\">.</span>Contains<span class=\"sy1\">(</span>line<span class=\"sy1\">,</span> needle<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t\t\tres <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>res<span class=\"sy1\">,</span> line<span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> res<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> genUrl<span class=\"sy1\">(</span><span class=\"nu2\">i</span> <span class=\"kw4\">int</span><span class=\"sy1\">,</span> loc <span class=\"sy3\">*</span>time<span class=\"sy3\">.</span>Location<span class=\"sy1\">)</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>\tdate <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>In<span class=\"sy1\">(</span>loc<span class=\"sy1\">)</span><span class=\"sy3\">.</span>AddDate<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu2\">i</span><span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">return</span> date<span class=\"sy3\">.</span>Format<span class=\"sy1\">(</span><span class=\"st0\">\"http://tclers.tk/conferences/tcl/2006-01-02.tcl\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tneedle <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><br/>\tback <span class=\"sy2\">:=</span> <span class=\"sy3\">-</span><span class=\"nu0\">10</span><br/>\tserverLoc<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>LoadLocation<span class=\"sy1\">(</span><span class=\"st0\">\"Europe/Berlin\"</span><span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\tlog<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> back<span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\turl <span class=\"sy2\">:=</span> genUrl<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> serverLoc<span class=\"sy1\">)</span><br/>\t\tcontents<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> get<span class=\"sy1\">(</span>url<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\tlog<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\tfound <span class=\"sy2\">:=</span> grep<span class=\"sy1\">(</span>needle<span class=\"sy1\">,</span> contents<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>found<span class=\"sy1\">)</span> &gt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%v<span class=\"es1\">\\n</span>------<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> url<span class=\"sy1\">)</span><br/>\t\t\t<span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> line <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> found <span class=\"sy1\">{</span><br/>\t\t\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%v<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> line<span class=\"sy1\">)</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\tfmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"------<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Mathematica", "loc": 16, "block": "<pre class=\"text highlighted_source\">matchFrom[url_String, str_String]\u00a0:= Select[StringSplit[Import[url, \"String\"], \"\\n\"], StringMatchQ[str]]<br/>\u00a0<br/>getLogLinks[n_]\u00a0:= <br/> Select[Import[\"http://tclers.tk/conferences/tcl/\", \"Hyperlinks\"], <br/>     First[<br/>     StringCases[#1, \"tcl/\" ~~ date__ ~~ \".tcl\"\u00a0:&gt; DateDifference[DateObject[URLDecode[date], TimeZone -&gt; \"Europe/Berlin\"], Now]]] &lt;= <br/>         Quantity[n, \"Days\"] &amp; ]<br/>\u00a0<br/>searchLogs[str_String]\u00a0:= Block[{data},<br/>  Map[<br/>   (data = matchFrom[#, str];<br/>     If[Length[data] &gt; 0, <br/>      Print /@ Join[{#, \"-----\"}, data, {\"----\\n\"}]]) &amp;, <br/>   getLogLinks[10]]]<br/>\u00a0<br/>searchLogs[\"*lazy*\"];</pre>"}, {"lang": "Perl 6", "loc": 48, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$needle</span> <span class=\"sy0\">=</span> <span class=\"re0\">@*ARGS</span><span class=\"sy0\">.</span><span class=\"kw3\">shift</span> <span class=\"sy0\">//</span> <span class=\"st_h\">''</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@haystack</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># 10 days before today, Zulu time</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$begin</span> <span class=\"sy0\">=</span> DateTime<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>time<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">utc</span><span class=\"sy0\">.</span><span class=\"me1\">earlier</span><span class=\"br0\">(</span><span class=\"sy0\">:</span>10days<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"         Executed at: \"</span><span class=\"sy0\">,</span> DateTime<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>time<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">utc</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"Begin searching from: $begin\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># Today - 10 days through today</span><br/><span class=\"kw1\">for</span> <span class=\"re0\">$begin</span><span class=\"sy0\">.</span><span class=\"me1\">Date</span> <span class=\"sy0\">..</span> <span class=\"me1\">DateTime</span><span class=\"sy0\">.</span><span class=\"me1\">now</span><span class=\"sy0\">.</span><span class=\"me1\">utc</span><span class=\"sy0\">.</span><span class=\"me1\">Date</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$date</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"co1\"># connect to server, use a raw socket</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$http</span> <span class=\"sy0\">=</span> IO<span class=\"sy0\">::</span><span class=\"me2\">Socket</span><span class=\"sy0\">::</span><span class=\"me2\">INET</span><span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"sy0\">:</span>host<span class=\"br0\">(</span><span class=\"st_h\">'tclers.tk'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span>port<span class=\"br0\">(</span><span class=\"nu0\">80</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># request file</span><br/>    <span class=\"re0\">$http</span><span class=\"sy0\">.</span><span class=\"kw3\">print</span><span class=\"sy0\">:</span> <span class=\"st0\">\"GET /conferences/tcl/{$date}.tcl HTTP/1.0<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># retrieve file</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@page</span> <span class=\"sy0\">=</span> <span class=\"re0\">$http</span><span class=\"sy0\">.</span><span class=\"me1\">lines</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># remove header</span><br/>    <span class=\"re0\">@page</span><span class=\"sy0\">.</span><span class=\"kw3\">splice</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># concatenate multi-line entries to a single line</span><br/>    <span class=\"kw1\">while</span> <span class=\"re0\">@page</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"re0\">@page</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">~~</span> <span class=\"co2\">m/^'m '\\d\\d\\d\\d'-'\\d\\d'-'\\d\\d'T'/</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@haystack</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> <span class=\"re0\">@page</span><span class=\"sy0\">.</span><span class=\"kw3\">shift</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@haystack</span><span class=\"sy0\">.</span><span class=\"me1\">tail</span> <span class=\"sy0\">~=</span> <span class=\"st_h\">'\u2424'</span> <span class=\"sy0\">~</span> <span class=\"re0\">@page</span><span class=\"sy0\">.</span><span class=\"kw3\">shift</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># close socket</span><br/>    <span class=\"re0\">$http</span><span class=\"sy0\">.</span><span class=\"me1\">close</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># ignore times before 10 days ago</span><br/><span class=\"re0\">@haystack</span><span class=\"sy0\">.</span><span class=\"kw3\">shift</span> <span class=\"kw1\">while</span> <span class=\"re0\">@haystack</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span> <span class=\"kw1\">lt</span> <span class=\"re0\">$begin</span><span class=\"sy0\">.</span><span class=\"me1\">Str</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># print the first and last line of the haystack</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"First and last lines of the haystack:\"</span><span class=\"sy0\">;</span><br/><span class=\"sy0\">.</span><span class=\"kw3\">say</span> <span class=\"kw1\">for</span> <span class=\"sy0\">|</span><span class=\"re0\">@haystack</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">*-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"Needle: \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$needle</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span>  <span class=\"st_h\">'-'</span> <span class=\"kw1\">x</span> <span class=\"nu0\">79</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># find and print needle lines</span><br/><span class=\"sy0\">.</span><span class=\"kw3\">say</span> <span class=\"kw1\">if</span> <span class=\"sy0\">.</span><span class=\"me1\">contains</span><span class=\"br0\">(</span> <span class=\"re0\">$needle</span> <span class=\"br0\">)</span> <span class=\"kw1\">for</span> <span class=\"re0\">@haystack</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Python", "loc": 32, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#! /usr/bin/env python3</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">datetime</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">re</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">urllib</span>.<span class=\"me1\">request</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span><br/>\u00a0<br/><span class=\"kw1\">def</span> get<span class=\"br0\">(</span>url<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">with</span> <span class=\"kw3\">urllib</span>.<span class=\"me1\">request</span>.<span class=\"me1\">urlopen</span><span class=\"br0\">(</span>url<span class=\"br0\">)</span> <span class=\"kw1\">as</span> response:<br/>       html <span class=\"sy0\">=</span> response.<span class=\"me1\">read</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">decode</span><span class=\"br0\">(</span><span class=\"st0\">'utf-8'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">re</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span>r<span class=\"st0\">'&lt;!Doctype HTML[<span class=\"es0\">\\s</span><span class=\"es0\">\\S</span>]*&lt;Title&gt;URL Not Found&lt;/Title&gt;'</span><span class=\"sy0\">,</span> html<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">None</span><br/>    <span class=\"kw1\">return</span> html<br/>\u00a0<br/><span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    template <span class=\"sy0\">=</span> <span class=\"st0\">'http://tclers.tk/conferences/tcl/%Y-%m-%d.tcl'</span><br/>    today <span class=\"sy0\">=</span> <span class=\"kw3\">datetime</span>.<span class=\"kw3\">datetime</span>.<span class=\"me1\">utcnow</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    back <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>    needle <span class=\"sy0\">=</span> <span class=\"kw3\">sys</span>.<span class=\"me1\">argv</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># Since Python does not come standard with time zone definitions, add an</span><br/>    <span class=\"co1\"># extra day to account for the possible difference between the local and the</span><br/>    <span class=\"co1\"># server time.</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>-back<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>:<br/>        day <span class=\"sy0\">=</span> today + <span class=\"kw3\">datetime</span>.<span class=\"me1\">timedelta</span><span class=\"br0\">(</span>days<span class=\"sy0\">=</span>i<span class=\"br0\">)</span><br/>        url <span class=\"sy0\">=</span> day.<span class=\"me1\">strftime</span><span class=\"br0\">(</span>template<span class=\"br0\">)</span><br/>        haystack <span class=\"sy0\">=</span> get<span class=\"br0\">(</span>url<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> haystack:<br/>            mentions <span class=\"sy0\">=</span> <span class=\"br0\">[</span>x <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> haystack.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> needle <span class=\"kw1\">in</span> x<span class=\"br0\">]</span><br/>            <span class=\"kw1\">if</span> mentions:<br/>                <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{}<span class=\"es0\">\\n</span>------<span class=\"es0\">\\n</span>{}<span class=\"es0\">\\n</span>------<span class=\"es0\">\\n</span>'</span><br/>                          .<span class=\"me1\">format</span><span class=\"br0\">(</span>url<span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>'</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span>mentions<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 56, "block": "<pre class=\"scheme highlighted_source\">#lang racket<br/><span class=\"br0\">(</span>require net<span class=\"sy0\">/</span>url<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>require racket<span class=\"sy0\">/</span>date<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; generate archive url from specified number of days in the past</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>generate<span class=\"sy0\">-</span>url days<span class=\"sy0\">-</span>ago<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>putenv <span class=\"st0\">\"TZ\"</span> <span class=\"st0\">\"Europe/Berlin\"</span><span class=\"br0\">)</span> <span class=\"co1\">; this works for Linux</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>today <span class=\"br0\">(</span>current<span class=\"sy0\">-</span>date<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>past <span class=\"br0\">(</span>seconds<span class=\"sy0\">-&gt;</span>date <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span>date<span class=\"sy0\">-&gt;</span>seconds today<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> days<span class=\"sy0\">-</span>ago <span class=\"nu0\">60</span> <span class=\"nu0\">60</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>date<span class=\"sy0\">-</span>str <span class=\"br0\">(</span><span class=\"kw1\">string-append</span><br/>                    <span class=\"br0\">(</span>~r <span class=\"br0\">(</span>date<span class=\"sy0\">-</span>year past<span class=\"br0\">)</span> #:min<span class=\"sy0\">-</span>width <span class=\"nu0\">4</span> #:pad<span class=\"sy0\">-</span><span class=\"kw1\">string</span> <span class=\"st0\">\"0\"</span><span class=\"br0\">)</span> <span class=\"co1\">; 4 digit year</span><br/>                    <span class=\"st0\">\"-\"</span><br/>                    <span class=\"br0\">(</span>~r <span class=\"br0\">(</span>date<span class=\"sy0\">-</span>month past<span class=\"br0\">)</span> #:min<span class=\"sy0\">-</span>width <span class=\"nu0\">2</span> #:pad<span class=\"sy0\">-</span><span class=\"kw1\">string</span> <span class=\"st0\">\"0\"</span><span class=\"br0\">)</span> <span class=\"co1\">; 2 digit month</span><br/>                    <span class=\"st0\">\"-\"</span><br/>                    <span class=\"br0\">(</span>~r <span class=\"br0\">(</span>date<span class=\"sy0\">-</span>day past<span class=\"br0\">)</span> #:min<span class=\"sy0\">-</span>width <span class=\"nu0\">2</span> #:pad<span class=\"sy0\">-</span><span class=\"kw1\">string</span> <span class=\"st0\">\"0\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; 2 digit day</span><br/>         <span class=\"br0\">(</span>url <span class=\"br0\">(</span><span class=\"kw1\">string-append</span> <span class=\"st0\">\"http://tclers.tk/conferences/tcl/\"</span> date<span class=\"sy0\">-</span>str <span class=\"st0\">\".tcl\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    url<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; retrieve content of url as a list of strings</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>content<span class=\"sy0\">-</span>of<span class=\"sy0\">-</span>url url<span class=\"sy0\">-</span><span class=\"kw1\">string</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>st <span class=\"br0\">(</span>open<span class=\"sy0\">-</span>output<span class=\"sy0\">-</span><span class=\"kw1\">string</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>copy<span class=\"sy0\">-</span>port <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>pure<span class=\"sy0\">-</span>port <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span>url url<span class=\"sy0\">-</span><span class=\"kw1\">string</span><span class=\"br0\">)</span><br/>                              #:redirections <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>               st<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>split  <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>output<span class=\"sy0\">-</span><span class=\"kw1\">string</span> st<span class=\"br0\">)</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; divide on line breaks</span><br/>\u00a0<br/><span class=\"co1\">;; from a list of strings, return a list of those containing the search string</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>matches lines search<span class=\"sy0\">-</span><span class=\"kw1\">string</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>internal<span class=\"sy0\">-</span>get<span class=\"sy0\">-</span>matches lines search<span class=\"sy0\">-</span><span class=\"kw1\">string</span> results<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>empty? lines<span class=\"br0\">)</span> results<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">else</span> <span class=\"br0\">(</span>internal<span class=\"sy0\">-</span>get<span class=\"sy0\">-</span>matches <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> lines<span class=\"br0\">)</span><br/>                                  search<span class=\"sy0\">-</span><span class=\"kw1\">string</span><br/>                                  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>contains? <span class=\"br0\">(</span><span class=\"kw1\">car</span> lines<span class=\"br0\">)</span> search<span class=\"sy0\">-</span><span class=\"kw1\">string</span><span class=\"br0\">)</span><br/>                                      <span class=\"br0\">(</span><span class=\"kw1\">append</span> results <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> lines<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                                      results<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>internal<span class=\"sy0\">-</span>get<span class=\"sy0\">-</span>matches lines search<span class=\"sy0\">-</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; display last 10 days worth of archives that contain matches to the search string</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>display<span class=\"sy0\">-</span>matches<span class=\"sy0\">-</span>for<span class=\"sy0\">-</span>last<span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"sy0\">-</span>days search<span class=\"sy0\">-</span><span class=\"kw1\">string</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">;; get archives from 9 days ago until today</span><br/>  <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>i <span class=\"br0\">(</span>range <span class=\"nu0\">9</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>url <span class=\"br0\">(</span>generate<span class=\"sy0\">-</span>url i<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>           <span class=\"br0\">[</span>matches <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>matches <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>content<span class=\"sy0\">-</span>of<span class=\"sy0\">-</span>url url<span class=\"br0\">)</span> search<span class=\"sy0\">-</span><span class=\"kw1\">string</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>empty? matches<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">begin</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">display</span> url<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"------<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>line matches<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">display</span> line<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"------<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">;; use the first command line argument as the search string</span><br/><span class=\"co1\">;; display usage info if no search string is provided</span><br/><span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">vector-length</span> <span class=\"br0\">(</span>current<span class=\"sy0\">-</span>command<span class=\"sy0\">-</span>line<span class=\"sy0\">-</span>arguments<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"USAGE: chat_history &lt;search term&gt;<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">else</span> <span class=\"br0\">(</span>display<span class=\"sy0\">-</span>matches<span class=\"sy0\">-</span>for<span class=\"sy0\">-</span>last<span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"sy0\">-</span>days <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> <span class=\"br0\">(</span>current<span class=\"sy0\">-</span>command<span class=\"sy0\">-</span>line<span class=\"sy0\">-</span>arguments<span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Ruby", "loc": 29, "block": "<pre class=\"ruby highlighted_source\"><span class=\"co1\">#! /usr/bin/env ruby</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'net/http'</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'time'</span><br/>\u00a0<br/><span class=\"kw1\">def</span> gen_url<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>  day = <span class=\"kw4\">Time</span>.<span class=\"me1\">now</span> <span class=\"sy0\">+</span> i<span class=\"sy0\">*</span><span class=\"nu0\">60</span><span class=\"sy0\">*</span><span class=\"nu0\">60</span><span class=\"sy0\">*</span><span class=\"nu0\">24</span><br/>  <span class=\"co1\"># Set the time zone in which to format the time, per</span><br/>  <span class=\"co1\"># https://coderwall.com/p/c7l82a/create-a-time-in-a-specific-timezone-in-ruby</span><br/>  old_tz = ENV<span class=\"br0\">[</span><span class=\"st0\">'TZ'</span><span class=\"br0\">]</span><br/>  ENV<span class=\"br0\">[</span><span class=\"st0\">'TZ'</span><span class=\"br0\">]</span> = <span class=\"st0\">'Europe/Berlin'</span><br/>  url = day.<span class=\"me1\">strftime</span><span class=\"br0\">(</span><span class=\"st0\">'http://tclers.tk/conferences/tcl/%Y-%m-%d.tcl'</span><span class=\"br0\">)</span><br/>  ENV<span class=\"br0\">[</span><span class=\"st0\">'TZ'</span><span class=\"br0\">]</span> = old_tz<br/>  url<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> main<br/>  back = <span class=\"nu0\">10</span><br/>  needle = ARGV<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">-</span>back..<span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span><br/>    url = gen_url<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>    haystack = <span class=\"re2\">Net::HTTP</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"kw4\">URI</span><span class=\"br0\">(</span>url<span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"kw3\">split</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    mentions = haystack.<span class=\"kw3\">select</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> x.<span class=\"kw1\">include</span>? needle <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span>\u00a0!mentions.<span class=\"me1\">empty</span>?<br/>      <span class=\"kw3\">puts</span> <span class=\"st0\">\"#{url}<span class=\"es0\">\\n</span>------<span class=\"es0\">\\n</span>#{mentions.join(\"</span>\\n<span class=\"st0\">\")}<span class=\"es0\">\\n</span>------<span class=\"es0\">\\n</span>\"</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>main</pre>"}, {"lang": "Scala", "loc": 35, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"me1\">Socket</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"me1\">URL</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">time</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">time</span>.<span class=\"me1\">format</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">time</span>.<span class=\"me1\">ZoneId</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Scanner</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">collection</span>.<span class=\"me1\">JavaConverters</span>.<span class=\"sy0\">_</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> get<span class=\"br0\">(</span>rawUrl<span class=\"sy0\">:</span> String<span class=\"br0\">)</span><span class=\"sy0\">:</span> List<span class=\"br0\">[</span>String<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> url <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> URL<span class=\"br0\">(</span>rawUrl<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> port <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>url.<span class=\"me1\">getPort</span> <span class=\"sy0\">&gt;</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span> url.<span class=\"me1\">getPort</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">80</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sock <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Socket<span class=\"br0\">(</span>url.<span class=\"me1\">getHost</span>, port<span class=\"br0\">)</span><br/>    sock.<span class=\"me1\">getOutputStream</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span><br/>        s<span class=\"st0\">\"GET /${url.getPath()} HTTP/1.0<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span>.<span class=\"me1\">getBytes</span><span class=\"br0\">(</span><span class=\"st0\">\"UTF-8\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Scanner<span class=\"br0\">(</span>sock.<span class=\"me1\">getInputStream</span><span class=\"br0\">)</span>.<span class=\"me1\">useDelimiter</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span>.<span class=\"me1\">asScala</span>.<span class=\"me1\">toList</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> genUrl<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Long<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> date <span class=\"sy0\">=</span> java.<span class=\"me1\">time</span>.<span class=\"me1\">ZonedDateTime</span><br/>        .<span class=\"me1\">now</span><span class=\"br0\">(</span>ZoneId.<span class=\"me1\">of</span><span class=\"br0\">(</span><span class=\"st0\">\"Europe/Berlin\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        .<span class=\"me1\">plusDays</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>        .<span class=\"me1\">format</span><span class=\"br0\">(</span>java.<span class=\"me1\">time</span>.<span class=\"me1\">format</span>.<span class=\"me1\">DateTimeFormatter</span>.<span class=\"me1\">ISO_LOCAL_DATE</span><span class=\"br0\">)</span><br/>    s<span class=\"st0\">\"http://tclers.tk/conferences/tcl/$date.tcl\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> back <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> literal <span class=\"sy0\">=</span> args<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- -back to <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> url <span class=\"sy0\">=</span> genUrl<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>    print<span class=\"br0\">(</span>get<span class=\"br0\">(</span>url<span class=\"br0\">)</span>.<span class=\"me1\">filter</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">contains</span><span class=\"br0\">(</span>literal<span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> List<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"\"</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> x <span class=\"sy0\">=&gt;</span> s<span class=\"st0\">\"$url<span class=\"es1\">\\n</span>------<span class=\"es1\">\\n</span>${x.mkString(\"</span>\\n<span class=\"st0\">\")}<span class=\"es1\">\\n</span>------<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Tcl", "loc": 36, "block": "<pre class=\"tcl highlighted_source\"><span class=\"co1\">#! /usr/bin/env tclsh</span><br/><span class=\"kw2\">package</span> require <span class=\"kw2\">http</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> get url <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> r <span class=\"br0\">[</span>::<span class=\"kw2\">http</span>::<span class=\"me1\">geturl</span> <span class=\"re0\">$url</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> content <span class=\"br0\">[</span>::<span class=\"kw2\">http</span>::<span class=\"me1\">data</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span><br/>   \u00a0::<span class=\"kw2\">http</span>::<span class=\"me1\">cleanup</span> <span class=\"re0\">$r</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$content</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> grep <span class=\"br0\">{</span>needle haystack<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">lsearch</span> -all \\<br/>            -inline \\<br/>            -<span class=\"kw2\">glob</span> \\<br/>            <span class=\"br0\">[</span><span class=\"kw2\">split</span> <span class=\"re0\">$haystack</span> \\n<span class=\"br0\">]</span> \\<br/>            <span class=\"sy0\">*</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> map <span class=\"br0\">{</span><span class=\"sy0\">*</span> \\\\<span class=\"sy0\">*</span> <span class=\"sy0\">?</span> \\\\<span class=\"sy0\">?</span> \\\\ \\\\\\\\ <span class=\"br0\">[</span> \\\\<span class=\"br0\">[</span> <span class=\"br0\">]</span> \\\\<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"re0\">$needle</span><span class=\"br0\">]</span><span class=\"sy0\">*</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> main argv <span class=\"br0\">{</span><br/>    lassign <span class=\"kw2\"><span class=\"re0\">$argv</span></span> needle<br/>    <span class=\"kw1\">set</span> urlTemplate <span class=\"kw2\">http</span>://tclers.tk/conferences/tcl/<span class=\"sy0\">%</span>Y-<span class=\"sy0\">%</span>m-<span class=\"sy0\">%</span>d.tcl<br/>    <span class=\"kw1\">set</span> back <span class=\"nu0\">10</span><br/>    <span class=\"kw1\">set</span> now <span class=\"br0\">[</span><span class=\"kw2\">clock</span> seconds<span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i -<span class=\"re0\">$back</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> date <span class=\"br0\">[</span><span class=\"kw2\">clock</span> add <span class=\"re0\">$now</span> <span class=\"re0\">$i</span> days<span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> url <span class=\"br0\">[</span><span class=\"kw2\">clock</span> <span class=\"kw2\">format</span> <span class=\"re0\">$date</span> \\<br/>                              -<span class=\"kw2\">format</span> <span class=\"re0\">$urlTemplate</span> \\<br/>                              -timezone\u00a0:Europe/Berlin<span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> found <span class=\"br0\">[</span>grep <span class=\"re0\">$needle</span> <span class=\"br0\">[</span>get <span class=\"re0\">$url</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$found</span> ne <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">puts</span> <span class=\"re0\">$url</span>\\n------\\n<span class=\"br0\">[</span><span class=\"kw2\">join</span> <span class=\"re0\">$found</span> \\n<span class=\"br0\">]</span>\\n------\\n<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>main <span class=\"kw2\"><span class=\"re0\">$argv</span></span></pre>"}, {"lang": "zkl", "loc": 27, "block": "<pre class=\"text highlighted_source\">#&lt;&lt;&lt;#<br/>http://tclers.tk/conferences/tcl/:<br/>2017-04-03.tcl      30610 bytes  Apr 03, 2017 21:55:37<br/>2017-04-04.tcl      67996 bytes  Apr 04, 2017 21:57:01<br/>...<br/>\u00a0<br/>Contents (eg 2017-01-19.tcl):<br/>m 2017-01-19T23:01:02Z ijchain {*** Johannes13__ leaves}<br/>m 2017-01-19T23:15:37Z ijchain {*** fahadash leaves}<br/>m 2017-01-19T23:27:00Z ijchain {*** Buster leaves}<br/>...<br/>#&lt;&lt;&lt;#<br/>\u00a0<br/>var [const] CURL=Import.lib(\"zklCurl\")();\t// libCurl instance<br/>\u00a0<br/>template:=\"http://tclers.tk/conferences/tcl/%4d-%02d-%02d.tcl\";<br/>ymd    \u00a0:=Time.Clock.UTC[0,3];\t// now, (y,m,d)<br/>back   \u00a0:=10;\t\t\t// days in the past<br/>needle \u00a0:=vm.nthArg(0);\t\t// search string<br/>foreach d in ([-back+1..0]){\t// we want day -9,-8,-7..0 (today)<br/>   date\u00a0:=Time.Date.subYMD(ymd, 0,0,-d);   // date minus days<br/>   url \u00a0:=template.fmt(date.xplode());<br/>   haystack:=CURL.get(url);\t// (request bytes, header length)<br/>   haystack=haystack[0].del(0,haystack[1]);\t// remove HTML header<br/>   mentions:=haystack.filter(\"find\",needle);\t// search lines<br/>   if(mentions) println(\"%s\\n------\\n%s------\\n\".fmt(url,mentions.text));<br/>}</pre>"}]}