{"task": "Death_Star", "blocks": [{"lang": "AutoHotkey", "loc": 80, "block": "<pre class=\"ahk highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/_NoEnv.htm\"><span class=\"kw5\">#NoEnv</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/SetBatchLines.htm\"><span class=\"kw3\">SetBatchLines</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/><a href=\"http://www.autohotkey.com/docs/commands/_SingleInstance.htm\"><span class=\"kw5\">#SingleInstance</span></a><span class=\"sy0\">,</span> Force<br/>\u00a0<br/><span class=\"co1\">; Uncomment if Gdip.ahk is not in your standard library</span><br/><a href=\"http://www.autohotkey.com/docs/commands/_Include.htm\"><span class=\"kw5\">#Include</span></a><span class=\"sy0\">,</span> Gdip<span class=\"sy0\">.</span>ahk<br/>\u00a0<br/><span class=\"co1\">; Settings</span><br/>X <span class=\"sy0\">:=</span> <span class=\"nu0\">200</span><span class=\"sy0\">,</span> Y <span class=\"sy0\">:=</span> <span class=\"nu0\">200</span><span class=\"sy0\">,</span> Width <span class=\"sy0\">:=</span> <span class=\"nu0\">200</span><span class=\"sy0\">,</span> Height <span class=\"sy0\">:=</span> <span class=\"nu0\">200</span> <span class=\"co1\">; Location and size of sphere</span><br/>rotation <span class=\"sy0\">:=</span> <span class=\"nu0\">60</span> <span class=\"co1\">; degrees</span><br/>ARGB <span class=\"sy0\">:=</span> 0xFFFF0000 <span class=\"co1\">; Color=Solid Red</span><br/>\u00a0<br/><span class=\"kw1\">If</span>\u00a0!pToken <span class=\"sy0\">:=</span> Gdip_Startup<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">; Start gdi+</span><br/><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">48</span><span class=\"sy0\">,</span> gdiplus error!<span class=\"sy0\">,</span> Gdiplus failed to start<span class=\"sy0\">.</span> Please ensure you have gdiplus on your system<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/commands/OnExit.htm\"><span class=\"kw3\">OnExit</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Exit.htm\"><span class=\"kw3\">Exit</span></a><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>Caption <span class=\"sy0\">+</span>E0x80000 <span class=\"sy0\">+</span>LastFound <span class=\"sy0\">+</span>AlwaysOnTop <span class=\"sy0\">+</span>ToolWindow <span class=\"sy0\">+</span>OwnDialogs <span class=\"co1\">; Create GUI</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span> NA <span class=\"co1\">; Show GUI</span><br/>hwnd1 <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">WinExist</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">; Get a handle to this window we have created in order to update it later</span><br/>hbm <span class=\"sy0\">:=</span> CreateDIBSection<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScreenWidth\"><span class=\"kw2\">A_ScreenWidth</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScreenHeight\"><span class=\"kw2\">A_ScreenHeight</span></a><span class=\"br0\">)</span> <span class=\"co1\">; Create a gdi bitmap drawing area</span><br/>hdc <span class=\"sy0\">:=</span> CreateCompatibleDC<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">; Get a device context compatible with the screen</span><br/>obm <span class=\"sy0\">:=</span> SelectObject<span class=\"br0\">(</span>hdc<span class=\"sy0\">,</span> hbm<span class=\"br0\">)</span> <span class=\"co1\">; Select the bitmap into the device context</span><br/>pGraphics <span class=\"sy0\">:=</span> Gdip_GraphicsFromHDC<span class=\"br0\">(</span>hdc<span class=\"br0\">)</span> <span class=\"co1\">; Get a pointer to the graphics of the bitmap, for use with drawing functions</span><br/>Gdip_SetSmoothingMode<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"co1\">; Set the smoothing mode to antialias = 4 to make shapes appear smother</span><br/>\u00a0<br/>Gdip_TranslateWorldTransform<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> X<span class=\"sy0\">,</span> Y<span class=\"br0\">)</span><br/>Gdip_RotateWorldTransform<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> rotation<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Base ellipse</span><br/>pBrush <span class=\"sy0\">:=</span> Gdip_CreateLineBrushFromRect<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">,</span> Height<span class=\"sy0\">,</span> ARGB<span class=\"sy0\">,</span> 0xFF000000<span class=\"br0\">)</span><br/>Gdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrush<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">,</span> Height<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; First highlight ellipse</span><br/>pBrush <span class=\"sy0\">:=</span> Gdip_CreateLineBrushFromRect<span class=\"br0\">(</span>Width<span class=\"sy0\">*</span><span class=\"nu0\">0.1</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.01</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.8</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.6</span><span class=\"sy0\">,</span> 0x33FFFFFF<span class=\"sy0\">,</span> 0x00FFFFFF<span class=\"br0\">)</span><br/>Gdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrush<span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.1</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.01</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.8</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.6</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Second highlight ellipse</span><br/>pBrush <span class=\"sy0\">:=</span> Gdip_CreateLineBrushFromRect<span class=\"br0\">(</span>Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.02</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.2</span><span class=\"sy0\">,</span> 0xBBFFFFFF<span class=\"sy0\">,</span> 0x00FFFFFF<span class=\"br0\">)</span><br/>Gdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrush<span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.02</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.2</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">; Reset variables for smaller subtracted sphere</span><br/>X<span class=\"sy0\">-=</span><span class=\"nu0\">150</span><br/>Y<span class=\"sy0\">-=</span><span class=\"nu0\">10</span><br/>Width<span class=\"sy0\">*=</span><span class=\"nu0\">0.5</span><br/>Height<span class=\"sy0\">*=</span><span class=\"nu0\">0.4</span><br/>rotation<span class=\"sy0\">-=</span><span class=\"nu0\">180</span><br/>\u00a0<br/>Gdip_TranslateWorldTransform<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> X<span class=\"sy0\">,</span> Y<span class=\"br0\">)</span><br/>Gdip_RotateWorldTransform<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> rotation<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Base ellipse</span><br/>pBrush <span class=\"sy0\">:=</span> Gdip_CreateLineBrushFromRect<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">,</span> Height<span class=\"sy0\">,</span> ARGB<span class=\"sy0\">,</span> 0xFF000000<span class=\"br0\">)</span><br/>Gdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrush<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">,</span> Height<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; First highlight ellipse</span><br/>pBrush <span class=\"sy0\">:=</span> Gdip_CreateLineBrushFromRect<span class=\"br0\">(</span>Width<span class=\"sy0\">*</span><span class=\"nu0\">0.1</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.01</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.8</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.6</span><span class=\"sy0\">,</span> 0x33FFFFFF<span class=\"sy0\">,</span> 0x00FFFFFF<span class=\"br0\">)</span><br/>Gdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrush<span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.1</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.01</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.8</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.6</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Second highlight ellipse</span><br/>pBrush <span class=\"sy0\">:=</span> Gdip_CreateLineBrushFromRect<span class=\"br0\">(</span>Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.02</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.2</span><span class=\"sy0\">,</span> 0xBBFFFFFF<span class=\"sy0\">,</span> 0x00FFFFFF<span class=\"br0\">)</span><br/>Gdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrush<span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.02</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">*</span><span class=\"nu0\">0.3</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">*</span><span class=\"nu0\">0.2</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>UpdateLayeredWindow<span class=\"br0\">(</span>hwnd1<span class=\"sy0\">,</span> hdc<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScreenWidth\"><span class=\"kw2\">A_ScreenWidth</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScreenHeight\"><span class=\"kw2\">A_ScreenHeight</span></a><span class=\"br0\">)</span><br/>SelectObject<span class=\"br0\">(</span>hdc<span class=\"sy0\">,</span> obm<span class=\"br0\">)</span> <span class=\"co1\">; Select the object back into the hdc</span><br/>Gdip_DeletePath<span class=\"br0\">(</span>Path<span class=\"br0\">)</span><br/>Gdip_DeleteBrush<span class=\"br0\">(</span>pBrush<span class=\"br0\">)</span><br/>DeleteObject<span class=\"br0\">(</span>hbm<span class=\"br0\">)</span> <span class=\"co1\">; Now the bitmap may be deleted</span><br/>DeleteDC<span class=\"br0\">(</span>hdc<span class=\"br0\">)</span> <span class=\"co1\">; Also the device context related to the bitmap may be deleted</span><br/>Gdip_DeleteGraphics<span class=\"br0\">(</span>G<span class=\"br0\">)</span> <span class=\"co1\">; The graphics may now be deleted</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Exit.htm\"><span class=\"kw3\">Exit</span></a>:<br/><span class=\"co1\">; gdi+ may now be shutdown on exiting the program</span><br/>Gdip_Shutdown<span class=\"br0\">(</span>pToken<span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a></pre>"}, {"lang": "Brlcad", "loc": 26, "block": "<pre class=\"text highlighted_source\"># We need a database to hold the objects<br/>opendb deathstar.g y<br/>\u00a0<br/># We will be measuring in kilometers<br/>units km<br/>\u00a0<br/># Create a sphere of radius 60km centred at the origin<br/>in sph1.s sph 0 0 0 60<br/>\u00a0<br/># We will be subtracting an overlapping sphere with a radius of 40km<br/># The resultant hole will be smaller than this, because we only<br/># only catch the edge<br/>in sph2.s sph 0 90 0 40<br/>\u00a0<br/># Create a region named deathstar.r which consists of big minus small sphere<br/>r deathstar.r u sph1.s - sph2.s<br/>\u00a0<br/># We will use a plastic material texture with rgb colour 224,224,224<br/># with specular lighting value of 0.1 and no inheritance<br/>mater deathstar.r \"plastic sp=0.1\" 224 224 224 0<br/>\u00a0<br/># Clear the wireframe display and draw the deathstar<br/>B deathstar.r<br/>\u00a0<br/># We now trigger the raytracer to see our finished product<br/>rt</pre>"}, {"lang": "C", "loc": 112, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/><span class=\"co2\">#include &lt;unistd.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>shades <span class=\"sy0\">=</span> <span class=\"st0\">\".:!*oe&amp;#%@\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">double</span> light<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"sy0\">-</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">void</span> normalize<span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span> v<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> len <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tv<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">/=</span> len<span class=\"sy0\">;</span> v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/=</span> len<span class=\"sy0\">;</span> v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">/=</span> len<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> dot<span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>y<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> d <span class=\"sy0\">=</span> x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> x<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> x<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> d <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"sy0\">-</span>d <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> <span class=\"kw4\">double</span> cx<span class=\"sy0\">,</span> cy<span class=\"sy0\">,</span> cz<span class=\"sy0\">,</span> r<span class=\"sy0\">;</span> <span class=\"br0\">}</span> sphere_t<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* positive shpere and negative sphere */</span><br/>sphere_t pos <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> neg <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* check if a ray (x,y, -inf)-&gt;(x, y, inf) hits a sphere; if so, return<br/>   the intersecting z values.  z1 is closer to the eye */</span><br/><span class=\"kw4\">int</span> hit_sphere<span class=\"br0\">(</span>sphere_t <span class=\"sy0\">*</span>sph<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> x<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> y<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>z1<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>z2<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> zsq<span class=\"sy0\">;</span><br/>\tx <span class=\"sy0\">-=</span> sph<span class=\"sy0\">-&gt;</span>cx<span class=\"sy0\">;</span><br/>\ty <span class=\"sy0\">-=</span> sph<span class=\"sy0\">-&gt;</span>cy<span class=\"sy0\">;</span><br/>\tzsq <span class=\"sy0\">=</span> sph<span class=\"sy0\">-&gt;</span>r <span class=\"sy0\">*</span> sph<span class=\"sy0\">-&gt;</span>r <span class=\"sy0\">-</span> <span class=\"br0\">(</span>x <span class=\"sy0\">*</span> x <span class=\"sy0\">+</span> y <span class=\"sy0\">*</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>zsq <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\tzsq <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>zsq<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"sy0\">*</span>z1 <span class=\"sy0\">=</span> sph<span class=\"sy0\">-&gt;</span>cz <span class=\"sy0\">-</span> zsq<span class=\"sy0\">;</span><br/>\t<span class=\"sy0\">*</span>z2 <span class=\"sy0\">=</span> sph<span class=\"sy0\">-&gt;</span>cz <span class=\"sy0\">+</span> zsq<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> draw_sphere<span class=\"br0\">(</span><span class=\"kw4\">double</span> k<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> ambient<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> intensity<span class=\"sy0\">,</span> hit_result<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> b<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> vec<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> zb1<span class=\"sy0\">,</span> zb2<span class=\"sy0\">,</span> zs1<span class=\"sy0\">,</span> zs2<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/floor.html\"><span class=\"kw3\">floor</span></a><span class=\"br0\">(</span>pos.<span class=\"me1\">cy</span> <span class=\"sy0\">-</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/ceil.html\"><span class=\"kw3\">ceil</span></a><span class=\"br0\">(</span>pos.<span class=\"me1\">cy</span> <span class=\"sy0\">+</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\ty <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu18\">.5</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/floor.html\"><span class=\"kw3\">floor</span></a><span class=\"br0\">(</span>pos.<span class=\"me1\">cx</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/ceil.html\"><span class=\"kw3\">ceil</span></a><span class=\"br0\">(</span>pos.<span class=\"me1\">cx</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>j <span class=\"sy0\">-</span> pos.<span class=\"me1\">cx</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>. <span class=\"sy0\">+</span> <span class=\"nu18\">.5</span> <span class=\"sy0\">+</span> pos.<span class=\"me1\">cx</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"coMULTI\">/* ray lands in blank space, draw bg */</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hit_sphere<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pos<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>zb1<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>zb2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\thit_result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"coMULTI\">/* ray hits pos sphere but not neg, draw pos sphere surface */</span><br/>\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hit_sphere<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>neg<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>zs1<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>zs2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\thit_result <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"coMULTI\">/* ray hits both, but pos front surface is closer */</span><br/>\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zs1 <span class=\"sy0\">&gt;</span> zb1<span class=\"br0\">)</span> hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"coMULTI\">/* pos sphere surface is inside neg sphere, show bg */</span><br/>\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zs2 <span class=\"sy0\">&gt;</span> zb2<span class=\"br0\">)</span> hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"coMULTI\">/* back surface on neg sphere is inside pos sphere,<br/>\t\t\t   the only place where neg sphere surface will be shown */</span><br/>\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zs2 <span class=\"sy0\">&gt;</span> zb1<span class=\"br0\">)</span> hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">else</span>\t\t    hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">switch</span><span class=\"br0\">(</span>hit_result<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span><br/>\t\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'+'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span><br/>\t\t\t\tvec<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> x <span class=\"sy0\">-</span> pos.<span class=\"me1\">cx</span><span class=\"sy0\">;</span><br/>\t\t\t\tvec<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> y <span class=\"sy0\">-</span> pos.<span class=\"me1\">cy</span><span class=\"sy0\">;</span><br/>\t\t\t\tvec<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> zb1 <span class=\"sy0\">-</span> pos.<span class=\"me1\">cz</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>\t\t\t\tvec<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> neg.<span class=\"me1\">cx</span> <span class=\"sy0\">-</span> x<span class=\"sy0\">;</span><br/>\t\t\t\tvec<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> neg.<span class=\"me1\">cy</span> <span class=\"sy0\">-</span> y<span class=\"sy0\">;</span><br/>\t\t\t\tvec<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> neg.<span class=\"me1\">cz</span> <span class=\"sy0\">-</span> zs2<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t\tnormalize<span class=\"br0\">(</span>vec<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tb <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/pow.html\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span>dot<span class=\"br0\">(</span>light<span class=\"sy0\">,</span> vec<span class=\"br0\">)</span><span class=\"sy0\">,</span> k<span class=\"br0\">)</span> <span class=\"sy0\">+</span> ambient<span class=\"sy0\">;</span><br/>\t\t\tintensity <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> b<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>shades<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>intensity <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> intensity <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>intensity <span class=\"sy0\">&gt;=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>shades<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\tintensity <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>shades<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span>shades<span class=\"br0\">[</span>intensity<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> ang <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es5\">\\033</span>[H\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tlight<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span>ang <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tlight<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span>ang<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tlight<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span>ang<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tnormalize<span class=\"br0\">(</span>light<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tang <span class=\"sy0\">+=</span> <span class=\"nu18\">.05</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tdraw_sphere<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu18\">.3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tusleep<span class=\"br0\">(</span><span class=\"nu0\">100000</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 109, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"me1\">numeric</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> V3 <span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> v<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> V3 normalize<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"kw4\">const</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> len <span class=\"sy0\">=</span> dotProduct<span class=\"br0\">(</span>v<span class=\"sy0\">,</span> v<span class=\"br0\">)</span>.<span class=\"me1\">sqrt</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">[</span>v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> len<span class=\"sy0\">,</span> v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> len<span class=\"sy0\">,</span> v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> len<span class=\"br0\">]</span>.<span class=\"me1\">V3</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">double</span> dot<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw2\">ref</span> V3 y<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"kw4\">const</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> d <span class=\"sy0\">=</span> dotProduct<span class=\"br0\">(</span>v<span class=\"sy0\">,</span> y.<span class=\"me1\">v</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> d <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"sy0\">-</span>d <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">struct</span> Sphere <span class=\"br0\">{</span> <span class=\"kw4\">double</span> cx<span class=\"sy0\">,</span> cy<span class=\"sy0\">,</span> cz<span class=\"sy0\">,</span> r<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> drawSphere<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">double</span> k<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> ambient<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> V3 light<span class=\"br0\">)</span> <span class=\"kw4\">nothrow</span> <span class=\"br0\">{</span><br/>    <span class=\"co3\">/** Check if a ray (x,y, -inf).(x, y, inf) hits a sphere; if so,<br/>    return the intersecting z values.  z1 is closer to the eye.*/</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">bool</span> hitSphere<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw2\">ref</span> Sphere sph<span class=\"sy0\">,</span><br/>                          <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> x0<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> y0<span class=\"sy0\">,</span><br/>                          <span class=\"kw2\">out</span> <span class=\"kw4\">double</span> z1<span class=\"sy0\">,</span><br/>                          <span class=\"kw2\">out</span> <span class=\"kw4\">double</span> z2<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> x0 <span class=\"sy0\">-</span> sph.<span class=\"me1\">cx</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> y <span class=\"sy0\">=</span> y0 <span class=\"sy0\">-</span> sph.<span class=\"me1\">cy</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> zsq <span class=\"sy0\">=</span> sph.<span class=\"me1\">r</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>x <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> y <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zsq <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> szsq <span class=\"sy0\">=</span> zsq.<span class=\"me1\">sqrt</span><span class=\"sy0\">;</span><br/>        z1 <span class=\"sy0\">=</span> sph.<span class=\"me1\">cz</span> <span class=\"sy0\">-</span> szsq<span class=\"sy0\">;</span><br/>        z2 <span class=\"sy0\">=</span> sph.<span class=\"me1\">cz</span> <span class=\"sy0\">+</span> szsq<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> shades <span class=\"sy0\">=</span> <span class=\"st0\">\".:!*oe&amp;#%@\"</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\">// Positive and negative spheres.</span><br/>    <span class=\"kw4\">immutable</span> pos <span class=\"sy0\">=</span> Sphere<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> neg <span class=\"sy0\">=</span> Sphere<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>floor<span class=\"br0\">(</span>pos.<span class=\"me1\">cy</span> <span class=\"sy0\">-</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span><br/>                              <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>ceil<span class=\"br0\">(</span>pos.<span class=\"me1\">cy</span> <span class=\"sy0\">+</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> y <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu16\">0.5</span><span class=\"sy0\">;</span><br/>    JLOOP<span class=\"sy0\">:</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j<span class=\"sy0\">;</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>floor<span class=\"br0\">(</span>pos.<span class=\"me1\">cx</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span><br/>                        <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>ceil<span class=\"br0\">(</span>pos.<span class=\"me1\">cx</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> pos.<span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> <span class=\"br0\">(</span>j <span class=\"sy0\">-</span> pos.<span class=\"me1\">cx</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu16\">2.0</span> <span class=\"sy0\">+</span> <span class=\"nu16\">0.5</span> <span class=\"sy0\">+</span> pos.<span class=\"me1\">cx</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw4\">enum</span> Hit <span class=\"br0\">{</span> background<span class=\"sy0\">,</span> posSphere<span class=\"sy0\">,</span> negSphere <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw4\">double</span> zb1<span class=\"sy0\">,</span> zs2<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">immutable</span> Hit hitResult <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">double</span> zb2<span class=\"sy0\">,</span> zs1<span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hitSphere<span class=\"br0\">(</span>pos<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> zb1<span class=\"sy0\">,</span> zb2<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"co1\">// Ray lands in blank space, draw bg.</span><br/>                    <span class=\"kw1\">return</span> Hit.<span class=\"me1\">background</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hitSphere<span class=\"br0\">(</span>neg<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> zs1<span class=\"sy0\">,</span> zs2<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"co1\">// Ray hits pos sphere but not neg one,</span><br/>                    <span class=\"co1\">// draw pos sphere surface.</span><br/>                    <span class=\"kw1\">return</span> Hit.<span class=\"me1\">posSphere</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zs1 <span class=\"sy0\">&gt;</span> zb1<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"co1\">// ray hits both, but pos front surface is closer.</span><br/>                    <span class=\"kw1\">return</span> Hit.<span class=\"me1\">posSphere</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zs2 <span class=\"sy0\">&gt;</span> zb2<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"co1\">// pos sphere surface is inside neg sphere,</span><br/>                    <span class=\"co1\">// show bg.</span><br/>                    <span class=\"kw1\">return</span> Hit.<span class=\"me1\">background</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zs2 <span class=\"sy0\">&gt;</span> zb1<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"co1\">// Back surface on neg sphere is inside pos</span><br/>                    <span class=\"co1\">// sphere, the only place where neg sphere</span><br/>                    <span class=\"co1\">// surface will be shown.</span><br/>                    <span class=\"kw1\">return</span> Hit.<span class=\"me1\">negSphere</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">return</span> Hit.<span class=\"me1\">posSphere</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            V3 vec_<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">final</span> <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>hitResult<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">case</span> Hit.<span class=\"me1\">background</span><span class=\"sy0\">:</span><br/>                    <span class=\"st0\">' '</span>.<span class=\"me1\">putchar</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">continue</span> JLOOP<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">case</span> Hit.<span class=\"me1\">posSphere</span><span class=\"sy0\">:</span><br/>                    vec_ <span class=\"sy0\">=</span> <span class=\"br0\">[</span>x <span class=\"sy0\">-</span> pos.<span class=\"me1\">cx</span><span class=\"sy0\">,</span> y <span class=\"sy0\">-</span> pos.<span class=\"me1\">cy</span><span class=\"sy0\">,</span> zb1 <span class=\"sy0\">-</span> pos.<span class=\"me1\">cz</span><span class=\"br0\">]</span>.<span class=\"me1\">V3</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">case</span> Hit.<span class=\"me1\">negSphere</span><span class=\"sy0\">:</span><br/>                    vec_ <span class=\"sy0\">=</span> <span class=\"br0\">[</span>neg.<span class=\"me1\">cx</span> <span class=\"sy0\">-</span> x<span class=\"sy0\">,</span> neg.<span class=\"me1\">cy</span> <span class=\"sy0\">-</span> y<span class=\"sy0\">,</span> neg.<span class=\"me1\">cz</span> <span class=\"sy0\">-</span> zs2<span class=\"br0\">]</span>.<span class=\"me1\">V3</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw4\">immutable</span> nvec <span class=\"sy0\">=</span> vec_.<span class=\"me1\">normalize</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw4\">immutable</span> <span class=\"kw4\">double</span> b <span class=\"sy0\">=</span> light.<span class=\"me1\">dot</span><span class=\"br0\">(</span>nvec<span class=\"br0\">)</span> <span class=\"sy0\">^^</span> k <span class=\"sy0\">+</span> ambient<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">immutable</span> intensity <span class=\"sy0\">=</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> b<span class=\"br0\">)</span> <span class=\"sy0\">*</span> shades.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">immutable</span> normInt <span class=\"sy0\">=</span> min<span class=\"br0\">(</span>shades.<span class=\"me1\">length</span><span class=\"sy0\">,</span> max<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> intensity<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            shades<span class=\"br0\">[</span>normInt<span class=\"br0\">]</span>.<span class=\"me1\">putchar</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span>.<span class=\"me1\">putchar</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> light <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"br0\">]</span>.<span class=\"me1\">V3</span>.<span class=\"me1\">normalize</span><span class=\"sy0\">;</span><br/>    drawSphere<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.5</span><span class=\"sy0\">,</span> light<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "DWScript", "loc": 94, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">const</span> cShades <span class=\"sy3\">=</span> <span class=\"st0\">'.:!*oe&amp;#%@'</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">type</span> TVector <span class=\"sy3\">=</span> <span class=\"kw1\">array</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">..</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> Float<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> light <span class=\"sy1\">:</span> TVector <span class=\"sy3\">=</span> <span class=\"br0\">[</span><span class=\"sy3\">-</span><span class=\"nu0\">50.0</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">50</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> Normalize<span class=\"br0\">(</span><span class=\"kw1\">var</span> v <span class=\"sy1\">:</span> TVector<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">var</span> len <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Sqrt</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy3\">*</span>v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy3\">+</span> v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy3\">*</span>v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy3\">+</span> v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy3\">*</span>v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy3\">/=</span> len<span class=\"sy1\">;</span> v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy3\">/=</span> len<span class=\"sy1\">;</span> v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy3\">/=</span> len<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Dot<span class=\"br0\">(</span>x<span class=\"sy1\">,</span> y <span class=\"sy1\">:</span> TVector<span class=\"br0\">)</span> <span class=\"sy1\">:</span> Float<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">var</span> d <span class=\"sy1\">:</span><span class=\"sy3\">=</span>x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy3\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy3\">+</span> x<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy3\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy3\">+</span> x<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy3\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">if</span> d&lt;<span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <br/>      Result<span class=\"sy1\">:</span><span class=\"sy3\">=-</span>d <br/>   <span class=\"kw1\">else</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">type</span> <br/>   TSphere <span class=\"sy3\">=</span> <span class=\"kw1\">record</span><br/>      cx<span class=\"sy1\">,</span> cy<span class=\"sy1\">,</span> cz<span class=\"sy1\">,</span> r <span class=\"sy1\">:</span> Float<span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">const</span> big <span class=\"sy1\">:</span> TSphere <span class=\"sy3\">=</span> <span class=\"br0\">(</span>cx<span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">;</span> cy<span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">;</span> cz<span class=\"sy1\">:</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> r<span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">const</span> small <span class=\"sy1\">:</span> TSphere <span class=\"sy3\">=</span> <span class=\"br0\">(</span>cx<span class=\"sy1\">:</span> <span class=\"nu0\">7</span><span class=\"sy1\">;</span> cy<span class=\"sy1\">:</span> <span class=\"nu0\">7</span><span class=\"sy1\">;</span> cz<span class=\"sy1\">:</span> <span class=\"sy3\">-</span><span class=\"nu0\">10</span><span class=\"sy1\">;</span> r<span class=\"sy1\">:</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> HitSphere<span class=\"br0\">(</span>sph <span class=\"sy1\">:</span> TSphere<span class=\"sy1\">;</span> x<span class=\"sy1\">,</span> y <span class=\"sy1\">:</span> Float<span class=\"sy1\">;</span> <span class=\"kw1\">var</span> z1<span class=\"sy1\">,</span> z2 <span class=\"sy1\">:</span> Float<span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Boolean</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   x <span class=\"sy3\">-=</span> sph<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"sy1\">;</span><br/>   y <span class=\"sy3\">-=</span> sph<span class=\"sy1\">.</span><span class=\"me1\">cy</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">var</span> zsq <span class=\"sy3\">=</span> sph<span class=\"sy1\">.</span><span class=\"me1\">r</span> <span class=\"sy3\">*</span> sph<span class=\"sy1\">.</span><span class=\"me1\">r</span> <span class=\"sy3\">-</span> <span class=\"br0\">(</span>x <span class=\"sy3\">*</span> x <span class=\"sy3\">+</span> y <span class=\"sy3\">*</span> y<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zsq &lt; <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> Exit <span class=\"kw2\">False</span><span class=\"sy1\">;</span><br/>   zsq <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Sqrt</span><span class=\"br0\">(</span>zsq<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   z1 <span class=\"sy1\">:</span><span class=\"sy3\">=</span> sph<span class=\"sy1\">.</span><span class=\"me1\">cz</span> <span class=\"sy3\">-</span> zsq<span class=\"sy1\">;</span><br/>   z2 <span class=\"sy1\">:</span><span class=\"sy3\">=</span> sph<span class=\"sy1\">.</span><span class=\"me1\">cz</span> <span class=\"sy3\">+</span> zsq<span class=\"sy1\">;</span><br/>   Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"kw2\">True</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> DrawSphere<span class=\"br0\">(</span>k<span class=\"sy1\">,</span> ambient <span class=\"sy1\">:</span> Float<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>   i<span class=\"sy1\">,</span> j<span class=\"sy1\">,</span> intensity <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>   b <span class=\"sy1\">:</span> Float<span class=\"sy1\">;</span><br/>   x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> zb1<span class=\"sy1\">,</span> zb2<span class=\"sy1\">,</span> zs1<span class=\"sy1\">,</span> zs2 <span class=\"sy1\">:</span> Float<span class=\"sy1\">;</span><br/>   vec <span class=\"sy1\">:</span> TVector<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> i<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"kw3\">Trunc</span><span class=\"br0\">(</span>big<span class=\"sy1\">.</span><span class=\"me1\">cy</span><span class=\"sy3\">-</span>big<span class=\"sy1\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"kw1\">to</span> <span class=\"kw3\">Trunc</span><span class=\"br0\">(</span>big<span class=\"sy1\">.</span><span class=\"me1\">cy</span><span class=\"sy3\">+</span>big<span class=\"sy1\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>      y <span class=\"sy1\">:</span><span class=\"sy3\">=</span> i <span class=\"sy3\">+</span> <span class=\"nu0\">0.5</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">for</span> j <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Trunc</span><span class=\"br0\">(</span>big<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy3\">*</span>big<span class=\"sy1\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"kw1\">to</span> <span class=\"kw3\">Trunc</span><span class=\"br0\">(</span>big<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"sy3\">+</span><span class=\"nu0\">2</span><span class=\"sy3\">*</span>big<span class=\"sy1\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>         x <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"br0\">(</span>j<span class=\"sy3\">-</span>big<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"br0\">)</span><span class=\"sy3\">/</span><span class=\"nu0\">2</span> <span class=\"sy3\">+</span> <span class=\"nu0\">0.5</span> <span class=\"sy3\">+</span> big<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"sy1\">;</span><br/>\u00a0<br/>         <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> HitSphere<span class=\"br0\">(</span>big<span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> zb1<span class=\"sy1\">,</span> zb2<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">begin</span><br/>            Print<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            continue<span class=\"sy1\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> HitSphere<span class=\"br0\">(</span>small<span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> zs1<span class=\"sy1\">,</span> zs2<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">begin</span><br/>            vec<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"sy1\">;</span><br/>            vec<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> y <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cy</span><span class=\"sy1\">;</span><br/>            vec<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> zb1 <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cz</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">else</span> <span class=\"kw1\">begin</span><br/>            <span class=\"kw1\">if</span> zs1 &lt; zb1 <span class=\"kw1\">then</span> <span class=\"kw1\">begin</span><br/>               <span class=\"kw1\">if</span> zs2 &gt; zb2 <span class=\"kw1\">then</span> <span class=\"kw1\">begin</span><br/>                  Print<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                  continue<span class=\"sy1\">;</span><br/>               <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>               <span class=\"kw1\">if</span> zs2 &gt; zb1 <span class=\"kw1\">then</span> <span class=\"kw1\">begin</span><br/>                  vec<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> small<span class=\"sy1\">.</span><span class=\"me1\">cx</span> <span class=\"sy3\">-</span> x<span class=\"sy1\">;</span><br/>                  vec<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> small<span class=\"sy1\">.</span><span class=\"me1\">cy</span> <span class=\"sy3\">-</span> y<span class=\"sy1\">;</span><br/>                  vec<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> small<span class=\"sy1\">.</span><span class=\"me1\">cz</span> <span class=\"sy3\">-</span> zs2<span class=\"sy1\">;</span><br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">else</span> <span class=\"kw1\">begin</span><br/>                  vec<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"sy1\">;</span><br/>                  vec<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> y <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cy</span><span class=\"sy1\">;</span><br/>                  vec<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> zb1 <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cz</span><span class=\"sy1\">;</span><br/>               <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">else</span> <span class=\"kw1\">begin</span><br/>               vec<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cx</span><span class=\"sy1\">;</span><br/>               vec<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> y <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cy</span><span class=\"sy1\">;</span><br/>               vec<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> zb1 <span class=\"sy3\">-</span> big<span class=\"sy1\">.</span><span class=\"me1\">cz</span><span class=\"sy1\">;</span><br/>            <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>         Normalize<span class=\"br0\">(</span>vec<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         b <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Power</span><span class=\"br0\">(</span>Dot<span class=\"br0\">(</span>light<span class=\"sy1\">,</span> vec<span class=\"br0\">)</span><span class=\"sy1\">,</span> k<span class=\"br0\">)</span> <span class=\"sy3\">+</span> ambient<span class=\"sy1\">;</span><br/>         intensity <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Round</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy3\">-</span> b<span class=\"br0\">)</span> <span class=\"sy3\">*</span> <span class=\"kw3\">Length</span><span class=\"br0\">(</span>cShades<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         Print<span class=\"br0\">(</span>cShades<span class=\"br0\">[</span>ClampInt<span class=\"br0\">(</span>intensity<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Length</span><span class=\"br0\">(</span>cShades<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      PrintLn<span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>Normalize<span class=\"br0\">(</span>light<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>DrawSphere<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">0.3</span><span class=\"br0\">)</span><span class=\"sy1\">;</span></pre>"}, {"lang": "Go", "loc": 103, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"image\"</span><br/>    <span class=\"st0\">\"image/color\"</span><br/>    <span class=\"st0\">\"image/png\"</span><br/>    <span class=\"st0\">\"math\"</span><br/>    <span class=\"st0\">\"os\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">type</span> vector <span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]</span><span class=\"kw4\">float64</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>v <span class=\"sy3\">*</span>vector<span class=\"sy1\">)</span> normalize<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    invLen <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span> <span class=\"sy3\">/</span> math<span class=\"sy3\">.</span>Sqrt<span class=\"sy1\">(</span>dot<span class=\"sy1\">(</span>v<span class=\"sy1\">,</span> v<span class=\"sy1\">))</span><br/>    v<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">*=</span> invLen<br/>    v<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">*=</span> invLen<br/>    v<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy2\">*=</span> invLen<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> dot<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y <span class=\"sy3\">*</span>vector<span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> x<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">*</span>y<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy3\">+</span> x<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">*</span>y<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy3\">+</span> x<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span><span class=\"sy3\">*</span>y<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> sphere <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    cx<span class=\"sy1\">,</span> cy<span class=\"sy1\">,</span> cz <span class=\"kw4\">int</span><br/>    r          <span class=\"kw4\">int</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s <span class=\"sy3\">*</span>sphere<span class=\"sy1\">)</span> hit<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>z1<span class=\"sy1\">,</span> z2 <span class=\"kw4\">float64</span><span class=\"sy1\">,</span> hit <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    x <span class=\"sy2\">-=</span> s<span class=\"sy3\">.</span>cx<br/>    y <span class=\"sy2\">-=</span> s<span class=\"sy3\">.</span>cy<br/>    <span class=\"kw1\">if</span> zsq <span class=\"sy2\">:=</span> s<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span>s<span class=\"sy3\">.</span>r <span class=\"sy3\">-</span> <span class=\"sy1\">(</span>x<span class=\"sy3\">*</span>x <span class=\"sy3\">+</span> y<span class=\"sy3\">*</span>y<span class=\"sy1\">);</span> zsq &gt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        zsqrt <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>Sqrt<span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">(</span>zsq<span class=\"sy1\">))</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>s<span class=\"sy3\">.</span>cz<span class=\"sy1\">)</span> <span class=\"sy3\">-</span> zsqrt<span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>s<span class=\"sy3\">.</span>cz<span class=\"sy1\">)</span> <span class=\"sy3\">+</span> zsqrt<span class=\"sy1\">,</span> <span class=\"kw2\">true</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> deathStar<span class=\"sy1\">(</span>pos<span class=\"sy1\">,</span> neg <span class=\"sy3\">*</span>sphere<span class=\"sy1\">,</span> k<span class=\"sy1\">,</span> amb <span class=\"kw4\">float64</span><span class=\"sy1\">,</span> dir <span class=\"sy3\">*</span>vector<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>image<span class=\"sy3\">.</span>Gray <span class=\"sy1\">{</span><br/>    w<span class=\"sy1\">,</span> h <span class=\"sy2\">:=</span> pos<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span> pos<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span><span class=\"nu0\">3</span><br/>    bounds <span class=\"sy2\">:=</span> image<span class=\"sy3\">.</span>Rect<span class=\"sy1\">(</span>pos<span class=\"sy3\">.</span>cx<span class=\"sy3\">-</span>w<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> pos<span class=\"sy3\">.</span>cy<span class=\"sy3\">-</span>h<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> pos<span class=\"sy3\">.</span>cx<span class=\"sy3\">+</span>w<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> pos<span class=\"sy3\">.</span>cy<span class=\"sy3\">+</span>h<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span><br/>    img <span class=\"sy2\">:=</span> image<span class=\"sy3\">.</span>NewGray<span class=\"sy1\">(</span>bounds<span class=\"sy1\">)</span><br/>    vec <span class=\"sy2\">:=</span> <span class=\"kw3\">new</span><span class=\"sy1\">(</span>vector<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> y<span class=\"sy1\">,</span> yMax <span class=\"sy2\">:=</span> pos<span class=\"sy3\">.</span>cy<span class=\"sy3\">-</span>pos<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> pos<span class=\"sy3\">.</span>cy<span class=\"sy3\">+</span>pos<span class=\"sy3\">.</span>r<span class=\"sy1\">;</span> y &lt;<span class=\"sy2\">=</span> yMax<span class=\"sy1\">;</span> y<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> x<span class=\"sy1\">,</span> xMax <span class=\"sy2\">:=</span> pos<span class=\"sy3\">.</span>cx<span class=\"sy3\">-</span>pos<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> pos<span class=\"sy3\">.</span>cx<span class=\"sy3\">+</span>pos<span class=\"sy3\">.</span>r<span class=\"sy1\">;</span> x &lt;<span class=\"sy2\">=</span> xMax<span class=\"sy1\">;</span> x<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            zb1<span class=\"sy1\">,</span> zb2<span class=\"sy1\">,</span> hit <span class=\"sy2\">:=</span> pos<span class=\"sy3\">.</span>hit<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>hit <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">continue</span><br/>            <span class=\"sy1\">}</span><br/>            zs1<span class=\"sy1\">,</span> zs2<span class=\"sy1\">,</span> hit <span class=\"sy2\">:=</span> neg<span class=\"sy3\">.</span>hit<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">)</span><br/>            <span class=\"kw1\">if</span> hit <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">if</span> zs1 &gt; zb1 <span class=\"sy1\">{</span><br/>                    hit <span class=\"sy2\">=</span> <span class=\"kw2\">false</span><br/>                <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> zs2 &gt; zb2 <span class=\"sy1\">{</span><br/>                    <span class=\"kw1\">continue</span><br/>                <span class=\"sy1\">}</span><br/>            <span class=\"sy1\">}</span><br/>            <span class=\"kw1\">if</span> hit <span class=\"sy1\">{</span><br/>                vec<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>neg<span class=\"sy3\">.</span>cx <span class=\"sy3\">-</span> x<span class=\"sy1\">)</span><br/>                vec<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>neg<span class=\"sy3\">.</span>cy <span class=\"sy3\">-</span> y<span class=\"sy1\">)</span><br/>                vec<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>neg<span class=\"sy3\">.</span>cz<span class=\"sy1\">)</span> <span class=\"sy3\">-</span> zs2<br/>            <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>                vec<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>x <span class=\"sy3\">-</span> pos<span class=\"sy3\">.</span>cx<span class=\"sy1\">)</span><br/>                vec<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>y <span class=\"sy3\">-</span> pos<span class=\"sy3\">.</span>cy<span class=\"sy1\">)</span><br/>                vec<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> zb1 <span class=\"sy3\">-</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>pos<span class=\"sy3\">.</span>cz<span class=\"sy1\">)</span><br/>            <span class=\"sy1\">}</span><br/>            vec<span class=\"sy3\">.</span>normalize<span class=\"sy1\">()</span><br/>            s <span class=\"sy2\">:=</span> dot<span class=\"sy1\">(</span>dir<span class=\"sy1\">,</span> vec<span class=\"sy1\">)</span><br/>            <span class=\"kw1\">if</span> s &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>                s <span class=\"sy2\">=</span> <span class=\"nu0\">0</span><br/>            <span class=\"sy1\">}</span><br/>            lum <span class=\"sy2\">:=</span> <span class=\"nu0\">255</span> <span class=\"sy3\">*</span> <span class=\"sy1\">(</span>math<span class=\"sy3\">.</span>Pow<span class=\"sy1\">(</span>s<span class=\"sy1\">,</span> k<span class=\"sy1\">)</span> <span class=\"sy3\">+</span> amb<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> <span class=\"sy1\">(</span><span class=\"nu0\">1</span> <span class=\"sy3\">+</span> amb<span class=\"sy1\">)</span><br/>            <span class=\"kw1\">if</span> lum &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>                lum <span class=\"sy2\">=</span> <span class=\"nu0\">0</span><br/>            <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> lum &gt; <span class=\"nu0\">255</span> <span class=\"sy1\">{</span><br/>                lum <span class=\"sy2\">=</span> <span class=\"nu0\">255</span><br/>            <span class=\"sy1\">}</span><br/>            img<span class=\"sy3\">.</span>SetGray<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> color<span class=\"sy3\">.</span>Gray<span class=\"sy1\">{</span><span class=\"kw4\">uint8</span><span class=\"sy1\">(</span>lum<span class=\"sy1\">)})</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> img<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    dir <span class=\"sy2\">:=</span> &amp;vector<span class=\"sy1\">{</span><span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">40</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">10</span><span class=\"sy1\">}</span><br/>    dir<span class=\"sy3\">.</span>normalize<span class=\"sy1\">()</span><br/>    pos <span class=\"sy2\">:=</span> &amp;sphere<span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">120</span><span class=\"sy1\">}</span><br/>    neg <span class=\"sy2\">:=</span> &amp;sphere<span class=\"sy1\">{</span><span class=\"sy3\">-</span><span class=\"nu0\">90</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">90</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">}</span><br/>\u00a0<br/>    img <span class=\"sy2\">:=</span> deathStar<span class=\"sy1\">(</span>pos<span class=\"sy1\">,</span> neg<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"sy3\">.</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> dir<span class=\"sy1\">)</span><br/>    f<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Create<span class=\"sy1\">(</span><span class=\"st0\">\"dstar.png\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">=</span> png<span class=\"sy3\">.</span>Encode<span class=\"sy1\">(</span>f<span class=\"sy1\">,</span> img<span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">=</span> f<span class=\"sy3\">.</span>Close<span class=\"sy1\">();</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "J", "loc": 41, "block": "<pre class=\"j highlighted_source\">\u00a0<br/>load<span class=\"st_h\">'graphics/viewmat'</span><br/>mag =: +/&amp;.:*:\"<span class=\"nu0\">1</span><br/>norm=:\u00a0%\"<span class=\"nu0\">1</span> <span class=\"nu0\">0</span> mag<br/>dot =: +/@:*\"<span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"co1\">NB. (pos;posr;neg;negr) getvec (x,y)</span><br/>getvec =: <span class=\"nu0\">4</span>\u00a0:<span class=\"nu0\">0</span> \"<span class=\"nu0\">1</span><br/>  pt =. <span class=\"kw2\">y</span><br/>  <span class=\"st_h\">'pos posr neg negr'</span> =. <span class=\"kw2\">x</span><br/>  <span class=\"kw1\">if.</span> <span class=\"sy0\">(</span>dot~ pt-}:pos<span class=\"sy0\">)</span> &gt; *:posr <span class=\"kw1\">do.</span><br/>    <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">else.</span><br/>    zb =. <span class=\"sy0\">(</span>{:pos<span class=\"sy0\">)</span> <span class=\"sy0\">(</span>-,+<span class=\"sy0\">)</span>  posr -&amp;.:*: pt <a class=\"__cf_email__\" data-cfemail=\"d6bbb7b196\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:- }:pos<br/>    <span class=\"kw1\">if.</span> <span class=\"sy0\">(</span>dot~ pt-}:neg<span class=\"sy0\">)</span> &gt; *:negr <span class=\"kw1\">do.</span><br/>      <span class=\"sy0\">(</span>pt,{:zb<span class=\"sy0\">)</span> - pos<br/>    <span class=\"kw1\">else.</span><br/>      zs =. <span class=\"sy0\">(</span>{:neg<span class=\"sy0\">)</span> <span class=\"sy0\">(</span>-,+<span class=\"sy0\">)</span> negr -&amp;.:*: pt <a class=\"__cf_email__\" data-cfemail=\"a4c9c5c3e4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:- }:neg<br/>      <span class=\"kw1\">if.</span> zs &gt;&amp;{. zb <span class=\"kw1\">do.</span> <span class=\"sy0\">(</span>pt,{:zb<span class=\"sy0\">)</span> - pos<br/>      <span class=\"kw1\">elseif.</span> zs &gt;&amp;{: zb <span class=\"kw1\">do.</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><br/>      <span class=\"kw1\">elseif.</span> <span class=\"sy0\">(</span>{.zs<span class=\"sy0\">)</span> &lt; <span class=\"sy0\">(</span>{:zb<span class=\"sy0\">)</span> <span class=\"kw1\">do.</span> neg - <span class=\"sy0\">(</span>pt,{.zs<span class=\"sy0\">)</span><br/>      <span class=\"kw1\">elseif.</span> <span class=\"kw1\">do.</span> <span class=\"sy0\">(</span>pt,{.zb<span class=\"sy0\">)</span> - pos <span class=\"kw1\">end.</span><br/>    <span class=\"kw1\">end.</span><br/>  <span class=\"kw1\">end.</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">NB. (k;ambient;light) draw_sphere (pos;posr;neg;negr)</span><br/>draw_sphere =: <span class=\"nu0\">4</span>\u00a0:<span class=\"nu0\">0</span><br/>  <span class=\"st_h\">'pos posr neg negr'</span> =. <span class=\"kw2\">y</span><br/>  <span class=\"st_h\">'k ambient light'</span> =. <span class=\"kw2\">x</span><br/>  vec=. norm <span class=\"kw2\">y</span> getvec ,\"<span class=\"nu0\">0</span>// <span class=\"sy0\">(</span><span class=\"nu0\">2</span>{.pos<span class=\"sy0\">)</span> +/ i: <span class=\"nu0\">200</span> j.~ <span class=\"nu0\">0.5</span>+posr<br/>\u00a0<br/>  b=. <span class=\"sy0\">(</span>mag vec<span class=\"sy0\">)</span> * ambient + k * <span class=\"nu0\">0</span>&gt;. light dot vec<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>togray =: <span class=\"nu0\">256</span>#. <span class=\"nu0\">255</span> <span class=\"nu0\">255</span> <span class=\"nu0\">255</span> &lt;<a class=\"__cf_email__\" data-cfemail=\"f0deb0\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>*\"<span class=\"nu0\">1</span> <span class=\"nu0\">0</span> <span class=\"sy0\">(</span>%&gt;./@,<span class=\"sy0\">)</span><br/>\u00a0<br/>env=.<span class=\"sy0\">(</span><span class=\"nu0\">2</span>; <span class=\"nu0\">0.5</span>; <span class=\"sy0\">(</span>norm <span class=\"nu0\">_50</span> <span class=\"nu0\">30</span> <span class=\"nu0\">50</span><span class=\"sy0\">))</span><br/>sph=. <span class=\"nu0\">20</span> <span class=\"nu0\">20</span> <span class=\"nu0\">0</span>; <span class=\"nu0\">20</span>;   <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">_6</span>; <span class=\"nu0\">20</span><br/><span class=\"st_h\">'rgb'</span> viewmat togray  env draw_sphere sph</pre>"}, {"lang": "Java", "loc": 217, "block": "<pre class=\"java highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.application.Application</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.event.EventHandler</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.geometry.Point3D</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.scene.Group</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.scene.Scene</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.scene.input.KeyCode</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.scene.input.KeyEvent</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.scene.shape.MeshView</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.scene.shape.TriangleMesh</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.scene.transform.Rotate</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javafx.stage.Stage</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> DeathStar <span class=\"kw1\">extends</span> Application <span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> DIVISION <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><span class=\"sy0\">;</span><span class=\"co1\">// the bigger the higher resolution</span><br/>\t<span class=\"kw4\">float</span> radius <span class=\"sy0\">=</span> <span class=\"nu0\">300</span><span class=\"sy0\">;</span><span class=\"co1\">// radius of the sphere</span><br/>\u00a0<br/>\t@Override<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> start<span class=\"br0\">(</span>Stage primaryStage<span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> <span class=\"br0\">{</span><br/>\t\tPoint3D otherSphere <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Point3D<span class=\"br0\">(</span><span class=\"sy0\">-</span>radius, <span class=\"nu0\">0</span>, <span class=\"sy0\">-</span>radius <span class=\"sy0\">*</span> <span class=\"nu0\">1.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">final</span> TriangleMesh triangleMesh <span class=\"sy0\">=</span> createMesh<span class=\"br0\">(</span>DIVISION, radius, otherSphere<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tMeshView a <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> MeshView<span class=\"br0\">(</span>triangleMesh<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\ta.<span class=\"me1\">setTranslateY</span><span class=\"br0\">(</span>radius<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\ta.<span class=\"me1\">setTranslateX</span><span class=\"br0\">(</span>radius<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\ta.<span class=\"me1\">setRotationAxis</span><span class=\"br0\">(</span>Rotate.<span class=\"me1\">Y_AXIS</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tScene scene <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Scene<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agroup+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Group</span></a><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"co1\">//\t\tuncomment if you want to move the other sphere</span><br/>\u00a0<br/><span class=\"co1\">//\t\tscene.setOnKeyPressed(new EventHandler&lt;KeyEvent&gt;() {</span><br/><span class=\"co1\">//\t\t\tPoint3D sphere = otherSphere;</span><br/><span class=\"co1\">//</span><br/><span class=\"co1\">//\t\t\t@Override</span><br/><span class=\"co1\">//\t\t\tpublic void handle(KeyEvent e) {</span><br/><span class=\"co1\">//\t\t\t\tKeyCode code = e.getCode();</span><br/><span class=\"co1\">//\t\t\t\tswitch (code) {</span><br/><span class=\"co1\">//\t\t\t\tcase UP:</span><br/><span class=\"co1\">//\t\t\t\t\tsphere = sphere.add(0, -10, 0);</span><br/><span class=\"co1\">//\t\t\t\t\tbreak;</span><br/><span class=\"co1\">//\t\t\t\tcase DOWN:</span><br/><span class=\"co1\">//\t\t\t\t\tsphere = sphere.add(0, 10, 0);</span><br/><span class=\"co1\">//\t\t\t\t\tbreak;</span><br/><span class=\"co1\">//\t\t\t\tcase LEFT:</span><br/><span class=\"co1\">//\t\t\t\t\tsphere = sphere.add(-10, 0, 0);</span><br/><span class=\"co1\">//\t\t\t\t\tbreak;</span><br/><span class=\"co1\">//\t\t\t\tcase RIGHT:</span><br/><span class=\"co1\">//\t\t\t\t\tsphere = sphere.add(10, 0, 0);</span><br/><span class=\"co1\">//\t\t\t\t\tbreak;</span><br/><span class=\"co1\">//\t\t\t\tcase W:</span><br/><span class=\"co1\">//\t\t\t\t\tsphere = sphere.add(0, 0, 10);</span><br/><span class=\"co1\">//\t\t\t\t\tbreak;</span><br/><span class=\"co1\">//\t\t\t\tcase S:</span><br/><span class=\"co1\">//\t\t\t\t\tsphere = sphere.add(0, 0, -10);</span><br/><span class=\"co1\">//\t\t\t\t\tbreak;</span><br/><span class=\"co1\">//\t\t\t\tdefault:</span><br/><span class=\"co1\">//\t\t\t\t\treturn;</span><br/><span class=\"co1\">//\t\t\t\t}</span><br/><span class=\"co1\">//\t\t\t\ta.setMesh(createMesh(DIVISION, radius, sphere));</span><br/><span class=\"co1\">//</span><br/><span class=\"co1\">//\t\t\t}</span><br/><span class=\"co1\">//\t\t});</span><br/>\u00a0<br/>\t\tprimaryStage.<span class=\"me1\">setScene</span><span class=\"br0\">(</span>scene<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tprimaryStage.<span class=\"me1\">show</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">static</span> TriangleMesh createMesh<span class=\"br0\">(</span><span class=\"kw1\">final</span> <span class=\"kw4\">int</span> division, <span class=\"kw1\">final</span> <span class=\"kw4\">float</span> radius, <span class=\"kw1\">final</span> Point3D centerOtherSphere<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tRotate rotate <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Rotate<span class=\"br0\">(</span><span class=\"nu0\">180</span>, centerOtherSphere<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">final</span> <span class=\"kw4\">int</span> div2 <span class=\"sy0\">=</span> division <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">final</span> <span class=\"kw4\">int</span> nPoints <span class=\"sy0\">=</span> division <span class=\"sy0\">*</span> <span class=\"br0\">(</span>div2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">final</span> <span class=\"kw4\">int</span> nTPoints <span class=\"sy0\">=</span> <span class=\"br0\">(</span>division <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>div2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> division <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">final</span> <span class=\"kw4\">int</span> nFaces <span class=\"sy0\">=</span> division <span class=\"sy0\">*</span> <span class=\"br0\">(</span>div2 <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> division <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">final</span> <span class=\"kw4\">float</span> rDiv <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>.<span class=\"me1\">f</span> <span class=\"sy0\">/</span> division<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">float</span> points<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">float</span><span class=\"br0\">[</span>nPoints <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">float</span> tPoints<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">float</span><span class=\"br0\">[</span>nTPoints <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">int</span> faces<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>nFaces <span class=\"sy0\">*</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">int</span> pPos <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, tPos <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> div2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">float</span> va <span class=\"sy0\">=</span> rDiv <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> div2 <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">PI</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">float</span> sin_va <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>va<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">float</span> cos_va <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">cos</span><span class=\"br0\">(</span>va<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"kw4\">float</span> ty <span class=\"sy0\">=</span> 0.5f <span class=\"sy0\">+</span> sin_va <span class=\"sy0\">*</span> 0.5f<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> division<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw4\">double</span> a <span class=\"sy0\">=</span> rDiv <span class=\"sy0\">*</span> i <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">PI</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">float</span> hSin <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">float</span> hCos <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">cos</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> hSin <span class=\"sy0\">*</span> cos_va <span class=\"sy0\">*</span> radius<span class=\"sy0\">;</span><br/>\t\t\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> hCos <span class=\"sy0\">*</span> cos_va <span class=\"sy0\">*</span> radius<span class=\"sy0\">;</span><br/>\t\t\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> sin_va <span class=\"sy0\">*</span> radius<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">final</span> Point3D point3D <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Point3D<span class=\"br0\">(</span>points<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span>, points<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>, points<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">double</span> distance <span class=\"sy0\">=</span> centerOtherSphere.<span class=\"me1\">distance</span><span class=\"br0\">(</span>point3D<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>distance <span class=\"sy0\">&lt;=</span> radius<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t\tPoint3D subtract <span class=\"sy0\">=</span> centerOtherSphere.<span class=\"me1\">subtract</span><span class=\"br0\">(</span>point3D<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tPoint3D transform <span class=\"sy0\">=</span> rotate.<span class=\"me1\">transform</span><span class=\"br0\">(</span>subtract<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> transform.<span class=\"me1\">getX</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> transform.<span class=\"me1\">getY</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> transform.<span class=\"me1\">getZ</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> rDiv <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span><br/>\t\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> ty<span class=\"sy0\">;</span><br/>\t\t\t\tpPos <span class=\"sy0\">+=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/>\t\t\t\ttPos <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> ty<span class=\"sy0\">;</span><br/>\t\t\ttPos <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>radius<span class=\"sy0\">;</span><br/>\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> radius<span class=\"sy0\">;</span><br/>\t\tpoints<span class=\"br0\">[</span>pPos <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\tpPos <span class=\"sy0\">+=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">int</span> pS <span class=\"sy0\">=</span> <span class=\"br0\">(</span>div2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> division<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">float</span> textureDelta <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>.<span class=\"me1\">f</span> <span class=\"sy0\">/</span> <span class=\"nu0\">256</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> division<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> rDiv <span class=\"sy0\">*</span> <span class=\"br0\">(</span>0.5f <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> textureDelta<span class=\"sy0\">;</span><br/>\t\t\ttPos <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> division<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> rDiv <span class=\"sy0\">*</span> <span class=\"br0\">(</span>0.5f <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\ttPoints<span class=\"br0\">[</span>tPos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> textureDelta<span class=\"sy0\">;</span><br/>\t\t\ttPos <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">int</span> fIndex <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> div2 <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> division<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw4\">int</span> p0 <span class=\"sy0\">=</span> y <span class=\"sy0\">*</span> division <span class=\"sy0\">+</span> x<span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">int</span> p1 <span class=\"sy0\">=</span> p0 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">int</span> p2 <span class=\"sy0\">=</span> p0 <span class=\"sy0\">+</span> division<span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">int</span> p3 <span class=\"sy0\">=</span> p1 <span class=\"sy0\">+</span> division<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw4\">int</span> t0 <span class=\"sy0\">=</span> p0 <span class=\"sy0\">+</span> y<span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">int</span> t1 <span class=\"sy0\">=</span> t0 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">int</span> t2 <span class=\"sy0\">=</span> t0 <span class=\"sy0\">+</span> division <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">int</span> t3 <span class=\"sy0\">=</span> t1 <span class=\"sy0\">+</span> division <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"co1\">// add p0, p1, p2</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p0<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t0<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p1 <span class=\"sy0\">%</span> division <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> p1 <span class=\"sy0\">-</span> division <span class=\"sy0\">:</span> p1<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t1<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p2<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t2<span class=\"sy0\">;</span><br/>\t\t\t\tfIndex <span class=\"sy0\">+=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"co1\">// add p3, p2, p1</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p3 <span class=\"sy0\">%</span> division <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> p3 <span class=\"sy0\">-</span> division <span class=\"sy0\">:</span> p3<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t3<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p2<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t2<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p1 <span class=\"sy0\">%</span> division <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> p1 <span class=\"sy0\">-</span> division <span class=\"sy0\">:</span> p1<span class=\"sy0\">;</span><br/>\t\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t1<span class=\"sy0\">;</span><br/>\t\t\t\tfIndex <span class=\"sy0\">+=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">int</span> p0 <span class=\"sy0\">=</span> pS<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">int</span> tB <span class=\"sy0\">=</span> <span class=\"br0\">(</span>div2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>division <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> division<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">int</span> p2 <span class=\"sy0\">=</span> x, p1 <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, t0 <span class=\"sy0\">=</span> tB <span class=\"sy0\">+</span> x<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p0<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t0<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p1 <span class=\"sy0\">==</span> division <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> p1<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p1<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p2<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p2<span class=\"sy0\">;</span><br/>\t\t\tfIndex <span class=\"sy0\">+=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\tp0 <span class=\"sy0\">=</span> p0 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\ttB <span class=\"sy0\">=</span> tB <span class=\"sy0\">+</span> division<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">int</span> pB <span class=\"sy0\">=</span> <span class=\"br0\">(</span>div2 <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> division<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> division<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">int</span> p1 <span class=\"sy0\">=</span> pB <span class=\"sy0\">+</span> x, p2 <span class=\"sy0\">=</span> pB <span class=\"sy0\">+</span> x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, t0 <span class=\"sy0\">=</span> tB <span class=\"sy0\">+</span> x<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">int</span> t1 <span class=\"sy0\">=</span> <span class=\"br0\">(</span>div2 <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>division <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> x, t2 <span class=\"sy0\">=</span> t1 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p0<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t0<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p1<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t1<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p2 <span class=\"sy0\">%</span> division <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> p2 <span class=\"sy0\">-</span> division <span class=\"sy0\">:</span> p2<span class=\"sy0\">;</span><br/>\t\t\tfaces<span class=\"br0\">[</span>fIndex <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> t2<span class=\"sy0\">;</span><br/>\t\t\tfIndex <span class=\"sy0\">+=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\tTriangleMesh m <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> TriangleMesh<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tm.<span class=\"me1\">getPoints</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">setAll</span><span class=\"br0\">(</span>points<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tm.<span class=\"me1\">getTexCoords</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">setAll</span><span class=\"br0\">(</span>tPoints<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tm.<span class=\"me1\">getFaces</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">setAll</span><span class=\"br0\">(</span>faces<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">return</span> m<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>\t\tlaunch<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "JavaScript", "loc": 44, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"sy0\">&lt;!</span>DOCTYPE html<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;</span>html<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;</span>body style<span class=\"sy0\">=</span><span class=\"st0\">\"margin:0\"</span><span class=\"sy0\">&gt;</span><br/>  <span class=\"sy0\">&lt;</span>canvas id<span class=\"sy0\">=</span><span class=\"st0\">\"myCanvas\"</span> width<span class=\"sy0\">=</span><span class=\"st0\">\"250\"</span> height<span class=\"sy0\">=</span><span class=\"st0\">\"250\"</span> style<span class=\"sy0\">=</span><span class=\"st0\">\"border:1px solid #d3d3d3;\"</span><span class=\"sy0\">&gt;</span><br/>    Your browser does not support the HTML5 canvas tag.<br/>  <span class=\"sy0\">&lt;/</span>canvas<span class=\"sy0\">&gt;</span><br/>  <span class=\"sy0\">&lt;</span>script<span class=\"sy0\">&gt;</span><br/>    <span class=\"kw1\">var</span> c <span class=\"sy0\">=</span> document.<span class=\"me1\">getElementById</span><span class=\"br0\">(</span><span class=\"st0\">\"myCanvas\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> ctx <span class=\"sy0\">=</span> c.<span class=\"me1\">getContext</span><span class=\"br0\">(</span><span class=\"st0\">\"2d\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\">//Fill the canvas with a dark gray background</span><br/>    ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"#222222\"</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">250</span><span class=\"sy0\">,</span><span class=\"nu0\">250</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Create radial gradient for large base circle</span><br/>    <span class=\"kw1\">var</span> grd <span class=\"sy0\">=</span> ctx.<span class=\"me1\">createRadialGradient</span><span class=\"br0\">(</span><span class=\"nu0\">225</span><span class=\"sy0\">,</span><span class=\"nu0\">175</span><span class=\"sy0\">,</span><span class=\"nu0\">190</span><span class=\"sy0\">,</span><span class=\"nu0\">225</span><span class=\"sy0\">,</span><span class=\"nu0\">150</span><span class=\"sy0\">,</span><span class=\"nu0\">130</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    grd.<span class=\"me1\">addColorStop</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"st0\">\"#EEEEEE\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    grd.<span class=\"me1\">addColorStop</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"st0\">\"black\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\">//Apply gradient and fill circle</span><br/>    ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> grd<span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">beginPath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">arc</span><span class=\"br0\">(</span><span class=\"nu0\">125</span><span class=\"sy0\">,</span><span class=\"nu0\">125</span><span class=\"sy0\">,</span><span class=\"nu0\">105</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Create linear gradient for small inner circle</span><br/>    <span class=\"kw1\">var</span> grd <span class=\"sy0\">=</span> ctx.<span class=\"me1\">createLinearGradient</span><span class=\"br0\">(</span><span class=\"nu0\">75</span><span class=\"sy0\">,</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span><span class=\"nu0\">102</span><span class=\"sy0\">,</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    grd.<span class=\"me1\">addColorStop</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"st0\">\"black\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    grd.<span class=\"me1\">addColorStop</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"st0\">\"gray\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\">//Apply gradient and fill circle</span><br/>    ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> grd<span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">beginPath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">arc</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">//Add another small circle on top of the previous one to enhance the \"shadow\"</span><br/>    ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"black\"</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">beginPath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">arc</span><span class=\"br0\">(</span><span class=\"nu0\">80</span><span class=\"sy0\">,</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span><span class=\"nu0\">17</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"sy0\">&lt;/</span>script<span class=\"sy0\">&gt;</span> <br/><span class=\"sy0\">&lt;/</span>body<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;/</span>html<span class=\"sy0\">&gt;</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "LSL", "loc": 14, "block": "<pre class=\"text highlighted_source\">default {<br/>    state_entry() {<br/>        llSetPrimitiveParams([PRIM_NAME, \"RosettaCode DeathStar\"]);<br/>        llSetPrimitiveParams([PRIM_DESC, llGetObjectName()]);<br/>        llSetPrimitiveParams([PRIM_TYPE, PRIM_TYPE_SPHERE, PRIM_HOLE_CIRCLE, &lt;0.0, 1.0, 0.0&gt;, 0.0, &lt;0.0, 0.0, 0.0&gt;, &lt;0.12, 1.0, 0.0&gt;]);<br/>        llSetPrimitiveParams([PRIM_ROTATION, &lt;-0.586217, 0.395411, -0.586217, 0.395411&gt;]);<br/>        llSetPrimitiveParams([PRIM_TEXTURE, ALL_SIDES, TEXTURE_BLANK, ZERO_VECTOR, ZERO_VECTOR, 0.0]);<br/>        llSetPrimitiveParams([PRIM_TEXT, llGetObjectName(), &lt;1.0, 1.0, 1.0&gt;, 1.0]);<br/>        llSetPrimitiveParams([PRIM_COLOR, ALL_SIDES, &lt;0.5, 0.5, 0.5&gt;, 1.0]);<br/>        llSetPrimitiveParams([PRIM_BUMP_SHINY, ALL_SIDES, PRIM_SHINY_HIGH, PRIM_BUMP_NONE]);<br/>        llSetPrimitiveParams([PRIM_SIZE, &lt;10.0, 10.0, 10.0&gt;]);<br/>        llSetPrimitiveParams([PRIM_OMEGA, &lt;0.0, 0.0, 1.0&gt;, 1.0, 1.0]);<br/>    }<br/>}</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 3, "block": "<pre class=\"text highlighted_source\">RegionPlot3D[x^2 + y^2 + z^2 &lt; 1 &amp;&amp; (x + 1.7)^2 + y^2 + z^2 &gt; 1, <br/>{x, -1, 1}, {y, -1, 1}, {z, -1, 1}, <br/>Boxed -&gt; False, Mesh -&gt; False, Axes -&gt; False, Background -&gt; Black, PlotPoints -&gt; 100]</pre>"}, {"lang": "Openscad", "loc": 19, "block": "<pre class=\"text highlighted_source\">// We are performing geometric subtraction<br/>\u00a0<br/>difference() {<br/>\u00a0<br/>  // Create the primary sphere of radius 60 centred at the origin<br/>\u00a0<br/>  translate(v = [0,0,0]) {<br/>    sphere(60);<br/>  }<br/>\u00a0<br/>  /*Subtract an overlapping sphere with a radius of 40<br/>     The resultant hole will be smaller than this, because we only<br/>     only catch the edge<br/>  */<br/>\u00a0<br/>  translate(v = [0,90,0]) {<br/>    sphere(40);<br/>  }<br/>}</pre>"}, {"lang": "Perl", "loc": 75, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> sq <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$s</span> <span class=\"sy0\">+=</span> <span class=\"co5\">$_</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"kw1\">for</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> hit <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$sph</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$x</span> <span class=\"sy0\">-=</span> <span class=\"re0\">$sph</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$y</span> <span class=\"sy0\">-=</span> <span class=\"re0\">$sph</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> sq<span class=\"br0\">(</span><span class=\"re0\">$sph</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> sq<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a>\t<span class=\"kw1\">if</span> <span class=\"re0\">$z</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a> <span class=\"re0\">$z</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$sph</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$z</span><span class=\"sy0\">,</span> <span class=\"re0\">$sph</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$z</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> normalize <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$v</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a> sq<span class=\"br0\">(</span><span class=\"re0\">@$v</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"co5\">$_</span> <span class=\"sy0\">/=</span> <span class=\"re0\">$n</span> <span class=\"kw1\">for</span> <span class=\"re0\">@$v</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$v</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> dot <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"re0\">$y</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"re0\">$y</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"re0\">$y</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$s</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"re0\">$s</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$pos</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"nu0\">120</span><span class=\"sy0\">,</span> <span class=\"nu0\">120</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">120</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$neg</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"sy0\">-</span><span class=\"nu0\">77</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">190</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$light</span> <span class=\"sy0\">=</span> normalize<span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"sy0\">-</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">10</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">sub</span> draw <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$amb</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/binmode.html\"><span class=\"kw3\">binmode</span></a> <span class=\"kw2\">STDOUT</span><span class=\"sy0\">,</span> <span class=\"st0\">\":raw\"</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"P5<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>255<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$y</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span> <span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">my</span> <span class=\"re0\">@row</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span> <span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$hit</span><span class=\"sy0\">,</span> <span class=\"re0\">@hs</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">my</span> <span class=\"re0\">@h</span> <span class=\"sy0\">=</span> hit<span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"re0\">@h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$hit</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"re0\">@hs</span> <span class=\"sy0\">=</span> hit<span class=\"br0\">(</span><span class=\"re0\">$neg</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$hit</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$hs</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$h</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$hit</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$hs</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$h</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$hit</span> <span class=\"sy0\">=</span> <span class=\"re0\">$hs</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$h</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> <span class=\"nu0\">2</span> <span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">else</span> <span class=\"br0\">{</span> <span class=\"re0\">$hit</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$val</span><span class=\"sy0\">,</span> <span class=\"re0\">$v</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$hit</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$val</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$hit</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"re0\">$v</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>\t<span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\t\t\t<span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\t\t\t<span class=\"re0\">$h</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"re0\">$v</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>\t<span class=\"re0\">$neg</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span><br/>\t\t\t\t\t<span class=\"re0\">$neg</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span><br/>\t\t\t\t\t<span class=\"re0\">$neg</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$hs</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$v</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\tnormalize<span class=\"br0\">(</span><span class=\"re0\">$v</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"re0\">$val</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span>dot<span class=\"br0\">(</span><span class=\"re0\">$v</span><span class=\"sy0\">,</span> <span class=\"re0\">$light</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"re0\">$k</span> <span class=\"sy0\">+</span> <span class=\"re0\">$amb</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"re0\">$val</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$val</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">255</span> <span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"re0\">$val</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> <span class=\"re0\">$val</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@row</span><span class=\"sy0\">,</span> <span class=\"re0\">$val</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <a href=\"http://perldoc.perl.org/functions/pack.html\"><span class=\"kw3\">pack</span></a><span class=\"br0\">(</span><span class=\"st0\">\"C*\"</span><span class=\"sy0\">,</span> <span class=\"re0\">@row</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>draw<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 86, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">class</span> sphere <span class=\"br0\">{</span><br/>   <span class=\"kw1\">has</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">cx</span><span class=\"sy0\">;</span> <span class=\"co1\"># center x coordinate</span><br/>   <span class=\"kw1\">has</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">cy</span><span class=\"sy0\">;</span> <span class=\"co1\"># center y coordinate</span><br/>   <span class=\"kw1\">has</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">cz</span><span class=\"sy0\">;</span> <span class=\"co1\"># center z coordinate</span><br/>   <span class=\"kw1\">has</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">;</span>  <span class=\"co1\"># radius</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$depth</span> <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><span class=\"sy0\">;</span>     <span class=\"co1\"># image color depth</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"kw1\">my</span> <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><span class=\"sy0\">;</span> <span class=\"co1\"># dimensions of generated .pgm; must be odd</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span>  <span class=\"co1\"># scaled dimension to build geometry</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@light</span> <span class=\"sy0\">=</span> <span class=\"kw3\">normalize</span><span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># positive sphere at origin</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$pos</span> <span class=\"sy0\">=</span> sphere<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><br/>    cx <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>    cy <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>    cz <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>    r  <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$s</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># negative sphere offset to upper left</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$neg</span> <span class=\"sy0\">=</span> sphere<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><br/>    cx <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"re0\">$s</span><span class=\"sy0\">*.</span>90<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span><span class=\"sy0\">,</span><br/>    cy <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"re0\">$s</span><span class=\"sy0\">*.</span>90<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span><span class=\"sy0\">,</span><br/>    cz <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"re0\">$s</span><span class=\"sy0\">*.</span>3<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span><span class=\"sy0\">,</span><br/>    r  <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">*.</span>7<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> MAIN <span class=\"br0\">(</span><span class=\"re0\">$outfile</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'deathstar-perl6.pgm'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    spurt <span class=\"re0\">$outfile</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"st0\">\"P5<span class=\"es0\">\\n</span>$x $y<span class=\"es0\">\\n</span>$depth<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\"># .pgm header</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$out</span> <span class=\"sy0\">=</span> open<span class=\"br0\">(</span> <span class=\"re0\">$outfile</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span>a<span class=\"sy0\">,</span> <span class=\"sy0\">:</span>bin <span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"kw1\">die</span> <span class=\"st0\">\"$!<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st_h\">'Calculating row:'</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$out</span><span class=\"sy0\">.</span><span class=\"me1\">write</span><span class=\"br0\">(</span> Blob<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span> draw_ds<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span>15<span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$out</span><span class=\"sy0\">.</span><span class=\"me1\">close</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> draw_ds <span class=\"br0\">(</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$ambient</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@pixels</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$bs</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es0\">\\b</span>\"</span> <span class=\"kw1\">x</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">cy</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span> <span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">cy</span> <span class=\"sy0\">+</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$y</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">print</span> <span class=\"re0\">$bs</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"st_h\">' '</span><span class=\"sy0\">;</span> <span class=\"co1\"># monitor progress</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">cx</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span> <span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">cx</span> <span class=\"sy0\">+</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$x</span> <span class=\"br0\">{</span><br/>            <span class=\"co1\"># black if we don't hit positive sphere, ignore negative sphere</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> hit<span class=\"br0\">(</span><span class=\"re0\">$pos</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"kw1\">my</span> <span class=\"re0\">$posz</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">@pixels</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">next</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">@vec</span><span class=\"sy0\">;</span><br/>            <span class=\"co1\"># is front of positive sphere inside negative sphere?</span><br/>            <span class=\"kw1\">if</span> hit<span class=\"br0\">(</span><span class=\"re0\">$neg</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"kw1\">my</span> <span class=\"re0\">$negz</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"re0\">$negz</span><span class=\"sy0\">.</span><span class=\"kw3\">min</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$posz</span><span class=\"sy0\">.</span><span class=\"kw3\">min</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$negz</span><span class=\"sy0\">.</span><span class=\"kw3\">max</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\"># make black if whole positive sphere eaten here</span><br/>                <span class=\"kw1\">if</span> <span class=\"re0\">$negz</span><span class=\"sy0\">.</span><span class=\"kw3\">min</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$posz</span><span class=\"sy0\">.</span><span class=\"kw3\">max</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$negz</span><span class=\"sy0\">.</span><span class=\"kw3\">max</span> <span class=\"br0\">{</span> <span class=\"re0\">@pixels</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">next</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>                <span class=\"co1\"># render inside of negative sphere</span><br/>                <span class=\"re0\">@vec</span> <span class=\"sy0\">=</span> <span class=\"kw3\">normalize</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re0\">$neg</span><span class=\"sy0\">.</span><span class=\"me1\">cx</span> <span class=\"sy0\">-</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$neg</span><span class=\"sy0\">.</span><span class=\"me1\">cy</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$negz</span><span class=\"sy0\">.</span><span class=\"kw3\">max</span> <span class=\"sy0\">-</span> <span class=\"re0\">$neg</span><span class=\"sy0\">.</span><span class=\"me1\">cz</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\"># render outside of positive sphere</span><br/>                <span class=\"re0\">@vec</span> <span class=\"sy0\">=</span> <span class=\"kw3\">normalize</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">cy</span><span class=\"sy0\">,</span>  <span class=\"re0\">$posz</span><span class=\"sy0\">.</span><span class=\"kw3\">max</span> <span class=\"sy0\">-</span> <span class=\"re0\">$pos</span><span class=\"sy0\">.</span><span class=\"me1\">cz</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$intensity</span> <span class=\"sy0\">=</span> dot<span class=\"br0\">(</span><span class=\"re0\">@light</span><span class=\"sy0\">,</span> <span class=\"re0\">@vec</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"re0\">$k</span> <span class=\"sy0\">+</span> <span class=\"re0\">$ambient</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">@pixels</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"re0\">$intensity</span> <span class=\"sy0\">*</span> <span class=\"re0\">$depth</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span> <span class=\"kw3\">min</span> <span class=\"re0\">$depth</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw3\">say</span> <span class=\"re0\">$bs</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Writing file.'</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">@pixels</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># normalize a vector</span><br/><span class=\"kw2\">sub</span> <span class=\"kw3\">normalize</span> <span class=\"br0\">(</span><span class=\"re0\">@vec</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"re0\">@vec</span>\u00a0\u00bb<span class=\"sy0\">/</span>\u00bb <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@vec</span>\u00a0\u00bb<span class=\"sy0\">*</span>\u00ab\u00a0<span class=\"re0\">@vec</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">sqrt</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># dot product of two vectors</span><br/><span class=\"kw2\">sub</span> dot <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span> <span class=\"re0\">@y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span>\u00a0\u00bb<span class=\"sy0\">*</span>\u00ab\u00a0<span class=\"re0\">@y</span><span class=\"br0\">)</span> <span class=\"kw3\">max</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># are the coordinates within the radius of the sphere?</span><br/><span class=\"kw2\">sub</span> hit <span class=\"br0\">(</span><span class=\"re0\">$sphere</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span> <span class=\"kw1\">is</span> copy<span class=\"sy0\">,</span> <span class=\"re0\">$y</span> <span class=\"kw1\">is</span> copy<span class=\"sy0\">,</span> <span class=\"re0\">$z</span> <span class=\"kw1\">is</span> rw<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$x</span> <span class=\"sy0\">-=</span> <span class=\"re0\">$sphere</span><span class=\"sy0\">.</span><span class=\"me1\">cx</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$y</span> <span class=\"sy0\">-=</span> <span class=\"re0\">$sphere</span><span class=\"sy0\">.</span><span class=\"me1\">cy</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$z2</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sphere</span><span class=\"sy0\">.</span><span class=\"me1\">r</span> <span class=\"sy0\">*</span> <span class=\"re0\">$sphere</span><span class=\"sy0\">.</span><span class=\"me1\">r</span> <span class=\"sy0\">-</span> <span class=\"re0\">$x</span> <span class=\"sy0\">*</span> <span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y</span> <span class=\"sy0\">*</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"kw1\">if</span> <span class=\"re0\">$z2</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$z2</span> <span class=\"sy0\">=</span> <span class=\"re0\">$z2</span><span class=\"sy0\">.</span><span class=\"kw3\">sqrt</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sphere</span><span class=\"sy0\">.</span><span class=\"me1\">cz</span> <span class=\"sy0\">-</span> <span class=\"re0\">$z2</span> <span class=\"sy0\">..</span> <span class=\"re0\">$sphere</span><span class=\"sy0\">.</span><span class=\"me1\">cz</span> <span class=\"sy0\">+</span> <span class=\"re0\">$z2</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 103, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\DeathStar.exw<br/>--<br/>include pGUI.e<br/>\u00a0<br/>Ihandle dlg, canvas<br/>cdCanvas cddbuffer, cdcanvas<br/>\u00a0<br/>function dot(sequence x, sequence y)<br/>    return sum(sq_mul(x,y))<br/>end function<br/>\u00a0<br/>function normalize(sequence v)<br/>    atom len = sqrt(dot(v, v))<br/>    if len=0 then return {0,0,0} end if<br/>    return sq_mul(v,1/len)<br/>end function<br/>\u00a0<br/>enum X,Y,Z<br/>\u00a0<br/>function hit(sequence s, atom x, y, atom r)<br/>    x -= s[X]<br/>    y -= s[Y]<br/>    atom zsq\u00a0:= r*r - (x*x + y*y)<br/>    if zsq &gt;= 0 then<br/>        atom zsqrt\u00a0:= sqrt(zsq)<br/>        return {s[Z] - zsqrt, s[Z] + zsqrt, true}<br/>    end if<br/>    return {0, 0, false}<br/>end function<br/>\u00a0<br/>procedure deathStar(integer width, height, atom k, atom amb, sequence direction)<br/>integer lum<br/>sequence vec<br/>integer r = floor((min(width,height)-40)/2)<br/>integer cx = floor(width/2)<br/>integer cy = floor(height/2)<br/>sequence pos = {0,0,0},<br/>         neg = {r*-3/4,r*-3/4,r*-1/4}<br/>\u00a0<br/>    for y = pos[Y]-r to pos[Y]+r do<br/>        for x = pos[X]-r to pos[X]+r do<br/>            atom {zb1, zb2, hit1}\u00a0:= hit(pos, x, y, r)<br/>            if hit1 then<br/>                atom {zs1, zs2, hit2}\u00a0:= hit(neg, x, y, r/2)<br/>                if not hit2 or zs2&lt;=zb2 then<br/>                    if hit2 and zs1&lt;=zb1 then<br/>                        vec = {neg[X] - x, neg[Y] - y, neg[Z] - zs2}<br/>                    else<br/>                        vec = {x - pos[X], y - pos[Y], zb1 - pos[Z]}<br/>--                      vec = {x, y, zb1}<br/>                    end if<br/>                    atom s = dot(direction, normalize(vec))<br/>                    lum = and_bits(#FF,255*(iff(s&lt;0?0:power(s,k))+amb)/(1+amb))<br/>                    lum += lum*#100+lum*#10000<br/>                    cdCanvasPixel(cddbuffer, cx+x, cy-y, lum)<br/>                end if<br/>            end if<br/>        end for<br/>    end for<br/>end procedure<br/>\u00a0<br/>function redraw_cb(Ihandle /*ih*/, integer /*posx*/, integer /*posy*/)<br/>integer {width, height} = IupGetIntInt(canvas, \"DRAWSIZE\")<br/>    cdCanvasActivate(cddbuffer)<br/>    cdCanvasClear(cddbuffer) <br/>    deathStar(width, height, 1.5, 0.2, normalize({20, -40, -10}))<br/>    cdCanvasFlush(cddbuffer)<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function map_cb(Ihandle ih)<br/>    cdcanvas = cdCreateCanvas(CD_IUP, ih)<br/>    cddbuffer = cdCreateCanvas(CD_DBUFFER, cdcanvas)<br/>    cdCanvasSetBackground(cddbuffer, CD_BLACK)<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function esc_close(Ihandle /*ih*/, atom c)<br/>    if c=K_ESC then return IUP_CLOSE end if<br/>    return IUP_CONTINUE<br/>end function<br/>\u00a0<br/>procedure main()<br/>    IupOpen()<br/>\u00a0<br/>    canvas = IupCanvas(NULL)<br/>    IupSetAttribute(canvas, \"RASTERSIZE\", \"340x340\") -- initial size<br/>    IupSetCallback(canvas, \"MAP_CB\", Icallback(\"map_cb\"))<br/>\u00a0<br/>    dlg = IupDialog(canvas)<br/>    IupSetAttribute(dlg, \"TITLE\", \"Draw a sphere\")<br/>    IupSetCallback(dlg, \"K_ANY\",     Icallback(\"esc_close\"))<br/>    IupSetCallback(canvas, \"ACTION\", Icallback(\"redraw_cb\"))<br/>\u00a0<br/>    IupMap(dlg)<br/>    IupSetAttribute(canvas, \"RASTERSIZE\", NULL) -- release the minimum limitation<br/>    IupShowXY(dlg,IUP_CENTER,IUP_CENTER)<br/>    IupMainLoop()<br/>    IupClose()<br/>end procedure<br/>\u00a0<br/>main()</pre>"}, {"lang": "POV-Ray", "loc": 17, "block": "<pre class=\"text highlighted_source\">camera { perspective location  &lt;0.0 , .8 ,-3.0&gt; look_at 0<br/>         aperture .1 blur_samples 20 variance 1/100000 focal_point 0}<br/>\u00a0<br/>light_source{&lt; 3,3,-3&gt; color rgb 1}<br/>\u00a0<br/>sky_sphere { pigment{ color rgb &lt;0,.2,.5&gt;}}<br/>\u00a0<br/>plane {y,-5 pigment {color rgb .54} normal {hexagon} }<br/>\u00a0<br/>difference {<br/> sphere { 0,1 }<br/> sphere { &lt;-1,1,-1&gt;,1 }<br/>  texture { <br/>    pigment{ granite } <br/>    finish { phong 1 reflection {0.10 metallic 0.5} }<br/>  } <br/>}  </pre>"}, {"lang": "Python", "loc": 67, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span><span class=\"sy0\">,</span> <span class=\"kw3\">math</span><span class=\"sy0\">,</span> <span class=\"kw3\">collections</span><br/>\u00a0<br/>Sphere <span class=\"sy0\">=</span> <span class=\"kw3\">collections</span>.<span class=\"me1\">namedtuple</span><span class=\"br0\">(</span><span class=\"st0\">\"Sphere\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"cx cy cz r\"</span><span class=\"br0\">)</span><br/>V3 <span class=\"sy0\">=</span> <span class=\"kw3\">collections</span>.<span class=\"me1\">namedtuple</span><span class=\"br0\">(</span><span class=\"st0\">\"V3\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"x y z\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> normalize<span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw2\">len</span> <span class=\"sy0\">=</span> <span class=\"kw3\">math</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>x**<span class=\"nu0\">2</span> + y**<span class=\"nu0\">2</span> + z**<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> V3<span class=\"br0\">(</span>x / <span class=\"kw2\">len</span><span class=\"sy0\">,</span> y / <span class=\"kw2\">len</span><span class=\"sy0\">,</span> z / <span class=\"kw2\">len</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> dot<span class=\"br0\">(</span>v1<span class=\"sy0\">,</span> v2<span class=\"br0\">)</span>:<br/>    d <span class=\"sy0\">=</span> v1.<span class=\"me1\">x</span>*v2.<span class=\"me1\">x</span> + v1.<span class=\"me1\">y</span>*v2.<span class=\"me1\">y</span> + v1.<span class=\"me1\">z</span>*v2.<span class=\"me1\">z</span><br/>    <span class=\"kw1\">return</span> -d <span class=\"kw1\">if</span> d <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> <span class=\"nu0\">0.0</span><br/>\u00a0<br/><span class=\"kw1\">def</span> hit_sphere<span class=\"br0\">(</span>sph<span class=\"sy0\">,</span> x0<span class=\"sy0\">,</span> y0<span class=\"br0\">)</span>:<br/>    x <span class=\"sy0\">=</span> x0 - sph.<span class=\"me1\">cx</span><br/>    y <span class=\"sy0\">=</span> y0 - sph.<span class=\"me1\">cy</span><br/>    zsq <span class=\"sy0\">=</span> sph.<span class=\"me1\">r</span> ** <span class=\"nu0\">2</span> - <span class=\"br0\">(</span>x ** <span class=\"nu0\">2</span> + y ** <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> zsq <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw2\">False</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    szsq <span class=\"sy0\">=</span> <span class=\"kw3\">math</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>zsq<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw2\">True</span><span class=\"sy0\">,</span> sph.<span class=\"me1\">cz</span> - szsq<span class=\"sy0\">,</span> sph.<span class=\"me1\">cz</span> + szsq<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> draw_sphere<span class=\"br0\">(</span>k<span class=\"sy0\">,</span> ambient<span class=\"sy0\">,</span> light<span class=\"br0\">)</span>:<br/>    shades <span class=\"sy0\">=</span> <span class=\"st0\">\".:!*oe&amp;#%@\"</span><br/>    pos <span class=\"sy0\">=</span> Sphere<span class=\"br0\">(</span><span class=\"nu0\">20.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">20.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">20.0</span><span class=\"br0\">)</span><br/>    neg <span class=\"sy0\">=</span> Sphere<span class=\"br0\">(</span><span class=\"nu0\">1.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">,</span> -<span class=\"nu0\">6.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">20.0</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">floor</span><span class=\"br0\">(</span>pos.<span class=\"me1\">cy</span> - pos.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                    <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">ceil</span><span class=\"br0\">(</span>pos.<span class=\"me1\">cy</span> + pos.<span class=\"me1\">r</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>        y <span class=\"sy0\">=</span> i + <span class=\"nu0\">0.5</span><br/>        <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">floor</span><span class=\"br0\">(</span>pos.<span class=\"me1\">cx</span> - <span class=\"nu0\">2</span> * pos.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                        <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">ceil</span><span class=\"br0\">(</span>pos.<span class=\"me1\">cx</span> + <span class=\"nu0\">2</span> * pos.<span class=\"me1\">r</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>            x <span class=\"sy0\">=</span> <span class=\"br0\">(</span>j - pos.<span class=\"me1\">cx</span><span class=\"br0\">)</span> / <span class=\"nu0\">2.0</span> + <span class=\"nu0\">0.5</span> + pos.<span class=\"me1\">cx</span><br/>\u00a0<br/>            <span class=\"br0\">(</span>h<span class=\"sy0\">,</span> zb1<span class=\"sy0\">,</span> zb2<span class=\"br0\">)</span> <span class=\"sy0\">=</span> hit_sphere<span class=\"br0\">(</span>pos<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> h:<br/>                hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <span class=\"kw1\">else</span>:<br/>                <span class=\"br0\">(</span>h<span class=\"sy0\">,</span> zs1<span class=\"sy0\">,</span> zs2<span class=\"br0\">)</span> <span class=\"sy0\">=</span> hit_sphere<span class=\"br0\">(</span>neg<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> h:<br/>                    hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>                <span class=\"kw1\">elif</span> zs1 <span class=\"sy0\">&gt;</span> zb1:<br/>                    hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>                <span class=\"kw1\">elif</span> zs2 <span class=\"sy0\">&gt;</span> zb2:<br/>                    hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>                <span class=\"kw1\">elif</span> zs2 <span class=\"sy0\">&gt;</span> zb1:<br/>                    hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>                <span class=\"kw1\">else</span>:<br/>                    hit_result <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> hit_result <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>                <span class=\"kw3\">sys</span>.<span class=\"me1\">stdout</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">continue</span><br/>            <span class=\"kw1\">elif</span> hit_result <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>:<br/>                vec <span class=\"sy0\">=</span> V3<span class=\"br0\">(</span>x - pos.<span class=\"me1\">cx</span><span class=\"sy0\">,</span> y - pos.<span class=\"me1\">cy</span><span class=\"sy0\">,</span> zb1 - pos.<span class=\"me1\">cz</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">elif</span> hit_result <span class=\"sy0\">==</span> <span class=\"nu0\">2</span>:<br/>                vec <span class=\"sy0\">=</span> V3<span class=\"br0\">(</span>neg.<span class=\"me1\">cx</span>-x<span class=\"sy0\">,</span> neg.<span class=\"me1\">cy</span>-y<span class=\"sy0\">,</span> neg.<span class=\"me1\">cz</span>-zs2<span class=\"br0\">)</span><br/>            vec <span class=\"sy0\">=</span> normalize<span class=\"br0\">(</span>vec<span class=\"br0\">)</span><br/>\u00a0<br/>            b <span class=\"sy0\">=</span> dot<span class=\"br0\">(</span>light<span class=\"sy0\">,</span> vec<span class=\"br0\">)</span> ** k + ambient<br/>            intensity <span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span> - b<span class=\"br0\">)</span> * <span class=\"kw2\">len</span><span class=\"br0\">(</span>shades<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            intensity <span class=\"sy0\">=</span> <span class=\"kw2\">min</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>shades<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">max</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> intensity<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw3\">sys</span>.<span class=\"me1\">stdout</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span>shades<span class=\"br0\">[</span>intensity<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><br/>\u00a0<br/>light <span class=\"sy0\">=</span> normalize<span class=\"br0\">(</span>V3<span class=\"br0\">(</span>-<span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>draw_sphere<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.5</span><span class=\"sy0\">,</span> light<span class=\"br0\">)</span></pre>"}, {"lang": "Q", "loc": 44, "block": "<pre class=\"q highlighted_source\">\u00a0<br/>/ https:<span class=\"co1\">//en.wikipedia.org/wiki/BMP_file_format</span><br/>/ BITMAPINFOHEADER / RGB24<br/>\u00a0<br/>/ generate a header<br/>\u00a0<br/>genheader:<span class=\"br0\">{</span><span class=\"br0\">[</span>w;h<span class=\"br0\">]</span><br/>   0x424d<span class=\"sy0\">,</span> <span class=\"st0\">\"x\"</span><span class=\"sy0\">$</span><span class=\"br0\">(</span>f2i4<span class=\"br0\">[</span><span class=\"nu0\">54</span><span class=\"sy0\">+</span><span class=\"nu0\">4</span><span class=\"sy0\">*</span>h<span class=\"sy0\">*</span>w<span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">54</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">40</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>                f2i4<span class=\"br0\">[</span>h<span class=\"br0\">]</span><span class=\"sy0\">,</span>f2i4<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>                f2i4<span class=\"br0\">[</span>h<span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"br0\">(</span>w<span class=\"sy0\">*</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"br0\">(</span><span class=\"br0\">(</span>w<span class=\"sy0\">*</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"kw1\">mod</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                <span class=\"nu0\">19</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">}</span>;<br/>\u00a0<br/>/ generate a raster line at a vertical position<br/>\u00a0<br/>genrow:<span class=\"br0\">{</span><span class=\"br0\">[</span>w;y;fcn<span class=\"br0\">]</span><br/>    row:<span class=\"kw1\">enlist</span> 0i;xx:0i;do<span class=\"br0\">[</span>w;row<span class=\"sy0\">,</span>:fcn<span class=\"br0\">[</span>xx;y<span class=\"br0\">]</span>;xx<span class=\"sy0\">+</span>:1i<span class=\"br0\">]</span>;row<span class=\"sy0\">,</span>:<span class=\"br0\">(</span><span class=\"br0\">(</span>w <span class=\"kw1\">mod</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">#</span>0i<span class=\"br0\">)</span>;<span class=\"nu0\">1</span><span class=\"sy0\">_</span>row<span class=\"br0\">}</span>;<br/>\u00a0<br/>/ generate a bitmap<br/>\u00a0<br/>genbitmap:<span class=\"br0\">{</span><span class=\"br0\">[</span>w;h;fcn<span class=\"br0\">]</span><br/>    ary:<span class=\"kw1\">enlist</span> 0i;yy:0i;do<span class=\"br0\">[</span>h;ary<span class=\"sy0\">,</span>:genrow<span class=\"br0\">[</span>w;yy;fcn<span class=\"br0\">]</span>;yy<span class=\"sy0\">+</span>:1i<span class=\"br0\">]</span>;<span class=\"st0\">\"x\"</span><span class=\"sy0\">$</span>1<span class=\"sy0\">_</span>ary<span class=\"br0\">}</span>;<br/>\u00a0<br/>/ deal with endianness<br/>/ might need to <span class=\"kw1\">reverse</span> <span class=\"kw1\">last</span> line if host computer is <span class=\"kw1\">not</span> a PC<br/>\u00a0<br/>f2i4:<span class=\"br0\">{</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> r:x;<br/>  s0:r <span class=\"kw1\">mod</span> <span class=\"nu0\">256</span>;r<span class=\"sy0\">-</span>:s0; r<span class=\"sy0\">%</span>:<span class=\"nu0\">256</span>;<br/>  s1:r <span class=\"kw1\">mod</span> <span class=\"nu0\">256</span>;r<span class=\"sy0\">-</span>:s1; r<span class=\"sy0\">%</span>:<span class=\"nu0\">256</span>;<br/>  s2:r <span class=\"kw1\">mod</span> <span class=\"nu0\">256</span>;r<span class=\"sy0\">-</span>:s2; r<span class=\"sy0\">%</span>:<span class=\"nu0\">256</span>;<br/>  s3:r <span class=\"kw1\">mod</span> <span class=\"nu0\">256</span>;<br/>  <span class=\"st0\">\"h\"</span><span class=\"sy0\">$</span><span class=\"br0\">(</span>s0<span class=\"sy0\">,</span>s1<span class=\"sy0\">,</span>s2<span class=\"sy0\">,</span>s3<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/>/ compose <span class=\"kw1\">and</span> write a file<br/>\u00a0<br/>writebmp:<span class=\"br0\">{</span><span class=\"br0\">[</span>w;h;fcn;fn<span class=\"br0\">]</span> <br/>    fn <span class=\"nu0\">1</span>: <span class=\"br0\">(</span>genheader<span class=\"br0\">[</span>h;w<span class=\"br0\">]</span><span class=\"sy0\">,</span>genbitmap<span class=\"br0\">[</span>w;h;fcn<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">}</span>;<br/>\u00a0<br/>/ / usage example:<br/>/ w:<span class=\"nu0\">400</span>;<br/>/ h:<span class=\"nu0\">300</span>;<br/>/ fcn:<span class=\"br0\">{</span>x0:x<span class=\"sy0\">-</span>w<span class=\"sy0\">%</span>2;y0:y<span class=\"sy0\">-</span>h<span class=\"sy0\">%</span>2;r:<span class=\"nu0\">175</span>;<span class=\"sy0\">$</span><span class=\"br0\">[</span><span class=\"br0\">(</span>r<span class=\"sy0\">*</span>r<span class=\"br0\">)</span>&gt;<span class=\"br0\">(</span><span class=\"br0\">(</span>x0<span class=\"sy0\">*</span>x0<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>y0<span class=\"sy0\">*</span>y0<span class=\"br0\">)</span><span class=\"br0\">)</span>;<span class=\"br0\">(</span><span class=\"nu0\">0</span>;<span class=\"nu0\">0</span>;<span class=\"nu0\">255</span><span class=\"br0\">)</span>;<span class=\"br0\">(</span><span class=\"nu0\">0</span>;<span class=\"nu0\">255</span>;<span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span>;<br/>/ fn:<span class=\"sy0\"><span class=\"re2\">`:demo.bmp;</span></span><br/>/ writebmp<span class=\"br0\">[</span>w;h;fcn;fn<span class=\"br0\">]</span>;<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 11, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require plot)<br/>(plot3d (polar3d (\u03bb (\u03c6 \u03b8) (real-part (- (sin \u03b8) (sqrt (- (sqr 1/3) (sqr (cos \u03b8)))))))<br/>                 #:samples 100 #:line-style 'transparent #:color 9)<br/>        #:altitude 60 #:angle 80<br/>        #:height  500 #:width 400<br/>        #:x-min  -1/2 #:x-max 1/2<br/>        #:y-min  -1/2 #:y-max 1/2<br/>        #:z-min     0 #:z-max 1)<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 55, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program displays a sphere with another sphere subtracted where it's superimposed.*/</span><br/><span class=\"kw1\">call</span> deathStar   <span class=\"nu0\">2</span>,  <span class=\"sy0\">.</span>5,  v3<span class=\"br0\">(</span><span class=\"st0\">'-50  30  50'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>dot:   #=<span class=\"nu0\">0</span>;  <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"kw6\">words</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>;  #=# + <span class=\"kw6\">word</span><span class=\"br0\">(</span>x,j<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw6\">word</span><span class=\"br0\">(</span>y,j<span class=\"br0\">)</span>;  <span class=\"kw3\">end</span>; <span class=\"kw1\">return</span> #<br/>dot<span class=\"sy0\">.</span>:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x,y; d=dot<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span>; <span class=\"kw1\">if</span> d<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> -d; <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>ceil:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;   _=<span class=\"kw6\">trunc</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>;                         <span class=\"kw1\">return</span> _+<span class=\"br0\">(</span>x<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>x<span class=\"sy0\">\\</span>=_<span class=\"br0\">)</span><br/>floor: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;   _=<span class=\"kw6\">trunc</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>;                         <span class=\"kw1\">return</span> _-<span class=\"br0\">(</span>x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>x<span class=\"sy0\">\\</span>=_<span class=\"br0\">)</span><br/>v3:    <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> a b c;      #=sqrt<span class=\"br0\">(</span>a<span class=\"sy0\">**</span><span class=\"nu0\">2</span> + b<span class=\"sy0\">**</span><span class=\"nu0\">2</span> + c<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>;  <span class=\"kw1\">return</span> a<span class=\"sy0\">/</span>#  b<span class=\"sy0\">/</span>#  c<span class=\"sy0\">/</span>#<br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>sqrt:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;  <span class=\"kw1\">if</span> x=<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;  d=<span class=\"kw2\">digits</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;  m<span class=\"sy0\">.</span>=<span class=\"nu0\">9</span>;  <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span><br/>       <span class=\"kw1\">numeric</span> <span class=\"kw2\">form</span>;  <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span> <span class=\"kw6\">format</span><span class=\"br0\">(</span>x,<span class=\"nu0\">2</span>,<span class=\"nu0\">1</span>,,<span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"st0\">'E0'</span> <span class=\"kw2\">with</span> g <span class=\"st0\">'E'</span> _ <span class=\"sy0\">.</span>;   g=g <span class=\"sy0\">*</span> <span class=\"sy0\">.</span>5<span class=\"st0\">'e'</span>_\u00a0% <span class=\"nu0\">2</span><br/>       h=d+<span class=\"nu0\">6</span>;           <span class=\"kw1\">do</span> j=<span class=\"nu0\">0</span>  <span class=\"kw2\">while</span> h<span class=\"sy0\">&gt;</span><span class=\"nu0\">9</span>;     m<span class=\"sy0\">.</span>j=h;              h=h%2+<span class=\"nu0\">1</span>;      <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*j*/</span><br/>                        <span class=\"kw1\">do</span> k=j+<span class=\"nu0\">5</span>  <span class=\"kw2\">to</span> <span class=\"nu0\">0</span>  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>; <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> m<span class=\"sy0\">.</span>k; g=<span class=\"br0\">(</span>g+x<span class=\"sy0\">/</span>g<span class=\"br0\">)</span><span class=\"sy0\">*.</span>5; <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*k*/</span><br/>       <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> d;                       <span class=\"kw1\">return</span>  g<span class=\"sy0\">/</span><span class=\"nu0\">1</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>hitSphere: <span class=\"kw1\">procedure</span> <span class=\"kw1\">expose</span>\u00a0!<span class=\"sy0\">.</span>;  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> xx yy zz r,x0,y0;   z=r<span class=\"sy0\">*</span>r-<span class=\"br0\">(</span>x0-xx<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span>-<span class=\"br0\">(</span>y0-yy<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><br/>           <span class=\"kw1\">if</span> z<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;   _=sqrt<span class=\"br0\">(</span>z<span class=\"br0\">)</span>;  \u00a0!<span class=\"sy0\">.</span>z1=zz-_;   \u00a0!<span class=\"sy0\">.</span>z2=zz+_;         <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>deathStar: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> k,ambient,sun    <span class=\"coMULTI\">/* [\u2193]  display the deathstar to screen*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw2\">var</span>  sun   s1 s2 s3                        <span class=\"coMULTI\">/*identify the light source co\u00f6rdinates*/</span><br/><span class=\"kw1\">if</span> <span class=\"nu0\">6</span>==<span class=\"st0\">\"f6\"</span>x  <span class=\"kw3\">then</span> shading= <span class=\"st0\">'.:!*oe&amp;#%@'</span>          <span class=\"coMULTI\">/*shading characters for EBCDIC machine*/</span><br/>             <span class=\"kw3\">else</span> shading= <span class=\"st0\">'\u00b7:!\u00ba<a class=\"__cf_email__\" data-cfemail=\"dfb0ba9f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u2591\u2592\u2593'</span>          <span class=\"coMULTI\">/*   \"        \"       \"  ASCII     \"   */</span><br/>shadingL=<span class=\"kw6\">length</span><span class=\"br0\">(</span>shading<span class=\"br0\">)</span><br/>shades<span class=\"sy0\">.</span>=<span class=\"st0\">' '</span>;        <span class=\"kw1\">do</span> i=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> shadingL;    shades<span class=\"sy0\">.</span>i=<span class=\"kw6\">substr</span><span class=\"br0\">(</span>shading, i, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;    <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*i*/</span><br/>\u00a0<br/>ship=  <span class=\"nu0\">20</span> <span class=\"nu0\">20</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">20</span> \u00a0;          <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span>  ship    shipX  shipY  shipZ  shipR<br/>hole= <span class=\"st0\">' 1  1 -6 20'</span>\u00a0;          <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span>  hole    holeX  holeY  holeZ  <span class=\"sy0\">.</span><br/>\u00a0<br/>  <span class=\"kw1\">do</span>   i=floor<span class=\"br0\">(</span>shipY-shipR  <span class=\"br0\">)</span>  <span class=\"kw2\">to</span> ceil<span class=\"br0\">(</span>shipY+shipR  <span class=\"br0\">)</span>+<span class=\"nu0\">1</span>;    y=i+<span class=\"sy0\">.</span>5;   @=   <span class=\"coMULTI\">/*@   is a single line of the deathstar to be displayed.*/</span><br/>    <span class=\"kw1\">do</span> j=floor<span class=\"br0\">(</span>shipX-shipR<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>  <span class=\"kw2\">to</span> ceil<span class=\"br0\">(</span>shipX+shipR<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>+<span class=\"nu0\">1</span>;   \u00a0!<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span><br/>    x=<span class=\"sy0\">.</span>5 <span class=\"sy0\">*</span> <span class=\"br0\">(</span>j-shipX+<span class=\"nu0\">1</span><span class=\"br0\">)</span> + shipX;        $bg=<span class=\"nu0\">0</span>;    $pos=<span class=\"nu0\">0</span>;    $neg=<span class=\"nu0\">0</span>         <span class=\"coMULTI\">/*$BG,  $POS,  and  $NEG  are boolean values.           */</span><br/>   \u00a0?=hitSphere<span class=\"br0\">(</span>ship, x, y<span class=\"br0\">)</span>;                     b1=!<span class=\"sy0\">.</span>z1;   b2=!<span class=\"sy0\">.</span>z2        <span class=\"coMULTI\">/*?  is boolean,  \"true\"  indicates ray hits the sphere.*/</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"sy0\">\\</span>? <span class=\"kw3\">then</span> $bg=<span class=\"nu0\">1</span>                                                       <span class=\"coMULTI\">/*ray lands in blank space, so draw the background.     */</span><br/>          <span class=\"kw3\">else</span> <span class=\"kw1\">do</span>;\u00a0?=hitSphere<span class=\"br0\">(</span>hole, x, y<span class=\"br0\">)</span>;      s1=!<span class=\"sy0\">.</span>z1;   s2=!<span class=\"sy0\">.</span>z2<br/>               <span class=\"kw1\">if</span> <span class=\"sy0\">\\</span>? <span class=\"kw3\">then</span> $pos=<span class=\"nu0\">1</span>                                           <span class=\"coMULTI\">/*ray hits ship but not the hole, so draw ship surface. */</span><br/>                     <span class=\"kw3\">else</span> <span class=\"kw1\">if</span> s1<span class=\"sy0\">&gt;</span>b1 <span class=\"kw3\">then</span> $pos=<span class=\"nu0\">1</span>                             <span class=\"coMULTI\">/*ray hits both, but ship front surface is closer.      */</span><br/>                                   <span class=\"kw3\">else</span> <span class=\"kw1\">if</span> s2<span class=\"sy0\">&gt;</span>b2 <span class=\"kw3\">then</span> $bg=<span class=\"nu0\">1</span>                <span class=\"coMULTI\">/*ship surface is inside hole,  so show the background. */</span><br/>                                                 <span class=\"kw3\">else</span> <span class=\"kw1\">if</span> s2<span class=\"sy0\">&gt;</span>b1 <span class=\"kw3\">then</span> $neg=<span class=\"nu0\">1</span> <span class=\"coMULTI\">/*hole back surface is inside ship; the only place a \u00b7\u00b7\u00b7*/</span><br/>                                                               <span class=\"kw3\">else</span> $pos=<span class=\"nu0\">1</span> <span class=\"coMULTI\">/*\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7  hole surface will be shown.*/</span><br/>               <span class=\"kw3\">end</span><br/>      <span class=\"kw1\">select</span><br/>      <span class=\"kw3\">when</span> $bg   <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;    @<a class=\"__cf_email__\" data-cfemail=\"7b463b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"st0\">' '</span>;    <span class=\"kw1\">iterate</span> j;    <span class=\"kw3\">end</span>                  <span class=\"coMULTI\">/*append a blank character to the line to be displayed. */</span><br/>      <span class=\"kw3\">when</span> $pos  <span class=\"kw3\">then</span> vec_= v3<span class=\"br0\">(</span>x-shipX  y-shipY  b1-shipZ<span class=\"br0\">)</span><br/>      <span class=\"kw3\">when</span> $neg  <span class=\"kw3\">then</span> vec_= v3<span class=\"br0\">(</span>holeX-x  holeY-y  holeZ-s2<span class=\"br0\">)</span><br/>      <span class=\"kw3\">end</span>    <span class=\"coMULTI\">/*select*/</span><br/>\u00a0<br/>    b=<span class=\"nu0\">1</span> +<span class=\"kw6\">min</span><span class=\"br0\">(</span>shadingL, <span class=\"kw6\">max</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"kw6\">trunc</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span> - <span class=\"br0\">(</span>dot<span class=\"sy0\">.</span><span class=\"br0\">(</span>sun, v3<span class=\"br0\">(</span>vec_<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">**</span>k + ambient<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> shadingL<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    @<a class=\"__cf_email__\" data-cfemail=\"182558\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> <span class=\"sy0\">||</span> shades<span class=\"sy0\">.</span>b                                 <span class=\"coMULTI\">/*B   the ray's intensity\u2502brightness*/</span><br/>    <span class=\"kw3\">end</span>      <span class=\"coMULTI\">/*j*/</span>                                  <span class=\"coMULTI\">/* [\u2191]  build a line for the sphere.*/</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> @<span class=\"sy0\">\\</span>=<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"kw6\">strip</span><span class=\"br0\">(</span>@, <span class=\"st0\">'T'</span><span class=\"br0\">)</span>                  <span class=\"coMULTI\">/*strip trailing blanks from line.  */</span><br/>  <span class=\"kw3\">end</span>        <span class=\"coMULTI\">/*i*/</span>                                  <span class=\"coMULTI\">/* [\u2191]  show all lines for sphere.  */</span><br/><span class=\"kw1\">return</span></pre>"}, {"lang": "Set lang", "loc": 60, "block": "<pre class=\"text highlighted_source\">set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 46<br/>set\u00a0! 45<br/>set\u00a0! 126<br/>set\u00a0! 34<br/>set\u00a0! 34<br/>set\u00a0! 126<br/>set\u00a0! 45<br/>set\u00a0! 46<br/>set\u00a0! 10<br/>set\u00a0! 46<br/>set\u00a0! 39<br/>set\u00a0! 40<br/>set\u00a0! 95<br/>set\u00a0! 41<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 39<br/>set\u00a0! 46<br/>set\u00a0! 10<br/>set\u00a0! 124<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 61<br/>set\u00a0! 124<br/>set\u00a0! 10<br/>set\u00a0! 39<br/>set\u00a0! 46<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 46<br/>set\u00a0! 39<br/>set\u00a0! 10<br/>set\u00a0! 32<br/>set\u00a0! 32<br/>set\u00a0! 126<br/>set\u00a0! 45<br/>set\u00a0! 46<br/>set\u00a0! 95<br/>set\u00a0! 95<br/>set\u00a0! 46<br/>set\u00a0! 45<br/>set\u00a0! 126</pre>"}, {"lang": "Sidef", "loc": 65, "block": "<pre class=\"ruby highlighted_source\">func sq<span class=\"br0\">(</span><span class=\"sy0\">*</span>nums<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    nums\u00a0\u00bb<span class=\"sy0\">**</span>\u00bb <span class=\"nu0\">2</span> \u00ab<span class=\"sy0\">+</span>\u00bb;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func hitf<span class=\"br0\">(</span>sph, x, y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    x <span class=\"sy0\">-</span>= sph<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>;<br/>    y <span class=\"sy0\">-</span>= sph<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>;<br/>\u00a0<br/>    var z = <span class=\"br0\">(</span>sq<span class=\"br0\">(</span>sph<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> sq<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>    z <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw2\">return</span> <span class=\"kw2\">nil</span>;<br/>\u00a0<br/>    z.<span class=\"me1\">sqrt</span>!;<br/>    <span class=\"br0\">[</span>sph<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> z, sph<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> z<span class=\"br0\">]</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func normalize<span class=\"br0\">(</span>v<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var n = sq<span class=\"br0\">(</span>v...<span class=\"br0\">)</span>.<span class=\"me1\">sqrt</span>;<br/>    v\u00a0\u00bb<span class=\"sy0\">/</span>\u00bb n;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func dot<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var s = <span class=\"br0\">(</span>x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> x<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> x<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>y<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>    s <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span>\u00a0? s\u00a0: <span class=\"nu0\">0</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>var pos = <span class=\"br0\">[</span><span class=\"nu0\">120</span>, <span class=\"nu0\">120</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">120</span><span class=\"br0\">]</span>;<br/>var neg = <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">77</span>, <span class=\"sy0\">-</span><span class=\"nu0\">33</span>, <span class=\"sy0\">-</span><span class=\"nu0\">100</span>, <span class=\"nu0\">190</span><span class=\"br0\">]</span>;<br/>var light = normalize<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">12</span>, <span class=\"nu0\">13</span>, <span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>func draw<span class=\"br0\">(</span>k, amb<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    STDOUT.<span class=\"me1\">binmode</span><span class=\"br0\">(</span><span class=\"st0\">':raw'</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw3\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"P5<span class=\"es0\">\\n</span>\"</span>, pos<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"nu0\">3</span>, <span class=\"st0\">\" \"</span>, pos<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"nu0\">3</span>, <span class=\"st0\">\"<span class=\"es0\">\\n</span>255<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>    <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>pos<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> pos<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> .. <span class=\"br0\">(</span>pos<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> pos<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        var row = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/>        <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>pos<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> pos<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> .. <span class=\"br0\">(</span>pos<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> pos<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            var hit = <span class=\"nu0\">0</span>;<br/>            var hs = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/>            var h = hitf<span class=\"br0\">(</span>pos, x, y<span class=\"br0\">)</span>;<br/>\u00a0<br/>            <span class=\"kw1\">if</span>    <span class=\"br0\">(</span>!h<span class=\"br0\">)</span>                      <span class=\"br0\">{</span> hit = <span class=\"nu0\">0</span>; h  = <span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span>!<span class=\"br0\">(</span>hs = hitf<span class=\"br0\">(</span>neg, x, y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> hit = <span class=\"nu0\">1</span>; hs = <span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span>hs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> h<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span>            <span class=\"br0\">{</span> hit = <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span>hs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> h<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span>            <span class=\"br0\">{</span> hit = <span class=\"br0\">(</span>hs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> h<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\u00a0? <span class=\"nu0\">0</span>\u00a0: <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span>                            <span class=\"br0\">{</span> hit = <span class=\"nu0\">1</span> <span class=\"br0\">}</span>;<br/>\u00a0<br/>            var <span class=\"br0\">(</span>val, v<span class=\"br0\">)</span>;<br/>            given<span class=\"br0\">(</span>hit<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> val = <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> v = <span class=\"br0\">[</span>x<span class=\"sy0\">-</span>pos<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, y<span class=\"sy0\">-</span>pos<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, h<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>pos<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>                default  <span class=\"br0\">{</span> v = <span class=\"br0\">[</span>neg<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>x, neg<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>y, neg<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>hs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>v<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                v = normalize<span class=\"br0\">(</span>v<span class=\"br0\">)</span>;<br/>                val = int<span class=\"br0\">(</span><span class=\"br0\">(</span>dot<span class=\"br0\">(</span>v, light<span class=\"br0\">)</span><span class=\"sy0\">**</span>k <span class=\"sy0\">+</span> amb<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span>;<br/>                val = <span class=\"br0\">(</span>val <span class=\"sy0\">&gt;</span> <span class=\"nu0\">255</span>\u00a0? <span class=\"nu0\">255</span>\u00a0: <span class=\"br0\">(</span>val <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span>\u00a0? <span class=\"nu0\">0</span>\u00a0: val<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>            <span class=\"br0\">}</span>;<br/>            row.<span class=\"me1\">append</span><span class=\"br0\">(</span>val<span class=\"br0\">)</span>;<br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw3\">print</span> <span class=\"st0\">'C*'</span>.<span class=\"me1\">pack</span><span class=\"br0\">(</span>row...<span class=\"br0\">)</span>;<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>draw<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">0.2</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Tcl", "loc": 115, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> normalize vec <span class=\"br0\">{</span><br/>    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"re0\">$vec</span> v<br/>    lassign <span class=\"re0\">$v</span> x y z<br/>    <span class=\"kw1\">set</span> len <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>sqrt<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> + <span class=\"re0\">$y</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> + <span class=\"re0\">$z</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> v <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span>/<span class=\"re0\">$len</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span>/<span class=\"re0\">$len</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$z</span>/<span class=\"re0\">$len</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">return</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> dot <span class=\"br0\">{</span>a b<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    lassign <span class=\"re0\">$a</span> ax ay az<br/>    lassign <span class=\"re0\">$b</span> bx by bz<br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>-<span class=\"br0\">(</span><span class=\"re0\">$ax</span><span class=\"sy0\">*</span><span class=\"re0\">$bx</span> + <span class=\"re0\">$ay</span><span class=\"sy0\">*</span><span class=\"re0\">$by</span> + <span class=\"re0\">$az</span><span class=\"sy0\">*</span><span class=\"re0\">$bz</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Intersection code; assumes that the vector is parallel to the Z-axis</span><br/><span class=\"kw1\">proc</span> hitSphere <span class=\"br0\">{</span>sphere x y z1 z2<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    dict with sphere <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> - <span class=\"re0\">$cx</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span> - <span class=\"re0\">$cy</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> zsq <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$r</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> - <span class=\"re0\">$x</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> - <span class=\"re0\">$y</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$zsq</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"re0\">$z1</span> _1 <span class=\"re0\">$z2</span> _2<br/>\t<span class=\"kw1\">set</span> zsq <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>sqrt<span class=\"br0\">(</span><span class=\"re0\">$zsq</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> _1 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cz</span> - <span class=\"re0\">$zsq</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> _2 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cz</span> + <span class=\"re0\">$zsq</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># How to do the intersection with our scene</span><br/><span class=\"kw1\">proc</span> intersectDeathStar <span class=\"br0\">{</span>x y vecName<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> big small<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span>hitSphere <span class=\"re0\">$big</span> <span class=\"re0\">$x</span> <span class=\"re0\">$y</span> zb1 zb2<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"co1\"># ray lands in blank space</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"re0\">$vecName</span> vec<br/>    <span class=\"co1\"># ray hits big sphere; check if it hit the small one first</span><br/>    <span class=\"kw1\">set</span> vec <span class=\"br0\">[</span><span class=\"kw1\">if</span> <span class=\"br0\">{</span><br/>\t<span class=\"sy0\">!</span><span class=\"br0\">[</span>hitSphere <span class=\"re0\">$small</span> <span class=\"re0\">$x</span> <span class=\"re0\">$y</span> zs1 zs2<span class=\"br0\">]</span> || <span class=\"re0\">$zs1</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$zb1</span> || <span class=\"re0\">$zs2</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$zb1</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>\tdict with big <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">list</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> - <span class=\"re0\">$cx</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span> - <span class=\"re0\">$cy</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$zb1</span> - <span class=\"re0\">$cz</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\tdict with small <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">list</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cx</span> - <span class=\"re0\">$x</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cy</span> - <span class=\"re0\">$y</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cz</span> - <span class=\"re0\">$zs2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    normalize vec<br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Intensity calculators for different lighting components</span><br/><span class=\"kw1\">proc</span> diffuse <span class=\"br0\">{</span>k intensity L N<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>dot <span class=\"re0\">$L</span> <span class=\"re0\">$N</span><span class=\"br0\">]</span> <span class=\"sy0\">**</span> <span class=\"re0\">$k</span> <span class=\"sy0\">*</span> <span class=\"re0\">$intensity</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">proc</span> specular <span class=\"br0\">{</span>k intensity L N S<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\"># Calculate reflection vector</span><br/>    <span class=\"kw1\">set</span> r <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"br0\">[</span>dot <span class=\"re0\">$L</span> <span class=\"re0\">$N</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">foreach</span> l <span class=\"re0\">$L</span> n <span class=\"re0\">$N</span> <span class=\"br0\">{</span><span class=\"kw2\">lappend</span> R <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$l</span>-<span class=\"re0\">$r</span><span class=\"sy0\">*</span><span class=\"re0\">$n</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    normalize R<br/>    <span class=\"co1\"># Calculate the specular reflection term</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>dot <span class=\"re0\">$R</span> <span class=\"re0\">$S</span><span class=\"br0\">]</span> <span class=\"sy0\">**</span> <span class=\"re0\">$k</span> <span class=\"sy0\">*</span> <span class=\"re0\">$intensity</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Simple raytracing engine that uses parallel rays</span><br/><span class=\"kw1\">proc</span> raytraceEngine <span class=\"br0\">{</span>diffparms specparms ambient intersector shades renderer fx tx sx fy ty sy<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> light<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> y <span class=\"re0\">$fy</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$ty</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span> + <span class=\"re0\">$sy</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> line <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> x <span class=\"re0\">$fx</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$tx</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> + <span class=\"re0\">$sx</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"re0\">$intersector</span> <span class=\"re0\">$x</span> <span class=\"re0\">$y</span> vec<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"co1\"># ray lands in blank space</span><br/>\t\t<span class=\"kw1\">set</span> intensity end<br/>\t    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"co1\"># ray hits something; we've got the normalized vector</span><br/>\t\t<span class=\"kw1\">set</span> b <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"br0\">[</span>diffuse <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$diffparms</span> <span class=\"re0\">$light</span> <span class=\"re0\">$vec</span><span class=\"br0\">]</span><br/>\t\t    + <span class=\"br0\">[</span>specular <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$specparms</span> <span class=\"re0\">$light</span> <span class=\"re0\">$vec</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span> -<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t    + <span class=\"re0\">$ambient</span><br/>\t\t<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">set</span> intensity <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>-<span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$shades</span><span class=\"br0\">]</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$intensity</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> intensity <span class=\"nu0\">0</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$intensity</span> <span class=\"sy0\">&gt;</span>= <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$shades</span><span class=\"br0\">]</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> intensity end-<span class=\"nu0\">1</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"kw2\">lappend</span> line <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$shades</span> <span class=\"re0\">$intensity</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$renderer</span> <span class=\"re0\">$line</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># The general scene settings</span><br/><span class=\"kw1\">set</span> light <span class=\"br0\">{</span>-<span class=\"nu0\">50</span> <span class=\"nu0\">30</span> <span class=\"nu0\">50</span><span class=\"br0\">}</span><br/><span class=\"kw1\">set</span> big   <span class=\"br0\">{</span>cx <span class=\"nu0\">20</span> cy <span class=\"nu0\">20</span> cz <span class=\"nu0\">0</span>   r <span class=\"nu0\">20</span><span class=\"br0\">}</span><br/><span class=\"kw1\">set</span> small <span class=\"br0\">{</span>cx <span class=\"nu0\">7</span>  cy <span class=\"nu0\">7</span>  cz -<span class=\"nu0\">10</span> r <span class=\"nu0\">15</span><span class=\"br0\">}</span><br/>normalize light<br/>\u00a0<br/><span class=\"co1\"># Render as text</span><br/><span class=\"kw1\">proc</span> textDeathStar <span class=\"br0\">{</span>diff spec lightBrightness ambient<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> big<br/>    dict with big <span class=\"br0\">{</span><br/>\traytraceEngine <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$diff</span> <span class=\"re0\">$lightBrightness</span><span class=\"br0\">]</span> \\<br/>\t    <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$spec</span> <span class=\"re0\">$lightBrightness</span><span class=\"br0\">]</span> <span class=\"re0\">$ambient</span> intersectDeathStar \\<br/>\t    <span class=\"br0\">[</span><span class=\"kw2\">split</span> <span class=\"st0\">\".:!*oe&amp;#%@ \"</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">{</span>apply <span class=\"br0\">{</span>l <span class=\"br0\">{</span><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">join</span> <span class=\"re0\">$l</span> <span class=\"st0\">\"\"</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">}</span> \\<br/>\t    <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cx</span>+floor<span class=\"br0\">(</span>-<span class=\"re0\">$r</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cx</span>+ceil<span class=\"br0\">(</span><span class=\"re0\">$r</span><span class=\"br0\">)</span>+<span class=\"nu0\">0.5</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">0.5</span> \\<br/>\t    <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cy</span>+floor<span class=\"br0\">(</span>-<span class=\"re0\">$r</span><span class=\"br0\">)</span>+<span class=\"nu0\">0.5</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$cy</span>+ceil<span class=\"br0\">(</span><span class=\"re0\">$r</span><span class=\"br0\">)</span>+<span class=\"nu0\">0.5</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>textDeathStar <span class=\"nu0\">3</span> <span class=\"nu0\">10</span> <span class=\"nu0\">0.7</span> <span class=\"nu0\">0.3</span></pre>"}, {"lang": "Yabasic", "loc": 156, "block": "<pre class=\"text highlighted_source\">open window 100,100<br/>window origin \"cc\"<br/>backcolor 0,0,0<br/>clear window<br/>\u00a0<br/>tonos = 100<br/>interv = int(255 / tonos)<br/>dim shades(tonos)<br/>\u00a0<br/>shades(1) = 255<br/>for i = 2 to tonos<br/>\tshades(i) = shades(i-1) - interv<br/>next i<br/>\u00a0<br/>dim light(3)<br/>\u00a0<br/>light(0) = 30<br/>light(1) = 30<br/>light(2) = -50<br/>\u00a0<br/>\u00a0<br/>sub normalize(v())<br/>    local long<br/>\u00a0<br/>    long = sqrt(v(0)*v(0) + v(1)*v(1) + v(2)*v(2))<br/>    v(0) = v(0) / long<br/>    v(1) = v(1) / long<br/>    v(2) = v(2) / long<br/>end sub<br/>\u00a0<br/>\u00a0<br/>sub punto(x(), y())<br/>    local d<br/>\u00a0<br/>    d = x(0)*y(0) + x(1)*y(1) + x(2)*y(2)<br/>    if d &lt; 0 then<br/>    \treturn -d<br/>    else<br/>    \treturn 0<br/>    end if<br/>end sub<br/>\u00a0<br/>\u00a0<br/>//* positive shpere and negative sphere */<br/>dim pos(3)<br/>dim neg(3)<br/>\u00a0<br/>// x, y, z, r<br/>\u00a0<br/>pos(0) = 10<br/>pos(1) = 10<br/>pos(2) = 0<br/>pos(3) = 20<br/>\u00a0<br/>neg(0) = 0<br/>neg(1) = 0<br/>neg(2) = -5<br/>neg(3) = 15<br/>\u00a0<br/>\u00a0<br/>sub hit_sphere(sph(), x, y)<br/>\tlocal zsq<br/>\u00a0<br/>\tx = x - sph(0)<br/>\ty = y - sph(1)<br/>\tzsq = sph(3) * sph(3) - (x * x + y * y)<br/>\tif (zsq &lt; 0) then<br/>\t\treturn 0<br/>\telse<br/>\t\treturn sqrt(zsq)<br/>\tend if<br/>end sub<br/>\u00a0<br/>\u00a0<br/>sub draw_sphere(k, ambient)<br/>    local i, j, intensity, hit_result, result, b, vec(3), x, y, zb1, zb2, zs1, zs2, ini1, fin1, ini2, fin2<br/>\u00a0<br/>    ini1 = int(pos(1) - pos(3))<br/>    fin1 = int(pos(1) + pos(3) + .5)<br/>    for i = ini1 to fin1<br/>        y = i + .5<br/>        ini2 = int(pos(0) - 2 * pos(3))<br/>        fin2 = int(pos(0) + 2 * pos(3) + .5)<br/>        for j = ini2 to fin2<br/>            x = (j - pos(0)) / 2 + .5 + pos(0)<br/>\u00a0<br/>            // ray lands in blank space, draw bg<br/>            result = hit_sphere(pos(), x, y)<br/>\u00a0<br/>            if not result then<br/>\t\thit_result = 0<br/>\u00a0<br/>\t\t//* ray hits pos sphere but not neg, draw pos sphere surface */<br/>\t    else<br/>\t\tzb1 = pos(2) - result<br/>\t\tzb2 = pos(2) + result<br/>\t\tresult = hit_sphere(neg(), x, y)<br/>\t\tif not result then<br/>\t\t    hit_result = 1<br/>\t\telse<br/>\t\t    zs1 = neg(2) - result<br/>\t\t    zs2 = neg(2) + result<br/>\t\t    if (zs1 &gt; zb1) then<br/>\t\t\thit_result = 1<br/>\t\t    elseif (zs2 &gt; zb2) then<br/>\t\t\thit_result = 0<br/>\t\t    elseif (zs2 &gt; zb1) then<br/>\t\t\thit_result = 2<br/>\t\t    else<br/>\t\t\thit_result = 1<br/>\t\t    end if<br/>\t\tend if<br/>\t    end if<br/>\u00a0<br/>  \t    if not hit_result then<br/>  \t        color 0,0,0<br/>  \t        dot x, y<br/>  \t    else<br/>\t        switch(hit_result)<br/>\t        case 1:<br/>\t\t    vec(0) = x - pos(0)<br/>\t\t    vec(1) = y - pos(1)<br/>\t\t    vec(2) = zb1 - pos(2)<br/>\t\t    break<br/>\t        default:<br/>\t\t    vec(0) = neg(0) - x<br/>\t\t    vec(1) = neg(1) - y<br/>\t\t    vec(2) = neg(2) - zs2<br/>\t        end switch<br/>\u00a0<br/>                normalize(vec())<br/>                b = (punto(light(), vec())^k) + ambient<br/>                intensity = (1 - b) * tonos<br/>                if (intensity &lt; 1) intensity = 1<br/>                if (intensity &gt; tonos) intensity = tonos<br/>                color shades(intensity),shades(intensity),shades(intensity)<br/>                dot x,y<br/>            end if<br/>        next j<br/>    next i<br/>end sub<br/>\u00a0<br/>\u00a0<br/>ang = 0<br/>\u00a0<br/>while(true)<br/>\t//clear window<br/>\tlight(1) = cos(ang * 2)<br/>\tlight(2) = cos(ang)<br/>\tlight(0) = sin(ang)<br/>\tnormalize(light())<br/>\tang = ang + .05<br/>\u00a0<br/>\tdraw_sphere(2, .3)<br/>wend<br/>\u00a0</pre>"}]}