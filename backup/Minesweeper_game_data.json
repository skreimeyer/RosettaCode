{"task": "Minesweeper_game", "blocks": [{"lang": "Ada", "loc": 368, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Minesweeper <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">package</span> IO <span class=\"kw3\">renames</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>   <span class=\"kw3\">package</span> Nat_IO <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> IO.<span class=\"me1\">Integer_IO</span> <span class=\"br0\">(</span>Natural<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">package</span> Nat_RNG <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span> <span class=\"br0\">(</span>Natural<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Stuff <span class=\"kw1\">is</span> <span class=\"br0\">(</span>Empty, Mine<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">type</span> Field <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      Contents\u00a0: Stuff  \u00a0:= Empty;<br/>      Opened  \u00a0: Boolean\u00a0:= False;<br/>      Marked  \u00a0: Boolean\u00a0:= False;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/>   <span class=\"kw3\">type</span> Grid <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;, Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Field;<br/>\u00a0<br/>   <span class=\"co1\">-- counts how many mines are in the surrounding fields</span><br/>   <span class=\"kw3\">function</span> Mines_Nearby <span class=\"br0\">(</span>Item\u00a0: Grid; X, Y\u00a0: Positive<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Natural <span class=\"kw1\">is</span><br/>      Result\u00a0: Natural\u00a0:= <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"co1\">-- left of X:Y</span><br/>      <span class=\"kw1\">if</span> X &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"co1\">-- above X-1:Y</span><br/>         <span class=\"kw1\">if</span> Y &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X - <span class=\"nu0\">1</span>, Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>               Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"co1\">-- X-1:Y</span><br/>         <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X - <span class=\"nu0\">1</span>, Y<span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>            Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"co1\">-- below X-1:Y</span><br/>         <span class=\"kw1\">if</span> Y &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X - <span class=\"nu0\">1</span>, Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>               Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"co1\">-- above of X:Y</span><br/>      <span class=\"kw1\">if</span> Y &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>            Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"co1\">-- below of X:Y</span><br/>      <span class=\"kw1\">if</span> Y &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>            Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"co1\">-- right of X:Y</span><br/>      <span class=\"kw1\">if</span> X &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"co1\">-- above X+1:Y</span><br/>         <span class=\"kw1\">if</span> Y &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X + <span class=\"nu0\">1</span>, Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>               Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"co1\">-- X+1:Y</span><br/>         <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X + <span class=\"nu0\">1</span>, Y<span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>            Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"co1\">-- below X+1:Y</span><br/>         <span class=\"kw1\">if</span> Y &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X + <span class=\"nu0\">1</span>, Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine <span class=\"kw1\">then</span><br/>               Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">return</span> Result;<br/>   <span class=\"kw1\">end</span> Mines_Nearby;<br/>\u00a0<br/>   <span class=\"co1\">-- outputs the grid</span><br/>   <span class=\"kw3\">procedure</span> Put <span class=\"br0\">(</span>Item\u00a0: Grid<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>      Mines\u00a0: Natural\u00a0:= <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">begin</span><br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"   \"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> X <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         Nat_IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>Item =&gt; X, Width =&gt; <span class=\"nu0\">3</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      IO.<span class=\"me1\">New_Line</span>;<br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"   +\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> X <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"---\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>'+'<span class=\"br0\">)</span>;<br/>      IO.<span class=\"me1\">New_Line</span>;<br/>      <span class=\"kw1\">for</span> Y <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         Nat_IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>Item =&gt; Y, Width =&gt; <span class=\"nu0\">3</span><span class=\"br0\">)</span>;<br/>         IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>'|'<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">for</span> X <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>            <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw1\">then</span><br/>               <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Empty <span class=\"kw1\">then</span><br/>                  <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span> <span class=\"kw1\">then</span><br/>                     IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\" - \"</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">else</span><br/>                     Mines\u00a0:= Mines_Nearby <span class=\"br0\">(</span>Item, X, Y<span class=\"br0\">)</span>;<br/>                     <span class=\"kw1\">if</span> Mines &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>                        Nat_IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>Item =&gt; Mines, Width =&gt; <span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>                        IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>' '<span class=\"br0\">)</span>;<br/>                     <span class=\"kw1\">else</span><br/>                        IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"   \"</span><span class=\"br0\">)</span>;<br/>                     <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">else</span><br/>                  <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span> <span class=\"kw1\">then</span><br/>                     IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\" + \"</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">else</span><br/>                     IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\" X \"</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">elsif</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span> <span class=\"kw1\">then</span><br/>               IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"\u00a0? \"</span><span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">else</span><br/>               IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\" . \"</span><span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>'|'<span class=\"br0\">)</span>;<br/>         IO.<span class=\"me1\">New_Line</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"   +\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> X <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"---\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>'+'<span class=\"br0\">)</span>;<br/>      IO.<span class=\"me1\">New_Line</span>;<br/>   <span class=\"kw1\">end</span> Put;<br/>\u00a0<br/>   <span class=\"co1\">-- marks a field as possible bomb</span><br/>   <span class=\"kw3\">procedure</span> Mark <span class=\"br0\">(</span>Item\u00a0: <span class=\"kw3\">in</span> <span class=\"kw3\">out</span> Grid; X, Y\u00a0: <span class=\"kw3\">in</span> Positive<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw1\">then</span><br/>         IO.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Field already open!\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">else</span><br/>         Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span>\u00a0:= <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> Mark;<br/>\u00a0<br/>   <span class=\"co1\">-- clears a field and it's neighbours, if they don't have mines</span><br/>   <span class=\"kw3\">procedure</span> Clear<br/>     <span class=\"br0\">(</span>Item  \u00a0: <span class=\"kw3\">in</span> <span class=\"kw3\">out</span> Grid;<br/>      X, Y  \u00a0: <span class=\"kw3\">in</span> Positive;<br/>      Killed\u00a0: <span class=\"kw3\">out</span> Boolean<span class=\"br0\">)</span><br/>   <span class=\"kw1\">is</span><br/>      <span class=\"co1\">-- clears the neighbours, if they don't have mines</span><br/>      <span class=\"kw3\">procedure</span> Clear_Neighbours <span class=\"br0\">(</span>The_X, The_Y\u00a0: Positive<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"co1\">-- mark current field opened</span><br/>         Item <span class=\"br0\">(</span>The_X, The_Y<span class=\"br0\">)</span>.<span class=\"me1\">Opened</span>\u00a0:= True;<br/>         <span class=\"co1\">-- only proceed if neighbours don't have mines</span><br/>         <span class=\"kw1\">if</span> Mines_Nearby <span class=\"br0\">(</span>Item, The_X, The_Y<span class=\"br0\">)</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            <span class=\"co1\">-- left of X:Y</span><br/>            <span class=\"kw1\">if</span> The_X &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               <span class=\"co1\">-- above X-1:Y</span><br/>               <span class=\"kw1\">if</span> The_Y &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                  <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                     <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>                  <span class=\"kw1\">then</span><br/>                     Clear_Neighbours <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"co1\">-- X-1:Y</span><br/>               <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y<span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                  <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>               <span class=\"kw1\">then</span><br/>                  Clear_Neighbours <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y<span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"co1\">-- below X-1:Y</span><br/>               <span class=\"kw1\">if</span> The_Y &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                  <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                     <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>                  <span class=\"kw1\">then</span><br/>                     Clear_Neighbours <span class=\"br0\">(</span>The_X - <span class=\"nu0\">1</span>, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"co1\">-- above X:Y</span><br/>            <span class=\"kw1\">if</span> The_Y &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                  <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>               <span class=\"kw1\">then</span><br/>                  Clear_Neighbours <span class=\"br0\">(</span>The_X, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"co1\">-- below X:Y</span><br/>            <span class=\"kw1\">if</span> The_Y &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                  <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>               <span class=\"kw1\">then</span><br/>                  Clear_Neighbours <span class=\"br0\">(</span>The_X, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"co1\">-- right of X:Y</span><br/>            <span class=\"kw1\">if</span> The_X &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               <span class=\"co1\">-- above X+1:Y</span><br/>               <span class=\"kw1\">if</span> The_Y &gt; Item'First <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                  <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                     <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>                  <span class=\"kw1\">then</span><br/>                     Clear_Neighbours <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y - <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"co1\">-- X+1:Y</span><br/>               <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y<span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                  <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>               <span class=\"kw1\">then</span><br/>                  Clear_Neighbours <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y<span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"co1\">-- below X+1:Y</span><br/>               <span class=\"kw1\">if</span> The_Y &lt; Item'Last <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                  <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw2\">and</span><br/>                     <span class=\"kw2\">not</span> Item <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">Marked</span><br/>                  <span class=\"kw1\">then</span><br/>                     Clear_Neighbours <span class=\"br0\">(</span>The_X + <span class=\"nu0\">1</span>, The_Y + <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> Clear_Neighbours;<br/>   <span class=\"kw1\">begin</span><br/>      Killed\u00a0:= False;<br/>      <span class=\"co1\">-- only clear closed and unmarked fields</span><br/>      <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Opened</span> <span class=\"kw1\">then</span><br/>         IO.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Field already open!\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">elsif</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span> <span class=\"kw1\">then</span><br/>         IO.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Field already marked!\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">else</span><br/>         Killed\u00a0:= Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Mine;<br/>         <span class=\"co1\">-- game over if killed, no need to clear</span><br/>         <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> Killed <span class=\"kw1\">then</span><br/>            Clear_Neighbours <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> Clear;<br/>\u00a0<br/>   <span class=\"co1\">-- marks all fields as open</span><br/>   <span class=\"kw3\">procedure</span> Open_All <span class=\"br0\">(</span>Item\u00a0: <span class=\"kw3\">in</span> <span class=\"kw3\">out</span> Grid<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> X <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">for</span> Y <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>            Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Opened</span>\u00a0:= True;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">end</span> Open_All;<br/>\u00a0<br/>   <span class=\"co1\">-- counts the number of marks</span><br/>   <span class=\"kw3\">function</span> Count_Marks <span class=\"br0\">(</span>Item\u00a0: Grid<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Natural <span class=\"kw1\">is</span><br/>      Result\u00a0: Natural\u00a0:= <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> X <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">for</span> Y <span class=\"kw3\">in</span> Item'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>            <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Marked</span> <span class=\"kw1\">then</span><br/>               Result\u00a0:= Result + <span class=\"nu0\">1</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Result;<br/>   <span class=\"kw1\">end</span> Count_Marks;<br/>\u00a0<br/>   <span class=\"co1\">-- read and validate user input</span><br/>   <span class=\"kw3\">procedure</span> Get_Coordinates<br/>     <span class=\"br0\">(</span>Max_X, Max_Y\u00a0: Positive;<br/>      X, Y        \u00a0: <span class=\"kw3\">out</span> Positive;<br/>      Valid       \u00a0: <span class=\"kw3\">out</span> Boolean<span class=\"br0\">)</span><br/>   <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      Valid\u00a0:= False;<br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"X: \"</span><span class=\"br0\">)</span>;<br/>      Nat_IO.<span class=\"me1\">Get</span> <span class=\"br0\">(</span>X<span class=\"br0\">)</span>;<br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"Y: \"</span><span class=\"br0\">)</span>;<br/>      Nat_IO.<span class=\"me1\">Get</span> <span class=\"br0\">(</span>Y<span class=\"br0\">)</span>;<br/>      Valid\u00a0:= X &gt; <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> X &lt;= Max_X <span class=\"kw2\">and</span> Y &gt; <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> Y &lt;= Max_Y;<br/>   <span class=\"kw1\">exception</span><br/>      <span class=\"kw3\">when</span> Constraint_Error =&gt;<br/>         Valid\u00a0:= False;<br/>   <span class=\"kw1\">end</span> Get_Coordinates;<br/>\u00a0<br/>   <span class=\"co1\">-- randomly place bombs</span><br/>   <span class=\"kw3\">procedure</span> Set_Bombs <span class=\"br0\">(</span>Item\u00a0: <span class=\"kw3\">in</span> <span class=\"kw3\">out</span> Grid; Max_X, Max_Y, Count\u00a0: Positive<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>      Generator\u00a0: Nat_RNG.<span class=\"me1\">Generator</span>;<br/>      X, Y     \u00a0: Positive;<br/>   <span class=\"kw1\">begin</span><br/>      Nat_RNG.<span class=\"me1\">Reset</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">Count</span> <span class=\"kw1\">loop</span><br/>         Placement\u00a0: <span class=\"kw1\">loop</span><br/>            X\u00a0:= Nat_RNG.<span class=\"me1\">Random</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span> <span class=\"kw2\">mod</span> Max_X + <span class=\"nu0\">1</span>;<br/>            Y\u00a0:= Nat_RNG.<span class=\"me1\">Random</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span> <span class=\"kw2\">mod</span> Max_Y + <span class=\"nu0\">1</span>;<br/>            <span class=\"co1\">-- redo placement if X:Y already full</span><br/>            <span class=\"kw1\">if</span> Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Contents</span> = Empty <span class=\"kw1\">then</span><br/>               Item <span class=\"br0\">(</span>X, Y<span class=\"br0\">)</span>.<span class=\"me1\">Contents</span>\u00a0:= Mine;<br/>               <span class=\"kw3\">exit</span> Placement;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span> Placement;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">end</span> Set_Bombs;<br/>\u00a0<br/>   Width, Height\u00a0: Positive;<br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>   <span class=\"co1\">-- can be dynamically set</span><br/>   Width \u00a0:= <span class=\"nu0\">6</span>;<br/>   Height\u00a0:= <span class=\"nu0\">4</span>;<br/>   <span class=\"kw1\">declare</span><br/>      The_Grid\u00a0: Grid <span class=\"br0\">(</span><span class=\"nu0\">1</span> .. <span class=\"me1\">Width</span>, <span class=\"nu0\">1</span> .. <span class=\"me1\">Height</span><span class=\"br0\">)</span>;<br/>      <span class=\"co1\">-- 20% bombs</span><br/>      Bomb_Count        \u00a0: Positive\u00a0:= Width * Height * <span class=\"nu0\">20</span> / <span class=\"nu0\">100</span>;<br/>      Finished          \u00a0: Boolean \u00a0:= False;<br/>      Action            \u00a0: Character;<br/>      Chosen_X, Chosen_Y\u00a0: Positive;<br/>      Valid_Entry       \u00a0: Boolean;<br/>   <span class=\"kw1\">begin</span><br/>      IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"Nr. Bombs: \"</span><span class=\"br0\">)</span>;<br/>      Nat_IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>Item =&gt; Bomb_Count, Width =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>      IO.<span class=\"me1\">New_Line</span>;<br/>      Set_Bombs<br/>        <span class=\"br0\">(</span>Item  =&gt; The_Grid,<br/>         Max_X =&gt; Width,<br/>         Max_Y =&gt; Height,<br/>         Count =&gt; Bomb_Count<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">while</span> <span class=\"kw2\">not</span> Finished <span class=\"kw2\">and</span> Count_Marks <span class=\"br0\">(</span>The_Grid<span class=\"br0\">)</span> /= Bomb_Count <span class=\"kw1\">loop</span><br/>         Put <span class=\"br0\">(</span>The_Grid<span class=\"br0\">)</span>;<br/>         IO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span><span class=\"st0\">\"Input (c/m/r): \"</span><span class=\"br0\">)</span>;<br/>         IO.<span class=\"me1\">Get</span> <span class=\"br0\">(</span>Action<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">case</span> Action <span class=\"kw1\">is</span><br/>            <span class=\"kw3\">when</span> 'c' | 'C' =&gt;<br/>               Get_Coordinates<br/>                 <span class=\"br0\">(</span>Max_X =&gt; Width,<br/>                  Max_Y =&gt; Height,<br/>                  X     =&gt; Chosen_X,<br/>                  Y     =&gt; Chosen_Y,<br/>                  Valid =&gt; Valid_Entry<span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">if</span> Valid_Entry <span class=\"kw1\">then</span><br/>                  Clear<br/>                    <span class=\"br0\">(</span>Item   =&gt; The_Grid,<br/>                     X      =&gt; Chosen_X,<br/>                     Y      =&gt; Chosen_Y,<br/>                     Killed =&gt; Finished<span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">if</span> Finished <span class=\"kw1\">then</span><br/>                     IO.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"You stepped on a mine!\"</span><span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">else</span><br/>                  IO.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Invalid input, retry!\"</span><span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw3\">when</span> 'm' | 'M' =&gt;<br/>               Get_Coordinates<br/>                 <span class=\"br0\">(</span>Max_X =&gt; Width,<br/>                  Max_Y =&gt; Height,<br/>                  X     =&gt; Chosen_X,<br/>                  Y     =&gt; Chosen_Y,<br/>                  Valid =&gt; Valid_Entry<span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">if</span> Valid_Entry <span class=\"kw1\">then</span><br/>                  Mark <span class=\"br0\">(</span>Item =&gt; The_Grid, X =&gt; Chosen_X, Y =&gt; Chosen_Y<span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">else</span><br/>                  IO.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Invalid input, retry!\"</span><span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw3\">when</span> 'r' | 'R' =&gt;<br/>               Finished\u00a0:= True;<br/>            <span class=\"kw3\">when</span> <span class=\"kw3\">others</span> =&gt;<br/>               IO.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Invalid input, retry!\"</span><span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">case</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      Open_All <span class=\"br0\">(</span>The_Grid<span class=\"br0\">)</span>;<br/>      IO.<span class=\"me1\">Put_Line</span><br/>        <span class=\"br0\">(</span><span class=\"st0\">\"Solution: (+ = correctly marked, - = incorrectly marked)\"</span><span class=\"br0\">)</span>;<br/>      Put <span class=\"br0\">(</span>The_Grid<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span>;<br/><span class=\"kw1\">end</span> Minesweeper;</pre>"}, {"lang": "AutoHotkey", "loc": 556, "block": "<pre class=\"autohotkey highlighted_source\"><span class=\"co1\">; Minesweeper.ahk - v1.0.6</span><br/><span class=\"co1\">; (c) Dec 28, 2008 by derRaphael</span><br/><span class=\"co1\">; Licensed under the Terms of EUPL 1.0</span><br/><span class=\"co1\">; Modded by Sobriquet and re-licenced as CeCILL v2</span><br/><span class=\"co1\">; Modded (again) by Sobriquet and re-licenced as GPL v1.3</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/_NoEnv.htm\"><span class=\"kw5\">#NoEnv</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/_NoTrayIcon.htm\"><span class=\"kw5\">#NoTrayIcon</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/SetBatchLines.htm\"><span class=\"kw3\">SetBatchLines</span></a><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><br/><a href=\"http://www.autohotkey.com/docs/commands/_SingleInstance.htm\"><span class=\"kw5\">#SingleInstance</span></a><span class=\"sy0\">,</span>Off<br/><span class=\"coMULTI\">/*<br/>[InGameSettings]<br/>*/</span><br/>Level\t<span class=\"sy0\">=</span>Beginner<br/>Width\t<span class=\"sy0\">=</span><span class=\"nu0\">9</span><br/>Height\t<span class=\"sy0\">=</span><span class=\"nu0\">9</span><br/>MineMax\t<span class=\"sy0\">=</span><span class=\"nu0\">10</span><br/>Marks\t<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">Color</span></a>\t<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>Sound\t<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>BestTimeBeginner\t<span class=\"sy0\">=</span><span class=\"nu0\">999</span> seconds\tAnonymous<br/>BestTimeIntermediate<span class=\"sy0\">=</span><span class=\"nu0\">999</span> seconds\tAnonymous<br/>BestTimeExpert\t\t<span class=\"sy0\">=</span><span class=\"nu0\">999</span> seconds\tAnonymous<br/><span class=\"co1\">; above settings are accessed as variables AND modified by IniWrite - be careful</span><br/>BlockSize\t<span class=\"sy0\">=</span><span class=\"nu0\">16</span><br/>Title\t\t<span class=\"sy0\">=</span>Minesweeper<br/>MineCount\t<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>mColor\t\t<span class=\"sy0\">=</span>Blue<span class=\"sy0\">,</span>Green<span class=\"sy0\">,</span>Red<span class=\"sy0\">,</span>Purple<span class=\"sy0\">,</span>Navy<span class=\"sy0\">,</span>Olive<span class=\"sy0\">,</span>Maroon<span class=\"sy0\">,</span>Teal<br/>GameOver\t<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>TimePassed\t<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co1\">; Add mines randomly</span><br/><span class=\"kw1\">While</span> <span class=\"br0\">(</span>MineCount<span class=\"sy0\">&lt;</span>MineMax<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; loop as long as neccessary</span><br/><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span>x<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"re0\">%Width%</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; get random horizontal position</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span>y<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"re0\">%Height%</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; get random vertical position</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>!<span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; only if not already a mine</span><br/>\t\tT_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">:=</span><span class=\"st0\">\"M\"</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; assign as mine</span><br/>\t\t<span class=\"sy0\">,</span>MineCount<span class=\"sy0\">++</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; keep count</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <span class=\"sy0\">+</span>OwnDialogs<br/><span class=\"co1\">;Menu,Tray,Icon,C:\\WINDOWS\\system32\\winmine.exe,1</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>New\t<span class=\"kw6\">F2</span><span class=\"sy0\">,</span>NewGame<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Beginner<span class=\"sy0\">,</span>LevelMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Intermediate<span class=\"sy0\">,</span>LevelMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Expert<span class=\"sy0\">,</span>LevelMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Custom<span class=\"sy0\">...,</span>CustomMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Marks <span class=\"br0\">(</span>?<span class=\"br0\">)</span><span class=\"sy0\">,</span>ToggleMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span>Co<span class=\"sy0\">&amp;</span>lor<span class=\"sy0\">,</span>ToggleMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Sound<span class=\"sy0\">,</span>ToggleMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span>Best <span class=\"sy0\">&amp;</span>Times<span class=\"sy0\">...,</span>BestTimesMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span>E<span class=\"sy0\">&amp;</span>xit<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span>Check<span class=\"sy0\">,</span>% <span class=\"st0\">\"&amp;\"</span> level <span class=\"sy0\">.</span> <span class=\"br0\">(</span>level<span class=\"sy0\">=</span><span class=\"st0\">\"Custom\"</span>\u00a0? <span class=\"st0\">\"...\"</span>\u00a0: <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">If</span> <span class=\"br0\">(</span>Marks<span class=\"br0\">)</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span>Check<span class=\"sy0\">,&amp;</span>Marks <span class=\"br0\">(</span>?<span class=\"br0\">)</span><br/><span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">Color</span></a><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span>Check<span class=\"sy0\">,</span>Co<span class=\"sy0\">&amp;</span>lor<br/><span class=\"kw1\">If</span> <span class=\"br0\">(</span>Sound<span class=\"br0\">)</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span>Check<span class=\"sy0\">,&amp;</span>Sound<br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>HelpMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Contents\t<span class=\"kw6\">F1</span><span class=\"sy0\">,</span>HelpMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>HelpMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Search for Help on<span class=\"sy0\">...,</span>HelpMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>HelpMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span>Using <span class=\"sy0\">&amp;</span>Help<span class=\"sy0\">,</span>HelpMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>HelpMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>HelpMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>About Minesweeper<span class=\"sy0\">...,</span>AboutMenu<br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>MainMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Game<span class=\"sy0\">,</span>:GameMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>MainMenu<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,&amp;</span>Help<span class=\"sy0\">,</span>:HelpMenu<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>MainMenu<br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><span class=\"sy0\">,</span>s22<span class=\"sy0\">,</span>WingDings<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span>% <span class=\"st0\">\"h31 w31 y13 gNewGame vNewGame x\"</span> Width<span class=\"sy0\">*</span>BlockSize<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span>K\t<span class=\"co1\">; J=Smiley / K=Line / L=Frowny / m=Circle</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><span class=\"sy0\">,</span>s16 Bold<span class=\"sy0\">,</span>Arial<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>% <span class=\"st0\">\"x13 y14 w45 Border Center vMineCount c\"</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">color</span></a>\u00a0? <span class=\"st0\">\"Red\"</span>\u00a0: <span class=\"st0\">\"White\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>% <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"00\"</span> MineCount<span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\t<span class=\"co1\">; Remaining mine count</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>% <span class=\"st0\">\"x\"</span> Width<span class=\"sy0\">*</span>BlockSize<span class=\"sy0\">-</span><span class=\"nu0\">34</span> <span class=\"st0\">\" y14 w45 Border Center vTimer c\"</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">color</span></a>\u00a0? <span class=\"st0\">\"Red\"</span>\u00a0: <span class=\"st0\">\"White\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>000\t\t\t<span class=\"co1\">; Timer</span><br/>\u00a0<br/><span class=\"co1\">; Buttons</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><span class=\"sy0\">,</span>s11<span class=\"sy0\">,</span>WingDings<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Height\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; iterate vertically</span><br/><span class=\"br0\">{</span><br/>\ty<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a>\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; remember line</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Width\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; set covers</span><br/>\t<span class=\"br0\">{</span><br/>\t\tx<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span>% <span class=\"st0\">\"vB_x\"</span> x <span class=\"st0\">\"y\"</span> y\t<span class=\"st0\">\" w\"</span> BlockSize \t\t\t<span class=\"co1\">; mark variable / width</span><br/>\t\t\t\t\t\t<span class=\"sy0\">.</span> <span class=\"st0\">\" h\"</span> BlockSize <span class=\"st0\">\" \"</span> <span class=\"br0\">(</span>x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\t\t\t\t<span class=\"co1\">; height / if 1st block</span><br/>\t\t\t\t\t\t\t? <span class=\"st0\">\"x\"</span> <span class=\"nu0\">12</span> <span class=\"st0\">\" y\"</span> y<span class=\"sy0\">*</span>BlockSize<span class=\"sy0\">+</span><span class=\"nu0\">39</span>\t\t<span class=\"co1\">; fix vertical offset</span><br/>\t\t\t\t\t\t\t: <span class=\"st0\">\"yp x+0\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t<span class=\"co1\">; otherwise stay inline /w prev. box</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">; Show Gui</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>% <span class=\"st0\">\"w\"</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>Width<span class=\"sy0\">&gt;</span><span class=\"nu0\">9</span>\u00a0? Width\u00a0: <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>BlockSize<span class=\"sy0\">+</span><span class=\"nu0\">24</span> <span class=\"st0\">\" h\"</span> Height<span class=\"sy0\">*</span>BlockSize<span class=\"sy0\">+</span><span class=\"nu0\">68</span><span class=\"sy0\">,</span><span class=\"re0\">%Title%</span><br/><a href=\"http://www.autohotkey.com/docs/commands/OnMessage.htm\"><span class=\"kw3\">OnMessage</span></a><span class=\"br0\">(</span>0x53<span class=\"sy0\">,</span><span class=\"st0\">\"WM_HELP\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; invoke Help handling for tooltips</span><br/><span class=\"kw1\">Return</span> <span class=\"co1\">;--------------------------------------------------------; End of auto-execute section</span><br/><a href=\"http://www.autohotkey.com/docs/commands/_IfWinActive.htm\"><span class=\"kw5\">#IfWinActive</span></a> Minesweeper ahk_class AutoHotkeyGUI \t\t\t\t<span class=\"co1\">; variable\u00a0%title% not supported</span><br/>\u00a0<br/>StartGame<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tGlobal<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>TimePassed<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; we'll save you this time</span><br/>\t<span class=\"br0\">{</span><br/>\t\tT_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">:=</span><span class=\"st0\">\"\"</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; remove this mine</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Height<br/>\t\t<span class=\"br0\">{</span><br/>\t\t\ty<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Width<br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tx<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span> T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>!<span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t<span class=\"co1\">; add it to first available non-mine square</span><br/>\t\t\t\t\tT_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">:=</span><span class=\"st0\">\"M\"</span><br/>\t\t\t\t\t<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">break</span></a><span class=\"sy0\">:=</span><span class=\"nu0\">1</span><br/>\t\t\tIfEqual<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">break</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">Break</span></a><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\tIfEqual<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">break</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">Break</span></a><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Height\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; iterate over height</span><br/>\t<span class=\"br0\">{</span><br/>\t\ty<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Width\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; iterate over width</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\tx<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><br/>\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t<span class=\"co1\">; check for mine</span><br/>\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><span class=\"sy0\">,</span>s11<span class=\"sy0\">,</span>WingDings<br/>\t\t\t\thColor<span class=\"sy0\">:=</span><span class=\"st0\">\"Black\"</span>\t\t\t\t\t\t\t\t<span class=\"co1\">; set color for text</span><br/>\t\t\t<span class=\"br0\">}</span> <span class=\"kw1\">Else</span> <span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; loop over neighbors: three columns vertically</span><br/>\t\t\t\t\tty<span class=\"sy0\">:=</span>y<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a>\t\t\t\t\t\t\t<span class=\"co1\">; calculate top offset</span><br/>\t\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; and three horizontally</span><br/>\t\t\t\t\t\ttx<span class=\"sy0\">:=</span>x<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a>\t\t\t\t\t\t<span class=\"co1\">; calculate left offset</span><br/>\t\t\t\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%tx%</span>y<span class=\"re0\">%ty%</span><span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span>\t\t\t\t\t<span class=\"co1\">; no mine and inbound</span><br/>\t\t\t\t\t\t\tT_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">++</span>\t\t\t\t\t\t<span class=\"co1\">; update hint txt</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><span class=\"sy0\">,</span>s11 Bold<span class=\"sy0\">,</span>Courier New Bold<br/>\t\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">Color</span></a><span class=\"br0\">)</span><br/>\t\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>Parse<span class=\"sy0\">,</span>mColor<span class=\"sy0\">,</span>`<span class=\"sy0\">,</span>\t\t\t\t\t\t<span class=\"co1\">; find color</span><br/>\t\t\t\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span> <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span>\t\t\t\t<span class=\"co1\">; hinttxt to color</span><br/>\t\t\t\t\t\t\thColor<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a>\t\t\t\t<span class=\"co1\">; set color for text</span><br/>\t\t\t\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">Break</span></a><br/>\t\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"kw1\">Else</span> hColor<span class=\"sy0\">:=</span><span class=\"st0\">\"Black\"</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>% <span class=\"st0\">\"c\"</span> hColor <span class=\"st0\">\" Border +Center vT_x\"</span> x <span class=\"st0\">\"y\"</span> y\t<span class=\"co1\">; set color / variable</span><br/>\t\t\t\t\t\t\t<span class=\"sy0\">.</span> <span class=\"st0\">\" w\"</span> BlockSize <span class=\"st0\">\" h\"</span> BlockSize <span class=\"st0\">\" \"</span>\t<span class=\"br0\">(</span>x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\t<span class=\"co1\">; width / height / if 1st block</span><br/>\t\t\t\t\t\t\t\t? <span class=\"st0\">\"x\"</span> <span class=\"nu0\">12</span> <span class=\"st0\">\" y\"</span> y<span class=\"sy0\">*</span>BlockSize<span class=\"sy0\">+</span><span class=\"nu0\">39</span>\t\t\t<span class=\"co1\">; fix vertical position</span><br/>\t\t\t\t\t\t\t\t: <span class=\"st0\">\"yp x+0\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t<span class=\"co1\">; otherwise align to previous box</span><br/>\t\t\t\t\t\t\t<span class=\"sy0\">,</span>% T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>\t\t\t\t\t\t\t\t<span class=\"co1\">; M is WingDings for mine</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span>Hide<span class=\"sy0\">,</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>\t<br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>Timer<span class=\"sy0\">,</span>% <span class=\"st0\">\"00\"</span> <span class=\"sy0\">.</span> TimePassed<span class=\"sy0\">:=</span><span class=\"nu0\">1</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/SetTimer.htm\"><span class=\"kw3\">SetTimer</span></a><span class=\"sy0\">,</span>UpdateTimer<span class=\"sy0\">,</span><span class=\"nu0\">1000</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; start timer</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>Sound<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/SoundPlay.htm\"><span class=\"kw3\">SoundPlay</span></a><span class=\"sy0\">,</span>C:\\WINDOWS\\media\\chord<span class=\"sy0\">.</span>wav<br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiSize\"><span class=\"kw7\">GuiSize</span></a>:<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>TimePassed<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/SetTimer.htm\"><span class=\"kw3\">SetTimer</span></a><span class=\"sy0\">,</span>UpdateTimer<span class=\"sy0\">,</span>On \t\t\t\t\t\t\t\t\t<span class=\"co1\">; for cheat below</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">UpdateTimer:\t</span>\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; timer</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>Timer<span class=\"sy0\">,</span>% <span class=\"br0\">(</span><span class=\"sy0\">++</span>TimePassed <span class=\"sy0\">&lt;</span> <span class=\"nu0\">999</span><span class=\"br0\">)</span>\u00a0? <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"00\"</span> TimePassed<span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\u00a0: <span class=\"nu0\">999</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>Sound<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/SoundPlay.htm\"><span class=\"kw3\">SoundPlay</span></a><span class=\"sy0\">,</span>C:\\WINDOWS\\media\\chord<span class=\"sy0\">.</span>wav<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>Check<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\tGlobal<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>GameOver || B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>\u00a0!<span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span>\t\t\t\t\t\t<span class=\"co1\">; the game is over / prevent click on flagged squares and already-opened squares</span><br/>\t\t|| x<span class=\"sy0\">&lt;</span><span class=\"nu0\">1</span> || x<span class=\"sy0\">&gt;</span>Width || y<span class=\"sy0\">&lt;</span><span class=\"nu0\">1</span> || y<span class=\"sy0\">&gt;</span>Height<span class=\"br0\">)</span>\t\t\t\t<span class=\"co1\">; do not check neighbor on illegal squares</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; empty field?</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; uncover it and any neighbours</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>\u00a0!<span class=\"sy0\">=</span> <span class=\"st0\">\"M\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t<span class=\"co1\">; no Mine, ok?</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span>Hide<span class=\"sy0\">,</span>B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>\t\t\t\t\t\t\t<span class=\"co1\">; hide covering button</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><br/>\t\tB_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">:=</span><span class=\"nu0\">1</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; remember we been here</span><br/>\t\tUpdateChecks<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">Else</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; ewww ... it's a mine!</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/SetTimer.htm\"><span class=\"kw3\">SetTimer</span></a><span class=\"sy0\">,</span>UpdateTimer<span class=\"sy0\">,</span>Off\t\t\t\t\t\t\t<span class=\"co1\">; kill timer</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">,</span>N\t\t\t\t\t\t\t<span class=\"co1\">; set to Jolly Roger=N to mark death location</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>NewGame<span class=\"sy0\">,</span>L\t\t\t\t\t\t\t\t<span class=\"co1\">; set Smiley Btn to Frown=L</span><br/>\t\tRevealAll<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>Sound<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; do we sound?</span><br/>\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">FileExist</span></a><span class=\"br0\">(</span><span class=\"st0\">\"C:\\Program Files\\Microsoft Office\\Office12\\MEDIA\\Explode.wav\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/SoundPlay.htm\"><span class=\"kw3\">SoundPlay</span></a><span class=\"sy0\">,</span>C:\\Program Files\\Microsoft Office\\Office12\\MEDIA\\Explode<span class=\"sy0\">.</span>wav<br/>\t\t\t<span class=\"kw1\">Else</span><br/>\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/SoundPlay.htm\"><span class=\"kw3\">SoundPlay</span></a><span class=\"sy0\">,</span>C:\\WINDOWS\\Media\\notify<span class=\"sy0\">.</span>wav<br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>CheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t<span class=\"co1\">; This function checks neighbours of the clicked</span><br/>\tGlobal\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; field and uncovers empty fields plus adjacent hint fields</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>GameOver || B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>!<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span>Hide<span class=\"sy0\">,</span>B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>\t\t\t\t\t\t<span class=\"co1\">; uncover it</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><br/>\tB_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">:=</span><span class=\"nu0\">1</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; remember it</span><br/>\tUpdateChecks<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>!<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t<span class=\"co1\">; is neighbour an nonchecked 0 value field?</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; check upper neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;=</span>Height<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t<span class=\"co1\">; check lower neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; check left neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>y<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;=</span>Width<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; check right neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>y<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t<span class=\"co1\">; check corner neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;=</span>Height<span class=\"br0\">)</span>\t\t\t\t\t\t<span class=\"co1\">; check corner neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;=</span>Width <span class=\"sy0\">&amp;&amp;</span> y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\t\t\t\t\t\t<span class=\"co1\">; check corner neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;=</span>Width <span class=\"sy0\">&amp;&amp;</span> y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;=</span>Height<span class=\"br0\">)</span>\t\t\t\t\t<span class=\"co1\">; check corner neighbour</span><br/>\t\tCheckNeighbor<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>UpdateChecks<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tGlobal<br/>\tMineCount<span class=\"sy0\">:=</span>MineMax<span class=\"sy0\">,</span> Die1<span class=\"sy0\">:=</span>Die2<span class=\"sy0\">:=</span><span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Height<br/>\t<span class=\"br0\">{</span><br/>\t\ty<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Width<br/>\t\t<span class=\"br0\">{</span><br/>\t\t\tx<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"O\"</span><span class=\"br0\">)</span><br/>\t\t\t\tMineCount<span class=\"sy0\">--</span><br/>\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span> <span class=\"sy0\">&amp;&amp;</span> B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>!<span class=\"sy0\">=</span><span class=\"st0\">\"O\"</span><span class=\"br0\">)</span> || <span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>!<span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span> <span class=\"sy0\">&amp;&amp;</span> B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"O\"</span><span class=\"br0\">)</span><br/>\t\t\t\tDie1<span class=\"sy0\">++</span><br/>\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"\"</span> <span class=\"sy0\">&amp;&amp;</span> T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span>!<span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span><br/>\t\t\t\tDie2<span class=\"sy0\">++</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>MineCount<span class=\"sy0\">,</span>% <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"00\"</span> MineCount<span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>Die1 <span class=\"sy0\">&amp;&amp;</span> Die2<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span>\t<span class=\"co1\">; only get past here if flags+untouched squares match mines perfectly</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/SetTimer.htm\"><span class=\"kw3\">SetTimer</span></a><span class=\"sy0\">,</span>UpdateTimer<span class=\"sy0\">,</span>Off\t\t\t\t\t\t\t<span class=\"co1\">; game won - kill timer</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>NewGame<span class=\"sy0\">,</span>J\t\t\t\t\t\t\t\t<span class=\"co1\">; set Smiley Btn to Smile=J</span><br/>\tRevealAll<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>Sound<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; play sound</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/SoundPlay.htm\"><span class=\"kw3\">SoundPlay</span></a><span class=\"sy0\">,</span>C:\\WINDOWS\\Media\\tada<span class=\"sy0\">.</span>wav<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>level!<span class=\"sy0\">=</span><span class=\"st0\">\"Custom\"</span> <span class=\"sy0\">&amp;&amp;</span> TimePassed <span class=\"sy0\">&lt;</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>BestTime<span class=\"re0\">%level%</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span>BestTime<span class=\"re0\">%level%</span><span class=\"sy0\">,</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/InputBox.htm\"><span class=\"kw3\">InputBox</span></a><span class=\"sy0\">,</span>name<span class=\"sy0\">,</span>Congratulations!<span class=\"sy0\">,</span>You have the fastest time`nfor level <span class=\"re0\">%level%</span><span class=\"sy0\">.</span>`nPlease <span class=\"kw6\">enter</span> your name<span class=\"sy0\">.</span>`n<span class=\"sy0\">,,,,,,,,</span><span class=\"re0\">%A_UserName%</span><br/>\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>name <span class=\"sy0\">&amp;&amp;</span>\u00a0!<a href=\"http://www.autohotkey.com/docs/Variables.htm#ErrorLevel\"><span class=\"kw2\">ErrorLevel</span></a><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\tBestTime<span class=\"re0\">%level%</span><span class=\"sy0\">:=</span><span class=\"re0\">%TimePassed%</span> seconds\t<span class=\"re0\">%name%</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span>BestTime<span class=\"re0\">%level%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>BestTime<span class=\"re0\">%level%</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>RevealAll<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\tGlobal<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Height\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; uncover all</span><br/>\t<span class=\"br0\">{</span><br/>\t\ty<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>% Width<br/>\t\t<span class=\"br0\">{</span><br/>\t\t\tx<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t\t<span class=\"kw1\">If</span><span class=\"br0\">(</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><span class=\"sy0\">=</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span>Hide<span class=\"sy0\">,</span>B_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><br/>\t\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>T_x<span class=\"re0\">%x%</span>y<span class=\"re0\">%y%</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\tGameOver<span class=\"sy0\">:=</span>True\t\t\t\t\t\t\t\t\t<span class=\"co1\">; remember the game's over to block clicks</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>~<span class=\"kw6\">F2</span>::NewGame<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>NewGame<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"re2\">NewGame:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/Reload.htm\"><span class=\"kw3\">Reload</span></a><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re2\">LevelMenu:<br/></span>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ThisMenuItem\"><span class=\"kw2\">A_ThisMenuItem</span></a><span class=\"sy0\">=</span><span class=\"st0\">\"&amp;Beginner\"</span><span class=\"br0\">)</span><br/>\t\tlevel<span class=\"sy0\">:=</span><span class=\"st0\">\"Beginner\"</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">:=</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">:=</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> MineMax<span class=\"sy0\">:=</span><span class=\"nu0\">10</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ThisMenuItem\"><span class=\"kw2\">A_ThisMenuItem</span></a><span class=\"sy0\">=</span><span class=\"st0\">\"&amp;Intermediate\"</span><span class=\"br0\">)</span><br/>\t\tlevel<span class=\"sy0\">:=</span><span class=\"st0\">\"Intermediate\"</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">:=</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">:=</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span> MineMax<span class=\"sy0\">:=</span><span class=\"nu0\">40</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ThisMenuItem\"><span class=\"kw2\">A_ThisMenuItem</span></a><span class=\"sy0\">=</span><span class=\"st0\">\"&amp;Expert\"</span><span class=\"br0\">)</span><br/>\t\tlevel<span class=\"sy0\">:=</span><span class=\"st0\">\"Expert\"</span><span class=\"sy0\">,</span> Width<span class=\"sy0\">:=</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> Height<span class=\"sy0\">:=</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span> MineMax<span class=\"sy0\">:=</span><span class=\"nu0\">99</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%level%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>level<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%Width%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>Width<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%Height%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>Height<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%MineMax%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>MineMax<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%Marks%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>Marks<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%Sound%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>Sound<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%Color%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">Color</span></a><br/>\tNewGame<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">CustomMenu:\t</span>\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; label for setting window</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"sy0\">+</span>Owner1\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; make Gui#2 owned by gameWindow</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; set to default</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span>:<span class=\"sy0\">+</span>Disabled\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; disable gameWindow</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,-</span>MinimizeBox <span class=\"sy0\">+</span>E0x00000400<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>x15 y36 w38 h16<span class=\"sy0\">,&amp;</span><span class=\"re2\">Height:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">Edit</span></a><span class=\"sy0\">,</span>Number x60 y33 w38 h20 vHeight HwndHwndHeight<span class=\"sy0\">,</span><span class=\"re0\">%Height%</span>\t<span class=\"co1\">; use inGame settings</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>x15 y60 w38 h16<span class=\"sy0\">,&amp;</span><span class=\"re2\">Width:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">Edit</span></a><span class=\"sy0\">,</span>Number x60 y57 w38 h20 vWidth HwndHwndWidth<span class=\"sy0\">,</span><span class=\"re0\">%Width%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>x15 y85 w38 h16<span class=\"sy0\">,&amp;</span><span class=\"re2\">Mines:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">Edit</span></a><span class=\"sy0\">,</span>Number x60 y81 w38 h20 vMineMax HwndHwndMines<span class=\"sy0\">,</span><span class=\"re0\">%MineMax%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span>x120 y33 w60 h26 <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a> HwndHwndOK<span class=\"sy0\">,</span>OK<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span>x120 y75 w60 h26 g2GuiClose HwndHwndCancel<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Cancel\"><span class=\"kw7\">Cancel</span></a>\t\t<span class=\"co1\">; jump directly to 2GuiClose label</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>w195 h138<span class=\"sy0\">,</span>Custom Field<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">2ButtonOK:\t</span>\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; label for OK button in settings window</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Submit\"><span class=\"kw7\">Submit</span></a><span class=\"sy0\">,</span>NoHide<br/>\tlevel<span class=\"sy0\">:=</span><span class=\"st0\">\"Custom\"</span><br/>\tMineMax<span class=\"sy0\">:=</span>MineMax<span class=\"sy0\">&lt;</span><span class=\"nu0\">10</span>\u00a0? <span class=\"nu0\">10</span>\u00a0: MineMax<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">(</span>Width<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>Height<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0? <span class=\"br0\">(</span><span class=\"br0\">(</span>Width<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>Height<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: MineMax<br/>\tWidth<span class=\"sy0\">:=</span>Width<span class=\"sy0\">&lt;</span><span class=\"nu0\">9</span>\u00a0? <span class=\"nu0\">9</span>\u00a0: Width<span class=\"sy0\">&gt;</span><span class=\"nu0\">30</span>\u00a0? <span class=\"nu0\">30</span>\u00a0: Width<br/>\tHeight<span class=\"sy0\">:=</span>Height<span class=\"sy0\">&lt;</span><span class=\"nu0\">9</span>\u00a0? <span class=\"nu0\">9</span>\u00a0: Height<span class=\"sy0\">&gt;</span><span class=\"nu0\">24</span>\u00a0? <span class=\"nu0\">24</span>\u00a0: Height<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gosub.htm\"><span class=\"kw3\">GoSub</span></a><span class=\"sy0\">,</span>LevelMenu<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">2GuiClose:<br/></span><span class=\"re2\">2GuiEscape:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span>:<span class=\"sy0\">-</span>Disabled\t\t\t\t\t\t\t\t<span class=\"co1\">; reset GUI status and destroy setting window</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span>:<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Destroy\"><span class=\"kw7\">Destroy</span></a><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">ToggleMenu:<br/></span>\tToggle<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/commands/RegExReplace.htm\"><span class=\"kw3\">RegExReplace</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/RegExReplace.htm\"><span class=\"kw3\">RegExReplace</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ThisMenuItem\"><span class=\"kw2\">A_ThisMenuItem</span></a><span class=\"sy0\">,</span><span class=\"st0\">\"\\s.*\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">\"&amp;\"</span><span class=\"br0\">)</span><br/>\ttemp<span class=\"sy0\">:=</span><span class=\"re0\">%Toggle%</span><br/>\t<span class=\"re0\">%Toggle%</span><span class=\"sy0\">:=</span>!<span class=\"re0\">%Toggle%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Menu.htm\"><span class=\"kw3\">Menu</span></a><span class=\"sy0\">,</span>GameMenu<span class=\"sy0\">,</span>ToggleCheck<span class=\"sy0\">,</span><span class=\"re0\">%A_ThisMenuItem%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span>% <span class=\"re0\">%Toggle%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span><span class=\"re0\">%Toggle%</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">BestTimesMenu:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"sy0\">+</span>Owner1<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span>:<span class=\"sy0\">+</span>Disabled<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,-</span>MinimizeBox <span class=\"sy0\">+</span>E0x00000400<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>x15 y22 w250 vBestTimeBeginner HwndHwndBTB<span class=\"sy0\">,</span><span class=\"re2\">Beginner:\t</span><span class=\"re0\">%BestTimeBeginner%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>x15 y38 w250 vBestTimeIntermediate HwndHwndBTI<span class=\"sy0\">,</span><span class=\"re2\">Intermediate:\t</span><span class=\"re0\">%BestTimeIntermediate%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span>x15 y54 w250 vBestTimeExpert HwndHwndBTE<span class=\"sy0\">,</span><span class=\"re2\">Expert:\t</span>\t<span class=\"re0\">%BestTimeExpert%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span>x38 y89 w75 h20 HwndHwndRS<span class=\"sy0\">,&amp;</span>Reset Scores<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span>x173 y89 w45 h20 <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a> HwndHwndOK<span class=\"sy0\">,</span>OK<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>w255 h122<span class=\"sy0\">,</span>Fastest Mine Sweepers<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">3ButtonResetScores:<br/></span>\tBestTimeBeginner\t<span class=\"sy0\">=</span><span class=\"nu0\">999</span> seconds\tAnonymous<br/>\tBestTimeIntermediate<span class=\"sy0\">=</span><span class=\"nu0\">999</span> seconds\tAnonymous<br/>\tBestTimeExpert\t\t<span class=\"sy0\">=</span><span class=\"nu0\">999</span> seconds\tAnonymous<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>BestTimeBeginner<span class=\"sy0\">,</span><span class=\"re2\">Beginner:\t</span><span class=\"re0\">%BestTimeBeginner%</span>`<span class=\"re2\">nIntermediate:\t</span><span class=\"re0\">%BestTimeIntermediate%</span>`<span class=\"re2\">nExpert:\t</span>\t<span class=\"re0\">%BestTimeExpert%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>BestTimeIntermediate<span class=\"sy0\">,</span><span class=\"re2\">Intermediate:\t</span><span class=\"re0\">%BestTimeIntermediate%</span>`<span class=\"re2\">nExpert:\t</span>\t<span class=\"re0\">%BestTimeExpert%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>BestTimeExpert<span class=\"sy0\">,</span><span class=\"re2\">Expert:\t</span>\t<span class=\"re0\">%BestTimeExpert%</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%BestTimeBeginner%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>BestTimeBeginner<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%BestTimeIntermediate%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>BestTimeIntermediate<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/IniWrite.htm\"><span class=\"kw3\">IniWrite</span></a><span class=\"sy0\">,</span><span class=\"re0\">%BestTimeExpert%</span><span class=\"sy0\">,</span><span class=\"re0\">%A_ScriptFullPath%</span><span class=\"sy0\">,</span>InGameSettings<span class=\"sy0\">,</span>BestTimeExpert<br/><span class=\"re2\">3GuiEscape:\t</span><span class=\"co1\">; fall through:</span><br/><span class=\"re2\">3GuiClose:<br/></span><span class=\"re2\">3ButtonOK:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span>:<span class=\"sy0\">-</span>Disabled\t\t\t\t\t\t\t\t\t<span class=\"co1\">; reset GUI status and destroy setting window</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span>:<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Destroy\"><span class=\"kw7\">Destroy</span></a><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"sy0\">^</span>q::<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>\u00a0<br/><span class=\"re2\">HelpMenu:<br/></span>\t<span class=\"co1\">;Run C:\\WINDOWS\\Help\\winmine.chm</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">AboutMenu:<br/></span>\t<a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">Msgbox</span></a><span class=\"sy0\">,</span><span class=\"nu0\">64</span><span class=\"sy0\">,</span>About Minesweeper<span class=\"sy0\">,</span>AutoHotkey <span class=\"br0\">(</span>r<span class=\"br0\">)</span> Minesweeper`nVersion 1<span class=\"sy0\">.</span>0<span class=\"sy0\">.</span>6`nCopyright <span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"nu0\">2014</span>`nby derRaphael <span class=\"kw1\">and</span> Sobriquet<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>~<span class=\"kw6\">LButton</span>::<br/>~!<span class=\"kw6\">LButton</span>::<br/>~<span class=\"sy0\">^</span>LButton::<br/>~#LButton::<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">Tooltip</span></a><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">GetKeyState</span></a><span class=\"br0\">(</span><span class=\"st0\">\"RButton\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"P\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<span class=\"kw1\">If</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_OSVersion\"><span class=\"kw2\">A_OSVersion</span></a> not in WIN_2003<span class=\"sy0\">,</span>WIN_XP<span class=\"sy0\">,</span>WIN_2000<span class=\"sy0\">,</span>WIN_NT4<span class=\"sy0\">,</span>WIN_95<span class=\"sy0\">,</span>WIN_98<span class=\"sy0\">,</span>WIN_ME<br/>\t\t<span class=\"kw1\">If</span><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_PriorHotkey\"><span class=\"kw2\">A_PriorHotkey</span></a><span class=\"sy0\">=</span><span class=\"st0\">\"~*LButton Up\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re3\">A_TimeSincePriorHotkey</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Goto.htm\"><span class=\"kw3\">GoTo</span></a><span class=\"sy0\">,*</span><span class=\"kw6\">MButton</span> <span class=\"kw6\">Up</span>\t<span class=\"co1\">; invoke MButton handling for autofill on left double-click in vista+</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>GameOver<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/MouseGetPos.htm\"><span class=\"kw3\">MouseGetPos</span></a><span class=\"sy0\">,,</span>y<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>y<span class=\"sy0\">&gt;</span><span class=\"nu0\">47</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>NewGame<span class=\"sy0\">,</span>m<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>~<span class=\"sy0\">*</span><span class=\"kw6\">LButton</span> <span class=\"kw6\">Up</span>::<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">GetKeyState</span></a><span class=\"br0\">(</span><span class=\"st0\">\"RButton\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"P\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Goto.htm\"><span class=\"kw3\">GoTo</span></a><span class=\"sy0\">,*</span><span class=\"kw6\">MButton</span> <span class=\"kw6\">Up</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>GameOver<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>NewGame<span class=\"sy0\">,</span>K<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">:=</span>GetControlFromClassNN<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> NumX<span class=\"sy0\">:=</span>NumY<span class=\"sy0\">:=</span><span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/RegExMatch.htm\"><span class=\"kw3\">RegExMatch</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"st0\">\"Si)T_x(?P&lt;X&gt;\\d+)y(?P&lt;Y&gt;\\d+)\"</span><span class=\"sy0\">,</span>Num<span class=\"br0\">)</span>\t\t<span class=\"co1\">; get Position</span><br/>\tStartGame<span class=\"br0\">(</span>NumX<span class=\"sy0\">,</span>NumY<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; start game if neccessary</span><br/>\tCheck<span class=\"br0\">(</span>NumX<span class=\"sy0\">,</span>NumY<span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"sy0\">+</span><span class=\"kw6\">LButton</span>::<br/><span class=\"sy0\">*</span><span class=\"kw6\">MButton</span>::<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">Tooltip</span></a><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>GameOver<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/MouseGetPos.htm\"><span class=\"kw3\">MouseGetPos</span></a><span class=\"sy0\">,,</span>y<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>y<span class=\"sy0\">&gt;</span><span class=\"nu0\">47</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>NewGame<span class=\"sy0\">,</span>m<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"sy0\">+</span><span class=\"kw6\">LButton</span> <span class=\"kw6\">Up</span>::<br/><span class=\"sy0\">*</span><span class=\"kw6\">MButton</span> <span class=\"kw6\">Up</span>::<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>GameOver<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>NewGame<span class=\"sy0\">,</span>K<br/>\tStartGame<span class=\"br0\">(</span>NumX<span class=\"sy0\">,</span>NumY<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; start game if neccessary</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">GetKeyState</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Esc\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"P\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/SetTimer.htm\"><span class=\"kw3\">SetTimer</span></a><span class=\"sy0\">,</span>UpdateTimer<span class=\"sy0\">,</span>Off<br/>\t\t<span class=\"kw1\">Return</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">:=</span>GetControlFromClassNN<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> NumX<span class=\"sy0\">:=</span>NumY<span class=\"sy0\">:=</span><span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/RegExMatch.htm\"><span class=\"kw3\">RegExMatch</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"st0\">\"Si)T_x(?P&lt;X&gt;\\d+)y(?P&lt;y&gt;\\d+)\"</span><span class=\"sy0\">,</span>Num<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>\u00a0!NumX ||\u00a0!NumY || B_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span>!<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\ttemp<span class=\"sy0\">:=</span><span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; loop over neighbors: three columns vertically</span><br/>\t\tty<span class=\"sy0\">:=</span>NumY<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; calculate top offset</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; and three horizontally</span><br/>\t\t\ttx<span class=\"sy0\">:=</span>NumX<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; calculate left offset</span><br/>\t\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>B_x<span class=\"re0\">%tx%</span>y<span class=\"re0\">%ty%</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"O\"</span><span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; count number of marked mines around position</span><br/>\t\t\t\ttemp<span class=\"sy0\">++</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>temp<span class=\"sy0\">=</span>T_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; loop over neighbors: three columns vertically</span><br/>\t\t\tty<span class=\"sy0\">:=</span>NumY<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a>\t\t\t\t\t\t\t\t\t<span class=\"co1\">; calculate top offset</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span><span class=\"nu0\">3</span> <span class=\"br0\">{</span>\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; and three horizontally</span><br/>\t\t\t\ttx<span class=\"sy0\">:=</span>NumX<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a>\t\t\t\t\t\t\t\t<span class=\"co1\">; calculate left offset</span><br/>\t\t\t\tCheck<span class=\"br0\">(</span>tx<span class=\"sy0\">,</span>ty<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; simulate user clicking on each surrounding square</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>~<span class=\"sy0\">*</span><span class=\"kw6\">RButton</span>::<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>GameOver || <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">GetKeyState</span></a><span class=\"br0\">(</span><span class=\"st0\">\"LButton\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"P\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">:=</span>GetControlFromClassNN<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> NumX<span class=\"sy0\">:=</span>NumY<span class=\"sy0\">:=</span><span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/RegExMatch.htm\"><span class=\"kw3\">RegExMatch</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"st0\">\"Si)T_x(?P&lt;X&gt;\\d+)y(?P&lt;y&gt;\\d+)\"</span><span class=\"sy0\">,</span>Num<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">; grab 'em</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>\u00a0!NumX ||\u00a0!NumY || B_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\tStartGame<span class=\"br0\">(</span>NumX<span class=\"sy0\">,</span>NumY<span class=\"br0\">)</span>\t\t\t\t\t\t\t\t\t\t\t<span class=\"co1\">; start counter if neccessary</span><br/>\tB_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span><span class=\"sy0\">:=</span><span class=\"br0\">(</span>B_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span><span class=\"sy0\">=</span><span class=\"st0\">\"\"</span>\u00a0? <span class=\"st0\">\"O\"</span>\u00a0: <span class=\"br0\">(</span>B_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span><span class=\"sy0\">=</span><span class=\"st0\">\"O\"</span> <span class=\"sy0\">&amp;&amp;</span> Marks<span class=\"sy0\">=</span><span class=\"nu0\">1</span>\u00a0? <span class=\"st0\">\"I\"</span>\u00a0: <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span>B_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span><span class=\"sy0\">,</span>% B_x<span class=\"re0\">%NumX%</span>y<span class=\"re0\">%NumY%</span><br/>\tUpdateChecks<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>~<span class=\"sy0\">*</span><span class=\"kw6\">RButton</span> <span class=\"kw6\">Up</span>::<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">GetKeyState</span></a><span class=\"br0\">(</span><span class=\"st0\">\"LButton\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"P\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Goto.htm\"><span class=\"kw3\">GoTo</span></a><span class=\"sy0\">,*</span><span class=\"kw6\">MButton</span> <span class=\"kw6\">Up</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>GetControlFromClassNN<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\tGlobal width<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/MouseGetPos.htm\"><span class=\"kw3\">MouseGetPos</span></a><span class=\"sy0\">,,,,</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"st0\">\"Button\"</span><span class=\"br0\">)</span><br/>\t\tNumX<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">mod</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>width<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>NumY<span class=\"sy0\">:=</span><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">//</span>width<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"st0\">\"Static\"</span><span class=\"br0\">)</span><br/>\t\tNumX<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">mod</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>width<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>NumY<span class=\"sy0\">:=</span><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">//</span>width<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">Return</span> <span class=\"st0\">\"T_x\"</span> NumX <span class=\"st0\">\"y\"</span> NumY<br/><span class=\"br0\">}</span><br/>\u00a0<br/>WM_HELP<span class=\"br0\">(</span>_<span class=\"sy0\">,</span>_lphi<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tGlobal<br/>\thItemHandle<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">NumGet</span></a><span class=\"br0\">(</span>_lphi<span class=\"sy0\">+</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>hItemHandle<span class=\"sy0\">=</span>HwndBTB || hItemHandle<span class=\"sy0\">=</span>HwndBTI || hItemHandle<span class=\"sy0\">=</span>HwndBTE<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">ToolTip</span></a> Displays a player's best game time`<span class=\"sy0\">,</span> <span class=\"kw1\">and</span> the player's name`<span class=\"sy0\">,</span> for`neach level of <span class=\"re2\">play: </span>Beginner`<span class=\"sy0\">,</span> Intermediate`<span class=\"sy0\">,</span> <span class=\"kw1\">and</span> Expert<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>hItemHandle<span class=\"sy0\">=</span>HwndRS<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">ToolTip</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Click.htm\"><span class=\"kw3\">Click</span></a> to clear the current high scores<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>hItemHandle<span class=\"sy0\">=</span>HwndOK<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">ToolTip</span></a> Closes the dialog box <span class=\"kw1\">and</span> saves any changes you`nhave made<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>hItemHandle<span class=\"sy0\">=</span>HwndCancel<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">ToolTip</span></a> Closes the dialog box without saving any changes you have`nmade<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>hItemHandle<span class=\"sy0\">=</span>HwndHeight<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">ToolTip</span></a> Specifies the number of vertical squares on the`nplaying field<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>hItemHandle<span class=\"sy0\">=</span>HwndWidth<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">ToolTip</span></a> Specifies the number of horizontal squares on the`nplaying field<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>hItemHandle<span class=\"sy0\">=</span>HwndMines<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/ToolTip.htm\"><span class=\"kw3\">ToolTip</span></a> Specifies the number of mines to be placed on the`nplaying field<span class=\"sy0\">.</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>:<span class=\"sy0\">*</span>?B0:xyzzy:: <span class=\"co1\">; cheat</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/KeyWait.htm\"><span class=\"kw3\">KeyWait</span></a><span class=\"sy0\">,</span><span class=\"kw6\">Shift</span><span class=\"sy0\">,</span>D T1\t\t\t\t\t\t\t\t\t<span class=\"co1\">; 1 sec grace period to press shift</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#ErrorLevel\"><span class=\"kw2\">ErrorLevel</span></a><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">Return</span><br/>\t<span class=\"kw1\">While</span><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">GetKeyState</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Shift\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"P\"</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Control.htm\"><span class=\"kw3\">control</span></a><span class=\"sy0\">:=</span>GetControlFromClassNN<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><span class=\"re0\">%control%</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"M\"</span><span class=\"br0\">)</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/SplashImage.htm\"><span class=\"kw3\">SplashImage</span></a><span class=\"sy0\">,,</span>B X0 Y0 W1 H1 CW000000\t\t\t<span class=\"co1\">; black pixel</span><br/>\t\t<span class=\"kw1\">Else</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/SplashImage.htm\"><span class=\"kw3\">SplashImage</span></a><span class=\"sy0\">,,</span>B X0 Y0 W1 H1 CWFFFFFF\t\t\t<span class=\"co1\">; white pixel</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Sleep.htm\"><span class=\"kw3\">Sleep</span></a> <span class=\"nu0\">100</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/SplashImage.htm\"><span class=\"kw3\">SplashImage</span></a><span class=\"sy0\">,</span>Off<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/> Version History<br/>=================<br/>Dec 29, 2008<br/>1.0.0\tInitial Release<br/>1.0.1\tBugFix<br/>\t\t- Game Restart Issues mentioned by Frankie<br/>\t\t- Guess count fixup I<br/>\t\t- Startbehaviour of game (time didnt start when 1st click was RMB Guess)<br/>Dec 30, 2008<br/>1.0.2\tBugFix<br/>\t\t- Field Size Control vs Max MineCount / mentioned by \u00b0digit\u00b0 / IsNull<br/>1.0.3\tBugFix<br/>\t\t- Guess count fixup II mentioned by \u00b0digit\u00b0<br/>\t\t- Corrected count when 'guessed' field uncovered<br/>Dec 31, 2008<br/>1.0.4\tBugFix<br/>\t\t- Fix of Min Field &amp; MineSettings<br/>Mar 7, 2014<br/>1.0.5\tAddFeatures<br/>\t\t- Make appearance more like original<br/>\t\t- Make first click always safe<br/>\t\t- Re-license as CeCILL v2<br/>Mar 8, 2014<br/>1.0.6\tAddFeatures<br/>\t\t- Add cheat code<br/>\t\t- Add middle-button shortcut<br/>\t\t- Re-license as GPL 1.3<br/>*/</span></pre>"}, {"lang": "BASIC256", "loc": 110, "block": "<pre class=\"text highlighted_source\">N = 6\u00a0: M = 5\u00a0: H = 25\u00a0: P = 0.2<br/>\u00a0<br/>fastgraphics<br/>graphsize N*H,(M+1)*H<br/>font \"Arial\",H/2+1,75<br/>dim f(N,M) # 1 open, 2 mine, 4 expected mine<br/>dim s(N,M) # count of mines in a neighborhood<br/>\u00a0<br/>trian1 = {1,1,H-1,1,H-1,H-1}\u00a0: trian2 = {1,1,1,H-1,H-1,H-1}<br/>mine = {2,2, H/2,H/2-2, H-2,2, H/2+2,H/2, H-2,H-2, H/2,H/2+2, 2,H-2, H/2-2,H/2}<br/>flag = {H/2-1,3, H/2+1,3, H-4,H/5, H/2+1,H*2/5, H/2+1,H*0.9-2, H*0.8,H-2, H*0.2,H-2, H/2-1,H*0.9-2}<br/>\u00a0<br/>mines = int(N*M*P)\u00a0: k = mines\u00a0: act = 0<br/>while k&gt;0 <br/>\ti = int(rand*N)\u00a0: j = int(rand*M)<br/>\tif not f[i,j] then <br/>\t\tf[i,j] = 2\u00a0: k = k - 1\t\t# set mine<br/>\t\ts[i,j] = s[i,j] + 1\u00a0: gosub adj\t# count it<br/>\u00a0<br/>\tend if<br/>end while<br/>togo =  M*N-mines\u00a0: over = 0\u00a0: act = 1<br/>\u00a0<br/>gosub redraw<br/>while not over<br/>\tclickclear<br/>\twhile not clickb<br/>\t\tpause 0.01<br/>\tend while<br/>\ti = int(clickx/H)\u00a0: j = int(clicky/H)<br/>\tif i&lt;N and j&lt;M then<br/>\t\tif clickb=1 then<br/>\t\t\tif not (f[i,j]&amp;4) then ai = i\u00a0: aj = j\u00a0: gosub opencell<br/>\t\t\tif not s[i,j] then gosub adj<br/>\t\telse <br/>\t\t\tif not (f[i,j]&amp;1) then<br/>\t\t\t\tif f[i,j]&amp;4 then mines = mines+1<br/>\t\t\t\tif not (f[i,j]&amp;4) then mines = mines-1<br/>\t\t\t\tf[i,j] = (f[i,j]&amp;~4)|(~f[i,j]&amp;4)<br/>\t\t\tend if<br/>\t\tend if<br/>\t\tif not (togo or mines) then over = 1<br/>\t\tgosub redraw<br/>\tend if<br/>end while<br/>imgsave \"Minesweeper_game_BASIC-256.png\", \"PNG\"<br/>end<br/>\u00a0<br/>redraw:<br/>\tfor i = 0 to N-1<br/>\t\tfor j = 0 to M-1<br/>\t\t\tif over=-1 and f[i,j]&amp;2 then f[i,j] = f[i,j]|1<br/>\t\t\tgosub drawcell<br/>\t\tnext j<br/>\tnext i<br/>\t# Counter<br/>\tcolor (32,32,32)\u00a0: rect 0,M*H,N*H,H<br/>\tcolor white\u00a0: x = 5\u00a0: y = M*H+H*0.05<br/>\tif not over then text x,y,\"Mines: \" + mines<br/>\tif over=1 then text x,y,\"You won!\"<br/>\tif over=-1 then text x,y,\"You lost\"<br/>\trefresh<br/>\treturn<br/>\u00a0<br/>drawcell:<br/>\tcolor darkgrey<br/>\trect i*H,j*H,H,H<br/>\tif f[i,j]&amp;1=0 then\t# closed<br/>\t\tcolor black\u00a0: stamp i*H,j*H,trian1<br/>\t\tcolor white\u00a0: stamp i*H,j*H,trian2<br/>\t\tcolor grey\u00a0: rect i*H+2,j*H+2,H-4,H-4<br/>\t\tif f[i,j]&amp;4 then color blue\u00a0: stamp i*H,j*H,flag<br/>\telse<br/>\t\tcolor 192,192,192\u00a0: rect i*H+1,j*H+1,H-2,H-2<br/>\t\t# Draw <br/>\t\tif f[i,j]&amp;2 then\t# mine<br/>\t\t\tif not (f[i,j]&amp;4) then color red<br/>\t\t\tif f[i,j]&amp;4 then color darkgreen<br/>\t\t\tcircle i*H+H/2,j*H+H/2,H/5\u00a0: stamp i*H,j*H,mine<br/>\t\telse<br/>\t\t\tif s[i,j] then color (32,32,32)\u00a0: text i*H+H/3,j*H+1,s[i,j]<br/>\t\tend if<br/>\tend if<br/>\treturn<br/>\u00a0<br/>adj:<br/>\taj = j-1<br/>\tif j and i then ai = i-1\u00a0: gosub adjact<br/>\tif j then ai = i\u00a0: gosub adjact<br/>\tif j and i&lt;N-1 then ai = i+1\u00a0: gosub adjact<br/>\taj = j<br/>\tif i then ai = i-1\u00a0: gosub adjact<br/>\tif i&lt;N-1 then ai = i+1\u00a0: gosub adjact<br/>\taj = j+1<br/>\tif j&lt;M-1 and i then ai = i-1\u00a0: gosub adjact<br/>\tif j&lt;M-1 then ai = i\u00a0: gosub adjact<br/>\tif j&lt;M-1 and i&lt;N-1 then ai = i+1\u00a0: gosub adjact<br/>\treturn<br/>\u00a0<br/>adjact:<br/>\tif not act then s[ai,aj] = s[ai,aj]+1\u00a0: return<br/>\tif act then gosub opencell\u00a0: return<br/>\u00a0<br/>opencell:<br/>\tif not (f[ai,aj]&amp;1) then <br/>\t\tf[ai,aj] = f[ai,aj]|1<br/>\t\ttogo = togo-1<br/>\tend if<br/>\tif f[ai,aj]&amp;2 then over = -1<br/>\treturn</pre>"}, {"lang": "C", "loc": 415, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#if 0</span><br/>\u00a0<br/>  Unix build<span class=\"sy0\">:</span><br/>\u00a0<br/>  make CPPFLAGS<span class=\"sy0\">=-</span>DNDEBUG LDLIBS<span class=\"sy0\">=-</span>lcurses mines<br/>\u00a0<br/>  dwlmines<span class=\"sy0\">,</span> by David Lambert<span class=\"sy0\">;</span>  sometime in the twentieth Century.  <span class=\"me1\">The</span><br/>  program is meant to run  in a terminal window compatible with curses<br/>  <span class=\"kw1\">if</span> unix  is defined  to cpp<span class=\"sy0\">,</span>  or to an  ANSI terminal  when compiled<br/>  without  unix macro  defined.   <span class=\"me1\">I</span> suppose  I  have built  this on  a<br/>  windows <span class=\"nu0\">98</span> computer using gcc running in a cmd window.  <span class=\"me1\">The</span> original<br/>  probably came from a VAX running  VMS with a vt100 sort of terminal.<br/>  <span class=\"me1\">Today</span> I  have xterm and gcc available  so I will claim  only that it<br/>  works with this combination.<br/>\u00a0<br/>  <span class=\"me1\">As</span>  this program can  automatically play  all the  trivially counted<br/>  safe  squares.  <span class=\"me1\">Action</span>  is quick  leaving the  player with  only the<br/>  thoughtful action.  <span class=\"me1\">Whereas</span>  <span class=\"st0\">'s'</span> steps on the spot  with the cursor<span class=\"sy0\">,</span><br/>  capital <span class=\"st0\">'S'</span> <span class=\"br0\">(</span>Stomp<span class=\"br0\">)</span> invokes autoplay.<br/>\u00a0<br/>  <span class=\"me1\">The</span> cursor motion keys are as in the vi editor<span class=\"sy0\">;</span> hjkl move the cursor.<br/>\u00a0<br/>  <span class=\"st0\">'d'</span> displays the number of unclaimed bombs and cells.<br/>\u00a0<br/>  <span class=\"st0\">'f'</span> flags a cell.<br/>\u00a0<br/>  <span class=\"me1\">The</span>  numbers  on the  field  indicate the  number  of  bombs in  the<br/>  unclaimed neighboring  cells.  <span class=\"me1\">This</span> is more useful  than showing the<br/>  values you  expect.  <span class=\"me1\">You</span>  may find unflagging  a cell adjacent  to a<br/>  number will help you understand this.<br/>\u00a0<br/>  <span class=\"me1\">There</span>  is extra  code  here.  <span class=\"me1\">The</span>  multidimensional array  allocator<br/>  allocarray is much better than  those of Numerical Recipes in C.  <span class=\"me1\">If</span><br/>  you subtracted  the offset  <span class=\"nu0\">1</span> to make  the arrays FORTRAN  like then<br/>  allocarray could substitute <span class=\"kw1\">for</span> those of NR in C.<br/><span class=\"co2\">#endif</span><br/>\u00a0<br/><span class=\"co2\">#include &lt;stdarg.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#ifndef NDEBUG</span><br/><span class=\"co2\"># define DEBUG_CODE(A) A</span><br/><span class=\"co2\">#else</span><br/><span class=\"co2\"># define DEBUG_CODE(A)</span><br/><span class=\"co2\">#endif</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define DIM(A) (sizeof((A))/sizeof(*(A)))</span><br/><span class=\"co2\">#define MAX(A,B) ((A)&lt;(B)?(B):(A))</span><br/><span class=\"co2\">#define BIND(A,L,H) ((L)&lt;(A)?(A)&lt;(H)?(A):(H):(L))</span><br/>\u00a0<br/><span class=\"co2\">#define SET_BIT(A,B) ((A)|=1&lt;&lt;(B))</span><br/><span class=\"co2\">#define CLR_BIT(A,B) ((A)&amp;=~(1&lt;&lt;(B)))</span><br/><span class=\"co2\">#define TGL_BIT(A,B) ((A)^=1&lt;&lt;(B))</span><br/><span class=\"co2\">#define INQ_BIT(A,B) ((A)&amp;(1&lt;&lt;(B)))</span><br/><span class=\"co2\">#define FOREVER for(;;)</span><br/><span class=\"co2\">#define MODINC(i,mod) ((i)+1&lt;(mod)?(i)+1:0)</span><br/><span class=\"co2\">#define MODDEC(i,mod) (((i)&lt;=0?(mod):(i))-1)</span><br/>\u00a0<br/><span class=\"kw4\">void</span> error<span class=\"br0\">(</span><span class=\"kw4\">int</span> status<span class=\"sy0\">,</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>message<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span> <span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> message<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exit.html\"><span class=\"kw3\">exit</span></a><span class=\"br0\">(</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span><span class=\"sy0\">*</span>dwlcalloc<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"sy0\">,</span><span class=\"kw4\">size_t</span> bytes<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">void</span><span class=\"sy0\">*</span>rv <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/calloc.html\"><span class=\"kw3\">calloc</span></a><span class=\"br0\">(</span>n<span class=\"sy0\">,</span>bytes<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>NULL <span class=\"sy0\">==</span> rv<span class=\"br0\">)</span><br/>    error<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"st0\">\"memory allocation failure\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  DEBUG_CODE<span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span><span class=\"st0\">\"allocated address\u00a0%p<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>rv<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> rv<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span><span class=\"sy0\">*</span>allocarray<span class=\"br0\">(</span><span class=\"kw4\">int</span> rank<span class=\"sy0\">,</span><span class=\"kw4\">size_t</span><span class=\"sy0\">*</span>shape<span class=\"sy0\">,</span><span class=\"kw4\">size_t</span> itemSize<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"coMULTI\">/*<br/>     Allocates arbitrary dimensional arrays (and inits all pointers)<br/>     with only 1 call to malloc.  David W. Lambert, written before 1990.<br/>     This is wonderful because one only need call free once to deallocate<br/>     the space.  Special routines for each size array are not need for<br/>     allocation of for deallocation.  Also calls to malloc might be expensive<br/>     because they might have to place operating system requests.  One call<br/>     seems optimal.<br/>  */</span><br/>  <span class=\"kw4\">size_t</span> size<span class=\"sy0\">,</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>dataSpace<span class=\"sy0\">,</span>pointerSpace<span class=\"sy0\">,</span>pointers<span class=\"sy0\">,</span>nextLevelIncrement<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">char</span><span class=\"sy0\">*</span>memory<span class=\"sy0\">,*</span>pc<span class=\"sy0\">,*</span>nextpc<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>rank <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>rank <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      error<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"st0\">\"invalid negative rank argument passed to allocarray\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    size <span class=\"sy0\">=</span> rank <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"sy0\">*</span>shape<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> dwlcalloc<span class=\"br0\">(</span>size<span class=\"sy0\">,</span>itemSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  pointerSpace <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> dataSpace <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> rank<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>    pointerSpace <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>dataSpace <span class=\"sy0\">*=</span> shape<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pointerSpace <span class=\"sy0\">*=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  dataSpace <span class=\"sy0\">*=</span> shape<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">*</span>itemSize<span class=\"sy0\">;</span><br/>  memory <span class=\"sy0\">=</span> pc <span class=\"sy0\">=</span> dwlcalloc<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>pointerSpace<span class=\"sy0\">+</span>dataSpace<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pointers <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> rank<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    nextpc <span class=\"sy0\">=</span> pc <span class=\"sy0\">+</span> <span class=\"br0\">(</span>pointers <span class=\"sy0\">*=</span> shape<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    nextLevelIncrement <span class=\"sy0\">=</span> shape<span class=\"br0\">[</span><span class=\"sy0\">++</span>i<span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> pointers<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><br/>      <span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">**</span><span class=\"br0\">)</span>pc<span class=\"br0\">)</span> <span class=\"sy0\">=</span> nextpc<span class=\"sy0\">,</span> pc<span class=\"sy0\">+=</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> nextpc <span class=\"sy0\">+=</span> nextLevelIncrement<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  nextpc <span class=\"sy0\">=</span> pc <span class=\"sy0\">+</span> <span class=\"br0\">(</span>pointers <span class=\"sy0\">*=</span> shape<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  nextLevelIncrement <span class=\"sy0\">=</span> shape<span class=\"br0\">[</span><span class=\"sy0\">++</span>i<span class=\"br0\">]</span><span class=\"sy0\">*</span>itemSize<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> pointers<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><br/>    <span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">**</span><span class=\"br0\">)</span>pc<span class=\"br0\">)</span> <span class=\"sy0\">=</span> nextpc<span class=\"sy0\">,</span> pc<span class=\"sy0\">+=</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> nextpc <span class=\"sy0\">+=</span> nextLevelIncrement<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> memory<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co2\">#define PRINT(element) \\<br/>  if (NULL == print_elt) \\<br/>    printf(\"%10.3e\",*(double*)(element)); \\<br/>  else \\<br/>    (*print_elt)(element)</span><br/>\u00a0<br/><span class=\"coMULTI\">/* matprint prints an array in APL\\360 style */</span><br/><span class=\"coMULTI\">/* with a NULL element printing function matprint assumes an array of double */</span><br/><span class=\"kw4\">void</span><span class=\"sy0\">*</span>matprint<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"sy0\">*</span>a<span class=\"sy0\">,</span><span class=\"kw4\">int</span> rank<span class=\"sy0\">,</span><span class=\"kw4\">size_t</span><span class=\"sy0\">*</span>shape<span class=\"sy0\">,</span><span class=\"kw4\">size_t</span> size<span class=\"sy0\">,</span><span class=\"kw4\">void</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>print_elt<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">union</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">unsigned</span> <span class=\"sy0\">**</span>ppu<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">unsigned</span> <span class=\"sy0\">*</span>pu<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">unsigned</span> u<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> b<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>rank <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> NULL <span class=\"sy0\">==</span> shape<span class=\"br0\">)</span><br/>    PRINT<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> rank<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> shape<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>      matprint<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"sy0\">**</span><span class=\"br0\">)</span>a<span class=\"br0\">)</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> rank<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>shape<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>size<span class=\"sy0\">,</span>print_elt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> b.<span class=\"me1\">pu</span> <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> shape<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"sy0\">,</span> b.<span class=\"me1\">u</span> <span class=\"sy0\">+=</span> size<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      PRINT<span class=\"br0\">(</span>b.<span class=\"me1\">pu</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co2\">#ifdef __unix__</span><br/><span class=\"co2\"># include &lt;curses.h&gt;</span><br/><span class=\"co2\"># include &lt;unistd.h&gt;</span><br/><span class=\"co2\"># define SRANDOM srandom</span><br/><span class=\"co2\"># define RANDOM random</span><br/><span class=\"co2\">#else</span><br/><span class=\"co2\"># include &lt;windows.h&gt;</span><br/>  <span class=\"kw4\">void</span> addch<span class=\"br0\">(</span><span class=\"kw4\">int</span> c<span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">void</span> addstr<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>s<span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fputs.html\"><span class=\"kw3\">fputs</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">,</span>stdout<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"co2\"># define ANSI putchar(27),putchar('[')</span><br/>  <span class=\"kw4\">void</span> initscr<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>AllocConsole<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">void</span> cbreak<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">void</span> noecho<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">void</span> nonl<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">int</span> move<span class=\"br0\">(</span><span class=\"kw4\">int</span> r<span class=\"sy0\">,</span><span class=\"kw4\">int</span> c<span class=\"br0\">)</span> <span class=\"br0\">{</span> ANSI<span class=\"sy0\">;</span> <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d;%dH\"</span><span class=\"sy0\">,</span>r<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>c<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">int</span> mvaddch<span class=\"br0\">(</span><span class=\"kw4\">int</span> r<span class=\"sy0\">,</span><span class=\"kw4\">int</span> c<span class=\"sy0\">,</span><span class=\"kw4\">int</span> ch<span class=\"br0\">)</span> <span class=\"br0\">{</span> move<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span> addch<span class=\"br0\">(</span>ch<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">void</span> refresh<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"co2\"># define WA_STANDOUT 32</span><br/>  <span class=\"kw4\">int</span> attr_on<span class=\"br0\">(</span><span class=\"kw4\">int</span> a<span class=\"sy0\">,</span><span class=\"kw4\">void</span><span class=\"sy0\">*</span>p<span class=\"br0\">)</span> <span class=\"br0\">{</span> ANSI<span class=\"sy0\">;</span> <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%dm\"</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">int</span> attr_off<span class=\"br0\">(</span><span class=\"kw4\">int</span> a<span class=\"sy0\">,</span><span class=\"kw4\">void</span><span class=\"sy0\">*</span>p<span class=\"br0\">)</span> <span class=\"br0\">{</span> attr_on<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"co2\"># include &lt;stdarg.h&gt;</span><br/>  <span class=\"kw4\">void</span> printw<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>fmt<span class=\"sy0\">,</span>...<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    va_list args<span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_start.html\"><span class=\"kw3\">va_start</span></a><span class=\"br0\">(</span>args<span class=\"sy0\">,</span>fmt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/vprintf.html\"><span class=\"kw3\">vprintf</span></a><span class=\"br0\">(</span>fmt<span class=\"sy0\">,</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_end.html\"><span class=\"kw3\">va_end</span></a><span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw4\">void</span> clrtoeol<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    ANSI<span class=\"sy0\">;</span>addstr<span class=\"br0\">(</span><span class=\"st0\">\"0J\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"co2\"># define SRANDOM srand</span><br/><span class=\"co2\"># define RANDOM rand</span><br/><span class=\"co2\">#endif  </span><br/>\u00a0<br/><span class=\"co2\">#ifndef EXIT_SUCCESS</span><br/><span class=\"co2\"># define EXIT_SUCCESS 1\t\t/* just a guess */</span><br/><span class=\"co2\">#endif</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co2\">#if 0</span><br/>  cell status<br/>    UNKN <span class=\"sy0\">---</span> contains virgin earth <span class=\"br0\">(</span>initial state<span class=\"br0\">)</span><br/>    MINE <span class=\"sy0\">---</span> has a mine<br/>    FLAG <span class=\"sy0\">---</span> was flagged<br/><span class=\"co2\">#endif</span><br/>\u00a0<br/><span class=\"kw2\">enum</span> <span class=\"br0\">{</span>UNKN<span class=\"sy0\">,</span>MINE<span class=\"sy0\">,</span>FLAG<span class=\"br0\">}</span><span class=\"sy0\">;</span>\t<span class=\"coMULTI\">/* bit numbers */</span><br/>\u00a0<br/><span class=\"co2\">#define DETECT(CELL,PROPERTY) (!!INQ_BIT(CELL,PROPERTY))</span><br/>\u00a0<br/>DEBUG_CODE<span class=\"br0\">(</span>                                                                \\<br/>  <span class=\"kw4\">void</span> pchr<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"sy0\">*</span>a<span class=\"br0\">)</span> <span class=\"br0\">{</span>\t\t<span class=\"coMULTI\">/* odd comment removed */</span>                  \\<br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'A'</span><span class=\"sy0\">+*</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"coMULTI\">/* should print the nth char of alphabet */</span>\\<br/>  <span class=\"br0\">}</span>                             <span class=\"coMULTI\">/* where 'A' is 0 */</span>                       \\<br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw4\">char</span><span class=\"sy0\">**</span>bd<span class=\"sy0\">;</span>\t\t\t<span class=\"coMULTI\">/* the board */</span><br/><span class=\"kw4\">size_t</span> shape<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"co2\">#define RWS (shape[0])</span><br/><span class=\"co2\">#define CLS (shape[1])</span><br/>\u00a0<br/><span class=\"kw4\">void</span> populate<span class=\"br0\">(</span><span class=\"kw4\">int</span> x<span class=\"sy0\">,</span><span class=\"kw4\">int</span> y<span class=\"sy0\">,</span><span class=\"kw4\">int</span> pct<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"coMULTI\">/* finished size in col, row,\u00a0% mines */</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>c<span class=\"sy0\">;</span><br/>  x <span class=\"sy0\">=</span> BIND<span class=\"br0\">(</span>x<span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=</span> BIND<span class=\"br0\">(</span>y<span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">400</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* confine input as piecewise linear */</span><br/>  shape<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> x<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> shape<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> y<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span> bd <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">**</span><span class=\"br0\">)</span>allocarray<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>shape<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/memset.html\"><span class=\"kw3\">memset</span></a><span class=\"br0\">(</span><span class=\"sy0\">*</span>bd<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span>UNKN<span class=\"sy0\">,</span>shape<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>shape<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* all unknown */</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> shape<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span>\t\t      <span class=\"coMULTI\">/* border is safe */</span><br/>    bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>shape<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> shape<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>    bd<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> bd<span class=\"br0\">[</span>shape<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">{</span><br/>    time_t seed<span class=\"sy0\">;</span> <span class=\"coMULTI\">/* now I would choose /dev/random */</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"seed is\u00a0%u<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span><span class=\"br0\">)</span>seed<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>seed<span class=\"br0\">)</span><span class=\"sy0\">,</span> SRANDOM<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span><span class=\"br0\">)</span>seed<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  c <span class=\"sy0\">=</span> BIND<span class=\"br0\">(</span>pct<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">99</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>x<span class=\"sy0\">*</span>y<span class=\"sy0\">/</span><span class=\"nu0\">100</span><span class=\"sy0\">;</span>\t<span class=\"coMULTI\">/* number of mines to set */</span><br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    i <span class=\"sy0\">=</span> RANDOM<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">+</span>i<span class=\"sy0\">%</span>y<span class=\"sy0\">,</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>i<span class=\"sy0\">&gt;&gt;</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>x<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span> DETECT<span class=\"br0\">(</span>bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/* 1 mine per site */</span><br/>      <span class=\"sy0\">--</span>c<span class=\"sy0\">,</span> SET_BIT<span class=\"br0\">(</span>bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  DEBUG_CODE<span class=\"br0\">(</span>matprint<span class=\"br0\">(</span>bd<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>shape<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>pchr<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">)</span><br/>    RWS <span class=\"sy0\">=</span> x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> CLS <span class=\"sy0\">=</span> y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>\t<span class=\"coMULTI\">/* shape now stores the upper bounds */</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> neighbor<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> <span class=\"nu0\">0</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"coMULTI\">/*home*/</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"coMULTI\">/* NEIGHBOR seems to map 0..8 to local 2D positions */</span><br/><span class=\"co2\">#define NEIGHBOR(I,J,K) (bd[(I)+neighbor[K].i][(J)+neighbor[K].j])</span><br/>\u00a0<br/><span class=\"kw4\">int</span> cnx<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">,</span><span class=\"kw4\">int</span> j<span class=\"sy0\">,</span><span class=\"kw4\">char</span> w<span class=\"br0\">)</span> <span class=\"br0\">{</span>\t<span class=\"coMULTI\">/* count neighbors with property w */</span><br/>  <span class=\"kw4\">int</span> k<span class=\"sy0\">,</span>c <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> DIM<span class=\"br0\">(</span>neighbor<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>k<span class=\"br0\">)</span><br/>    c <span class=\"sy0\">+=</span> DETECT<span class=\"br0\">(</span>NEIGHBOR<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"br0\">)</span><span class=\"sy0\">,</span>w<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> c<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> row<span class=\"sy0\">,</span>col<span class=\"sy0\">;</span><br/><span class=\"co2\">#define ME bd[row+1][col+1]</span><br/>\u00a0<br/><span class=\"kw4\">int</span> step<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* flags offer protection */</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* lose */</span><br/>  CLR_BIT<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> autoplay<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"sy0\">,</span>change<span class=\"sy0\">,</span>m<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>step<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">do</span>\t\t\t\t<span class=\"coMULTI\">/* while changing */</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>change <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> RWS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> CLS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>DETECT<span class=\"br0\">(</span>bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"coMULTI\">/* consider nghbrs of safe cells */</span><br/>\t  m <span class=\"sy0\">=</span> cnx<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>cnx<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span> <span class=\"sy0\">==</span> m<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"coMULTI\">/* mines appear flagged */</span><br/>\t    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> DIM<span class=\"br0\">(</span>neighbor<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>k<span class=\"br0\">)</span><br/>\t      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>NEIGHBOR<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"br0\">)</span><span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"sy0\">&amp;&amp;!</span>DETECT<span class=\"br0\">(</span>NEIGHBOR<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"br0\">)</span><span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>NEIGHBOR<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"br0\">)</span><span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"coMULTI\">/* OOPS! */</span><br/>\t\t  row <span class=\"sy0\">=</span> i<span class=\"sy0\">+</span>neighbor<span class=\"br0\">[</span>k<span class=\"br0\">]</span>.<span class=\"me1\">i</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> col <span class=\"sy0\">=</span> j<span class=\"sy0\">+</span>neighbor<span class=\"br0\">[</span>k<span class=\"br0\">]</span>.<span class=\"me1\">j</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\tchange <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> CLR_BIT<span class=\"br0\">(</span>NEIGHBOR<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"br0\">)</span><span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t      <span class=\"br0\">}</span><br/>\t  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>cnx<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span> <span class=\"sy0\">==</span> m<span class=\"br0\">)</span><br/>\t    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> DIM<span class=\"br0\">(</span>neighbor<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>k<span class=\"br0\">)</span><br/>\t      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>NEIGHBOR<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"br0\">)</span><span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\tchange <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> SET_BIT<span class=\"br0\">(</span>NEIGHBOR<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"br0\">)</span><span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>change<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> takedisplay<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> initscr<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> cbreak<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> noecho<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> nonl<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> help<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  move<span class=\"br0\">(</span>RWS<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>clrtoeol<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> printw<span class=\"br0\">(</span><span class=\"st0\">\"move:hjkl flag:Ff step:Ss other:qd?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> draw<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>w<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>s1 <span class=\"sy0\">=</span> <span class=\"st0\">\" 12345678\"</span><span class=\"sy0\">;</span><br/>  move<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> RWS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"sy0\">,</span> addstr<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span> \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> CLS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"sy0\">,</span> addch<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      w <span class=\"sy0\">=</span> bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>DETECT<span class=\"br0\">(</span>w<span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tw <span class=\"sy0\">=</span> cnx<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"sy0\">-</span>cnx<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>w <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> attr_on<span class=\"br0\">(</span>WA_STANDOUT<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">,</span> w <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>w<span class=\"sy0\">;</span><br/>\taddch<span class=\"br0\">(</span>s1<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tattr_off<span class=\"br0\">(</span>WA_STANDOUT<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>w<span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"br0\">)</span> addch<span class=\"br0\">(</span><span class=\"st0\">'F'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">else</span> addch<span class=\"br0\">(</span><span class=\"st0\">'*'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  move<span class=\"br0\">(</span>row<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>col<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  refresh<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> show<span class=\"br0\">(</span><span class=\"kw4\">int</span> win<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>w<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>s1 <span class=\"sy0\">=</span> <span class=\"st0\">\" 12345678\"</span><span class=\"sy0\">;</span><br/>  move<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> RWS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"sy0\">,</span> addstr<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span> \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> CLS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"sy0\">,</span> addch<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      w <span class=\"sy0\">=</span> bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>DETECT<span class=\"br0\">(</span>w<span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tw <span class=\"sy0\">=</span> cnx<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"sy0\">-</span>cnx<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>w <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> attr_on<span class=\"br0\">(</span>WA_STANDOUT<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">,</span> w <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>w<span class=\"sy0\">;</span><br/>\taddch<span class=\"br0\">(</span>s1<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tattr_off<span class=\"br0\">(</span>WA_STANDOUT<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>w<span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>w<span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"br0\">)</span> addch<span class=\"br0\">(</span><span class=\"st0\">'F'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">else</span> attr_on<span class=\"br0\">(</span>WA_STANDOUT<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">,</span> addch<span class=\"br0\">(</span><span class=\"st0\">'F'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>attr_off<span class=\"br0\">(</span>WA_STANDOUT<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>w<span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"br0\">)</span> addch<span class=\"br0\">(</span><span class=\"st0\">'M'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">else</span> addch<span class=\"br0\">(</span><span class=\"st0\">'*'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  mvaddch<span class=\"br0\">(</span>row<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>col<span class=\"sy0\">,</span><span class=\"st0\">'('</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> mvaddch<span class=\"br0\">(</span>row<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>col<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">')'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  move<span class=\"br0\">(</span>RWS<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  refresh<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co2\">#define HINTBIT(W) s3[DETECT(bd[r][c],(W))]</span><br/><span class=\"co2\">#define NEIGCNT(W) s4[cnx(r,c,(W))]</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>s3<span class=\"sy0\">=</span><span class=\"st0\">\"01\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">*</span>s4<span class=\"sy0\">=</span><span class=\"st0\">\"012345678\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> dbg<span class=\"br0\">(</span><span class=\"kw4\">int</span> r<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> c<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>unkns<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>mines<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>flags<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>pct<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">char</span> o<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> hint<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> RWS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> CLS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><br/>      unkns <span class=\"sy0\">+=</span> DETECT<span class=\"br0\">(</span>bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\tmines <span class=\"sy0\">+=</span> DETECT<span class=\"br0\">(</span>bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span>MINE<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\tflags <span class=\"sy0\">+=</span> DETECT<span class=\"br0\">(</span>bd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  move<span class=\"br0\">(</span>RWS<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> clrtoeol<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pct <span class=\"sy0\">=</span> <span class=\"nu16\">0.5</span><span class=\"sy0\">+</span><span class=\"nu16\">100.0</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>mines<span class=\"sy0\">-</span>flags<span class=\"br0\">)</span><span class=\"sy0\">/</span>MAX<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>unkns<span class=\"sy0\">-</span>flags<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span>hint<span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    o<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> HINTBIT<span class=\"br0\">(</span>UNKN<span class=\"br0\">)</span><span class=\"sy0\">,</span> o<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> HINTBIT<span class=\"br0\">(</span>MINE<span class=\"br0\">)</span><span class=\"sy0\">,</span> o<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> HINTBIT<span class=\"br0\">(</span>FLAG<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      o<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> HINTBIT<span class=\"br0\">(</span>UNKN<span class=\"br0\">)</span><span class=\"sy0\">,</span> o<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> NEIGCNT<span class=\"br0\">(</span>MINE<span class=\"br0\">)</span><span class=\"sy0\">,</span> o<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> NEIGCNT<span class=\"br0\">(</span>FLAG<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/memset.html\"><span class=\"kw3\">memset</span></a><span class=\"br0\">(</span>o<span class=\"sy0\">,</span><span class=\"st0\">'?'</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>o<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  printw<span class=\"br0\">(</span><span class=\"st0\">\"(%c%c%c) u=%c, m=%c, f=%c, \u00a0%d/%d (%d%%) remain.\"</span><span class=\"sy0\">,</span><br/>\t o<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>o<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>o<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>o<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>o<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>o<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>mines<span class=\"sy0\">-</span>flags<span class=\"sy0\">,</span>unkns<span class=\"sy0\">-</span>flags<span class=\"sy0\">,</span>pct<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co2\">#undef NEIGCNT</span><br/><span class=\"co2\">#undef HINTBIT</span><br/>\u00a0<br/><span class=\"kw4\">void</span> toggleflag<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>DETECT<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span>UNKN<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    TGL_BIT<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span>FLAG<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">int</span> sureflag<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  toggleflag<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> autoplay<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">int</span> play<span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span>win<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/getch.html\"><span class=\"kw3\">getch</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> d <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/tolower.html\"><span class=\"kw3\">tolower</span></a><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'q'</span> <span class=\"sy0\">==</span> d<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'?'</span> <span class=\"sy0\">==</span> c<span class=\"br0\">)</span> help<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'h'</span> <span class=\"sy0\">==</span> d<span class=\"br0\">)</span> col <span class=\"sy0\">=</span> MODDEC<span class=\"br0\">(</span>col<span class=\"sy0\">,</span>CLS<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'l'</span> <span class=\"sy0\">==</span> d<span class=\"br0\">)</span> col <span class=\"sy0\">=</span> MODINC<span class=\"br0\">(</span>col<span class=\"sy0\">,</span>CLS<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'k'</span> <span class=\"sy0\">==</span> d<span class=\"br0\">)</span> row <span class=\"sy0\">=</span> MODDEC<span class=\"br0\">(</span>row<span class=\"sy0\">,</span>RWS<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'j'</span> <span class=\"sy0\">==</span> d<span class=\"br0\">)</span> row <span class=\"sy0\">=</span> MODINC<span class=\"br0\">(</span>row<span class=\"sy0\">,</span>RWS<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'f'</span> <span class=\"sy0\">==</span> c<span class=\"br0\">)</span> toggleflag<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'s'</span> <span class=\"sy0\">==</span> c<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"sy0\">*</span>win <span class=\"sy0\">=</span> step<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'S'</span> <span class=\"sy0\">==</span> c<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"sy0\">*</span>win <span class=\"sy0\">=</span> autoplay<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'F'</span> <span class=\"sy0\">==</span> c<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"sy0\">*</span>win <span class=\"sy0\">=</span> sureflag<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'d'</span> <span class=\"sy0\">==</span> d<span class=\"br0\">)</span> dbg<span class=\"br0\">(</span>row<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>col<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> convert<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>name<span class=\"sy0\">,</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>s<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strspn.html\"><span class=\"kw3\">strspn</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">,</span><span class=\"st0\">\"0123456789\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span><span class=\"st0\">\"    use: \u00a0%s [rows [columns [percentBombs]]]<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span><span class=\"st0\">\"default: \u00a0%s 20 30 25<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exit.html\"><span class=\"kw3\">exit</span></a><span class=\"br0\">(</span>EXIT_SUCCESS<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> parse_command_line<span class=\"br0\">(</span><span class=\"kw4\">int</span> ac<span class=\"sy0\">,</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span>av<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span>a<span class=\"sy0\">,</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span>b<span class=\"sy0\">,</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span>c<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>ac<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>  <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span> <span class=\"sy0\">*</span>c <span class=\"sy0\">=</span> convert<span class=\"br0\">(</span><span class=\"sy0\">*</span>av<span class=\"sy0\">,</span>av<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span> <span class=\"sy0\">*</span>b <span class=\"sy0\">=</span> convert<span class=\"br0\">(</span><span class=\"sy0\">*</span>av<span class=\"sy0\">,</span>av<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span> <span class=\"sy0\">*</span>a <span class=\"sy0\">=</span> convert<span class=\"br0\">(</span><span class=\"sy0\">*</span>av<span class=\"sy0\">,</span>av<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> <span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> ac<span class=\"sy0\">,</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span>av<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span>env<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> win <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> rows <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> cols <span class=\"sy0\">=</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> prct <span class=\"sy0\">=</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span><br/>  parse_command_line<span class=\"br0\">(</span>ac<span class=\"sy0\">,</span>av<span class=\"sy0\">,&amp;</span>rows<span class=\"sy0\">,&amp;</span>cols<span class=\"sy0\">,&amp;</span>prct<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  populate<span class=\"br0\">(</span>rows<span class=\"sy0\">,</span>cols<span class=\"sy0\">,</span>prct<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  takedisplay<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>draw<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> play<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>win<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  show<span class=\"br0\">(</span>win<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>bd<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"co2\"># ifdef __unix__</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>s <span class=\"sy0\">=</span> <span class=\"st0\">\"/bin/stty\"</span><span class=\"sy0\">;</span><br/>    execl<span class=\"br0\">(</span>s<span class=\"sy0\">,</span>s<span class=\"sy0\">,</span><span class=\"st0\">\"sane\"</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"co2\"># endif</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 225, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;windows.h&gt;</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">unsigned</span> <span class=\"kw4\">char</span> byte<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">enum</span> fieldValues <span class=\"sy4\">:</span> byte <span class=\"br0\">{</span> OPEN, CLOSED <span class=\"sy1\">=</span> <span class=\"nu0\">10</span>, MINE, UNKNOWN, FLAG, ERR <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> fieldData<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    fieldData<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> value<span class=\"br0\">(</span> CLOSED <span class=\"br0\">)</span>, open<span class=\"br0\">(</span> <span class=\"kw2\">false</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    byte value<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">bool</span> open, mine<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> game<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    ~game<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span> field <span class=\"br0\">)</span> <span class=\"kw3\">delete</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> field<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    game<span class=\"br0\">(</span> <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        go <span class=\"sy1\">=</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span> wid <span class=\"sy1\">=</span> x<span class=\"sy4\">;</span> hei <span class=\"sy1\">=</span> y<span class=\"sy4\">;</span><br/>\tfield <span class=\"sy1\">=</span> <span class=\"kw3\">new</span> fieldData<span class=\"br0\">[</span>x <span class=\"sy2\">*</span> y<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">memset</span><span class=\"br0\">(</span> field, <span class=\"nu0\">0</span>, x <span class=\"sy2\">*</span> y <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> fieldData <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\toMines <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"nu0\">22</span> <span class=\"sy2\">-</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> <span class=\"nu0\">11</span> <span class=\"br0\">)</span> <span class=\"sy2\">*</span> x <span class=\"sy2\">*</span> y <span class=\"br0\">)</span> <span class=\"sy2\">/</span> <span class=\"nu0\">100</span><span class=\"sy4\">;</span><br/>\tmMines <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw4\">int</span> mx, my, m <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"sy4\">;</span> m <span class=\"sy1\">&lt;</span> oMines<span class=\"sy4\">;</span> m<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">do</span><br/>\t    <span class=\"br0\">{</span> mx <span class=\"sy1\">=</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> wid<span class=\"sy4\">;</span> my <span class=\"sy1\">=</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> hei<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\t    <span class=\"kw1\">while</span><span class=\"br0\">(</span> field<span class=\"br0\">[</span>mx <span class=\"sy2\">+</span> wid <span class=\"sy2\">*</span> my<span class=\"br0\">]</span>.<span class=\"me1\">mine</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    field<span class=\"br0\">[</span>mx <span class=\"sy2\">+</span> wid <span class=\"sy2\">*</span> my<span class=\"br0\">]</span>.<span class=\"me1\">mine</span> <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\tgraphs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">' '</span><span class=\"sy4\">;</span> graphs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'.'</span><span class=\"sy4\">;</span> graphs<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'*'</span><span class=\"sy4\">;</span> <br/>\tgraphs<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'?'</span><span class=\"sy4\">;</span> graphs<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'!'</span><span class=\"sy4\">;</span> graphs<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'X'</span><span class=\"sy4\">;</span> <br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> gameLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tstring c, r, a<span class=\"sy4\">;</span><br/>\t<span class=\"kw4\">int</span> col, row<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>go <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    drawBoard<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Enter column, row and an action( c r a ):<span class=\"es1\">\\n</span>Actions: o =&gt; open, f =&gt; flag,\u00a0? =&gt; unknown<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw3\">cin</span> <span class=\"sy1\">&gt;&gt;</span> c <span class=\"sy1\">&gt;&gt;</span> r <span class=\"sy1\">&gt;&gt;</span> a<span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">if</span><span class=\"br0\">(</span> c<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">&gt;</span> <span class=\"st0\">'Z'</span> <span class=\"br0\">)</span> c<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy2\">-</span><span class=\"sy1\">=</span> <span class=\"nu0\">32</span><span class=\"sy4\">;</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">&gt;</span> <span class=\"st0\">'Z'</span> <span class=\"br0\">)</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy2\">-</span><span class=\"sy1\">=</span> <span class=\"nu0\">32</span><span class=\"sy4\">;</span><br/>\t    col <span class=\"sy1\">=</span> c<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy2\">-</span> <span class=\"nu0\">65</span><span class=\"sy4\">;</span> row <span class=\"sy1\">=</span> r<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy2\">-</span> <span class=\"nu0\">49</span><span class=\"sy4\">;</span><br/>\t    makeMove<span class=\"br0\">(</span> col, row, a <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> makeMove<span class=\"br0\">(</span> <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y, string a <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tfieldData<span class=\"sy2\">*</span> fd <span class=\"sy1\">=</span> <span class=\"sy3\">&amp;</span>field<span class=\"br0\">[</span>wid <span class=\"sy2\">*</span> y <span class=\"sy2\">+</span> x<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>open <span class=\"sy3\">&amp;&amp;</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">&lt;</span> CLOSED <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"This cell is already open!\"</span><span class=\"sy4\">;</span><br/>\t    Sleep<span class=\"br0\">(</span> <span class=\"nu0\">3000</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> <span class=\"st0\">'O'</span> <span class=\"br0\">)</span> openCell<span class=\"br0\">(</span> x, y <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> <span class=\"st0\">'F'</span> <span class=\"br0\">)</span> <br/>\t<span class=\"br0\">{</span><br/>\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>open <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">=</span> FLAG<span class=\"sy4\">;</span><br/>\t    mMines<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>\t    checkWin<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">else</span><br/>\t<span class=\"br0\">{</span><br/>\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>open <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">=</span> UNKNOWN<span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> openCell<span class=\"br0\">(</span> <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>isInside<span class=\"br0\">(</span> x, y <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> field<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">mine</span> <span class=\"br0\">)</span> boom<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">else</span> <br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span><span class=\"br0\">(</span> field<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">value</span> <span class=\"sy1\">==</span> FLAG <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\tfield<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">value</span> <span class=\"sy1\">=</span> CLOSED<span class=\"sy4\">;</span><br/>\t\tfield<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">open</span> <span class=\"sy1\">=</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>\t\tmMines<span class=\"sy2\">--</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t    recOpen<span class=\"br0\">(</span> x, y <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    checkWin<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> drawBoard<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw3\">system</span><span class=\"br0\">(</span> <span class=\"st0\">\"cls\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Marked mines: \"</span> <span class=\"sy1\">&lt;&lt;</span> mMines <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" from \"</span> <span class=\"sy1\">&lt;&lt;</span> oMines <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span>\t\t<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> wid<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span> <span class=\"kw4\">char</span> <span class=\"br0\">)</span><span class=\"br0\">(</span> <span class=\"nu0\">65</span> <span class=\"sy2\">+</span> x <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span> <br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span> <span class=\"kw4\">int</span> yy<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> hei<span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    yy <span class=\"sy1\">=</span> y <span class=\"sy2\">*</span> wid<span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> wid<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+---\"</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span> fieldData<span class=\"sy2\">*</span> fd<span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> wid<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\tfd <span class=\"sy1\">=</span> <span class=\"sy3\">&amp;</span>field<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> yy<span class=\"br0\">]</span><span class=\"sy4\">;</span> <span class=\"kw3\">cout</span><span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"| \"</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>open <span class=\"br0\">)</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span> <span class=\"kw4\">char</span> <span class=\"br0\">)</span>graphs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">else</span> <br/>\t\t<span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">if</span><span class=\"br0\">(</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">&gt;</span> <span class=\"nu0\">9</span> <span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span> <span class=\"kw4\">char</span> <span class=\"br0\">)</span>graphs<span class=\"br0\">[</span>fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy2\">-</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span><br/>\t\t    <span class=\"kw1\">else</span><br/>\t\t    <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  \"</span><span class=\"sy4\">;</span><br/>\t\t\t    <span class=\"kw1\">else</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span> <span class=\"kw4\">char</span> <span class=\"br0\">)</span><span class=\"br0\">(</span>fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy2\">+</span> <span class=\"nu0\">48</span> <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span><br/>\t\t    <span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"| \"</span> <span class=\"sy1\">&lt;&lt;</span> y <span class=\"sy2\">+</span> <span class=\"nu0\">1</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> wid<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+---\"</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> checkWin<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> z <span class=\"sy1\">=</span> wid <span class=\"sy2\">*</span> hei <span class=\"sy2\">-</span> oMines, yy<span class=\"sy4\">;</span><br/>\tfieldData<span class=\"sy2\">*</span> fd<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> hei<span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    yy <span class=\"sy1\">=</span> wid <span class=\"sy2\">*</span> y<span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> wid<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\tfd <span class=\"sy1\">=</span> <span class=\"sy3\">&amp;</span>field<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> yy<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>open <span class=\"sy3\">&amp;&amp;</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy3\">!</span><span class=\"sy1\">=</span> FLAG <span class=\"br0\">)</span> z<span class=\"sy2\">--</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>z <span class=\"br0\">)</span> lastMsg<span class=\"br0\">(</span> <span class=\"st0\">\"Congratulations, you won the game!\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> boom<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> yy<span class=\"sy4\">;</span> fieldData<span class=\"sy2\">*</span> fd<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> hei<span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    yy <span class=\"sy1\">=</span> wid <span class=\"sy2\">*</span> y<span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> wid<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\tfd <span class=\"sy1\">=</span> <span class=\"sy3\">&amp;</span>field<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> yy<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">==</span> FLAG <span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>open <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>\t\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">=</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>mine <span class=\"sy4\">?</span> MINE <span class=\"sy4\">:</span> ERR<span class=\"sy4\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span> fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>mine <span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>open <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>\t\t    fd<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>value <span class=\"sy1\">=</span> MINE<span class=\"sy4\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\tlastMsg<span class=\"br0\">(</span> <span class=\"st0\">\"B O O O M M M M M\u00a0!\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> lastMsg<span class=\"br0\">(</span> string s <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tgo <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span> drawBoard<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> s <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> isInside<span class=\"br0\">(</span> <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y <span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span> x <span class=\"sy1\">&gt;</span> <span class=\"sy2\">-</span><span class=\"nu0\">1</span> <span class=\"sy3\">&amp;&amp;</span> y <span class=\"sy1\">&gt;</span> <span class=\"sy2\">-</span><span class=\"nu0\">1</span> <span class=\"sy3\">&amp;&amp;</span> x <span class=\"sy1\">&lt;</span> wid <span class=\"sy3\">&amp;&amp;</span> y <span class=\"sy1\">&lt;</span> hei <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> recOpen<span class=\"br0\">(</span> <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>isInside<span class=\"br0\">(</span> x, y <span class=\"br0\">)</span> <span class=\"sy3\">||</span> field<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">open</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw4\">int</span> bc <span class=\"sy1\">=</span> getMineCount<span class=\"br0\">(</span> x, y <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tfield<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">open</span> <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>\tfield<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">value</span> <span class=\"sy1\">=</span> bc<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> bc <span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> yy <span class=\"sy1\">=</span> <span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">;</span> yy <span class=\"sy1\">&lt;</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> yy<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> xx <span class=\"sy1\">=</span> <span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">;</span> xx <span class=\"sy1\">&lt;</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> xx<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> xx <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"sy3\">&amp;&amp;</span> yy <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy4\">;</span><br/>\t\trecOpen<span class=\"br0\">(</span> x <span class=\"sy2\">+</span> xx, y <span class=\"sy2\">+</span> yy <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> getMineCount<span class=\"br0\">(</span> <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> m <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> yy <span class=\"sy1\">=</span> <span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">;</span> yy <span class=\"sy1\">&lt;</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> yy<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> xx <span class=\"sy1\">=</span> <span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">;</span> xx <span class=\"sy1\">&lt;</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> xx<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> xx <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"sy3\">&amp;&amp;</span> yy <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> isInside<span class=\"br0\">(</span> x <span class=\"sy2\">+</span> xx, y <span class=\"sy2\">+</span> yy <span class=\"br0\">)</span> <span class=\"sy3\">&amp;&amp;</span> field<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> xx <span class=\"sy2\">+</span> <span class=\"br0\">(</span> y <span class=\"sy2\">+</span> yy <span class=\"br0\">)</span> <span class=\"sy2\">*</span> wid<span class=\"br0\">]</span>.<span class=\"me1\">mine</span> <span class=\"br0\">)</span> m<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> m<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> wid, hei, mMines, oMines<span class=\"sy4\">;</span><br/>    fieldData<span class=\"sy2\">*</span> field<span class=\"sy4\">;</span> <span class=\"kw4\">bool</span> go<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> graphs<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"kw4\">int</span> argc, <span class=\"kw4\">char</span><span class=\"sy2\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw3\">srand</span><span class=\"br0\">(</span> GetTickCount<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    game g<span class=\"br0\">(</span> <span class=\"nu0\">4</span>, <span class=\"nu0\">6</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> g.<span class=\"me1\">gameLoop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw3\">system</span><span class=\"br0\">(</span> <span class=\"st0\">\"pause\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 266, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Drawing</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Windows.Forms</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> MineFieldModel<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> RemainingMinesCount<span class=\"br0\">{</span><br/>        <span class=\"kw1\">get</span><span class=\"br0\">{</span><br/>            <span class=\"kw1\">var</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            ForEachCell<span class=\"br0\">(</span><span class=\"br0\">(</span>i,j<span class=\"br0\">)</span><span class=\"sy0\">=&gt;</span><span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Mines<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>Marked<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                    count<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span> count<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">bool</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> Mines<span class=\"br0\">{</span><span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">private</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">bool</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> Opened<span class=\"br0\">{</span><span class=\"kw1\">get</span><span class=\"sy0\">;</span>private <span class=\"kw1\">set</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">bool</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> Marked<span class=\"br0\">{</span><span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">private</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> Values<span class=\"br0\">{</span><span class=\"kw1\">get</span><span class=\"sy0\">;</span>private <span class=\"kw1\">set</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> Width<span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"br0\">{</span><span class=\"kw1\">return</span> Mines<span class=\"sy0\">.</span><span class=\"me1\">GetLength</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span> <span class=\"br0\">}</span> <br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> Height<span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"br0\">{</span><span class=\"kw1\">return</span> Mines<span class=\"sy0\">.</span><span class=\"me1\">GetLength</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> MineFieldModel<span class=\"br0\">(</span><span class=\"kw4\">bool</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> mines<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Mines</span> <span class=\"sy0\">=</span> mines<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Opened</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">bool</span><span class=\"br0\">[</span>Height, Width<span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"co1\">// filled with 'false' by default</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Marked</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">bool</span><span class=\"br0\">[</span>Height, Width<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Values</span> <span class=\"sy0\">=</span> CalculateValues<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> CalculateValues<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> values <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">int</span><span class=\"br0\">[</span>Height, Width<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        ForEachCell<span class=\"br0\">(</span><span class=\"br0\">(</span>i,j<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><span class=\"br0\">{</span><br/>            <span class=\"kw1\">var</span> <span class=\"kw1\">value</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            ForEachNeighbor<span class=\"br0\">(</span>i,j, <span class=\"br0\">(</span>i1,j1<span class=\"br0\">)</span><span class=\"sy0\">=&gt;</span><span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Mines<span class=\"br0\">[</span>i1,j1<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                    <span class=\"kw1\">value</span><span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            values<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> values<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Helper method for iterating over cells</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> ForEachCell<span class=\"br0\">(</span>Action<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span>,<span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> action<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> Height<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> Width<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            action<span class=\"br0\">(</span>i,j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Helper method for iterating over cells' neighbors</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> ForEachNeighbor<span class=\"br0\">(</span><span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> j, Action<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span>,<span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> action<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i1 <span class=\"sy0\">=</span> i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> i1 <span class=\"sy0\">&lt;=</span> i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> i1<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> j1 <span class=\"sy0\">=</span> j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> j1 <span class=\"sy0\">&lt;=</span> j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> j1<span class=\"sy0\">++</span><span class=\"br0\">)</span>               <br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>InBounds<span class=\"br0\">(</span>j1, i1<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><span class=\"br0\">(</span>i1<span class=\"sy0\">==</span>i <span class=\"sy0\">&amp;&amp;</span> j1 <span class=\"sy0\">==</span>j<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                action<span class=\"br0\">(</span>i1, j1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">bool</span> InBounds<span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> y <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> y <span class=\"sy0\">&lt;</span> Height <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&gt;=</span><span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;</span> Width<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">event</span> Action Exploded <span class=\"sy0\">=</span> <span class=\"kw4\">delegate</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">event</span> Action Win <span class=\"sy0\">=</span> <span class=\"kw4\">delegate</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">event</span> Action Updated <span class=\"sy0\">=</span> <span class=\"kw4\">delegate</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> OpenCell<span class=\"br0\">(</span><span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> j<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>Opened<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Mines<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                Exploded<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>                OpenCellsStartingFrom<span class=\"br0\">(</span>i,j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                Updated<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                CheckForVictory<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> OpenCellsStartingFrom<span class=\"br0\">(</span><span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> j<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>            Opened<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>            ForEachNeighbor<span class=\"br0\">(</span>i,j, <span class=\"br0\">(</span>i1,j1<span class=\"br0\">)</span><span class=\"sy0\">=&gt;</span><span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>Mines<span class=\"br0\">[</span>i1,j1<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>Opened<span class=\"br0\">[</span>i1,j1<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>Marked<span class=\"br0\">[</span>i1,j1<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                    OpenCellsStartingFrom<span class=\"br0\">(</span>i1, j1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> CheckForVictory<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> notMarked <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> wrongMarked <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        ForEachCell<span class=\"br0\">(</span><span class=\"br0\">(</span>i,j<span class=\"br0\">)</span><span class=\"sy0\">=&gt;</span><span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Mines<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>Marked<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                notMarked<span class=\"sy0\">++;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>Mines<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> Marked<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                wrongMarked<span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>notMarked <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> wrongMarked <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            Win<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> Mark<span class=\"br0\">(</span><span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> j<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>Opened<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            Marked<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>            Updated<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            CheckForVictory<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">class</span> MineFieldView<span class=\"sy0\">:</span> UserControl<span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> CellSize <span class=\"sy0\">=</span> <span class=\"nu0\">40</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    MineFieldModel _model<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">public</span> MineFieldModel Model<span class=\"br0\">{</span><br/>        <span class=\"kw1\">get</span><span class=\"br0\">{</span> <span class=\"kw1\">return</span> _model<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">set</span><br/>        <span class=\"br0\">{</span> <br/>            _model <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span> <br/>            <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Size</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Size<span class=\"br0\">(</span>_model<span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">*</span> CellSize<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, _model<span class=\"sy0\">.</span><span class=\"me1\">Height</span> <span class=\"sy0\">*</span> CellSize<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> MineFieldView<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"co1\">//Enable double-buffering to eliminate flicker</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">SetStyle</span><span class=\"br0\">(</span>ControlStyles<span class=\"sy0\">.</span><span class=\"me1\">AllPaintingInWmPaint</span> <span class=\"sy0\">|</span> ControlStyles<span class=\"sy0\">.</span><span class=\"me1\">UserPaint</span> <span class=\"sy0\">|</span> ControlStyles<span class=\"sy0\">.</span><span class=\"me1\">DoubleBuffer</span>,<span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Font</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Font<span class=\"br0\">(</span>FontFamily<span class=\"sy0\">.</span><span class=\"me1\">GenericSansSerif</span>, <span class=\"nu0\">14</span>, FontStyle<span class=\"sy0\">.</span><span class=\"me1\">Bold</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">MouseUp</span> <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>o,e<span class=\"br0\">)</span><span class=\"sy0\">=&gt;</span><span class=\"br0\">{</span><br/>            Point cellCoords <span class=\"sy0\">=</span> GetCell<span class=\"br0\">(</span>e<span class=\"sy0\">.</span><span class=\"me1\">Location</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Model <span class=\"sy0\">!=</span> <span class=\"kw1\">null</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e<span class=\"sy0\">.</span><span class=\"me1\">Button</span> <span class=\"sy0\">==</span> MouseButtons<span class=\"sy0\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span><br/>                    Model<span class=\"sy0\">.</span><span class=\"me1\">OpenCell</span><span class=\"br0\">(</span>cellCoords<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, cellCoords<span class=\"sy0\">.</span><span class=\"me1\">X</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e<span class=\"sy0\">.</span><span class=\"me1\">Button</span> <span class=\"sy0\">==</span> MouseButtons<span class=\"sy0\">.</span><span class=\"me1\">Right</span><span class=\"br0\">)</span><br/>                    Model<span class=\"sy0\">.</span><span class=\"me1\">Mark</span><span class=\"br0\">(</span>cellCoords<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, cellCoords<span class=\"sy0\">.</span><span class=\"me1\">X</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Point GetCell<span class=\"br0\">(</span>Point coords<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> rgn <span class=\"sy0\">=</span> ClientRectangle<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> x <span class=\"sy0\">=</span> <span class=\"br0\">(</span>coords<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">-</span> rgn<span class=\"sy0\">.</span><span class=\"me1\">X</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>CellSize<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span>coords<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">-</span> rgn<span class=\"sy0\">.</span><span class=\"me1\">Y</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>CellSize<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> Brush MarkBrush <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> SolidBrush<span class=\"br0\">(</span>Color<span class=\"sy0\">.</span><span class=\"me1\">Blue</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> Brush ValueBrush <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> SolidBrush<span class=\"br0\">(</span>Color<span class=\"sy0\">.</span><span class=\"me1\">Black</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> Brush UnexploredBrush <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> SolidBrush<span class=\"br0\">(</span>SystemColors<span class=\"sy0\">.</span><span class=\"me1\">Control</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> Brush OpenBrush <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> SolidBrush<span class=\"br0\">(</span>SystemColors<span class=\"sy0\">.</span><span class=\"me1\">ControlDark</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw1\">protected</span> <span class=\"kw1\">override</span> <span class=\"kw4\">void</span> OnPaint<span class=\"br0\">(</span>PaintEventArgs e<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">base</span><span class=\"sy0\">.</span><span class=\"me1\">OnPaint</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> g <span class=\"sy0\">=</span> e<span class=\"sy0\">.</span><span class=\"me1\">Graphics</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Model <span class=\"sy0\">!=</span> <span class=\"kw1\">null</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            Model<span class=\"sy0\">.</span><span class=\"me1\">ForEachCell</span><span class=\"br0\">(</span><span class=\"br0\">(</span>i,j<span class=\"br0\">)</span><span class=\"sy0\">=&gt;</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">var</span> bounds <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Rectangle<span class=\"br0\">(</span>j <span class=\"sy0\">*</span> CellSize, i <span class=\"sy0\">*</span> CellSize, CellSize, CellSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Model<span class=\"sy0\">.</span><span class=\"me1\">Opened</span><span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    g<span class=\"sy0\">.</span><span class=\"me1\">FillRectangle</span><span class=\"br0\">(</span>OpenBrush, bounds<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Model<span class=\"sy0\">.</span><span class=\"me1\">Values</span><span class=\"br0\">[</span>i,j<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        DrawStringInCenter<span class=\"br0\">(</span>g, Model<span class=\"sy0\">.</span><span class=\"me1\">Values</span><span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, ValueBrush, bounds<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span> <br/>                <span class=\"kw1\">else</span> <br/>                <span class=\"br0\">{</span><br/>                    g<span class=\"sy0\">.</span><span class=\"me1\">FillRectangle</span><span class=\"br0\">(</span>UnexploredBrush, bounds<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Model<span class=\"sy0\">.</span><span class=\"me1\">Marked</span><span class=\"br0\">[</span>i,j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        DrawStringInCenter<span class=\"br0\">(</span>g, <span class=\"st0\">\"?\"</span>, MarkBrush, bounds<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">var</span> outlineOffset <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">var</span> outline <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Rectangle<span class=\"br0\">(</span>bounds<span class=\"sy0\">.</span><span class=\"me1\">X</span><span class=\"sy0\">+</span>outlineOffset, bounds<span class=\"sy0\">.</span><span class=\"me1\">Y</span><span class=\"sy0\">+</span>outlineOffset, bounds<span class=\"sy0\">.</span><span class=\"me1\">Width</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>outlineOffset, bounds<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>outlineOffset<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    g<span class=\"sy0\">.</span><span class=\"me1\">DrawRectangle</span><span class=\"br0\">(</span>Pens<span class=\"sy0\">.</span><span class=\"me1\">Gray</span>, outline<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                g<span class=\"sy0\">.</span><span class=\"me1\">DrawRectangle</span><span class=\"br0\">(</span>Pens<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, bounds<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> StringFormat FormatCenter <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> StringFormat<br/>                            <span class=\"br0\">{</span><br/>                                LineAlignment <span class=\"sy0\">=</span> StringAlignment<span class=\"sy0\">.</span><span class=\"me1\">Center</span>,<br/>                                Alignment<span class=\"sy0\">=</span>StringAlignment<span class=\"sy0\">.</span><span class=\"me1\">Center</span><br/>                            <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> DrawStringInCenter<span class=\"br0\">(</span>Graphics g, <span class=\"kw4\">string</span> s, Brush brush, Rectangle bounds<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        PointF center <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> PointF<span class=\"br0\">(</span>bounds<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> bounds<span class=\"sy0\">.</span><span class=\"me1\">Width</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span>, bounds<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">+</span> bounds<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">DrawString</span><span class=\"br0\">(</span>s, <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Font</span>, brush, center, FormatCenter<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">class</span> MineSweepForm<span class=\"sy0\">:</span> Form<br/><span class=\"br0\">{</span><br/>\u00a0<br/>    MineFieldModel CreateField<span class=\"br0\">(</span><span class=\"kw4\">int</span> width, <span class=\"kw4\">int</span> height<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> field <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">bool</span><span class=\"br0\">[</span>height, width<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> mineCount <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">0.2</span> <span class=\"sy0\">*</span> height <span class=\"sy0\">*</span> width<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> rnd <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span><span class=\"br0\">(</span>mineCount <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">var</span> x <span class=\"sy0\">=</span> rnd<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span>width<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">var</span> y <span class=\"sy0\">=</span> rnd<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span>height<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>field<span class=\"br0\">[</span>y,x<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                field<span class=\"br0\">[</span>y,x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>                mineCount<span class=\"sy0\">--;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> MineFieldModel<span class=\"br0\">(</span>field<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> MineSweepForm<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> model <span class=\"sy0\">=</span> CreateField<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> counter <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Label<span class=\"br0\">{</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        counter<span class=\"sy0\">.</span><span class=\"me1\">Text</span> <span class=\"sy0\">=</span> model<span class=\"sy0\">.</span><span class=\"me1\">RemainingMinesCount</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> view <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> MineFieldView<br/>                        <span class=\"br0\">{</span> <br/>                            Model <span class=\"sy0\">=</span> model, BorderStyle <span class=\"sy0\">=</span> BorderStyle<span class=\"sy0\">.</span><span class=\"me1\">FixedSingle</span>,<br/>                        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> stackPanel <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> FlowLayoutPanel<br/>                        <span class=\"br0\">{</span><br/>                            Dock <span class=\"sy0\">=</span> DockStyle<span class=\"sy0\">.</span><span class=\"me1\">Fill</span>,<br/>                            FlowDirection <span class=\"sy0\">=</span> FlowDirection<span class=\"sy0\">.</span><span class=\"me1\">TopDown</span>,<br/>                            Controls <span class=\"sy0\">=</span> <span class=\"br0\">{</span>counter, view<span class=\"br0\">}</span><br/>                        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">Controls</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>stackPanel<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        model<span class=\"sy0\">.</span><span class=\"me1\">Updated</span> <span class=\"sy0\">+=</span> <span class=\"kw4\">delegate</span><span class=\"br0\">{</span><br/>            view<span class=\"sy0\">.</span><span class=\"me1\">Invalidate</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            counter<span class=\"sy0\">.</span><span class=\"me1\">Text</span> <span class=\"sy0\">=</span> model<span class=\"sy0\">.</span><span class=\"me1\">RemainingMinesCount</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        model<span class=\"sy0\">.</span><span class=\"me1\">Exploded</span> <span class=\"sy0\">+=</span> <span class=\"kw4\">delegate</span> <span class=\"br0\">{</span><br/>            MessageBox<span class=\"sy0\">.</span><span class=\"me1\">Show</span><span class=\"br0\">(</span><span class=\"st0\">\"FAIL!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Close<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        model<span class=\"sy0\">.</span><span class=\"me1\">Win</span> <span class=\"sy0\">+=</span> <span class=\"kw4\">delegate</span> <span class=\"br0\">{</span><br/>            MessageBox<span class=\"sy0\">.</span><span class=\"me1\">Show</span><span class=\"br0\">(</span><span class=\"st0\">\"WIN!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            view<span class=\"sy0\">.</span><span class=\"me1\">Enabled</span> <span class=\"sy0\">=</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        Application<span class=\"sy0\">.</span><span class=\"me1\">Run</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> MineSweepForm<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ceylon", "loc": 134, "block": "<pre class=\"text highlighted_source\">import ceylon.random {<br/>\u00a0<br/>\tDefaultRandom<br/>}<br/>\u00a0<br/>class Cell() {<br/>\u00a0<br/>\tshared variable Boolean covered = true;<br/>\tshared variable Boolean flagged = false;<br/>\tshared variable Boolean mined = false;<br/>\tshared variable Integer adjacentMines = 0;<br/>\u00a0<br/>\tstring =&gt; <br/>\t\t\tif (covered &amp;&amp;\u00a0!flagged) <br/>\t\t\tthen \".\" <br/>\t\t\telse if (covered &amp;&amp; flagged) <br/>\t\t\tthen \"?\" <br/>\t\t\telse if (!covered &amp;&amp; mined)<br/>\t\t\tthen \"X\"<br/>\t\t\telse if (!covered &amp;&amp; adjacentMines &gt; 0) <br/>\t\t\tthen adjacentMines.string <br/>\t\t\telse \" \";<br/>}<br/>\u00a0<br/>\"The main function of the module. Run this one.\"<br/>shared void run() {<br/>\u00a0<br/>\tvalue random = DefaultRandom();<br/>\tvalue chanceOfBomb = 0.2;<br/>\u00a0<br/>\tvalue width = 6;<br/>\tvalue height = 4;<br/>\u00a0<br/>\tvalue grid = Array { for (j in 1..height) Array { for (i in 1..width) Cell() } };<br/>\u00a0<br/>\tfunction getCell(Integer x, Integer y) =&gt; grid[y]?.get(x);<br/>\u00a0<br/>\tvoid initializeGrid() {<br/>\u00a0<br/>\t\tfor (row in grid) {<br/>\t\t\tfor (cell in row) {<br/>\t\t\t\tcell.covered = true;<br/>\t\t\t\tcell.flagged = false;<br/>\t\t\t\tcell.mined = random.nextFloat() &lt; chanceOfBomb;<br/>\t\t\t}<br/>\t\t}<br/>\u00a0<br/>\t\tfunction countAdjacentMines(Integer x, Integer y) =&gt; count { <br/>\t\t\tfor (j in y - 1 .. y + 1) <br/>\t\t\tfor (i in x - 1 .. x + 1)<br/>\t\t\tif (exists cell = getCell(i, j))<br/>\t\t\tcell.mined<br/>\t\t};<br/>\u00a0<br/>\t\tfor (j-&gt;row in grid.indexed) {<br/>\t\t\tfor (i-&gt;cell in row.indexed) {<br/>\t\t\t\tcell.adjacentMines = countAdjacentMines(i, j);<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\tvoid displayGrid() {<br/>\t\tprint(\"  \" + \"\".join(1..width));<br/>\t\tprint(\"  \" + \"-\".repeat(width));<br/>\t\tfor (j-&gt;row in grid.indexed) {<br/>\t\t\tprint(\"``j + 1``|``\"\".join(row)``|``j + 1``\");<br/>\t\t}<br/>\t\tprint(\"  \" + \"-\".repeat(width));<br/>\t\tprint(\"  \" + \"\".join(1..width));<br/>\t}<br/>\u00a0<br/>\tBoolean won() =&gt;<br/>\t\texpand(grid).every((cell) =&gt; (cell.flagged &amp;&amp; cell.mined) || (!cell.flagged &amp;&amp;\u00a0!cell.mined));<br/>\u00a0<br/>\tvoid uncoverNeighbours(Integer x, Integer y) {<br/>\t\tfor (j in y - 1 .. y + 1) {<br/>\t\t\tfor (i in x - 1 .. x + 1) {<br/>\t\t\t\tif (exists cell = getCell(i, j), cell.covered,\u00a0!cell.flagged,\u00a0!cell.mined) {<br/>\t\t\t\t\tcell.covered = false;<br/>\t\t\t\t\tif (cell.adjacentMines == 0) {<br/>\t\t\t\t\t\tuncoverNeighbours(i, j);<br/>\t\t\t\t\t}<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\twhile (true) {<br/>\t\tprint(\"Welcome to minesweeper!<br/>\t\t       -----------------------\");<br/>\t\tinitializeGrid();<br/>\t\twhile (true) {<br/>\t\t\tdisplayGrid();<br/>\t\t\tprint(\"<br/>\t\t\t       The number of mines to find is ``count(expand(grid)*.mined)``.<br/>\t\t\t       What would you like to do? <br/>\t\t\t       [1] reveal a free space (or blow yourself up)<br/>\t\t\t       [2] mark (or unmark) a mine\");<br/>\t\t\tassert (exists instruction = process.readLine());<br/>\t\t\tprint(\"Please enter the coordinates. eg 2 4\");<br/>\t\t\tassert (exists line2 = process.readLine());<br/>\t\t\tvalue coords = line2.split().map(Integer.parse).narrow&lt;Integer&gt;().sequence();<br/>\t\t\tif (exists x = coords[0], exists y = coords[1], exists cell = getCell(x - 1, y - 1)) {<br/>\t\t\t\tswitch (instruction)<br/>\t\t\t\tcase (\"1\") {<br/>\t\t\t\t\tif (cell.mined) {<br/>\t\t\t\t\t\tprint(\"=================<br/>\t\t\t\t\t\t       === You lose! ===<br/>\t\t\t\t\t\t       =================\");<br/>\t\t\t\t\t\texpand(grid).each((cell) =&gt; cell.covered = false);<br/>\t\t\t\t\t\tdisplayGrid();<br/>\t\t\t\t\t\tbreak;<br/>\t\t\t\t\t}<br/>\t\t\t\t\telse if (cell.covered) {<br/>\t\t\t\t\t\tcell.covered = false;<br/>\t\t\t\t\t\tuncoverNeighbours(x - 1, y - 1);<br/>\t\t\t\t\t}<br/>\t\t\t\t}<br/>\t\t\t\tcase (\"2\") {<br/>\t\t\t\t\tif (cell.covered) {<br/>\t\t\t\t\t\tcell.flagged =\u00a0!cell.flagged;<br/>\t\t\t\t\t}<br/>\t\t\t\t}<br/>\t\t\t\telse { print(\"bad choice\"); }<br/>\t\t\t\tif (won()) {<br/>\t\t\t\t\tprint(\"****************<br/>\t\t\t\t\t       *** You win! ***<br/>\t\t\t\t\t       ****************\");<br/>\t\t\t\t\tbreak;<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>}</pre>"}, {"lang": "Clojure", "loc": 78, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defn</span> take<span class=\"sy0\">-</span>random <span class=\"br0\">[</span>n coll<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">repeatedly</span> #<span class=\"br0\">(</span>rand<span class=\"sy0\">-</span>nth coll<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"kw1\">distinct</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">take</span> n ,<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> postwalk<span class=\"sy0\">-</span>fs<br/>  <span class=\"st0\">\"Depth first post-order traversal of form, apply successive fs at each level.<br/>  (f1 (map f2 [..]))\"</span><br/>  <span class=\"br0\">[</span><span class=\"br0\">[</span>f <span class=\"sy0\">&amp;</span> fs<span class=\"br0\">]</span> form<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span>f<br/>   <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>seq fs<span class=\"br0\">)</span> <span class=\"br0\">(</span>coll? form<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     <span class=\"br0\">(</span><span class=\"kw1\">into</span> <span class=\"br0\">(</span>empty form<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> <span class=\"br0\">(</span>partial postwalk<span class=\"sy0\">-</span>fs fs<span class=\"br0\">)</span> form<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     form<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> neighbors <span class=\"br0\">[</span>x y n m pred<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">for</span> <span class=\"br0\">[</span>dx <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>max <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">dec</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>min n <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">2</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\tdy <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>max <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">dec</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>min m <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">2</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t:<span class=\"kw1\">when</span> <span class=\"br0\">(</span>pred dx dy<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">[</span>dx dy<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> new<span class=\"sy0\">-</span>game <span class=\"br0\">[</span>n m density<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>mines <span class=\"br0\">(</span><span class=\"kw1\">set</span> <span class=\"br0\">(</span>take<span class=\"sy0\">-</span>random <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span><span class=\"kw1\">floor</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> n m density<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> n m<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">for</span> <span class=\"br0\">[</span>y <span class=\"br0\">(</span><span class=\"kw1\">range</span> m<span class=\"br0\">)</span><br/>\t       x <span class=\"br0\">(</span><span class=\"kw1\">range</span> n<span class=\"br0\">)</span><br/>\t      \u00a0:<span class=\"kw1\">let</span> <span class=\"br0\">[</span>neighbor<span class=\"sy0\">-</span>mines <span class=\"br0\">(</span><span class=\"kw1\">count</span> <span class=\"br0\">(</span>neighbors x y n m #<span class=\"br0\">(</span>mines <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">%</span>1 <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"sy0\">%</span>2 n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t   <span class=\"br0\">(</span>#<span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>mines <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> y n<span class=\"br0\">)</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">assoc</span> <span class=\"sy0\">%</span>\u00a0:<span class=\"me1\">mine</span> true<span class=\"br0\">)</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>:<span class=\"me1\">value</span> neighbor<span class=\"sy0\">-</span>mines<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t <span class=\"br0\">(</span><span class=\"kw1\">partition</span> n ,<span class=\"br0\">)</span><br/>\t <span class=\"br0\">(</span>postwalk<span class=\"sy0\">-</span>fs <span class=\"br0\">[</span><span class=\"kw1\">vec</span> <span class=\"kw1\">vec</span><span class=\"br0\">]</span> ,<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> display <span class=\"br0\">[</span>board<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span>postwalk<span class=\"sy0\">-</span>fs <span class=\"br0\">[</span>identity println #<span class=\"br0\">(</span><span class=\"kw1\">condp</span> <span class=\"sy0\">%</span> nil<br/>\t\t\t\t   \u00a0:<span class=\"me1\">marked</span> \\?<br/>\t\t\t\t   \u00a0:<span class=\"me1\">opened</span> <span class=\"br0\">(</span>:<span class=\"me1\">value</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span><br/>\t\t\t\t    \\<span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"br0\">]</span> board<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> boom <span class=\"br0\">[</span><span class=\"br0\">{</span>board\u00a0:<span class=\"me1\">board</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span>postwalk<span class=\"sy0\">-</span>fs <span class=\"br0\">[</span>identity println #<span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>:<span class=\"me1\">mine</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span> \\<span class=\"sy0\">*</span> <span class=\"br0\">(</span>:<span class=\"me1\">value</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span> board<span class=\"br0\">)</span><br/>  true<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> open<span class=\"sy0\">*</span> <span class=\"br0\">[</span>board <span class=\"br0\">[</span><span class=\"br0\">[</span>x y<span class=\"br0\">]</span> <span class=\"sy0\">&amp;</span> <span class=\"kw1\">rest</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if-let</span> <span class=\"br0\">[</span>value <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>in board <span class=\"br0\">[</span>y x\u00a0:<span class=\"me1\">value</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"co1\">; if nil? value -&gt; nil? x -&gt; nil? queue</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">recur</span><br/>     <span class=\"br0\">(</span>assoc<span class=\"sy0\">-</span>in board <span class=\"br0\">[</span>y x\u00a0:<span class=\"me1\">opened</span><span class=\"br0\">]</span> true<span class=\"br0\">)</span><br/>     <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">pos?</span> value<span class=\"br0\">)</span><br/>       <span class=\"kw1\">rest</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">concat</span> <span class=\"kw1\">rest</span><br/>\t       <span class=\"br0\">(</span>neighbors x y <span class=\"br0\">(</span><span class=\"kw1\">count</span> <span class=\"br0\">(</span><span class=\"kw1\">first</span> board<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">count</span> board<span class=\"br0\">)</span><br/>\t\t\t  #<span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>in board <span class=\"br0\">[</span><span class=\"sy0\">%</span>2 <span class=\"sy0\">%</span>1\u00a0:<span class=\"me1\">opened</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    board<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> open <span class=\"br0\">[</span>board x y<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>x <span class=\"br0\">(</span><span class=\"kw1\">dec</span> x<span class=\"br0\">)</span>, y <span class=\"br0\">(</span><span class=\"kw1\">dec</span> y<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">condp</span> <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>in board <span class=\"br0\">[</span>y x<span class=\"br0\">]</span><span class=\"br0\">)</span> nil<br/>     \u00a0:<span class=\"me1\">mine</span> <span class=\"br0\">{</span>:<span class=\"me1\">boom</span> true\u00a0:<span class=\"me1\">board</span> board<span class=\"br0\">}</span><br/>     \u00a0:<span class=\"me1\">opened</span> board<br/>      <span class=\"br0\">(</span>open<span class=\"sy0\">*</span> board <span class=\"br0\">[</span><span class=\"br0\">[</span>x y<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> mark <span class=\"br0\">[</span>board x y<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>x <span class=\"br0\">(</span><span class=\"kw1\">dec</span> x<span class=\"br0\">)</span>, y <span class=\"br0\">(</span><span class=\"kw1\">dec</span> y<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>assoc<span class=\"sy0\">-</span>in board <span class=\"br0\">[</span>y x\u00a0:<span class=\"me1\">marked</span><span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>in board <span class=\"br0\">[</span>y x\u00a0:<span class=\"me1\">marked</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> done? <span class=\"br0\">[</span>board<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>:<span class=\"me1\">boom</span> board<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>boom board<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span>display board<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> <span class=\"br0\">(</span>flatten board<span class=\"br0\">)</span><br/>\t     <span class=\"br0\">(</span><span class=\"kw1\">remove</span>\u00a0:<span class=\"me1\">mine</span> ,<span class=\"br0\">)</span><br/>\t     <span class=\"br0\">(</span><span class=\"kw1\">every?</span>\u00a0:<span class=\"me1\">opened</span> ,<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> play <span class=\"br0\">[</span>n m density<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>board <span class=\"br0\">(</span>new<span class=\"sy0\">-</span>game n m density<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>println <span class=\"br0\">[</span>:<span class=\"me1\">mines</span> <span class=\"br0\">(</span><span class=\"kw1\">count</span> <span class=\"br0\">(</span><span class=\"kw1\">filter</span>\u00a0:<span class=\"me1\">mine</span> <span class=\"br0\">(</span>flatten board<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">loop</span> <span class=\"br0\">[</span>board board<span class=\"br0\">]</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">when-not</span> <span class=\"br0\">(</span>done? board<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"&gt;\"</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>cmd <span class=\"sy0\">&amp;</span> xy<span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span>split #<span class=\"st0\">\" \"</span> <span class=\"br0\">(</span>read<span class=\"sy0\">-</span>line<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t      <span class=\"br0\">[</span>x y<span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span>Integer<span class=\"sy0\">.</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span> xy<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\t  <span class=\"br0\">(</span><span class=\"kw1\">recur</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> cmd <span class=\"st0\">\"mark\"</span><span class=\"br0\">)</span> mark open<span class=\"br0\">)</span> board x y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Common Lisp", "loc": 87, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>defclass minefield <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span>mines <span class=\"sy0\">:</span><span class=\"me1\">initform</span> <span class=\"br0\">(</span>make-hash-table <span class=\"sy0\">:</span><span class=\"me1\">test</span> #'<span class=\"kw1\">equal</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>width <span class=\"sy0\">:</span><span class=\"me1\">initarg</span> <span class=\"sy0\">:</span><span class=\"me1\">width</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>height <span class=\"sy0\">:</span><span class=\"me1\">initarg</span> <span class=\"sy0\">:</span><span class=\"me1\">height</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>grid <span class=\"sy0\">:</span><span class=\"me1\">initarg</span> <span class=\"sy0\">:</span><span class=\"me1\">grid</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> make-minefield <span class=\"br0\">(</span>width height num-mines<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>minefield <span class=\"br0\">(</span>make-instance 'minefield<br/>                                  <span class=\"sy0\">:</span><span class=\"me1\">width</span> width<br/>                                  <span class=\"sy0\">:</span><span class=\"me1\">height</span> height<br/>                                  <span class=\"sy0\">:</span><span class=\"me1\">grid</span> <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span><br/>                                          <span class=\"br0\">(</span><span class=\"kw1\">list</span> width height<span class=\"br0\">)</span><br/>                                          <span class=\"sy0\">:</span><span class=\"me1\">initial-element</span> #\\<span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>mine-count <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>with-slots <span class=\"br0\">(</span>grid mines<span class=\"br0\">)</span> minefield<br/>      <span class=\"br0\">(</span>loop while <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> mine-count num-mines<span class=\"br0\">)</span><br/>            <span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>coords <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"kw1\">random</span> width<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">random</span> height<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span>unless <span class=\"br0\">(</span>gethash coords mines<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span>gethash coords mines<span class=\"br0\">)</span> T<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span>incf mine-count<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      minefield<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> print-field <span class=\"br0\">(</span>minefield<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>with-slots <span class=\"br0\">(</span>width height grid<span class=\"br0\">)</span> minefield<br/>    <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>y height<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>x width<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> grid x y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>format t <span class=\"st0\">\"~%\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> mine-<span class=\"kw1\">list</span> <span class=\"br0\">(</span>minefield<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for key being the hash-keys of <span class=\"br0\">(</span>slot-<span class=\"kw1\">value</span> minefield 'mines<span class=\"br0\">)</span> collect key<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> count-nearby-mines <span class=\"br0\">(</span>minefield coords<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">length</span> <span class=\"br0\">(</span>remove-if-<span class=\"kw1\">not</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>mine-coord<span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span><span class=\"kw1\">and</span><br/>                <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"kw1\">abs</span> <span class=\"br0\">(</span>- <span class=\"br0\">(</span><span class=\"kw1\">car</span> coords<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> mine-coord<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"kw1\">abs</span> <span class=\"br0\">(</span>- <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> coords<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> mine-coord<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>mine-<span class=\"kw1\">list</span> minefield<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> clear <span class=\"br0\">(</span>minefield coords<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>with-slots <span class=\"br0\">(</span>mines grid<span class=\"br0\">)</span> minefield<br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>gethash coords mines<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">progn</span><br/>        <span class=\"br0\">(</span>format t <span class=\"st0\">\"MINE! You lose.~%\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">dolist</span> <span class=\"br0\">(</span>mine-coords <span class=\"br0\">(</span>mine-<span class=\"kw1\">list</span> minefield<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> grid <span class=\"br0\">(</span><span class=\"kw1\">car</span> mine-coords<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> mine-coords<span class=\"br0\">)</span><span class=\"br0\">)</span> #\\x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> grid <span class=\"br0\">(</span><span class=\"kw1\">car</span> coords<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> coords<span class=\"br0\">)</span><span class=\"br0\">)</span> #\\X<span class=\"br0\">)</span><br/>        <span class=\"kw1\">nil</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> grid <span class=\"br0\">(</span><span class=\"kw1\">car</span> coords<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> coords<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>elt <span class=\"st0\">\" 123456789\"</span><span class=\"br0\">(</span>count-nearby-mines minefield coords<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> mark <span class=\"br0\">(</span>minefield coords<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>with-slots <span class=\"br0\">(</span>mines grid<span class=\"br0\">)</span> minefield<br/>    <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> grid <span class=\"br0\">(</span><span class=\"kw1\">car</span> coords<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> coords<span class=\"br0\">)</span><span class=\"br0\">)</span> #\\?<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> win-p <span class=\"br0\">(</span>minefield<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>with-slots <span class=\"br0\">(</span>width height grid mines<span class=\"br0\">)</span> minefield<br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>num-uncleared <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>y height<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>x width<span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>square <span class=\"br0\">(</span><span class=\"kw1\">aref</span> grid x y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">member</span> square '<span class=\"br0\">(</span>#\\<span class=\"sy0\">.</span> #\\?<span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">test</span> #'char<span class=\"sy0\">=</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span>incf num-uncleared<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">=</span> num-uncleared <span class=\"br0\">(</span>hash-table-count mines<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> play-game <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>minefield <span class=\"br0\">(</span>make-minefield <span class=\"nu0\">6</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>format t <span class=\"st0\">\"Greetings player, there are ~a mines.~%\"</span><br/>            <span class=\"br0\">(</span>hash-table-count <span class=\"br0\">(</span>slot-<span class=\"kw1\">value</span> minefield 'mines<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>loop<br/>      <span class=\"br0\">(</span>print-field minefield<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>format t <span class=\"st0\">\"Enter your command, examples: <span class=\"es0\">\\\"</span>clear 0 1<span class=\"es0\">\\\"</span> <span class=\"es0\">\\\"</span>mark 1 2<span class=\"es0\">\\\"</span> <span class=\"es0\">\\\"</span>quit<span class=\"es0\">\\\"</span>.~%\"</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"st0\">\"&gt; \"</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>user-command <span class=\"br0\">(</span>read-from-string <span class=\"br0\">(</span>format <span class=\"kw1\">nil</span> <span class=\"st0\">\"(~a)\"</span> <span class=\"br0\">(</span>read-line<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>format t <span class=\"st0\">\"Your command: ~a~%\"</span> user-command<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">case</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> user-command<span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>quit <span class=\"br0\">(</span>return-from play-game <span class=\"kw1\">nil</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>clear <span class=\"br0\">(</span>unless <span class=\"br0\">(</span>clear minefield <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> user-command<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span>print-field minefield<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span>return-from play-game <span class=\"kw1\">nil</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>mark <span class=\"br0\">(</span>mark minefield <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> user-command<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span>win-p minefield<span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>format t <span class=\"st0\">\"Congratulations, you've won!\"</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>return-from play-game T<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>play-game<span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 181, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw2\">global</span> DEFARGS<span class=\"sy1\">,</span>MF<br/>\u00a0<br/><span class=\"kw1\">record</span> minefield<span class=\"br0\">(</span>mask<span class=\"sy1\">,</span>grid<span class=\"sy1\">,</span>rows<span class=\"sy1\">,</span>cols<span class=\"sy1\">,</span>mines<span class=\"sy1\">,</span>density<span class=\"sy1\">,</span>marked<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _DEFAULTS  <span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span>  <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"sy1\">.</span>2<span class=\"sy1\">,</span> <span class=\"sy1\">.</span>6<span class=\"br0\">]</span>  <span class=\"co1\"># task defaults</span><br/><span class=\"co1\">#$define _DEFAULTS  [6, 7, .05, .1]   # defaults for debugging</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _INDENT    <span class=\"nu0\">6</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _MINE      <span class=\"st0\">\"Y\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _TRUEMINE  <span class=\"st0\">\"Y\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _FALSEMINE <span class=\"st0\">\"N\"</span> <br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _MASK      <span class=\"st0\">\".\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _MARK      <span class=\"st0\">\"?\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _TOGGLE1   <span class=\"st0\">\".?\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _TOGGLE2   <span class=\"st0\">\"?.\"</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>arglist<span class=\"br0\">)</span>                           <span class=\"co1\">#: play the game</span><br/><span class=\"kw2\">static</span> trace <br/><span class=\"kw1\">initial</span> trace <span class=\"sy1\">:=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><br/>\u00a0<br/>DEFARGS <span class=\"sy1\">:=</span> _DEFAULTS<br/><span class=\"kw1\">if</span> <span class=\"sy1\">*</span>arglist <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> arglist <span class=\"sy1\">:=</span> DEFARGS<br/>\u00a0<br/>newgame<span class=\"sy1\">!</span>arglist<br/><span class=\"kw1\">while</span> c <span class=\"sy1\">:=</span> <span class=\"kw4\">trim</span><span class=\"br0\">(</span><span class=\"kw4\">read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>   c <span class=\"sy1\">?</span> <span class=\"br0\">{</span>  <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">case</span> <span class=\"kw4\">move</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span> <span class=\"br0\">{</span><br/>                                                 <span class=\"co1\"># required commands</span><br/>            <span class=\"st0\">\"c\"</span><span class=\"sy1\">:</span> clear<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>            <span class=\"co1\">#   c  clear 1 sq and show</span><br/>            <span class=\"st0\">\"m\"</span><span class=\"sy1\">:</span> mark<span class=\"br0\">(</span><span class=\"br0\">)</span>                          <span class=\"co1\">#   m flag/unflag a mine</span><br/>            <span class=\"st0\">\"p\"</span><span class=\"sy1\">:</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>                      <span class=\"co1\">#   p show the mine field</span><br/>            <span class=\"st0\">\"r\"</span><span class=\"sy1\">:</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"Resigning.\"</span><span class=\"br0\">)</span>           <span class=\"co1\">#   r resign this game</span><br/>                                                 <span class=\"co1\"># optional commands</span><br/>            <span class=\"st0\">\"n\"</span><span class=\"sy1\">:</span> newgame<span class=\"sy1\">!</span>arglist                 <span class=\"co1\">#   n new game grid</span><br/>            <span class=\"st0\">\"k\"</span><span class=\"sy1\">:</span> clearunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>    <span class=\"co1\">#   k clears adjecent unmarked cells if #flags = count</span><br/>            <span class=\"st0\">\"x\"</span><span class=\"sy1\">:</span> clearallunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span>              <span class=\"co1\">#   x clears every unflagged cell at once win/loose fast</span><br/>            <span class=\"st0\">\"q\"</span><span class=\"sy1\">:</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Quitting\"</span><span class=\"br0\">)</span>                <span class=\"co1\">#   q quit</span><br/>            <span class=\"st0\">\"t\"</span><span class=\"sy1\">:</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">trace</span> <span class=\"sy1\">:=:</span> trace                <span class=\"co1\">#   t toggle tracing for debugging</span><br/>            <span class=\"kw1\">default</span><span class=\"sy1\">:</span> usage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><span class=\"br0\">}</span> <br/>   testforwin<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> newgame<span class=\"br0\">(</span>r<span class=\"sy1\">,</span>c<span class=\"sy1\">,</span>l<span class=\"sy1\">,</span>h<span class=\"br0\">)</span>                       <span class=\"co1\">#: start a new game</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>t<br/>\u00a0<br/>MF <span class=\"sy1\">:=</span> minefield<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span> <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>r<span class=\"br0\">)</span> <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>c<span class=\"br0\">)</span> <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">every</span> <span class=\"sy1\">!</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"sy1\">,</span>_MASK<span class=\"br0\">)</span>  <span class=\"co1\"># set mask</span><br/><span class=\"kw1\">every</span> <span class=\"sy1\">!</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>      <span class=\"co1\"># default count</span><br/>\u00a0<br/>l <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">&gt;</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">real</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>l<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><br/>h <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">&gt;</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">real</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>h<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/><span class=\"kw1\">if</span> l <span class=\"sy1\">&gt;</span> h <span class=\"kw1\">then</span> l <span class=\"sy1\">:=:</span> h<br/>\u00a0<br/><span class=\"kw1\">until</span> MF<span class=\"sy1\">.</span><span class=\"me1\">density</span> <span class=\"sy1\">:=</span> l <span class=\"sy1\">&lt;=</span> <span class=\"br0\">(</span> h <span class=\"sy1\">&gt;=</span> <span class=\"sy1\">?</span><span class=\"nu0\">0</span> <span class=\"br0\">)</span>                      <span class=\"co1\"># random density between l:h</span><br/>MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span> <span class=\"sy1\">*</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">*</span> MF<span class=\"sy1\">.</span><span class=\"me1\">density</span><span class=\"br0\">)</span>       <span class=\"co1\"># mines needed</span><br/>MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span> <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Creating \"</span><span class=\"sy1\">,</span>r<span class=\"sy1\">,</span><span class=\"st0\">\"x\"</span><span class=\"sy1\">,</span>c<span class=\"sy1\">,</span><span class=\"st0\">\" mine field with \"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span><span class=\"sy1\">,</span><span class=\"st0\">\" (\"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">density</span> <span class=\"sy1\">*</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span><span class=\"st0\">\"%).\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span> <span class=\"kw1\">do</span> <span class=\"kw1\">until</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>r <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"sy1\">,</span> c <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span>                <span class=\"co1\"># set mines</span><br/><span class=\"kw1\">every</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"sy1\">,</span>j<span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">]</span> <span class=\"sy1\">+:=</span> <span class=\"br0\">(</span><span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span>j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"co1\"># set counts</span><br/>\u00a0<br/>showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/><span class=\"kw1\">end</span> <br/>\u00a0<br/><span class=\"kw1\">procedure</span> usage<span class=\"br0\">(</span><span class=\"br0\">)</span>                                         <span class=\"co1\">#: show usage</span><br/><span class=\"kw1\">return</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><br/><span class=\"st0\">\"h or\u00a0? - this help<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"n      - start a new game<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"c i j  - clears x,y and displays the grid<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"m i j  - marks (toggles) x,y<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"p      - displays the grid<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"k i j  - clears adjecent unmarked cells if #marks = count<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"x      - clears ALL unmarked flags at once<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"r      - resign the game<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"q      - quit the game<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"where i is the (vertical) row number and j is the (horizontal) column number.\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> getn<span class=\"br0\">(</span>n<span class=\"br0\">)</span>                                         <span class=\"co1\">#: command parsing</span><br/>  <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> n <span class=\"sy1\">:=</span> n <span class=\"sy1\">&gt;=</span> <span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">digits</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> n<br/>  <span class=\"kw1\">else</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid or out of bounds grid square.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>                                      <span class=\"co1\">#: show grid</span><br/><span class=\"kw2\">local</span> r<span class=\"sy1\">,</span>c<span class=\"sy1\">,</span>x<br/>\u00a0<br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"sy1\">,</span>_INDENT<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\"   \"</span><span class=\"sy1\">,</span><span class=\"kw4\">repl</span><span class=\"br0\">(</span><span class=\"st0\">\"----+----|\"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">/</span> <span class=\"nu0\">10</span> <span class=\"sy1\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">+:</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">every</span> r <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span>r<span class=\"sy1\">,</span>_INDENT<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\"\u00a0: \"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">every</span> c <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"kw1\">do</span> <br/>         <span class=\"kw4\">writes</span><span class=\"br0\">(</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>r<span class=\"sy1\">,</span>c<span class=\"br0\">]</span> <span class=\"sy1\">|</span> <span class=\"kw4\">map</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>r<span class=\"sy1\">,</span>c<span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"st0\">\"0\"</span><span class=\"sy1\">,</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> _MINE<span class=\"br0\">)</span><br/>      <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span><span class=\"sy1\">,</span><span class=\"st0\">\" marked mines and \"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span> <span class=\"sy1\">-</span> MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span><span class=\"sy1\">,</span><span class=\"st0\">\" mines left to be marked.\"</span><span class=\"br0\">)</span> <br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> mark<span class=\"br0\">(</span><span class=\"br0\">)</span>                                          <span class=\"co1\">#: mark/toggle squares</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i <span class=\"sy1\">:=</span> getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> j <span class=\"sy1\">:=</span>getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">map</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span><span class=\"sy1\">,</span>_TOGGLE1<span class=\"sy1\">,</span>_TOGGLE2<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">case</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">of</span> <span class=\"br0\">{</span><br/>         _MASK <span class=\"sy1\">:</span> MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span> <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span><br/>         _MARK <span class=\"sy1\">:</span> MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span> <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><br/>         <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> clear<span class=\"br0\">(</span><span class=\"br0\">)</span>                                         <span class=\"co1\">#: clear a square</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> i <span class=\"sy1\">:=</span> getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> j <span class=\"sy1\">:=</span>getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> <br/>         <span class=\"kw4\">write</span><span class=\"br0\">(</span>i<span class=\"sy1\">,</span><span class=\"st0\">\" \"</span><span class=\"sy1\">,</span>j<span class=\"sy1\">,</span><span class=\"st0\">\" was already clear\"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"KABOOM! You lost.\"</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">else</span> <span class=\"kw1\">return</span> revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">)</span>                             <span class=\"co1\">#: reaveal any clearing </span><br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <br/>         <span class=\"kw1\">every</span> revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span>j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">return</span><br/>      <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> clearunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span>                                 <span class=\"co1\">#: clears adjecent unmarked cells if #flags = count</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>k<span class=\"sy1\">,</span>m<span class=\"sy1\">,</span>n<br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> i <span class=\"sy1\">:=</span> getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> j <span class=\"sy1\">:=</span>getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> k <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>         <span class=\"kw1\">every</span> <span class=\"br0\">(</span><span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span>j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MARK<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> k <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">if</span> k <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">every</span> <span class=\"br0\">(</span>m <span class=\"sy1\">:=</span> i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> n <span class=\"sy1\">:=</span> j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>               <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>m<span class=\"sy1\">,</span>n<span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MASK <span class=\"kw1\">then</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>m<span class=\"sy1\">,</span>n<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span> <br/>            revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span><br/>            <span class=\"br0\">}</span><br/>         <span class=\"kw1\">else</span><br/>            <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Marked squares must match adjacent mine count.\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Must be adjecent to one or more marks to clear surrounding squares.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> clearallunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span>                             <span class=\"co1\">#: fast win or loose</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>k<br/>\u00a0<br/>   <span class=\"kw1\">every</span> <span class=\"br0\">(</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span>j <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MASK <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>         MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span><br/>         <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> k <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <br/>         <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>k <span class=\"kw1\">then</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"Kaboom - you loose.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> testforwin<span class=\"br0\">(</span><span class=\"br0\">)</span>                                  <span class=\"co1\">#: win when rows*cols-#_MARK-#_MASK are clear and no Kaboom</span><br/><span class=\"kw2\">local</span> t<span class=\"sy1\">,</span>x<br/>\u00a0<br/>   t <span class=\"sy1\">:=</span>  MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span> <span class=\"sy1\">*</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">-</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span><br/>   <span class=\"kw1\">every</span> x <span class=\"sy1\">:=</span> <span class=\"sy1\">!!</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"kw1\">do</span> <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>x <span class=\"kw1\">then</span> t <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span><br/>   <span class=\"kw1\">if</span> t <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"You won!\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> endgame<span class=\"br0\">(</span>tag<span class=\"br0\">)</span>                                  <span class=\"co1\">#: end the game</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>m<br/>\u00a0<br/>   <span class=\"kw1\">every</span> <span class=\"sy1\">!</span><span class=\"br0\">(</span>m <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span>         <span class=\"co1\"># new mask</span><br/>   <span class=\"kw1\">every</span> <span class=\"br0\">(</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span>j <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MARK <span class=\"kw1\">then</span><br/>         m<span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> _TRUEMINE <span class=\"kw1\">else</span> _FALSEMINE<br/>   MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"sy1\">:=</span> m<br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>tag<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Icon and Unicon", "loc": 181, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw2\">global</span> DEFARGS<span class=\"sy1\">,</span>MF<br/>\u00a0<br/><span class=\"kw1\">record</span> minefield<span class=\"br0\">(</span>mask<span class=\"sy1\">,</span>grid<span class=\"sy1\">,</span>rows<span class=\"sy1\">,</span>cols<span class=\"sy1\">,</span>mines<span class=\"sy1\">,</span>density<span class=\"sy1\">,</span>marked<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _DEFAULTS  <span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span>  <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"sy1\">.</span>2<span class=\"sy1\">,</span> <span class=\"sy1\">.</span>6<span class=\"br0\">]</span>  <span class=\"co1\"># task defaults</span><br/><span class=\"co1\">#$define _DEFAULTS  [6, 7, .05, .1]   # defaults for debugging</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _INDENT    <span class=\"nu0\">6</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _MINE      <span class=\"st0\">\"Y\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _TRUEMINE  <span class=\"st0\">\"Y\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _FALSEMINE <span class=\"st0\">\"N\"</span> <br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _MASK      <span class=\"st0\">\".\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _MARK      <span class=\"st0\">\"?\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _TOGGLE1   <span class=\"st0\">\".?\"</span><br/><span class=\"sy2\">$</span><span class=\"kw6\">define</span> _TOGGLE2   <span class=\"st0\">\"?.\"</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>arglist<span class=\"br0\">)</span>                           <span class=\"co1\">#: play the game</span><br/><span class=\"kw2\">static</span> trace <br/><span class=\"kw1\">initial</span> trace <span class=\"sy1\">:=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><br/>\u00a0<br/>DEFARGS <span class=\"sy1\">:=</span> _DEFAULTS<br/><span class=\"kw1\">if</span> <span class=\"sy1\">*</span>arglist <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> arglist <span class=\"sy1\">:=</span> DEFARGS<br/>\u00a0<br/>newgame<span class=\"sy1\">!</span>arglist<br/><span class=\"kw1\">while</span> c <span class=\"sy1\">:=</span> <span class=\"kw4\">trim</span><span class=\"br0\">(</span><span class=\"kw4\">read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>   c <span class=\"sy1\">?</span> <span class=\"br0\">{</span>  <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">case</span> <span class=\"kw4\">move</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span> <span class=\"br0\">{</span><br/>                                                 <span class=\"co1\"># required commands</span><br/>            <span class=\"st0\">\"c\"</span><span class=\"sy1\">:</span> clear<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>            <span class=\"co1\">#   c  clear 1 sq and show</span><br/>            <span class=\"st0\">\"m\"</span><span class=\"sy1\">:</span> mark<span class=\"br0\">(</span><span class=\"br0\">)</span>                          <span class=\"co1\">#   m flag/unflag a mine</span><br/>            <span class=\"st0\">\"p\"</span><span class=\"sy1\">:</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>                      <span class=\"co1\">#   p show the mine field</span><br/>            <span class=\"st0\">\"r\"</span><span class=\"sy1\">:</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"Resigning.\"</span><span class=\"br0\">)</span>           <span class=\"co1\">#   r resign this game</span><br/>                                                 <span class=\"co1\"># optional commands</span><br/>            <span class=\"st0\">\"n\"</span><span class=\"sy1\">:</span> newgame<span class=\"sy1\">!</span>arglist                 <span class=\"co1\">#   n new game grid</span><br/>            <span class=\"st0\">\"k\"</span><span class=\"sy1\">:</span> clearunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>    <span class=\"co1\">#   k clears adjecent unmarked cells if #flags = count</span><br/>            <span class=\"st0\">\"x\"</span><span class=\"sy1\">:</span> clearallunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span>              <span class=\"co1\">#   x clears every unflagged cell at once win/loose fast</span><br/>            <span class=\"st0\">\"q\"</span><span class=\"sy1\">:</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Quitting\"</span><span class=\"br0\">)</span>                <span class=\"co1\">#   q quit</span><br/>            <span class=\"st0\">\"t\"</span><span class=\"sy1\">:</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">trace</span> <span class=\"sy1\">:=:</span> trace                <span class=\"co1\">#   t toggle tracing for debugging</span><br/>            <span class=\"kw1\">default</span><span class=\"sy1\">:</span> usage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><span class=\"br0\">}</span> <br/>   testforwin<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> newgame<span class=\"br0\">(</span>r<span class=\"sy1\">,</span>c<span class=\"sy1\">,</span>l<span class=\"sy1\">,</span>h<span class=\"br0\">)</span>                       <span class=\"co1\">#: start a new game</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>t<br/>\u00a0<br/>MF <span class=\"sy1\">:=</span> minefield<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span> <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>r<span class=\"br0\">)</span> <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>c<span class=\"br0\">)</span> <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">every</span> <span class=\"sy1\">!</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"sy1\">,</span>_MASK<span class=\"br0\">)</span>  <span class=\"co1\"># set mask</span><br/><span class=\"kw1\">every</span> <span class=\"sy1\">!</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>      <span class=\"co1\"># default count</span><br/>\u00a0<br/>l <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">&gt;</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">real</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>l<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><br/>h <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">&gt;</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">real</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>h<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"sy1\">|</span> DEFARGS<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/><span class=\"kw1\">if</span> l <span class=\"sy1\">&gt;</span> h <span class=\"kw1\">then</span> l <span class=\"sy1\">:=:</span> h<br/>\u00a0<br/><span class=\"kw1\">until</span> MF<span class=\"sy1\">.</span><span class=\"me1\">density</span> <span class=\"sy1\">:=</span> l <span class=\"sy1\">&lt;=</span> <span class=\"br0\">(</span> h <span class=\"sy1\">&gt;=</span> <span class=\"sy1\">?</span><span class=\"nu0\">0</span> <span class=\"br0\">)</span>                      <span class=\"co1\"># random density between l:h</span><br/>MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span> <span class=\"sy1\">*</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">*</span> MF<span class=\"sy1\">.</span><span class=\"me1\">density</span><span class=\"br0\">)</span>       <span class=\"co1\"># mines needed</span><br/>MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span> <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Creating \"</span><span class=\"sy1\">,</span>r<span class=\"sy1\">,</span><span class=\"st0\">\"x\"</span><span class=\"sy1\">,</span>c<span class=\"sy1\">,</span><span class=\"st0\">\" mine field with \"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span><span class=\"sy1\">,</span><span class=\"st0\">\" (\"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">density</span> <span class=\"sy1\">*</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span><span class=\"st0\">\"%).\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span> <span class=\"kw1\">do</span> <span class=\"kw1\">until</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>r <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"sy1\">,</span> c <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span>                <span class=\"co1\"># set mines</span><br/><span class=\"kw1\">every</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"sy1\">,</span>j<span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">]</span> <span class=\"sy1\">+:=</span> <span class=\"br0\">(</span><span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span>j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"co1\"># set counts</span><br/>\u00a0<br/>showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/><span class=\"kw1\">end</span> <br/>\u00a0<br/><span class=\"kw1\">procedure</span> usage<span class=\"br0\">(</span><span class=\"br0\">)</span>                                         <span class=\"co1\">#: show usage</span><br/><span class=\"kw1\">return</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><br/><span class=\"st0\">\"h or\u00a0? - this help<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"n      - start a new game<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"c i j  - clears x,y and displays the grid<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"m i j  - marks (toggles) x,y<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"p      - displays the grid<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"k i j  - clears adjecent unmarked cells if #marks = count<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"x      - clears ALL unmarked flags at once<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"r      - resign the game<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"q      - quit the game<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"where i is the (vertical) row number and j is the (horizontal) column number.\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> getn<span class=\"br0\">(</span>n<span class=\"br0\">)</span>                                         <span class=\"co1\">#: command parsing</span><br/>  <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> n <span class=\"sy1\">:=</span> n <span class=\"sy1\">&gt;=</span> <span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">digits</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> n<br/>  <span class=\"kw1\">else</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid or out of bounds grid square.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span>                                      <span class=\"co1\">#: show grid</span><br/><span class=\"kw2\">local</span> r<span class=\"sy1\">,</span>c<span class=\"sy1\">,</span>x<br/>\u00a0<br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"sy1\">,</span>_INDENT<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\"   \"</span><span class=\"sy1\">,</span><span class=\"kw4\">repl</span><span class=\"br0\">(</span><span class=\"st0\">\"----+----|\"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">/</span> <span class=\"nu0\">10</span> <span class=\"sy1\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">+:</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">every</span> r <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span>r<span class=\"sy1\">,</span>_INDENT<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\"\u00a0: \"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">every</span> c <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"kw1\">do</span> <br/>         <span class=\"kw4\">writes</span><span class=\"br0\">(</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>r<span class=\"sy1\">,</span>c<span class=\"br0\">]</span> <span class=\"sy1\">|</span> <span class=\"kw4\">map</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>r<span class=\"sy1\">,</span>c<span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"st0\">\"0\"</span><span class=\"sy1\">,</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> _MINE<span class=\"br0\">)</span><br/>      <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span><span class=\"sy1\">,</span><span class=\"st0\">\" marked mines and \"</span><span class=\"sy1\">,</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span> <span class=\"sy1\">-</span> MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span><span class=\"sy1\">,</span><span class=\"st0\">\" mines left to be marked.\"</span><span class=\"br0\">)</span> <br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> mark<span class=\"br0\">(</span><span class=\"br0\">)</span>                                          <span class=\"co1\">#: mark/toggle squares</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i <span class=\"sy1\">:=</span> getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> j <span class=\"sy1\">:=</span>getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">map</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span><span class=\"sy1\">,</span>_TOGGLE1<span class=\"sy1\">,</span>_TOGGLE2<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">case</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">of</span> <span class=\"br0\">{</span><br/>         _MASK <span class=\"sy1\">:</span> MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span> <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span><br/>         _MARK <span class=\"sy1\">:</span> MF<span class=\"sy1\">.</span><span class=\"me1\">marked</span> <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><br/>         <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> clear<span class=\"br0\">(</span><span class=\"br0\">)</span>                                         <span class=\"co1\">#: clear a square</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> i <span class=\"sy1\">:=</span> getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> j <span class=\"sy1\">:=</span>getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> <br/>         <span class=\"kw4\">write</span><span class=\"br0\">(</span>i<span class=\"sy1\">,</span><span class=\"st0\">\" \"</span><span class=\"sy1\">,</span>j<span class=\"sy1\">,</span><span class=\"st0\">\" was already clear\"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"KABOOM! You lost.\"</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">else</span> <span class=\"kw1\">return</span> revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">)</span>                             <span class=\"co1\">#: reaveal any clearing </span><br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <br/>         <span class=\"kw1\">every</span> revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span>j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">return</span><br/>      <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> clearunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span>                                 <span class=\"co1\">#: clears adjecent unmarked cells if #flags = count</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>k<span class=\"sy1\">,</span>m<span class=\"sy1\">,</span>n<br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> i <span class=\"sy1\">:=</span> getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> j <span class=\"sy1\">:=</span>getn<span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> k <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&lt;</span> MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>         <span class=\"kw1\">every</span> <span class=\"br0\">(</span><span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span>j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MARK<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> k <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">if</span> k <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">every</span> <span class=\"br0\">(</span>m <span class=\"sy1\">:=</span> i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> i<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span> n <span class=\"sy1\">:=</span> j<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> j<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>               <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>m<span class=\"sy1\">,</span>n<span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MASK <span class=\"kw1\">then</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>m<span class=\"sy1\">,</span>n<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span> <br/>            revealclearing<span class=\"br0\">(</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span><br/>            <span class=\"br0\">}</span><br/>         <span class=\"kw1\">else</span><br/>            <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Marked squares must match adjacent mine count.\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Must be adjecent to one or more marks to clear surrounding squares.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> clearallunmarked<span class=\"br0\">(</span><span class=\"br0\">)</span>                             <span class=\"co1\">#: fast win or loose</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>k<br/>\u00a0<br/>   <span class=\"kw1\">every</span> <span class=\"br0\">(</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span>j <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MASK <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>         MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span><br/>         <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> k <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <br/>         <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>k <span class=\"kw1\">then</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"Kaboom - you loose.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> testforwin<span class=\"br0\">(</span><span class=\"br0\">)</span>                                  <span class=\"co1\">#: win when rows*cols-#_MARK-#_MASK are clear and no Kaboom</span><br/><span class=\"kw2\">local</span> t<span class=\"sy1\">,</span>x<br/>\u00a0<br/>   t <span class=\"sy1\">:=</span>  MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span> <span class=\"sy1\">*</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span> <span class=\"sy1\">-</span> MF<span class=\"sy1\">.</span><span class=\"me1\">mines</span><br/>   <span class=\"kw1\">every</span> x <span class=\"sy1\">:=</span> <span class=\"sy1\">!!</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"kw1\">do</span> <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>x <span class=\"kw1\">then</span> t <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span><br/>   <span class=\"kw1\">if</span> t <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> endgame<span class=\"br0\">(</span><span class=\"st0\">\"You won!\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> endgame<span class=\"br0\">(</span>tag<span class=\"br0\">)</span>                                  <span class=\"co1\">#: end the game</span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>j<span class=\"sy1\">,</span>m<br/>\u00a0<br/>   <span class=\"kw1\">every</span> <span class=\"sy1\">!</span><span class=\"br0\">(</span>m <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">list</span><span class=\"br0\">(</span>MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span>         <span class=\"co1\"># new mask</span><br/>   <span class=\"kw1\">every</span> <span class=\"br0\">(</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">rows</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span>j <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MF<span class=\"sy1\">.</span><span class=\"me1\">cols</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">==</span> _MARK <span class=\"kw1\">then</span><br/>         m<span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>MF<span class=\"sy1\">.</span><span class=\"me1\">grid</span><span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> _TRUEMINE <span class=\"kw1\">else</span> _FALSEMINE<br/>   MF<span class=\"sy1\">.</span><span class=\"me1\">mask</span> <span class=\"sy1\">:=</span> m<br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>tag<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> showgrid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 103, "block": "<pre class=\"j highlighted_source\"><span class=\"co1\">NB. minefield.ijs script</span><br/><span class=\"co1\">NB. =========================================================</span><br/><span class=\"co1\">NB. Game engine</span><br/>\u00a0<br/><span class=\"co1\">NB.require 'guid'</span><br/><span class=\"co1\">NB.([ 9!:1) _2 (3!:4) , guids 1            NB. randomly set initial random seed</span><br/>\u00a0<br/>coclass <span class=\"st_h\">'mineswpeng'</span><br/>\u00a0<br/>newMinefield=: <span class=\"nu0\">3</span>\u00a0: <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">if.</span> <span class=\"nu0\">0</span>=#<span class=\"kw2\">y</span> <span class=\"kw1\">do.</span> <span class=\"kw2\">y</span>=. <span class=\"nu0\">9</span> <span class=\"nu0\">9</span> <span class=\"kw1\">end.</span><br/>  Marked=: Cleared=: <span class=\"kw2\">y</span>$<span class=\"nu0\">0</span><br/>  NMines=: &lt;. */<span class=\"sy0\">(</span><span class=\"nu0\">0.01</span>*<span class=\"nu0\">10</span>+?<span class=\"nu0\">20</span><span class=\"sy0\">)</span>,<span class=\"kw2\">y</span>            <span class=\"co1\">NB. 10..20% of tiles are mines</span><br/>  mines=. <span class=\"sy0\">(</span>i. e. NMines\u00a0? */<span class=\"sy0\">)</span> <span class=\"kw2\">y</span>            <span class=\"co1\">NB. place mines</span><br/>  Map=: <span class=\"sy0\">(</span><span class=\"nu0\">9</span>*mines<span class=\"sy0\">)</span> &gt;. <span class=\"kw2\">y</span>{. <span class=\"sy0\">(</span><span class=\"nu0\">1</span>,:<span class=\"nu0\">3</span> <span class=\"nu0\">3</span><span class=\"sy0\">)</span> +/@,;.<span class=\"nu0\">3</span> <span class=\"sy0\">(</span>-<span class=\"nu0\">1</span>+<span class=\"kw2\">y</span><span class=\"sy0\">)</span>{.mines<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>markTiles=: <span class=\"nu0\">3</span>\u00a0: <span class=\"nu0\">0</span><br/>  Marked=: <span class=\"sy0\">(</span>&lt;\"<span class=\"nu0\">1</span> &lt;:<span class=\"kw2\">y</span><span class=\"sy0\">)</span> <span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"38151678\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{<span class=\"sy0\">)</span>`[`]} Marked    <span class=\"co1\">NB. toggle marked state of cell(s)</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>clearTiles=: <a class=\"__cf_email__\" data-cfemail=\"7f1c131a1e0d1c1a13133f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:&lt;:                 <span class=\"co1\">NB. decrement coords - J arrays are 0-based</span><br/>\u00a0<br/>clearcell=: verb define<br/>  <span class=\"kw1\">if.</span> #<span class=\"kw2\">y</span> <span class=\"kw1\">do.</span><br/>    free=. <span class=\"sy0\">(</span>#~ <span class=\"sy0\">(</span>Cleared &lt; <span class=\"nu0\">0</span> = Map<span class=\"sy0\">)</span> {~ &lt;\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span> <span class=\"kw2\">y</span> <br/>    Cleared=: <span class=\"nu0\">1</span> <span class=\"sy0\">(</span>&lt;\"<span class=\"nu0\">1</span> <span class=\"kw2\">y</span><span class=\"sy0\">)</span>} Cleared           <span class=\"co1\">NB. set cell(s) as cleared</span><br/>    <span class=\"kw1\">if.</span> #free <span class=\"kw1\">do.</span><br/>      clearcell <span class=\"sy0\">(</span>#~ Cleared <a class=\"__cf_email__\" data-cfemail=\"2e03006e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{~ &lt;\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span> ~. <span class=\"sy0\">(</span>&lt;:$Map<span class=\"sy0\">)</span> <span class=\"sy0\">(</span>&lt;.\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span> <span class=\"nu0\">0</span> &gt;. getNbrs free<br/>    <span class=\"kw1\">end.</span><br/>  <span class=\"kw1\">end.</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>getNbrs=: [: ,/^:<span class=\"sy0\">(</span><span class=\"nu0\">3</span>=#@$<span class=\"sy0\">)</span> +\"<span class=\"nu0\">1</span>/&amp;<span class=\"sy0\">(</span>&lt;: <span class=\"nu0\">3</span> <span class=\"nu0\">3</span>#: i.<span class=\"nu0\">9</span><span class=\"sy0\">)</span><br/>\u00a0<br/>eval=: verb define<br/>  <span class=\"kw1\">if.</span> <span class=\"nu0\">9</span> e. Cleared #&amp;, Map <span class=\"kw1\">do.</span>            <span class=\"co1\">NB. cleared mine(s)?</span><br/>    <span class=\"nu0\">1</span>; <span class=\"st_h\">'KABOOM!!'</span><br/>  <span class=\"kw1\">elseif.</span> *./ <span class=\"nu0\">9</span> = <span class=\"sy0\">(</span>-.Cleared<span class=\"sy0\">)</span> #&amp;, Map <span class=\"kw1\">do.</span> <span class=\"co1\">NB. all cleared except mines?</span><br/>    <span class=\"nu0\">1</span>; <span class=\"st_h\">'Minefield cleared.'</span><br/>  <span class=\"kw1\">elseif.</span> <span class=\"kw1\">do.</span>                             <span class=\"co1\">NB. else...</span><br/>    <span class=\"nu0\">0</span>; <span class=\"sy0\">(</span>\": +/, Marked&gt;Cleared<span class=\"sy0\">)</span>,<span class=\"st_h\">' of '</span>,<span class=\"sy0\">(</span>\":NMines<span class=\"sy0\">)</span>,<span class=\"st_h\">' mines marked.'</span><br/>  <span class=\"kw1\">end.</span>                                    <span class=\"co1\">NB. result: isEnd; message</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>showField=: <span class=\"nu0\">4</span>\u00a0: <span class=\"nu0\">0</span><br/>  idx=. <span class=\"kw2\">y</span>{ <span class=\"sy0\">(</span><span class=\"nu0\">2</span> &lt;. Marked + +:Cleared<span class=\"sy0\">)</span> ,: <span class=\"nu0\">2</span><br/>  |: idx} <span class=\"sy0\">(</span><span class=\"nu0\">11</span>&amp;{ , <span class=\"nu0\">12</span>&amp;{ ,: Map&amp;{<span class=\"sy0\">)</span> <span class=\"kw2\">x</span>  <span class=\"co1\">NB. transpose result - J arrays are row,column</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/><span class=\"co1\">NB. =========================================================</span><br/><span class=\"co1\">NB. User interface</span><br/>\u00a0<br/>Minesweeper_z_=: conew&amp;<span class=\"st_h\">'mineswp'</span><br/>\u00a0<br/>coclass <span class=\"st_h\">'mineswp'</span><br/>coinsert <span class=\"st_h\">'mineswpeng'</span>        <span class=\"co1\">NB. insert game engine locale in copath</span><br/>\u00a0<br/>Tiles=: <span class=\"st_h\">' 12345678**.?'</span><br/>\u00a0<br/>create=: verb define<br/>  smoutput Instructions<br/>  startgame <span class=\"kw2\">y</span><br/><span class=\"sy0\">)</span> <br/>destroy=: codestroy<br/>quit=: destroy<br/>\u00a0<br/>startgame=: <a class=\"__cf_email__\" data-cfemail=\"9aefeafefbeeffdaf4ffedd7f3f4fffcf3fff6fe\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>clear=: <a class=\"__cf_email__\" data-cfemail=\"5e2b2e3a3f2a3b1e3d323b3f2c0a37323b2d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>mark=: <a class=\"__cf_email__\" data-cfemail=\"b2c7c2d6d3c6d7f2dfd3c0d9e6dbded7c1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>\u00a0<br/>update=: <span class=\"nu0\">3</span>\u00a0: <span class=\"nu0\">0</span><br/>  <span class=\"st_h\">'isend msg'</span>=. eval <span class=\"st_h\">''</span><br/>  smoutput msg<br/>  smoutput &lt; Tiles showField isend<br/>  <span class=\"kw1\">if.</span> isend <span class=\"kw1\">do.</span> <br/>    msg=. <span class=\"sy0\">(</span><span class=\"st_h\">'K'</span>={.msg<span class=\"sy0\">)</span> {:: <span class=\"st_h\">'won'</span>;<span class=\"st_h\">'lost'</span><br/>    smoutput <span class=\"st_h\">'You '</span>,msg,<span class=\"st_h\">'! Try again?'</span><br/>    destroy <span class=\"st_h\">''</span><br/>  <span class=\"kw1\">end.</span><br/>  empty<span class=\"st_h\">''</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>Instructions=: <span class=\"nu0\">0</span>\u00a0: <span class=\"nu0\">0</span><br/>=== MineSweeper ===<br/>Object: <br/>   Uncover <span class=\"sy0\">(</span>clear<span class=\"sy0\">)</span> all the tiles that are not mines.<br/>\u00a0<br/>How to play:<br/> - the left, top tile is: <span class=\"nu0\">1</span> <span class=\"nu0\">1</span><br/> - clear an uncleared tile <span class=\"sy0\">(</span>.<span class=\"sy0\">)</span> using the command:<br/>      clear__fld &lt;column index&gt; &lt;row index&gt;<br/> - mark and uncleared tile <span class=\"sy0\">(</span>?<span class=\"sy0\">)</span> as a suspected mine using the command:<br/>      mark__fld &lt;column index&gt; &lt;row index&gt;<br/> - if you uncover a number, that is the number of mines adjacent <br/>   to the tile<br/> - if you uncover a mine <span class=\"sy0\">(</span>*<span class=\"sy0\">)</span> the game ends <span class=\"sy0\">(</span>you lose<span class=\"sy0\">)</span><br/> - if you uncover all tiles that are not mines the game ends <span class=\"sy0\">(</span>you win<span class=\"sy0\">)</span>.<br/> - quit a game before winning or losing using the command:<br/>      quit__fld <span class=\"st_h\">''</span><br/> - start a new game using the command:<br/>      fld=: MineSweeper &lt;num columns&gt; &lt;num rows&gt;<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 567, "block": "<pre class=\"java highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"kw1\">This</span> is a version of minesweeper with a gui. <span class=\"me1\">The</span> code might not be optimal, but at least its not hard to understand.<br/>\u00a0<br/><span class=\"co1\">//--------------------------------- START of Main.java ---------------------------------</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/> * Main.java<br/> * <br/> * Created by Potrik<br/> * Last modified: 07.22.13<br/> */</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Main<br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\">//Width of the board</span><br/>\t\t<span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\">//Height of the board</span><br/>\t\t<span class=\"kw4\">int</span> d <span class=\"sy0\">=</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\">//The difficulty of the game, the percentage of mines in the board. The number of mines per board is random, but this number is the probability that a cell will become</span><br/>\t\t\t\t\t<span class=\"co1\">//a mine.</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">new</span> Minesweeper<span class=\"br0\">(</span>x, y, d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- END of Main.java ---------------------------------</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- START of Cell.java ---------------------------------</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/> * Cell.java<br/> * <br/> * Created by Potrik<br/> * Last modified: 07.22.13<br/> */</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Cell<br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">boolean</span> isMine, isFlagged, isObscured<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">int</span> number<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> Cell<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tisMine <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\t\tisFlagged <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\t\tisObscured <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\t\tnumber <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> setMine<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tisMine <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> flag<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tisFlagged <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> unflag<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tisFlagged <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> reveal<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tisObscured <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> setNumber<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tnumber <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">boolean</span> isMine<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> isMine<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">boolean</span> isFlagged<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> isFlagged<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">boolean</span> isObscured<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> isObscured<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">int</span> getNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> number<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- END of Cell.java ---------------------------------</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- START of Board.java ---------------------------------</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/> * Board.java<br/> * <br/> * Created by Potrik<br/> * Last modified: 07.22.13<br/> */</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.Color</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.Dimension</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.Graphics</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.JPanel</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Board <span class=\"kw1\">extends</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajpanel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JPanel</span></a><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw4\">long</span> serialVersionUID <span class=\"sy0\">=</span> 1L<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> Minesweeper mine<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> Cell<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> cells<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> Board<span class=\"br0\">(</span>Minesweeper m<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tmine <span class=\"sy0\">=</span> m<span class=\"sy0\">;</span><br/>\t\tcells <span class=\"sy0\">=</span> mine.<span class=\"me1\">getCells</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\taddMouseListener<span class=\"br0\">(</span><span class=\"kw1\">new</span> Actions<span class=\"br0\">(</span>mine<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tsetPreferredSize<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a><span class=\"br0\">(</span>mine.<span class=\"me1\">getx</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, mine.<span class=\"me1\">gety</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> paintComponent<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> g<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tcells <span class=\"sy0\">=</span> mine.<span class=\"me1\">getCells</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> mine.<span class=\"me1\">getx</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> mine.<span class=\"me1\">gety</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tCell current <span class=\"sy0\">=</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">isFlagged</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> mine.<span class=\"me1\">isFinished</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">ORANGE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>mine.<span class=\"me1\">isFinished</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">GREEN</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">YELLOW</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">isObscured</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">GRAY</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">RED</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">LIGHT_GRAY</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>current.<span class=\"me1\">isObscured</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//3</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//6</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//2</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//3</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//4</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//5</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//7</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//2</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//3</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//4</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//6</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//7</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\">//1</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//3</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//4</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//6</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\">//1</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//2</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//4</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//6</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//7</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\">//1</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//2</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//4</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//5</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//6</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//7</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//2</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//3</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//6</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\">//1</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//2</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//3</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//4</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">7</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//5</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">11</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">13</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//6</span><br/>\t\t\t\t\t\tg.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"co1\">//7</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\tg.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tg.<span class=\"me1\">drawRect</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>, i <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span>, j <span class=\"sy0\">*</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- END of Board.java ---------------------------------</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- START of Actions.java ---------------------------------</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/> * Board.java<br/> * <br/> * Created by Potrik<br/> * Last modified: 07.22.13<br/> */</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.event.ActionEvent</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.event.ActionListener</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.event.MouseEvent</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.event.MouseListener</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Actions <span class=\"kw1\">implements</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aactionlistener+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ActionListener</span></a>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouselistener+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseListener</span></a><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">private</span> Minesweeper mine<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> Actions<span class=\"br0\">(</span>Minesweeper m<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tmine <span class=\"sy0\">=</span> m<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> actionPerformed<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aactionevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ActionEvent</span></a> e<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span>\t<br/>\t\tmine.<span class=\"me1\">reset</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tmine.<span class=\"me1\">refresh</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mouseClicked<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseEvent</span></a> e<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>e.<span class=\"me1\">getButton</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> e.<span class=\"me1\">getX</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> e.<span class=\"me1\">getY</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\tmine.<span class=\"me1\">select</span><span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>e.<span class=\"me1\">getButton</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> e.<span class=\"me1\">getX</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> e.<span class=\"me1\">getY</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\tmine.<span class=\"me1\">mark</span><span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\tmine.<span class=\"me1\">refresh</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mouseEntered<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseEvent</span></a> e<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mouseExited<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseEvent</span></a> e<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mousePressed<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseEvent</span></a> e<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mouseReleased<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseEvent</span></a> e<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- END of Actions.java ---------------------------------</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- START of Minesweeper.java ---------------------------------</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/> * Minesweeper.java<br/> * <br/> * Created by Potrik<br/> * Last modified: 07.22.13<br/> */</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.BorderLayout</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.JButton</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.JFrame</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.JOptionPane</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Minesweeper <span class=\"kw1\">extends</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw4\">long</span> serialVersionUID <span class=\"sy0\">=</span> 1L<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">int</span> width, height<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> Cell<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> cells<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">int</span> difficulty<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> Board board<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajbutton+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JButton</span></a> reset<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">boolean</span> finished<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> Minesweeper<span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y, <span class=\"kw4\">int</span> d<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\twidth <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>\t\theight <span class=\"sy0\">=</span> y<span class=\"sy0\">;</span><br/>\t\tdifficulty <span class=\"sy0\">=</span> d<span class=\"sy0\">;</span><br/>\t\tcells <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Cell<span class=\"br0\">[</span>width<span class=\"br0\">]</span><span class=\"br0\">[</span>height<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\treset<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tboard <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Board<span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\treset <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajbutton+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JButton</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Reset\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tadd<span class=\"br0\">(</span>board, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aborderlayout+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BorderLayout</span></a>.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tadd<span class=\"br0\">(</span>reset, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aborderlayout+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BorderLayout</span></a>.<span class=\"me1\">SOUTH</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\treset.<span class=\"me1\">addActionListener</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> Actions<span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tsetTitle<span class=\"br0\">(</span><span class=\"st0\">\"Minesweeper\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tsetDefaultCloseOperation<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a>.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tsetResizable<span class=\"br0\">(</span><span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tpack<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tsetVisible<span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">int</span> getx<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> width<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">int</span> gety<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> height<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> Cell<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> getCells<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> cells<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> reset<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a> random <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tfinished <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tCell c <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Cell<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tcells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> random.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">&lt;</span> difficulty<span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tcells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">setMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\tsetNumbers<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">void</span> setNumbers<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw4\">int</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\tj <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>\t<span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>\t.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> width <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> width <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&lt;</span> height <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> height <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>\t<span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> width <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&lt;</span> height <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> count<span class=\"sy0\">++;</span><br/>\u00a0<br/>\t\t\t\tcells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">setNumber</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tcells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">setNumber</span><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tcells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\tj <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> width <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> width <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>\t<span class=\"br0\">[</span>j<span class=\"br0\">]</span>\t\t.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&lt;</span> height <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> height <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> width <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&lt;</span> height <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> cells<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>\t.<span class=\"me1\">getNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> refresh<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tboard.<span class=\"me1\">repaint</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> select<span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>cells<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span>.<span class=\"me1\">isFlagged</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>\t\tcells<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tresetMarks<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\trefresh<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>cells<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\tloose<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>won<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\twin<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">void</span> loose<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tfinished <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isObscured</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">unflag</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tcells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\trefresh<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajoptionpane+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JOptionPane</span></a>.<span class=\"me1\">showMessageDialog</span><span class=\"br0\">(</span><span class=\"kw2\">null</span>, <span class=\"st0\">\"BOOOOM!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\treset<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">void</span> win<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\tfinished <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tcells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">reveal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">unflag</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\trefresh<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajoptionpane+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JOptionPane</span></a>.<span class=\"me1\">showMessageDialog</span><span class=\"br0\">(</span><span class=\"kw2\">null</span>, <span class=\"st0\">\"Congratulations! You won!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\treset<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">boolean</span> won<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isObscured</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isMine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mark<span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>cells<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span>.<span class=\"me1\">isFlagged</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span>.<span class=\"me1\">unflag</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>cells<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span>.<span class=\"me1\">isObscured</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span>.<span class=\"me1\">flag</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tresetMarks<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">private</span> <span class=\"kw4\">void</span> resetMarks<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">isObscured</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> cells<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">unflag</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">boolean</span> isFinished<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> finished<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------- END of Minesweeper.java ---------------------------------</span><br/>\u00a0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 119, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Minesweeper:<br/>\u00a0<br/>type Field<br/>    size::(Int, Int)<br/>    numbers::Array{Int, 2}<br/>    possible_mines::Array{Bool, 2}<br/>    actual_mines::Array{Bool, 2}<br/>    visible::Array{Bool, 2}<br/>end<br/>\u00a0<br/>function Field(x, y)<br/>    size = (x, y)<br/>    actual_mines = convert(Array{Bool, 2}, rand(x, y) .&lt; 0.15)<br/>    possible_mines = zeros(Bool, x, y)<br/>    numbers = zeros(Int, x, y)<br/>    visible = zeros(Bool, x, y)<br/>    for i = 1:x<br/>        for j = 1:y<br/>            n = 0<br/>            for di = -1:1<br/>                for dj = -1:1<br/>                    n += (0 &lt; di+i &lt;= x &amp;&amp; 0 &lt; dj+j &lt;= y)\u00a0?<br/>                         (actual_mines[di+i, dj+j]\u00a0? 1\u00a0: 0)\u00a0: 0<br/>                end<br/>            end<br/>            numbers[i, j] = n<br/>        end<br/>    end<br/>    return Field(size, numbers, possible_mines, actual_mines, visible)<br/>end<br/>\u00a0<br/>function printfield(f::Field; showall = false)<br/>    spaces = int(floor(log(10, f.size[2])))<br/>\u00a0<br/>    str = \" \"^(4+spaces)<br/>    for i in 1:f.size[1]<br/>        str *= string(\" \", i, \" \")<br/>    end<br/>    str *= \"\\n\" * \" \"^(4+spaces) * \"___\"^f.size[1] * \"\\n\"<br/>    for j = 1:f.size[2]<br/>        str *= \" \" * string(j) * \" \"^(floor(log(10, j)) &gt; 0\u00a0? 1\u00a0: spaces+1) * \"|\"<br/>        for i = 1:f.size[1]<br/>            if showall<br/>                str *= f.actual_mines[i, j]\u00a0? \" * \"\u00a0: \"   \"<br/>            else<br/>                if f.visible[i, j]<br/>                    str *= \" \" * string(f.numbers[i, j] &gt; 0\u00a0? f.numbers[i, j]\u00a0: \" \") * \" \"<br/>                elseif f.possible_mines[i, j]<br/>                    str *= \"\u00a0? \"<br/>                else<br/>                    str *= \" . \"<br/>                end<br/>            end<br/>        end<br/>        str *= \"\\r\\n\"<br/>    end<br/>    println(\"Found \" * string(length(f.possible_mines[f.possible_mines.==true])) *<br/>            \" of \" * string(length(f.actual_mines[f.actual_mines.==true])) * \" mines.\\n\")<br/>    print(str)<br/>end<br/>\u00a0<br/>function parse_input(str::ASCIIString)<br/>    input = split(chomp(str), \" \")<br/>    mode = input[1]<br/>    coords =  length(input) &gt; 1\u00a0? (int(input[2]), int(input[3]))\u00a0: (0, 0)<br/>    return mode, coords<br/>end<br/>\u00a0<br/>function eval_input(f::Field, str::ASCIIString)<br/>    mode, coords = parse_input(str)<br/>    (coords[1] &gt; f.size[1] || coords[2] &gt; f.size[2]) &amp;&amp; return true<br/>    if mode == \"o\"<br/>        reveal(f, coords...) || return false<br/>    elseif mode == \"m\" &amp;&amp; f.visible[coords...] == false<br/>        f.possible_mines[coords...] =\u00a0!f.possible_mines[coords...]<br/>    elseif mode == \"close\"<br/>        error(\"You closed the game.\")<br/>    end<br/>    return true<br/>end<br/>\u00a0<br/>function reveal(f::Field, x::Int, y::Int)<br/>    (x &gt; f.size[1] || y &gt; f.size[2]) &amp;&amp; return true # check for index out of bounds<br/>    f.actual_mines[x, y] &amp;&amp; return false # check for mines<br/>    f.visible[x, y] = true<br/>    if f.numbers[x, y] == 0<br/>        for di = -1:1<br/>            for dj = -1:1<br/>                if (0 &lt; di+x &lt;= f.size[1] &amp;&amp; 0 &lt; dj+y &lt;= f.size[2]) &amp;&amp;<br/>                        f.actual_mines[x+di, y+dj] == false &amp;&amp;<br/>                        f.visible[x+di, y+dj] == false<br/>                    reveal(f, x+di, y+dj)<br/>                end<br/>            end<br/>        end<br/>    end<br/>    return true<br/>end<br/>\u00a0<br/>function play()<br/>    print(\"\\nWelcome to Minesweeper\\n\\nEnter the gridsize (x y):\\n\")<br/>    s = split(readline(), \" \")<br/>    f = Field(int(s[1]), int(s[2]))<br/>    won = false<br/>    while true<br/>        printfield(f)<br/>        print(\"\\nWhat do you do? (\\\"o x y\\\" to reveal a field; \\\"m x y\\\" to toggle a mine; close)\\n\")<br/>        eval_input(f, readline()) || break<br/>        print(\"_\"^80 * \"\\n\")<br/>        (f.actual_mines == f.possible_mines ||<br/>              f.visible ==\u00a0!f.actual_mines) &amp;&amp; (won = true; break)<br/>    end<br/>    println(won\u00a0? \"You won the game!\"\u00a0: \"You lost the game:\\n\")<br/>    printfield(f, showall = true)<br/>end<br/>\u00a0<br/>play()<br/>\u00a0</pre>"}, {"lang": "Locomotive Basic", "loc": 114, "block": "<pre class=\"locobasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">mode</span> <span class=\"nu0\">1</span>:<span class=\"kw1\">randomize</span> <span class=\"kw1\">time</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">defint</span> a-z<br/><span class=\"nu0\">30</span> boardx=<span class=\"nu0\">6</span>:boardy=<span class=\"nu0\">4</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">dim</span> a<span class=\"br0\">(</span>boardx,boardy<span class=\"br0\">)</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">dim</span> c<span class=\"br0\">(</span>boardx+<span class=\"nu0\">2</span>,boardy+<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">dim</span> c2<span class=\"br0\">(</span>boardx+<span class=\"nu0\">2</span>,boardy+<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"nu0\">70</span> nmines=<span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw2\">rnd</span>/<span class=\"nu0\">3</span>+.1<span class=\"br0\">)</span>*boardx*boardy<span class=\"br0\">)</span><br/><span class=\"nu0\">80</span> <span class=\"kw1\">for</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> nmines<br/><span class=\"nu0\">90</span> <span class=\"co1\">' place random mines</span><br/><span class=\"nu0\">100</span> xp=<span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">rnd</span>*<span class=\"br0\">(</span>boardx-<span class=\"nu0\">1</span><span class=\"br0\">)</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"nu0\">110</span> yp=<span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">rnd</span>*<span class=\"br0\">(</span>boardy-<span class=\"nu0\">1</span><span class=\"br0\">)</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"nu0\">120</span> <span class=\"kw1\">if</span> a<span class=\"br0\">(</span>xp,yp<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"nu0\">100</span><br/><span class=\"nu0\">130</span> a<span class=\"br0\">(</span>xp,yp<span class=\"br0\">)</span>=<span class=\"nu0\">64</span><br/><span class=\"nu0\">140</span> <span class=\"kw1\">for</span> xx=xp <span class=\"kw1\">to</span> xp+<span class=\"nu0\">2</span><br/><span class=\"nu0\">150</span> <span class=\"kw1\">for</span> yy=yp <span class=\"kw1\">to</span> yp+<span class=\"nu0\">2</span><br/><span class=\"nu0\">160</span> c<span class=\"br0\">(</span>xx,yy<span class=\"br0\">)</span>=c<span class=\"br0\">(</span>xx,yy<span class=\"br0\">)</span>+<span class=\"nu0\">1</span><br/><span class=\"nu0\">170</span> <span class=\"kw1\">next</span> yy<br/><span class=\"nu0\">180</span> <span class=\"kw1\">next</span> xx<br/><span class=\"nu0\">190</span> <span class=\"kw1\">next</span> i<br/><span class=\"nu0\">200</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">350</span><br/><span class=\"nu0\">210</span> x=<span class=\"nu0\">1</span>:y=<span class=\"nu0\">1</span><br/><span class=\"nu0\">220</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">600</span><br/><span class=\"nu0\">230</span> <span class=\"co1\">' wait for key press</span><br/><span class=\"nu0\">240</span> k$=<span class=\"kw2\">lower</span>$<span class=\"br0\">(</span><span class=\"kw2\">inkey</span>$<span class=\"br0\">)</span><br/><span class=\"nu0\">250</span> <span class=\"kw1\">if</span> k$=<span class=\"st0\">\"\"</span> <span class=\"kw1\">then</span> <span class=\"nu0\">240</span><br/><span class=\"nu0\">260</span> <span class=\"kw1\">if</span> k$=<span class=\"st0\">\"q\"</span> <span class=\"kw1\">and</span> y&gt;<span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">660</span>:y=y-<span class=\"nu0\">1</span>:<span class=\"kw1\">gosub</span> <span class=\"nu0\">600</span><br/><span class=\"nu0\">270</span> <span class=\"kw1\">if</span> k$=<span class=\"st0\">\"a\"</span> <span class=\"kw1\">and</span> y&lt;boardy <span class=\"kw1\">then</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">660</span>:y=y+<span class=\"nu0\">1</span>:<span class=\"kw1\">gosub</span> <span class=\"nu0\">600</span><br/><span class=\"nu0\">280</span> <span class=\"kw1\">if</span> k$=<span class=\"st0\">\"o\"</span> <span class=\"kw1\">and</span> x&gt;<span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">660</span>:x=x-<span class=\"nu0\">1</span>:<span class=\"kw1\">gosub</span> <span class=\"nu0\">600</span><br/><span class=\"nu0\">290</span> <span class=\"kw1\">if</span> k$=<span class=\"st0\">\"p\"</span> <span class=\"kw1\">and</span> x&lt;boardx <span class=\"kw1\">then</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">660</span>:x=x+<span class=\"nu0\">1</span>:<span class=\"kw1\">gosub</span> <span class=\"nu0\">600</span><br/><span class=\"nu0\">300</span> <span class=\"kw1\">if</span> k$=<span class=\"st0\">\"m\"</span> <span class=\"kw1\">then</span> a<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span>=a<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"kw1\">xor</span> <span class=\"nu0\">128</span>:<span class=\"kw1\">gosub</span> <span class=\"nu0\">600</span>:<span class=\"kw1\">gosub</span> <span class=\"nu0\">1070</span><br/><span class=\"nu0\">310</span> <span class=\"kw1\">if</span> k$=<span class=\"st0\">\" \"</span> <span class=\"kw1\">then</span> a<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span>=a<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"nu0\">512</span>:<span class=\"kw1\">gosub</span> <span class=\"nu0\">700</span>:sx=x:sy=y:<span class=\"kw1\">gosub</span> <span class=\"nu0\">450</span>:x=sx:y=sy:<span class=\"kw1\">gosub</span> <span class=\"nu0\">600</span><br/><span class=\"nu0\">320</span> <span class=\"kw1\">goto</span> <span class=\"nu0\">240</span><br/><span class=\"nu0\">330</span> <span class=\"kw1\">end</span><br/><span class=\"nu0\">340</span> <span class=\"co1\">' print board</span><br/><span class=\"nu0\">350</span> <span class=\"kw1\">mode</span> <span class=\"nu0\">1</span><br/><span class=\"nu0\">360</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">450</span><br/><span class=\"nu0\">370</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">12</span><br/><span class=\"nu0\">380</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Move on the board with the Q,A,O,P keys\"</span><br/><span class=\"nu0\">390</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Press Space to clear\"</span><br/><span class=\"nu0\">400</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Press M to mark as a potential mine\"</span><br/><span class=\"nu0\">410</span> <span class=\"kw1\">print</span><br/><span class=\"nu0\">420</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"There are\"</span>nmines<span class=\"st0\">\"mines.\"</span><br/><span class=\"nu0\">430</span> <span class=\"kw1\">return</span><br/><span class=\"nu0\">440</span> <span class=\"co1\">' update board</span><br/><span class=\"nu0\">450</span> <span class=\"kw1\">for</span> y=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardy<br/><span class=\"nu0\">460</span> <span class=\"kw1\">for</span> x=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardx<br/><span class=\"nu0\">470</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">2</span>*x,y<br/><span class=\"nu0\">480</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">530</span><br/><span class=\"nu0\">490</span> <span class=\"kw1\">next</span><br/><span class=\"nu0\">500</span> <span class=\"kw1\">next</span><br/><span class=\"nu0\">510</span> <span class=\"kw1\">return</span><br/><span class=\"nu0\">520</span> <span class=\"co1\">' print tile</span><br/><span class=\"nu0\">530</span> <span class=\"kw1\">if</span> a<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">128</span> <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"?\"</span>:<span class=\"kw1\">return</span><br/><span class=\"nu0\">540</span> <span class=\"kw1\">if</span> c<span class=\"br0\">(</span>x+<span class=\"nu0\">1</span>,y+<span class=\"nu0\">1</span><span class=\"br0\">)</span>=<span class=\"nu0\">0</span> <span class=\"kw1\">then</span> d$=<span class=\"st0\">\" \"</span> <span class=\"kw1\">else</span> d$=<span class=\"kw2\">chr</span>$<span class=\"br0\">(</span>c<span class=\"br0\">(</span>x+<span class=\"nu0\">1</span>,y+<span class=\"nu0\">1</span><span class=\"br0\">)</span>+<span class=\"nu0\">48</span><span class=\"br0\">)</span><br/><span class=\"nu0\">550</span> <span class=\"kw1\">if</span> a<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">256</span> <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> d$:<span class=\"kw1\">return</span><br/><span class=\"nu0\">560</span> <span class=\"co1\">'if a(x,y) and 64 then print \"M\":return</span><br/><span class=\"nu0\">570</span> <span class=\"kw1\">print</span> <span class=\"st0\">\".\"</span><br/><span class=\"nu0\">580</span> <span class=\"kw1\">return</span><br/><span class=\"nu0\">590</span> <span class=\"co1\">' turn on tile</span><br/><span class=\"nu0\">600</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">2</span>*x,y<br/><span class=\"nu0\">610</span> <span class=\"kw1\">pen</span> <span class=\"nu0\">0</span>:<span class=\"kw1\">paper</span> <span class=\"nu0\">1</span><br/><span class=\"nu0\">620</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">530</span><br/><span class=\"nu0\">630</span> <span class=\"kw1\">pen</span> <span class=\"nu0\">1</span>:<span class=\"kw1\">paper</span> <span class=\"nu0\">0</span><br/><span class=\"nu0\">640</span> <span class=\"kw1\">return</span><br/><span class=\"nu0\">650</span> <span class=\"co1\">' turn off tile</span><br/><span class=\"nu0\">660</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">2</span>*x,y<br/><span class=\"nu0\">670</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">530</span><br/><span class=\"nu0\">680</span> <span class=\"kw1\">return</span><br/><span class=\"nu0\">690</span> <span class=\"co1\">' clear tile</span><br/><span class=\"nu0\">700</span> <span class=\"kw1\">if</span> a<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">64</span> <span class=\"kw1\">then</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">15</span>,<span class=\"nu0\">20</span>:<span class=\"kw1\">print</span> <span class=\"st0\">\"*** BOOM! ***\"</span>:<span class=\"kw1\">end</span><br/><span class=\"nu0\">710</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">25</span>:<span class=\"kw1\">print</span> <span class=\"st0\">\"-WAIT-\"</span>;<br/><span class=\"nu0\">720</span> <span class=\"kw1\">for</span> x2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardx<br/><span class=\"nu0\">730</span> <span class=\"kw1\">for</span> y2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardy<br/><span class=\"nu0\">740</span> c2<span class=\"br0\">(</span>x2+<span class=\"nu0\">1</span>,y2+<span class=\"nu0\">1</span><span class=\"br0\">)</span>=a<span class=\"br0\">(</span>x2,y2<span class=\"br0\">)</span><br/><span class=\"nu0\">750</span> <span class=\"kw1\">next</span><br/><span class=\"nu0\">760</span> <span class=\"kw1\">next</span><br/><span class=\"nu0\">770</span> <span class=\"co1\">' iterate clearing</span><br/><span class=\"nu0\">780</span> cl=<span class=\"nu0\">0</span><br/><span class=\"nu0\">790</span> <span class=\"kw1\">for</span> x2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardx<br/><span class=\"nu0\">800</span> <span class=\"kw1\">for</span> y2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardy<br/><span class=\"nu0\">810</span> <span class=\"kw1\">if</span> c2<span class=\"br0\">(</span>x2+<span class=\"nu0\">1</span>,y2+<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">512</span> <span class=\"kw1\">then</span> <span class=\"kw1\">gosub</span> <span class=\"nu0\">940</span>:cl=cl+<span class=\"nu0\">1</span><br/><span class=\"nu0\">820</span> <span class=\"kw1\">next</span> y2<br/><span class=\"nu0\">830</span> <span class=\"kw1\">next</span> x2<br/><span class=\"nu0\">840</span> <span class=\"kw1\">if</span> cl <span class=\"kw1\">then</span> <span class=\"nu0\">780</span><br/><span class=\"nu0\">850</span> <span class=\"kw1\">for</span> x2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardx<br/><span class=\"nu0\">860</span> <span class=\"kw1\">for</span> y2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardy<br/><span class=\"nu0\">870</span> vv=c2<span class=\"br0\">(</span>x2+<span class=\"nu0\">1</span>,y2+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"nu0\">880</span> <span class=\"kw1\">if</span> vv&gt;<span class=\"nu0\">1000</span> <span class=\"kw1\">then</span> a<span class=\"br0\">(</span>x2,y2<span class=\"br0\">)</span>=vv <span class=\"kw1\">xor</span> <span class=\"nu0\">1024</span><br/><span class=\"nu0\">890</span> <span class=\"kw1\">next</span> y2<br/><span class=\"nu0\">900</span> <span class=\"kw1\">next</span> x2<br/><span class=\"nu0\">910</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">25</span>:<span class=\"kw1\">print</span> <span class=\"st0\">\"      \"</span>;<br/><span class=\"nu0\">920</span> <span class=\"kw1\">return</span><br/><span class=\"nu0\">930</span> <span class=\"co1\">' find neighbors</span><br/><span class=\"nu0\">940</span> c2<span class=\"br0\">(</span>x2+<span class=\"nu0\">1</span>,y2+<span class=\"nu0\">1</span><span class=\"br0\">)</span>=<span class=\"br0\">(</span>c2<span class=\"br0\">(</span>x2+<span class=\"nu0\">1</span>,y2+<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">xor</span> <span class=\"nu0\">512</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"nu0\">256</span> <span class=\"kw1\">or</span> <span class=\"nu0\">1024</span><br/><span class=\"nu0\">950</span> <span class=\"kw1\">for</span> ii=<span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">2</span><br/><span class=\"nu0\">960</span> <span class=\"kw1\">for</span> jj=<span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">2</span><br/><span class=\"nu0\">970</span> <span class=\"kw1\">if</span> ii=<span class=\"nu0\">0</span> <span class=\"kw1\">and</span> jj=<span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"nu0\">1030</span><br/><span class=\"nu0\">980</span> <span class=\"kw1\">if</span> c2<span class=\"br0\">(</span>x2+ii,y2+jj<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">64</span> <span class=\"kw1\">then</span> <span class=\"nu0\">1030</span><br/><span class=\"nu0\">990</span> <span class=\"kw1\">if</span> c2<span class=\"br0\">(</span>x2+ii,y2+jj<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">128</span> <span class=\"kw1\">then</span> <span class=\"nu0\">1030</span><br/><span class=\"nu0\">1000</span> <span class=\"kw1\">if</span> c2<span class=\"br0\">(</span>x2+ii,y2+jj<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">1024</span> <span class=\"kw1\">then</span> <span class=\"nu0\">1030</span><br/><span class=\"nu0\">1010</span> c2<span class=\"br0\">(</span>x2+ii,y2+jj<span class=\"br0\">)</span>=c2<span class=\"br0\">(</span>x2+ii,y2+jj<span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"nu0\">512</span><br/><span class=\"nu0\">1020</span> <span class=\"co1\">' next tile</span><br/><span class=\"nu0\">1030</span> <span class=\"kw1\">next</span> jj<br/><span class=\"nu0\">1040</span> <span class=\"kw1\">next</span> ii<br/><span class=\"nu0\">1050</span> <span class=\"kw1\">return</span><br/><span class=\"nu0\">1060</span> <span class=\"co1\">' update discovered mine count</span><br/><span class=\"nu0\">1070</span> mm=<span class=\"nu0\">0</span><br/><span class=\"nu0\">1080</span> <span class=\"kw1\">for</span> x2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardx<br/><span class=\"nu0\">1090</span> <span class=\"kw1\">for</span> y2=<span class=\"nu0\">1</span> <span class=\"kw1\">to</span> boardy<br/><span class=\"nu0\">1100</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a<span class=\"br0\">(</span>x2,y2<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">128</span><span class=\"br0\">)</span>&gt;<span class=\"nu0\">0</span> <span class=\"kw1\">and</span> <span class=\"br0\">(</span>a<span class=\"br0\">(</span>x2,y2<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"nu0\">64</span><span class=\"br0\">)</span>&gt;<span class=\"nu0\">0</span> <span class=\"kw1\">then</span> mm=mm+<span class=\"nu0\">1</span><br/><span class=\"nu0\">1110</span> <span class=\"kw1\">next</span><br/><span class=\"nu0\">1120</span> <span class=\"kw1\">next</span><br/><span class=\"nu0\">1130</span> <span class=\"kw1\">if</span> mm=nmines <span class=\"kw1\">then</span> <span class=\"kw1\">locate</span> <span class=\"nu0\">5</span>,<span class=\"nu0\">22</span>:<span class=\"kw1\">print</span> <span class=\"st0\">\"Congratulations, you've won!\"</span>:<span class=\"kw1\">end</span><br/><span class=\"nu0\">1140</span> <span class=\"kw1\">return</span></pre>"}, {"lang": "Mathematica", "loc": 46, "block": "<pre class=\"text highlighted_source\">DynamicModule[{m = 6, n = 4, minecount, grid, win, reset, clear, <br/>  checkwin},<br/> reset[]\u00a0:= <br/>  Module[{minesdata, adjacentmines}, <br/>   minecount = RandomInteger[Round[{.1, .2} m*n]]; <br/>   minesdata = <br/>    <a class=\"__cf_email__\" data-cfemail=\"763819041b171a36250617040513370404170f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[# -&gt; 1 &amp; /@ <br/>       RandomSample[Tuples[Range /@ {m, n}], minecount], {m, n}]; <br/>   adjacentmines = <br/>    ArrayPad[<br/>     Total[RotateLeft[<br/>         ArrayPad[minesdata, <br/>          1], #] &amp; /@ {{-1, -1}, {0, -1}, {1, -1}, {-1, 0}, {1, <br/>         0}, {-1, 1}, {0, 1}, {1, 1}}], -1]; <br/>   grid = Array[{If[minesdata[[#1, #2]] == 1, \"*\", <br/>        adjacentmines[[#1, #2]]], \".\", 1} &amp;, {m, n}]; win = \"\"];<br/> clear[i_, j_]\u00a0:=<br/>  If[grid[[i, j, 1]] == \"*\", win = \"You lost.\"; <br/>    grid = grid /. {{n_Integer, \"?\", _}\u00a0:&gt; {n, \"x\", 0}, {\"*\", <br/>         \".\", _}\u00a0:&gt; {\"*\", \"*\", 0}}, <br/>    grid[[i, j]] = {grid[[i, j, 1]], grid[[i, j, 1]], 0}; <br/>    If[grid[[i, j, 2]] == 0, grid[[i, j, 2]] = \"\"; <br/>     clear[i + #[[1]], <br/>        j + #[[2]]] &amp; /@ {{-1, -1}, {0, -1}, {1, -1}, {-1, 0}, {1, <br/>        0}, {-1, 1}, {0, 1}, {1, 1}}]] /; <br/>   1 &lt;= i &lt;= m &amp;&amp; 1 &lt;= j &lt;= n &amp;&amp; grid[[i, j, 2]] == \".\";<br/> checkwin[]\u00a0:= <br/>  If[FreeQ[grid, {_Integer, \"?\", _} | {_, \"*\", _} | {_Integer, <br/>      \".\", _}], win = \"You win.\"; <br/>   grid = grid /. {{\"*\", \".\", _}\u00a0:&gt; {\"*\", \"?\", 1}}];<br/> reset[];<br/> <a class=\"__cf_email__\" data-cfemail=\"1e4e7f707b725e5d71726b7370\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>@{<a class=\"__cf_email__\" data-cfemail=\"96c4f9e1d6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{<a class=\"__cf_email__\" data-cfemail=\"8bcff2e5eae6e2e8cbe6e2e5eee8e4fee5ff\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>, \"\\t\", <br/>      Button[\"Reset\", reset[]]}, <br/>    Grid[Table[<br/>      With[{i = i, j = j}, <br/>       EventHandler[<br/>        Button[Dynamic[grid[[i, j, 2]]], Null, ImageSize -&gt; {17, 17}, <br/>         Appearance -&gt; <br/>          Dynamic[If[grid[[i, j, 3]] == 0, \"Pressed\", <br/>            \"DialogBox\"]]], {{\"MouseClicked\", 1}\u00a0:&gt; <br/>          If[win == \"\", clear[i, j]; checkwin[]], {\"MouseClicked\", <br/>           2}\u00a0:&gt; If[win == \"\", <br/>           Switch[grid[[i, j, 2]], \".\", grid[[i, j, 2]] = \"?\"; <br/>            minecount--, \"?\", grid[[i, j, 2]] = \".\"; minecount++]; <br/>           checkwin[]]}]], {i, 1, m}, {j, 1, n}], Spacings -&gt; {0, 0}],<br/>     Dynamic[win]}]</pre>"}, {"lang": "MATLAB", "loc": 1, "block": "<pre class=\"matlab highlighted_source\">xpbombs</pre>"}, {"lang": "OCaml", "loc": 145, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">exception</span> Lost<br/><span class=\"kw1\">exception</span> Won<br/>\u00a0<br/><span class=\"kw1\">let</span> put_mines g m n mines_number <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> aux i <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> i <span class=\"sy0\">&lt;</span> mines_number <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">let</span> x <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a> n<br/>      <span class=\"kw1\">and</span> y <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a> m <span class=\"kw1\">in</span><br/>      <span class=\"kw1\">if</span> g<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>      <span class=\"kw1\">then</span> aux i<br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">begin</span><br/>        g<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>        aux <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> i<span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">in</span><br/>  aux <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">let</span> print_abscissas n <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> <span class=\"st0\">\"\\n      \"</span><span class=\"sy0\">;</span> <span class=\"kw1\">for</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> n <span class=\"kw1\">do</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_int\"><span class=\"kw3\">print_int</span></a> <span class=\"br0\">(</span>x <span class=\"kw1\">mod</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> <span class=\"st0\">\"\\n      \"</span><span class=\"sy0\">;</span> <span class=\"kw1\">for</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> n <span class=\"kw1\">do</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_char\"><span class=\"kw3\">print_char</span></a> <span class=\"sy0\">'|'</span> <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> print_display d n <span class=\"sy0\">=</span><br/>  print_abscissas n<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>iteri <span class=\"br0\">(</span><span class=\"kw1\">fun</span> y line <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"\u00a0%2d - \"</span> <span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"co1\">(* print ordinates *)</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>iter <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_char\"><span class=\"kw3\">print_char</span></a> line<span class=\"sy0\">;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span> d<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> reveal d g n <span class=\"sy0\">=</span><br/>  print_abscissas n<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>iteri <span class=\"br0\">(</span><span class=\"kw1\">fun</span> y line <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"\u00a0%2d - \"</span> <span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"co1\">(* print ordinates *)</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>iteri <span class=\"br0\">(</span><span class=\"kw1\">fun</span> x c <span class=\"sy0\">-&gt;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_char\"><span class=\"kw3\">print_char</span></a> <span class=\"br0\">(</span><br/>        <span class=\"kw1\">match</span> c, g<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>        <span class=\"sy0\">|</span> <span class=\"sy0\">'</span><span class=\"nu0\">0</span><span class=\"sy0\">'..'</span><span class=\"nu0\">9</span><span class=\"sy0\">'</span>, _ <span class=\"sy0\">-&gt;</span> c<br/>        <span class=\"sy0\">|</span> <span class=\"sy0\">'.'</span>, <span class=\"kw1\">true</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">'</span>x<span class=\"sy0\">'</span><br/>        <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>?<span class=\"sy0\">'</span>, <span class=\"kw1\">true</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">'</span>X<span class=\"sy0\">'</span><br/>        <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>?<span class=\"sy0\">'</span>, <span class=\"kw1\">false</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">'</span>N<span class=\"sy0\">'</span><br/>        <span class=\"sy0\">|</span> <span class=\"sy0\">'.'</span>, <span class=\"kw1\">false</span> <span class=\"sy0\">-&gt;</span> <span class=\"sy0\">'.'</span><br/>        <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span> c<span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span> line<span class=\"sy0\">;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span> d<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> toggle_mark d x y <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">match</span> d<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>  <span class=\"sy0\">|</span> <span class=\"sy0\">'.'</span> <span class=\"sy0\">-&gt;</span> d<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <span class=\"sy0\">'</span>?<span class=\"sy0\">'</span><br/>  <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>?<span class=\"sy0\">'</span> <span class=\"sy0\">-&gt;</span> d<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <span class=\"sy0\">'.'</span><br/>  <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> feedback g d x y <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">if</span> d<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">'.'</span> <span class=\"kw1\">then</span><br/>  <span class=\"kw1\">begin</span><br/>    <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">0</span> <span class=\"kw1\">in</span>  <span class=\"co1\">(* the number of mines around *)</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALpred\"><span class=\"kw3\">pred</span></a> y<span class=\"br0\">)</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> y<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALpred\"><span class=\"kw3\">pred</span></a> x<span class=\"br0\">)</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> x<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">try</span> <span class=\"kw1\">if</span> g<span class=\"sy0\">.</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">incr</span> n<br/>        <span class=\"kw1\">with</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">match</span> <span class=\"sy0\">!</span>n <span class=\"kw1\">with</span><br/>    <span class=\"sy0\">|</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span><br/>        <span class=\"co1\">(* recursive feedback when no mines are around *)</span><br/>        d<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <span class=\"sy0\">'</span> <span class=\"sy0\">';</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALpred\"><span class=\"kw3\">pred</span></a> y<span class=\"br0\">)</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> y<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>          <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALpred\"><span class=\"kw3\">pred</span></a> x<span class=\"br0\">)</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> x<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">try</span> feedback g d i j<br/>            <span class=\"kw1\">with</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">done</span><br/>        <span class=\"kw1\">done</span><br/>    <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span><br/>        d<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALstring_of_int\"><span class=\"kw3\">string_of_int</span></a> <span class=\"sy0\">!</span>n<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">let</span> clear_cell g d x y <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">if</span> g<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>  <span class=\"kw1\">then</span> <span class=\"br0\">(</span>d<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <span class=\"sy0\">'!';</span> <span class=\"kw1\">raise</span> Lost<span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span> feedback g d x y<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> user_input g d <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">try</span><br/>    <span class=\"kw1\">let</span> s <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALread_line\"><span class=\"kw3\">read_line</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">match</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Scanf.html\"><span class=\"kw2\">Scanf</span></a><span class=\"sy0\">.</span>sscanf s <span class=\"st0\">\"%c\u00a0%d\u00a0%d\"</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> c x y <span class=\"sy0\">-&gt;</span> c,x,y<span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>    <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>m<span class=\"sy0\">'</span>, x, y <span class=\"sy0\">-&gt;</span> toggle_mark d <span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>c<span class=\"sy0\">'</span>, x, y <span class=\"sy0\">-&gt;</span> clear_cell g d <span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">raise</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#EXCEPTIONExit\"><span class=\"kw5\">Exit</span></a><br/>  <span class=\"kw1\">with</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#EXCEPTIONExit\"><span class=\"kw5\">Exit</span></a> <span class=\"sy0\">|</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Scanf.html\"><span class=\"kw2\">Scanf</span></a><span class=\"sy0\">.</span>Scan_failure _<br/>  <span class=\"sy0\">|</span> Invalid_argument <span class=\"st0\">\"index out of bounds\"</span> <span class=\"sy0\">-&gt;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> <span class=\"st0\">\"# wrong input, try again\\n&gt; \"</span><span class=\"sy0\">;</span><br/>      user_input g d<br/>\u00a0<br/><span class=\"kw1\">let</span> check_won g d <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> won <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"kw1\">true</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>iteri <span class=\"br0\">(</span><span class=\"kw1\">fun</span> y line <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>iteri <span class=\"br0\">(</span><span class=\"kw1\">fun</span> x c <span class=\"sy0\">-&gt;</span><br/>      <span class=\"kw1\">match</span> c, g<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>      <span class=\"sy0\">|</span> <span class=\"sy0\">'.'</span>, _ <span class=\"sy0\">-&gt;</span> won <span class=\"sy0\">:=</span> <span class=\"kw1\">false</span><br/>      <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>?<span class=\"sy0\">'</span>, <span class=\"kw1\">false</span> <span class=\"sy0\">-&gt;</span> won <span class=\"sy0\">:=</span> <span class=\"kw1\">false</span><br/>      <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span> line<br/>  <span class=\"br0\">)</span> d<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"sy0\">!</span>won <span class=\"kw1\">then</span> <span class=\"kw1\">raise</span> Won<br/>\u00a0<br/><span class=\"kw1\">let</span> minesweeper n m percent <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> round x <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_float\"><span class=\"kw3\">int_of_float</span></a> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloor\"><span class=\"kw3\">floor</span></a> <span class=\"br0\">(</span>x <span class=\"sy0\">+.</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> mines_number <span class=\"sy0\">=</span> round <span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">*</span> m<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*.</span> percent<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"co1\">(* the ground containing the mines *)</span><br/>  <span class=\"kw1\">let</span> g <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>make_matrix m n <span class=\"kw1\">false</span> <span class=\"kw1\">in</span><br/>  put_mines g m n mines_number<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"# You have to find\u00a0%d mines\\n\"</span> mines_number<span class=\"sy0\">;</span><br/>  <span class=\"co1\">(* what's displayed to the user *)</span><br/>  <span class=\"kw1\">let</span> d <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>make_matrix m n <span class=\"sy0\">'.'</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">try</span><br/>    <span class=\"kw1\">while</span> <span class=\"kw1\">true</span> <span class=\"kw1\">do</span><br/>      print_display d n<span class=\"sy0\">;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> <span class=\"st0\">\"&gt; \"</span><span class=\"sy0\">;</span><br/>      user_input g d<span class=\"sy0\">;</span><br/>      check_won g d<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">done</span><br/>  <span class=\"kw1\">with</span><br/>  <span class=\"sy0\">|</span> Lost <span class=\"sy0\">-&gt;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> <span class=\"st0\">\"# You lost!\"</span><span class=\"sy0\">;</span><br/>      reveal d g n<br/>  <span class=\"sy0\">|</span> Won <span class=\"sy0\">-&gt;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> <span class=\"st0\">\"# You won!\"</span><span class=\"sy0\">;</span><br/>      reveal d g n<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span>self_init<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> ios, fos <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_string\"><span class=\"kw3\">int_of_string</span></a>, <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat_of_string\"><span class=\"kw3\">float_of_string</span></a> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> n, m, percent <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">try</span> ios <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, ios <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, fos <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">with</span> _ <span class=\"sy0\">-&gt;</span><br/>      <span class=\"kw1\">try</span> ios <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, ios <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"nu0\">0.2</span><br/>      <span class=\"kw1\">with</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">0.2</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">in</span><br/>  minesweeper n m percent<span class=\"sy0\">;</span><br/><span class=\"sy0\">;;</span></pre>"}, {"lang": "Perl", "loc": 167, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"br0\">{</span>   <a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> Local<span class=\"sy0\">::</span><span class=\"me2\">Field</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">use</span> constant <span class=\"br0\">{</span><br/>        REAL  <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>        SHOW  <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>        COUNT <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> <span class=\"kw2\">new</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$class</span><span class=\"sy0\">,</span> <span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"re0\">$height</span><span class=\"sy0\">,</span> <span class=\"re0\">$percent</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$field</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$width</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$y</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$height</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>REAL<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st_h\">' '</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'.'</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$percent</span> <span class=\"sy0\">/</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"re0\">$width</span> <span class=\"sy0\">*</span> <span class=\"re0\">$height</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a> <a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a> <span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"re0\">$height</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">redo</span> <span class=\"kw1\">if</span> <span class=\"st_h\">'m'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>REAL<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>REAL<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'m'</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$j</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$y</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">[</span>COUNT<span class=\"br0\">]</span><span class=\"sy0\">++</span><br/>                        <span class=\"kw1\">if</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">and</span> <span class=\"re0\">$j</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><br/>                        <span class=\"kw1\">and</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"co5\">$#</span><span class=\"re0\">$field</span> <span class=\"kw1\">and</span> <span class=\"re0\">$j</span> <span class=\"sy0\">&lt;=</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span> <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"re0\">$field</span><span class=\"sy0\">,</span> <span class=\"re0\">$class</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw2\">sub</span> show <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$self</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>  \"</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st_h\">'%2d '</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw1\">for</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"re0\">$self</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$row</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st_h\">'%2d '</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$row</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$column</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"re0\">$self</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$column</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$row</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"st_h\">'  '</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw2\">sub</span> mark <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$self</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"co5\">$_</span><span class=\"sy0\">--</span> <span class=\"kw1\">for</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st_h\">'.'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'?'</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"st_h\">'?'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'.'</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw2\">sub</span> end <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$self</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$y</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"re0\">$self</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'!'</span> <span class=\"kw1\">if</span> <span class=\"st_h\">'.'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><br/>                    <span class=\"kw1\">and</span> <span class=\"st_h\">'m'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>REAL<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'x'</span> <span class=\"kw1\">if</span> <span class=\"st_h\">'?'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><br/>                    <span class=\"kw1\">and</span> <span class=\"st_h\">'m'</span> <span class=\"kw1\">ne</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>REAL<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">show</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/exit.html\"><span class=\"kw3\">exit</span></a><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> _declassify <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$self</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">if</span> <span class=\"st_h\">'.'</span> <span class=\"kw1\">ne</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st_h\">' '</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>REAL<span class=\"br0\">]</span> <span class=\"kw1\">and</span> <span class=\"st_h\">'.'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>COUNT<span class=\"br0\">]</span> <span class=\"sy0\">||</span> <span class=\"st_h\">' '</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">if</span> <span class=\"st_h\">' '</span> <span class=\"kw1\">ne</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">or</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"co5\">$#</span><span class=\"re0\">$self</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$j</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$y</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">or</span> <span class=\"re0\">$j</span> <span class=\"sy0\">&gt;</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>                <a href=\"http://perldoc.perl.org/functions/no.html\"><span class=\"kw3\">no</span></a> warnings <span class=\"st_h\">'recursion'</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span>_declassify<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw2\">sub</span> clear <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$self</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"co5\">$_</span><span class=\"sy0\">--</span> <span class=\"kw1\">for</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">unless</span> <span class=\"st_h\">'.'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"You lost.<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">and</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">end</span> <span class=\"kw1\">if</span> <span class=\"st_h\">'m'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span>REAL<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"re0\">$self</span><span class=\"sy0\">-&gt;</span>_declassify<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw2\">sub</span> remain <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$self</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$unclear</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$column</span> <span class=\"br0\">(</span><span class=\"re0\">@$self</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$cell</span> <span class=\"br0\">(</span><span class=\"re0\">@$column</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$unclear</span><span class=\"sy0\">++</span> <span class=\"kw1\">if</span> <span class=\"st_h\">'.'</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$cell</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span>SHOW<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$unclear</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> help <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">&lt;&lt;</span> <span class=\"st_h\">'__HELP__'</span><span class=\"sy0\">;</span><br/>Commands<span class=\"sy0\">:</span><br/>h     <span class=\"sy0\">...</span> help<br/><a href=\"http://perldoc.perl.org/functions/q.html\"><span class=\"kw3\">q</span></a>     <span class=\"sy0\">...</span> quit<br/><a href=\"http://perldoc.perl.org/functions/m.html\"><span class=\"kw3\">m</span></a> X Y <span class=\"sy0\">...</span> mark<span class=\"sy0\">/</span>unmark X Y<br/>c X Y <span class=\"sy0\">...</span> clear X Y<br/>__HELP__<br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"re0\">$height</span><span class=\"sy0\">,</span> <span class=\"re0\">$percent</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">@</span><span class=\"kw2\">ARGV</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$width</span>   <span class=\"sy0\">||=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$height</span>  <span class=\"sy0\">||=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$percent</span> <span class=\"sy0\">||=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$field</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'Local::Field'</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"re0\">$height</span><span class=\"sy0\">,</span> <span class=\"re0\">$percent</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$help</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">show</span><span class=\"sy0\">;</span><br/>    help<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$help</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$help</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$remain</span> <span class=\"sy0\">=</span> <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">remain</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">last</span> <span class=\"kw1\">if</span> <span class=\"nu0\">0</span> <span class=\"sy0\">==</span> <span class=\"re0\">$remain</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Cells remaining: $remain.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$command</span> <span class=\"sy0\">=</span> <span class=\"re4\">&lt;STDIN&gt;</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/exit.html\"><span class=\"kw3\">exit</span></a> <span class=\"kw1\">if</span> <span class=\"re0\">$command</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^q/i</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$command</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^m.*?([0-9]+).*?([0-9]+)/i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">mark</span><span class=\"br0\">(</span><span class=\"co3\">$1</span><span class=\"sy0\">,</span> <span class=\"co3\">$2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$command</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^c.*?([0-9]+).*?([0-9]+)/i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$field</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">clear</span><span class=\"br0\">(</span><span class=\"co3\">$1</span><span class=\"sy0\">,</span> <span class=\"co3\">$2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$command</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^h/i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$help</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Huh?<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"You won!<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 111, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">enum</span> Tile<span class=\"sy0\">-</span>Type <span class=\"sy0\">&lt;</span>Empty Mine<span class=\"sy0\">&gt;;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Tile <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> Tile<span class=\"sy0\">-</span>Type <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">type</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">face</span> <span class=\"kw1\">is</span> rw<span class=\"sy0\">;</span><br/>    <span class=\"kw2\">method</span> Str <span class=\"br0\">{</span> with <span class=\"re0\">$!face</span> <span class=\"br0\">{</span> <span class=\"sy0\">~</span><span class=\"re0\">$!face</span> <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span> <span class=\"st_h\">'.'</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Field <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> <span class=\"re0\">@</span><span class=\"sy0\">.</span><span class=\"me1\">grid</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Int <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">width</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Int <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">height</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Int <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">mine</span><span class=\"sy0\">-</span>spots<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Int <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">empty</span><span class=\"sy0\">-</span>spots<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> <span class=\"kw2\">new</span> <span class=\"br0\">(</span>Int <span class=\"re0\">$height</span><span class=\"sy0\">,</span> Int <span class=\"re0\">$width</span><span class=\"sy0\">,</span> Rat <span class=\"re0\">$mines</span><span class=\"sy0\">-</span>ratio<span class=\"sy0\">=</span><span class=\"nu0\">0.1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$mine</span><span class=\"sy0\">-</span>spots <span class=\"sy0\">=</span> <span class=\"kw3\">round</span> <span class=\"re0\">$width</span><span class=\"sy0\">*</span><span class=\"re0\">$height</span><span class=\"sy0\">*</span><span class=\"re0\">$mines</span><span class=\"sy0\">-</span>ratio<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$empty</span><span class=\"sy0\">-</span>spots <span class=\"sy0\">=</span> <span class=\"re0\">$width</span><span class=\"sy0\">*</span><span class=\"re0\">$height</span> <span class=\"sy0\">-</span> <span class=\"re0\">$mine</span><span class=\"sy0\">-</span>spots<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@grid</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">$height</span> <span class=\"kw1\">X</span> <span class=\"sy0\">^</span><span class=\"re0\">$width</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Tile<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>type <span class=\"sy0\">=&gt;</span> Empty<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">^</span><span class=\"re0\">$height</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">pick</span><span class=\"br0\">(</span><span class=\"re0\">$mine</span><span class=\"sy0\">-</span>spots<span class=\"br0\">)</span> <span class=\"kw1\">Z</span> <span class=\"br0\">(</span><span class=\"sy0\">^</span><span class=\"re0\">$width</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">pick</span><span class=\"br0\">(</span><span class=\"re0\">$mine</span><span class=\"sy0\">-</span>spots<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Tile<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span> type <span class=\"sy0\">=&gt;</span> Mine<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        self<span class=\"sy0\">.</span><span class=\"me1\">bless</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"re0\">$height</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">@grid</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$mine</span><span class=\"sy0\">-</span>spots<span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$empty</span><span class=\"sy0\">-</span>spots<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> open<span class=\"br0\">(</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">if</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">face</span><span class=\"sy0\">.</span><span class=\"kw3\">defined</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        self<span class=\"sy0\">.</span><span class=\"me1\">end</span><span class=\"sy0\">-</span>game<span class=\"br0\">(</span><span class=\"st0\">\"KaBoom\"</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">type</span> <span class=\"sy0\">~~</span> Mine<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@neighbors</span> <span class=\"sy0\">=</span> gather <span class=\"kw1\">do</span><br/>\t    take <span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"sy0\">+.</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"re0\">$x</span><span class=\"sy0\">+.</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$y</span> <span class=\"sy0\">+</span> <span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$!height</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$!width</span><br/>\t\t <span class=\"kw1\">for</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"nu0\">0</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t     <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,+</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>        <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,+</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t     <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"nu0\">0</span><span class=\"sy0\">,+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$mines</span> <span class=\"sy0\">=</span> <span class=\"sy0\">+</span><span class=\"re0\">@neighbors</span><span class=\"sy0\">.</span><span class=\"kw3\">grep</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">type</span> <span class=\"sy0\">~~</span> Mine <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"re0\">$!empty</span><span class=\"sy0\">-</span>spots<span class=\"sy0\">--;</span><br/>        <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">face</span> <span class=\"sy0\">=</span> <span class=\"re0\">$mines</span> <span class=\"sy0\">||</span> <span class=\"st_h\">' '</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"re0\">$mines</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">{</span><br/>            self<span class=\"sy0\">.</span><span class=\"me1\">open</span><span class=\"br0\">(</span><span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> <span class=\"re0\">@neighbors</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        self<span class=\"sy0\">.</span><span class=\"me1\">end</span><span class=\"sy0\">-</span>game<span class=\"br0\">(</span><span class=\"st0\">\"You won\"</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$!empty</span><span class=\"sy0\">-</span>spots <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> end<span class=\"sy0\">-</span>game<span class=\"br0\">(</span>Str <span class=\"re0\">$msg</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">$!height</span> <span class=\"kw1\">X</span> <span class=\"sy0\">^</span><span class=\"re0\">$!width</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">face</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'*'</span> <span class=\"kw1\">if</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">type</span> <span class=\"sy0\">~~</span> Mine<br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">die</span> <span class=\"re0\">$msg</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> mark <span class=\"br0\">(</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">face</span><span class=\"sy0\">.</span><span class=\"kw3\">defined</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">face</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\u2690\"</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$!mine</span><span class=\"sy0\">-</span>spots<span class=\"sy0\">--</span> <span class=\"kw1\">if</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">type</span> <span class=\"sy0\">~~</span> Mine<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">elsif</span> <span class=\"sy0\">!</span><span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">face</span> <span class=\"kw1\">eq</span> <span class=\"st0\">\"\u2690\"</span> <span class=\"br0\">{</span><br/>            <span class=\"kw3\">undefine</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">face</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$!mine</span><span class=\"sy0\">-</span>spots<span class=\"sy0\">++</span> <span class=\"kw1\">if</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">type</span> <span class=\"sy0\">~~</span> Mine<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        self<span class=\"sy0\">.</span><span class=\"me1\">end</span><span class=\"sy0\">-</span>game<span class=\"br0\">(</span><span class=\"st0\">\"You won\"</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$!mine</span><span class=\"sy0\">-</span>spots <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">constant</span> <span class=\"re0\">@digs</span> <span class=\"sy0\">=</span> <span class=\"sy0\">|</span><span class=\"br0\">(</span><span class=\"st_h\">'a'</span><span class=\"sy0\">..</span><span class=\"st_h\">'z'</span><span class=\"br0\">)</span> <span class=\"kw1\">xx</span> <span class=\"sy0\">*;</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> Str <span class=\"br0\">{</span><br/>        <span class=\"br0\">[</span><span class=\"sy0\">~</span><span class=\"br0\">]</span> flat <span class=\"st_h\">'  '</span><span class=\"sy0\">,</span> <span class=\"re0\">@digs</span><span class=\"br0\">[</span><span class=\"sy0\">^</span><span class=\"re0\">$!width</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>\t         <span class=\"st_h\">' \u250c'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2500'</span> <span class=\"kw1\">xx</span> <span class=\"re0\">$!width</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\u2510<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>\t    <span class=\"kw3\">join</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"kw1\">do</span> <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">$!height</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$y</span> <span class=\"br0\">{</span><br/>\t      <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2502'</span><span class=\"sy0\">,</span> <span class=\"re0\">@!grid</span><span class=\"br0\">[</span><span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"sy0\">*</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>   <span class=\"st0\">\"\u2502<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>\t         <span class=\"st_h\">' \u2514'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2500'</span> <span class=\"kw1\">xx</span> <span class=\"re0\">$!width</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2518'</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> valid <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"nu0\">0</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$y</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$!height</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$!width</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> a2n<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">ord</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">64</span> <span class=\"sy0\">??</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">ord</span> <span class=\"sy0\">%</span> <span class=\"nu0\">32</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">!!</span> <span class=\"sy0\">+</span><span class=\"re0\">$a</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$f</span> <span class=\"sy0\">=</span> Field<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">loop</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">say</span> <span class=\"sy0\">~</span><span class=\"re0\">$f</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@w</span> <span class=\"sy0\">=</span> prompt<span class=\"br0\">(</span><span class=\"st0\">\"[open loc|mark loc|loc]: \"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">words</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">last</span> <span class=\"kw1\">unless</span> <span class=\"re0\">@w</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">unshift</span> <span class=\"re0\">@w</span><span class=\"sy0\">,</span> <span class=\"st_h\">'open'</span> <span class=\"kw1\">if</span> <span class=\"re0\">@w</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span><span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co3\">$0</span><span class=\"sy0\">,</span> <span class=\"co3\">$1</span> <span class=\"kw1\">if</span> <span class=\"re0\">@w</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">~~</span> <span class=\"co2\">/(&lt;alpha&gt;)(&lt;digit&gt;)|$1=&lt;digit&gt;$0=&lt;alpha&gt;/</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> a2n<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">given</span> <span class=\"re0\">@w</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">when</span> <span class=\"sy0\">!</span><span class=\"re0\">$f</span><span class=\"sy0\">.</span><span class=\"me1\">valid</span><span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st0\">\"invalid coordinates\"</span> <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">when</span> <span class=\"co2\">/^o/</span> <span class=\"br0\">{</span> <span class=\"re0\">$f</span><span class=\"sy0\">.</span><span class=\"me1\">open</span><span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span><span class=\"re0\">$x</span><span class=\"br0\">)</span>   <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">when</span> <span class=\"co2\">/^m/</span> <span class=\"br0\">{</span> <span class=\"re0\">$f</span><span class=\"sy0\">.</span><span class=\"me1\">mark</span><span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span><span class=\"re0\">$x</span><span class=\"br0\">)</span>   <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">default</span>     <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st0\">\"invalid cmd\"</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">CATCH</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw3\">say</span> <span class=\"st0\">\"$_: end of game.\"</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">last</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"sy0\">~</span><span class=\"re0\">$f</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 172, "block": "<pre class=\"text highlighted_source\">constant help = \"\"\" <br/>\u00a0<br/>Minesweeper<br/>===========<br/>\u00a0<br/>Enter eg A1 to open a cell, FA1 to flag a cell, Q to quit.<br/>\u00a0<br/>The board is initially displayed with 10-20% of cells mined, as follows:<br/>\u00a0<br/>. - an unknown cell (unopened and not flagged)<br/>_ - an empty cell, with no surrounding mines<br/>1..8 - an empty cell, with some nearby mines<br/>? - a cell you have flagged as a mine<br/>    (a flag can only be cleared by opening)<br/>\u00a0<br/>On completion:<br/>X - the mine you detonated (if any)<br/>* - a mine which was not flagged<br/>+ - a mine which was correctly flagged<br/>\"\"\"<br/>\u00a0<br/>string board = \"\"\" <br/>\u00a0<br/> 123456<br/>A......<br/>B......<br/>C......<br/>D......<br/>\"\"\"<br/>\u00a0<br/>sequence data = repeat(repeat(0,6),4)<br/>-- 0: empty, no nearby mines<br/>-- 1-8: empty, with surrounding mines<br/>-- 9: a mine<br/>\u00a0<br/>-- data[row][col] maps to board[row*8+4+col], lets quickly verify that:<br/>if find('.',board)!=13 then\u00a0?9/0 end if<br/>if rfind('.',board)!=42 then\u00a0?9/0 end if<br/>-- (above may trigger if copy/paste/dowload etc messed up whitespace)<br/>\u00a0<br/>constant prompt = \"\\nEnter eg A1 to open a cell, FA1 to flag a cell, Q to quit, or\u00a0? for help:\"<br/>\u00a0<br/>integer mines = round((6*4)*0.10+rand(6*4)*0.10),  -- 10-20%<br/>        cleared = 0,<br/>        flagged = 0,<br/>        flag = false,<br/>        row = 0,<br/>        col<br/>\u00a0<br/>procedure plant_mines()<br/>    for i=1 to mines do<br/>        while 1 do<br/>            row = rand(4)<br/>            col = rand(6)<br/>            if data[row][col]!=9 then<br/>                data[row][col] = 9<br/>                for rx=row-1 to row+1 do<br/>                    if rx&gt;=1 and rx&lt;=4 then<br/>                        for cx=col-1 to col+1 do<br/>                            if cx&gt;=1 and cx&lt;=6 then<br/>                                if data[rx][cx]!=9 then<br/>                                    data[rx][cx] += 1<br/>                                end if<br/>                            end if<br/>                        end for<br/>                    end if<br/>                end for<br/>                exit<br/>            end if<br/>        end while<br/>    end for<br/>    printf(1,\"%d mines planted\\n\",mines)<br/>    row = 0<br/>end procedure<br/>\u00a0<br/>procedure clear_cell(integer row, col, drc)<br/>    board[row*8+4+col] = iff(drc?drc+'0':' ')<br/>    cleared += 1<br/>    if drc=0 then<br/>        for rx=row-1 to row+1 do<br/>            if rx&gt;=1 and rx&lt;=4 then<br/>                for cx=col-1 to col+1 do<br/>                    if cx&gt;=1 and cx&lt;=6 then<br/>                        drc = data[rx][cx]<br/>                        if drc!=9<br/>                        and board[rx*8+4+cx]='.' then<br/>                            clear_cell(rx,cx,drc)<br/>                        end if<br/>                    end if<br/>                end for<br/>            end if<br/>        end for<br/>    end if<br/>end procedure<br/>\u00a0<br/>function make_move()<br/>    integer brc = row*8+4+col<br/>    if flag then<br/>        if board[brc]='.' then<br/>            board[brc] = '?'<br/>            flagged += 1<br/>        end if<br/>    else<br/>        integer drc = data[row][col]<br/>        if drc=9 then<br/>            board[brc] = 'X'<br/>            puts(1,\"\\n\\n***BOOM!***\")<br/>            return true<br/>        end if<br/>        if find(board[brc],\".?\") then<br/>            clear_cell(row,col,drc)<br/>        end if<br/>    end if<br/>    row = 0<br/>    flag = false<br/>    -- nb: flagged and cleared may be wrong following incorrect input.<br/>    if flagged=mines<br/>    or cleared=6*4-mines then<br/>        puts(1,\"\\n\\n***You Win!***\")<br/>        return true<br/>    end if<br/>    return false    -- no \"BOOM\" yet!<br/>end function<br/>\u00a0<br/>procedure disclose()<br/>    for row=1 to 4 do<br/>        for col=1 to 6 do<br/>            if data[row][col]=9 then<br/>                integer bdx = row*8+4+col,<br/>                        bch = board[bdx]<br/>                if bch='.' then<br/>                    bch = '*'<br/>                elsif bch='?' then<br/>                    bch = '+'<br/>                elsif bch!='X' then<br/>                   \u00a0?9/0<br/>                end if<br/>                board[bdx] = bch<br/>            end if<br/>        end for<br/>    end for<br/>end procedure<br/>\u00a0<br/>plant_mines()<br/>while 1 do<br/>    if not flag and row=0 then<br/>        puts(1,board)<br/>        puts(1,prompt)<br/>    end if<br/>    integer ch = upper(getc(0))<br/>    puts(1,ch)<br/>    if ch='Q' then exit end if<br/>    if ch='?' then<br/>        puts(1,help)<br/>    elsif ch='F' then<br/>        flag = true<br/>    elsif ch&gt;='A'<br/>      and ch&lt;='D' then<br/>        row = ch-'@'<br/>    elsif ch&gt;='1'<br/>      and ch&lt;='6' then<br/>        col = ch-'0'<br/>        if make_move() then exit end if<br/>    else<br/>        printf(1,\"\\n\\nunrecognised:%c\\n\\n\",ch)<br/>        flag = false<br/>        row = 0<br/>    end if<br/>end while<br/>disclose()<br/>puts(1,board&amp;\"game over\\n\\n\")<br/>{} = wait_key()</pre>"}, {"lang": "PHP", "loc": 254, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><a href=\"http://www.php.net/define\"><span class=\"kw3\">define</span></a><span class=\"br0\">(</span><span class=\"st_h\">'MINEGRID_WIDTH'</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/define\"><span class=\"kw3\">define</span></a><span class=\"br0\">(</span><span class=\"st_h\">'MINEGRID_HEIGHT'</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://www.php.net/define\"><span class=\"kw3\">define</span></a><span class=\"br0\">(</span><span class=\"st_h\">'MINESWEEPER_NOT_EXPLORED'</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/define\"><span class=\"kw3\">define</span></a><span class=\"br0\">(</span><span class=\"st_h\">'MINESWEEPER_MINE'</span><span class=\"sy0\">,</span>         <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/define\"><span class=\"kw3\">define</span></a><span class=\"br0\">(</span><span class=\"st_h\">'MINESWEEPER_FLAGGED'</span><span class=\"sy0\">,</span>      <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/define\"><span class=\"kw3\">define</span></a><span class=\"br0\">(</span><span class=\"st_h\">'MINESWEEPER_FLAGGED_MINE'</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/define\"><span class=\"kw3\">define</span></a><span class=\"br0\">(</span><span class=\"st_h\">'ACTIVATED_MINE'</span><span class=\"sy0\">,</span>           <span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">function</span> check_field<span class=\"br0\">(</span><span class=\"re0\">$field</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">===</span> MINESWEEPER_MINE <span class=\"sy0\">||</span> <span class=\"re0\">$field</span> <span class=\"sy0\">===</span> MINESWEEPER_FLAGGED_MINE<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw4\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw4\">false</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">function</span> explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/isset\"><span class=\"kw3\">isset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$field</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>     <span class=\"sy0\">||</span> <span class=\"sy0\">!</span><a href=\"http://www.php.net/in_array\"><span class=\"kw3\">in_array</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$field</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                  <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span>MINESWEEPER_NOT_EXPLORED<span class=\"sy0\">,</span> MINESWEEPER_FLAGGED<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"re0\">$mines</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Make reference to that long name</span><br/>    <span class=\"re0\">$fields</span>  <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// @ operator helps avoiding isset()... (it removes E_NOTICEs)</span><br/>\u00a0<br/>    <span class=\"co1\">// left side options</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">%</span> MINEGRID_WIDTH <span class=\"sy0\">!==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> MINEGRID_WIDTH <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> MINEGRID_WIDTH <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// bottom and top</span><br/>    <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> MINEGRID_WIDTH<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> MINEGRID_WIDTH<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// right side options</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">%</span> MINEGRID_WIDTH <span class=\"sy0\">!==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> MINEGRID_WIDTH <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$mines</span> <span class=\"sy0\">+=</span> check_field<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> MINEGRID_WIDTH <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"re0\">$fields</span><span class=\"br0\">[</span><span class=\"re0\">$field</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$mines</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$mines</span> <span class=\"sy0\">===</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">%</span> MINEGRID_WIDTH <span class=\"sy0\">!==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> MINEGRID_WIDTH <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> MINEGRID_WIDTH <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> MINEGRID_WIDTH<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> MINEGRID_WIDTH<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">%</span> MINEGRID_WIDTH <span class=\"sy0\">!==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">-</span> MINEGRID_WIDTH <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            explore_field<span class=\"br0\">(</span><span class=\"re0\">$field</span> <span class=\"sy0\">+</span> MINEGRID_WIDTH <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.php.net/session_start\"><span class=\"kw3\">session_start</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// will start session storage</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/isset\"><span class=\"kw3\">isset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Fill grid with not explored tiles</span><br/>    <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array_fill\"><span class=\"kw3\">array_fill</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>                                         MINEGRID_WIDTH <span class=\"sy0\">*</span> MINEGRID_HEIGHT<span class=\"sy0\">,</span><br/>                                         MINESWEEPER_NOT_EXPLORED<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Generate random number of mines between 0.1 and 0.2</span><br/>    <span class=\"re0\">$number_of_mines</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>int<span class=\"br0\">)</span> <a href=\"http://www.php.net/mt_rand\"><span class=\"kw3\">mt_rand</span></a><span class=\"br0\">(</span><span class=\"nu19\">0.1</span> <span class=\"sy0\">*</span> MINEGRID_WIDTH <span class=\"sy0\">*</span> MINEGRID_HEIGHT<span class=\"sy0\">,</span><br/>                                     <span class=\"nu19\">0.2</span> <span class=\"sy0\">*</span> MINEGRID_WIDTH <span class=\"sy0\">*</span> MINEGRID_HEIGHT<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// generate mines randomly</span><br/>    <span class=\"re0\">$random_keys</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array_rand\"><span class=\"kw3\">array_rand</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$number_of_mines</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$random_keys</span> <span class=\"kw1\">as</span> <span class=\"re0\">$key</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$key</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> MINESWEEPER_MINE<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// to make calculations shorter use SESSION variable to store the result</span><br/>    <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'numberofmines'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$number_of_mines</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/isset\"><span class=\"kw3\">isset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'explore'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span><a href=\"http://www.php.net/isset\"><span class=\"kw3\">isset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'explore'</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'explore'</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_NOT_EXPLORED<span class=\"sy0\">:</span><br/>                explore_field<span class=\"br0\">(</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'explore'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_MINE<span class=\"sy0\">:</span><br/>                <span class=\"re0\">$lost</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'explore'</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> ACTIVATED_MINE<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>                <span class=\"co1\">// The tile was discovered already. Ignore it.</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.php.net/die\"><span class=\"kw3\">die</span></a><span class=\"br0\">(</span><span class=\"st_h\">'Tile doesn\\'t exist.'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">elseif</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/isset\"><span class=\"kw3\">isset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'flag'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span><a href=\"http://www.php.net/isset\"><span class=\"kw3\">isset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'flag'</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$tile</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st_h\">'flag'</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$tile</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_NOT_EXPLORED<span class=\"sy0\">:</span><br/>                <span class=\"re0\">$tile</span> <span class=\"sy0\">=</span> MINESWEEPER_FLAGGED<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_MINE<span class=\"sy0\">:</span><br/>                <span class=\"re0\">$tile</span> <span class=\"sy0\">=</span> MINESWEEPER_FLAGGED_MINE<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_FLAGGED<span class=\"sy0\">:</span><br/>                <span class=\"re0\">$tile</span> <span class=\"sy0\">=</span> MINESWEEPER_NOT_EXPLORED<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_FLAGGED_MINE<span class=\"sy0\">:</span><br/>                <span class=\"re0\">$tile</span> <span class=\"sy0\">=</span> MINESWEEPER_MINE<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>                <span class=\"co1\">// This tile shouldn't be flagged. Ignore it.</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.php.net/die\"><span class=\"kw3\">die</span></a><span class=\"br0\">(</span><span class=\"st_h\">'Tile doesn\\'t exist.'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// Check if the player won...</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/in_array\"><span class=\"kw3\">in_array</span></a><span class=\"br0\">(</span>MINESWEEPER_NOT_EXPLORED<span class=\"sy0\">,</span> <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><a href=\"http://www.php.net/in_array\"><span class=\"kw3\">in_array</span></a><span class=\"br0\">(</span>MINESWEEPER_FLAGGED<span class=\"sy0\">,</span>      <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$won</span> <span class=\"sy0\">=</span> <span class=\"kw4\">true</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"sy1\">?&gt;</span><br/>&lt;!DOCTYPE html&gt;<br/>&lt;title&gt;Minesweeper&lt;/title&gt;<br/>&lt;style&gt;<br/>table {<br/>    border-collapse: collapse;<br/>}<br/>\u00a0<br/>td, a {<br/>    text-align:      center;<br/>    width:           1em;<br/>    height:          1em;<br/>}<br/>\u00a0<br/>a {<br/>    display:         block;<br/>    color:           black;<br/>    text-decoration: none;<br/>    font-size:       2em;<br/>}<br/>&lt;/style&gt;<br/>&lt;script&gt;<br/>function flag(number, e) {<br/>    if (e.which === 2 || e.which === 3) {<br/>        location = '?flag=' + number;<br/>        return false;<br/>    }<br/>}<br/>&lt;/script&gt;<br/><span class=\"kw2\">&lt;?php</span><br/>    <span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;p&gt;This field contains <span class=\"es4\">$_SESSION[numberofmines]</span> mines.\"</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span><br/>&lt;table border=\"1\"&gt;<br/><span class=\"kw2\">&lt;?php</span><br/><span class=\"co1\">// array_shift() affects array, so we need a copy</span><br/><span class=\"re0\">$mine_copy</span> <span class=\"sy0\">=</span> <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;=</span> MINEGRID_HEIGHT<span class=\"sy0\">;</span> <span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;tr&gt;'</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$y</span> <span class=\"sy0\">&lt;=</span> MINEGRID_WIDTH<span class=\"sy0\">;</span> <span class=\"re0\">$y</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;td&gt;'</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"re0\">$number</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array_shift\"><span class=\"kw3\">array_shift</span></a><span class=\"br0\">(</span><span class=\"re0\">$mine_copy</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$number</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_FLAGGED<span class=\"sy0\">:</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_FLAGGED_MINE<span class=\"sy0\">:</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/empty\"><span class=\"kw3\">empty</span></a><span class=\"br0\">(</span><span class=\"re0\">$lost</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"sy0\">!</span><a href=\"http://www.php.net/empty\"><span class=\"kw3\">empty</span></a><span class=\"br0\">(</span><span class=\"re0\">$won</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$number</span> <span class=\"sy0\">===</span> MINESWEEPER_FLAGGED_MINE<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;*&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;.&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a href=# onmousedown=\"return flag('</span><span class=\"sy0\">,</span><br/>                         <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> MINEGRID_WIDTH <span class=\"sy0\">+</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span><br/>                         <span class=\"st_h\">',event)\" oncontextmenu=\"return false\"&gt;?&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> ACTIVATED_MINE<span class=\"sy0\">:</span><br/>                <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;:(&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_MINE<span class=\"sy0\">:</span><br/>            <span class=\"kw1\">case</span> MINESWEEPER_NOT_EXPLORED<span class=\"sy0\">:</span><br/>                <span class=\"co1\">// oncontextmenu causes the menu to disappear in</span><br/>                <span class=\"co1\">// Firefox, IE and Chrome</span><br/>\u00a0<br/>                <span class=\"co1\">// In case of Opera, modifying location causes menu</span><br/>                <span class=\"co1\">// to not appear.</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/empty\"><span class=\"kw3\">empty</span></a><span class=\"br0\">(</span><span class=\"re0\">$lost</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$number</span> <span class=\"sy0\">===</span> MINESWEEPER_MINE<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;*&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;.&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">elseif</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/empty\"><span class=\"kw3\">empty</span></a><span class=\"br0\">(</span><span class=\"re0\">$won</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;*&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a href=\"?explore='</span><span class=\"sy0\">,</span><br/>                         <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> MINEGRID_WIDTH <span class=\"sy0\">+</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span><br/>                         <span class=\"st_h\">'\" onmousedown=\"return flag('</span><span class=\"sy0\">,</span><br/>                         <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> MINEGRID_WIDTH <span class=\"sy0\">+</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span><br/>                         <span class=\"st_h\">',event)\" oncontextmenu=\"return false\"&gt;.&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span><br/>                <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>                <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;a&gt;'</span><span class=\"sy0\">,</span> <span class=\"re0\">$number</span><span class=\"sy0\">,</span> <span class=\"st_h\">'&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"sy1\">?&gt;</span><br/>&lt;/table&gt;<br/><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/empty\"><span class=\"kw3\">empty</span></a><span class=\"br0\">(</span><span class=\"re0\">$lost</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.php.net/unset\"><span class=\"kw3\">unset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;p&gt;You lost\u00a0:(. &lt;a href=\"?\"&gt;Reboot?&lt;/a&gt;'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">elseif</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.php.net/empty\"><span class=\"kw3\">empty</span></a><span class=\"br0\">(</span><span class=\"re0\">$won</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.php.net/unset\"><span class=\"kw3\">unset</span></a><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'minesweeper'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;p&gt;Congratulations. You won\u00a0:).'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PicoLisp", "loc": 56, "block": "<pre class=\"text highlighted_source\"># NIL    Hidden: Empty field<br/># T      Hidden: Mine<br/># 0-8    Marked: Empty field<br/>#\u00a0?      Marked: Mine<br/>\u00a0<br/>(de minesweeper (DX DY Density)<br/>   (default Density 20)<br/>   (setq *Field (make (do DY (link (need DX)))))<br/>   (use (X Y)<br/>      (do (prinl \"Number of mines: \" (*/ DX DY Density 100))<br/>         (while<br/>            (get *Field<br/>               (setq Y (rand 1 DY))<br/>               (setq X (rand 1 DX)) ) )<br/>         (set (nth *Field Y X) T) ) )<br/>   (showMines) )<br/>\u00a0<br/>(de showMines ()<br/>   (for L *Field<br/>      (for F L<br/>         (prin (if (flg? F) \".\" F)) )<br/>      (prinl) ) )<br/>\u00a0<br/>(de *NeighborX -1  0 +1 -1  +1 -1  0 +1)<br/>(de *NeighborY -1 -1 -1  0   0 +1 +1 +1)<br/>\u00a0<br/>(de c (X Y)<br/>   (if (=T (get *Field Y X))<br/>      \"KLABOOM!! You hit a mine.\"<br/>      (let Visit NIL<br/>         (recur (X Y)<br/>            (when<br/>               (=0<br/>                  (set (nth *Field Y X)<br/>                     (cnt<br/>                        '((DX DY)<br/>                           (=T (get *Field (+ Y DY) (+ X DX))) )<br/>                        *NeighborX<br/>                        *NeighborY ) ) )<br/>               (mapc<br/>                  '((DX DY)<br/>                     (and<br/>                        (get *Field (inc 'DY Y))<br/>                        (nth @ (inc 'DX X))<br/>                        (not (member (cons DX DY) Visit))<br/>                        (push 'Visit (cons DX DY))<br/>                        (recurse DX DY) ) )<br/>                  *NeighborX<br/>                  *NeighborY ) ) ) )<br/>      (showMines) ) )<br/>\u00a0<br/>(de m (X Y)<br/>   (set (nth *Field Y X) '?)<br/>   (showMines)<br/>   (unless (fish =T *Field)<br/>      \"Congratulations! You won!!\" ) )</pre>"}, {"lang": "PureBasic", "loc": 178, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Structure</span> cell<br/>  isMine.i<br/>  display.c <span class=\"co1\">;character to displays for cell, one of these {'.', '?', ' ', #)</span><br/><span class=\"kw1\">EndStructure</span><br/>\u00a0<br/><span class=\"kw1\">Global</span> <span class=\"kw1\">Dim</span> grid.cell<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Global</span> mineCount, minesMarked, isGameOver<br/>\u00a0<br/><span class=\"kw1\">Procedure</span> makeGrid<span class=\"br0\">(</span>n, m<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> rm, x, y<br/>  <span class=\"kw1\">Dim</span> grid.cell<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, m <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  mineCount <span class=\"sy0\">=</span> n <span class=\"sy0\">*</span> m <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">10</span><br/>  <span class=\"kw1\">If</span> mineCount <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span>: mineCount <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>: <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> m <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>      grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '.'<br/>    <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  rm <span class=\"sy0\">=</span> mineCount<br/>  <span class=\"kw1\">While</span> rm<br/>    x <span class=\"sy0\">=</span> <span class=\"kw2\">Random</span><span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    y <span class=\"sy0\">=</span> <span class=\"kw2\">Random</span><span class=\"br0\">(</span>m <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>isMine<br/>      rm <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>: grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>isMine <span class=\"sy0\">=</span> #True<br/>    <span class=\"kw1\">EndIf</span> <br/>  <span class=\"kw1\">Wend</span><br/>  minesMarked <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  isGameOver <span class=\"sy0\">=</span> #False<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> displayGrid<span class=\"br0\">(</span>isEndOfGame <span class=\"sy0\">=</span> #False<span class=\"br0\">)</span><br/>  #lMargin <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>  <span class=\"kw1\">Protected</span> x, y, display.s<br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> isEndOfGame<br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Grid has \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>mineCount<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" mines, \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>minesMarked<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" mines marked.\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span> <br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">Space</span><span class=\"br0\">(</span>#lMargin <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">ReplaceString</span><span class=\"br0\">(</span><span class=\"kw2\">Space</span><span class=\"br0\">(</span>ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>, <span class=\"st0\">\" \"</span>, <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>y <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>, #lMargin, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\":\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">For</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"kw2\">Chr</span><span class=\"br0\">(</span>grid<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> endGame<span class=\"br0\">(</span>msg.s<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> ans.s<br/>  isGameOver <span class=\"sy0\">=</span> #True<br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>msg<span class=\"br0\">)</span>: <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"Another game (y/n)?\"</span><span class=\"br0\">)</span>: ans <span class=\"sy0\">=</span> <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">LCase</span><span class=\"br0\">(</span><span class=\"kw2\">Left</span><span class=\"br0\">(</span><span class=\"kw2\">Trim</span><span class=\"br0\">(</span>ans<span class=\"br0\">)</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"y\"</span><br/>    makeGrid<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span> <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> resign<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> x, y, found<br/>  <span class=\"kw1\">For</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">For</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">With</span> grid<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> <span class=\"sy0\">\\</span>isMine<br/>          <span class=\"kw1\">If</span> <span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '?'<br/>            <span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> 'Y'<br/>            found <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>          <span class=\"kw1\">ElseIf</span> <span class=\"sy0\">\\</span>display <span class=\"sy0\">&lt;&gt;</span> 'x'<br/>            <span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> 'N'<br/>          <span class=\"kw1\">EndIf</span><br/>        <span class=\"kw1\">EndIf</span><br/>      <span class=\"kw1\">EndWith</span><br/>    <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">Next</span><br/>  displayGrid<span class=\"br0\">(</span>#True<span class=\"br0\">)</span><br/>  endGame<span class=\"br0\">(</span><span class=\"st0\">\"You found \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>found<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" out of \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>mineCount<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" mines.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> usage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"h or\u00a0? - this help,\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"c x y  - clear cell (x,y),\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"m x y  - marks (toggles) cell (x,y),\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"n      - start a new game,\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"q      - quit/resign the game,\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"where x is the (horizontal) column number and y is the (vertical) row number.\"</span> <span class=\"sy0\">+</span> #CRLF$<span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> markCell<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '?'<br/>    minesMarked <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>: grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '.'<br/>  <span class=\"kw1\">ElseIf</span> grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '.'<br/>    minesMarked <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>: grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '?'<br/>  <span class=\"kw1\">EndIf</span> <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> countAdjMines<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> count, i, j<br/>  <span class=\"kw1\">For</span> j <span class=\"sy0\">=</span> y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> y <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">If</span> j <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">And</span> j <span class=\"sy0\">&lt;=</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">If</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">And</span> i <span class=\"sy0\">&lt;=</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">If</span> grid<span class=\"br0\">(</span>i, j<span class=\"br0\">)</span><span class=\"sy0\">\\</span>isMine<br/>            count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>          <span class=\"kw1\">EndIf</span> <br/>        <span class=\"kw1\">EndIf</span> <br/>      <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">EndIf</span> <br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw1\">ProcedureReturn</span> count <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> clearCell<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> count<br/>  <span class=\"kw1\">If</span> x <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">And</span> x <span class=\"sy0\">&lt;=</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">And</span> y <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">And</span> y <span class=\"sy0\">&lt;=</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '.'<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> grid<span class=\"br0\">(</span>x,y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>isMine<br/>        count <span class=\"sy0\">=</span> countAdjMines<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> count <br/>          grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> <span class=\"kw2\">Asc</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Else</span><br/>          grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> ' '<br/>          clearCell<span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, y<span class=\"br0\">)</span><br/>          clearCell<span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, y <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>          clearCell<span class=\"br0\">(</span>x    , y <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>          clearCell<span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, y <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>          clearCell<span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, y<span class=\"br0\">)</span><br/>          clearCell<span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>          clearCell<span class=\"br0\">(</span>x    , y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>          clearCell<span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">EndIf</span> <br/>      <span class=\"kw1\">Else</span><br/>        grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> 'x'<br/>        <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Kaboom!  You lost!\"</span><span class=\"br0\">)</span><br/>        resign<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">EndIf</span> <br/>    <span class=\"kw1\">EndIf</span> <br/>  <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> testforwin<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> x, y, isCleared<br/>  <span class=\"kw1\">If</span> minesMarked <span class=\"sy0\">=</span> mineCount<br/>    isCleared <span class=\"sy0\">=</span> #True<br/>    <span class=\"kw1\">For</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">For</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>grid<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> grid<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">\\</span>display <span class=\"sy0\">=</span> '.': isCleared <span class=\"sy0\">=</span> #False: <span class=\"kw1\">EndIf</span> <br/>      <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> isCleared: endGame<span class=\"br0\">(</span><span class=\"st0\">\"You won!\"</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Define</span> action.s<br/>  usage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  makeGrid<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span>: displayGrid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Repeat</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"&gt;\"</span><span class=\"br0\">)</span>:  action <span class=\"sy0\">=</span> <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Select</span> <span class=\"kw2\">Asc</span><span class=\"br0\">(</span><span class=\"kw2\">LCase</span><span class=\"br0\">(</span><span class=\"kw2\">Left</span><span class=\"br0\">(</span>action, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Case</span> 'h', '?'<br/>        usage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Case</span> 'n'  <br/>        makeGrid<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span>: displayGrid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Case</span> 'c'<br/>        clearCell<span class=\"br0\">(</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>action, <span class=\"nu0\">2</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>action, <span class=\"nu0\">3</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> isGameOver: displayGrid<span class=\"br0\">(</span><span class=\"br0\">)</span>: <span class=\"kw1\">Else</span>: testforwin<span class=\"br0\">(</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span> <br/>      <span class=\"kw1\">Case</span> 'm'<br/>        markCell<span class=\"br0\">(</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>action, <span class=\"nu0\">2</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>action, <span class=\"nu0\">3</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        displayGrid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        testforwin<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Case</span> 'q'<br/>        resign<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">EndSelect</span><br/>  <span class=\"kw1\">Until</span> isGameOver<br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 137, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"st0\">'''<br/>Minesweeper game.<br/>\u00a0<br/>    There is an n by m grid that has a random number of between 20% to 60%<br/>    of randomly hidden mines that need to be found. <br/>\u00a0<br/>    Positions in the grid are modified by entering their coordinates<br/>    where the first coordinate is horizontal in the grid and the second<br/>    vertical. The top left of the grid is position 1,1; the bottom right is<br/>    at n,m.<br/>\u00a0<br/>    * The total number of mines to be found is shown at the beginning of the<br/>    game.<br/>    * Each mine occupies a single grid point, and its position is initially<br/>    unknown to the player<br/>    * The grid is shown as a rectangle of characters between moves.<br/>    * You are initially shown all grids as obscured, by a single dot '.'<br/>    * You may mark what you think is the position of a mine which will show<br/>    as a '?'<br/>    * You can mark what you think is free space by entering its coordinates.<br/>   \u00a0:*  If the point is free space then it is cleared, as are any adjacent<br/>    points that are also free space- this is repeated recursively for<br/>    subsequent adjacent free points unless that point is marked as a mine<br/>    or is a mine.<br/>   \u00a0::*   Points marked as a mine show as a '?'.<br/>   \u00a0::*   Other free points show as an integer count of the number of adjacent<br/>    true mines in its immediate neighbourhood, or as a single space ' ' if the<br/>    free point is not adjacent to any true mines.<br/>    * Of course you loose if you try to clear space that starts on a mine.<br/>    * You win when you have correctly identified all mines.<br/>\u00a0<br/>\u00a0<br/>    When prompted you may:<br/>        Toggle where you think a mine is at position x, y:<br/>          m &lt;x&gt; &lt;y&gt;<br/>        Clear the grid starting at position x, y (and print the result):<br/>          c &lt;x&gt; &lt;y&gt;<br/>        Print the grid so far:<br/>          p<br/>        Resign<br/>          r<br/>    Resigning will first show the grid with an 'N' for unfound true mines, a<br/>    'Y' for found true mines and a '?' for where you marked clear space as a<br/>    mine <br/>\u00a0<br/>'''</span><br/>\u00a0<br/>\u00a0<br/>gridsize  <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>minerange <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0.2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.6</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">try</span>:<br/>    <span class=\"kw2\">raw_input</span><br/><span class=\"kw1\">except</span>:<br/>    <span class=\"kw2\">raw_input</span> <span class=\"sy0\">=</span> <span class=\"kw2\">input</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">random</span><br/><span class=\"kw1\">from</span> <span class=\"kw3\">itertools</span> <span class=\"kw1\">import</span> product<br/><span class=\"kw1\">from</span> <span class=\"kw3\">pprint</span> <span class=\"kw1\">import</span> <span class=\"kw3\">pprint</span> <span class=\"kw1\">as</span> pp<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">def</span> gridandmines<span class=\"br0\">(</span>gridsize<span class=\"sy0\">=</span>gridsize<span class=\"sy0\">,</span> minerange<span class=\"sy0\">=</span>minerange<span class=\"br0\">)</span>:<br/>    xgrid<span class=\"sy0\">,</span> ygrid <span class=\"sy0\">=</span> gridsize<br/>    minmines<span class=\"sy0\">,</span> maxmines <span class=\"sy0\">=</span> minerange<br/>    minecount <span class=\"sy0\">=</span> xgrid * ygrid    <br/>    minecount <span class=\"sy0\">=</span> <span class=\"kw3\">random</span>.<span class=\"me1\">randint</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span>minecount*minmines<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span>minecount*maxmines<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    grid <span class=\"sy0\">=</span> <span class=\"kw2\">set</span><span class=\"br0\">(</span>product<span class=\"br0\">(</span><span class=\"kw2\">range</span><span class=\"br0\">(</span>xgrid<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>ygrid<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    mines <span class=\"sy0\">=</span> <span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"kw3\">random</span>.<span class=\"me1\">sample</span><span class=\"br0\">(</span>grid<span class=\"sy0\">,</span> minecount<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    show <span class=\"sy0\">=</span> <span class=\"br0\">{</span>xy:<span class=\"st0\">'.'</span> <span class=\"kw1\">for</span> xy <span class=\"kw1\">in</span> grid<span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> grid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> show<br/>\u00a0<br/><span class=\"kw1\">def</span> printgrid<span class=\"br0\">(</span>show<span class=\"sy0\">,</span> gridsize<span class=\"sy0\">=</span>gridsize<span class=\"br0\">)</span>:<br/>    xgrid<span class=\"sy0\">,</span> ygrid <span class=\"sy0\">=</span> gridsize<br/>    grid <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>'</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span>show<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>xgrid<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>ygrid<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span> grid <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> resign<span class=\"br0\">(</span>showgrid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> markedmines<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">for</span> m <span class=\"kw1\">in</span> mines:<br/>        showgrid<span class=\"br0\">[</span>m<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'Y'</span> <span class=\"kw1\">if</span> m <span class=\"kw1\">in</span> markedmines <span class=\"kw1\">else</span> <span class=\"st0\">'N'</span><br/>\u00a0<br/><span class=\"kw1\">def</span> clear<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">,</span> showgrid<span class=\"sy0\">,</span> grid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> markedmines<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">if</span> showgrid<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'.'</span>:<br/>        xychar <span class=\"sy0\">=</span> <span class=\"kw2\">str</span><span class=\"br0\">(</span><span class=\"kw2\">sum</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><br/>                         <span class=\"kw1\">for</span> xx <span class=\"kw1\">in</span> <span class=\"br0\">(</span>x-<span class=\"nu0\">1</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> x+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                         <span class=\"kw1\">for</span> yy <span class=\"kw1\">in</span> <span class=\"br0\">(</span>y-<span class=\"nu0\">1</span><span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> y+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xx<span class=\"sy0\">,</span> yy<span class=\"br0\">)</span> <span class=\"kw1\">in</span> mines <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> xychar <span class=\"sy0\">==</span> <span class=\"st0\">'0'</span>: xychar <span class=\"sy0\">=</span> <span class=\"st0\">'.'</span><br/>        showgrid<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> xychar<br/>        <span class=\"kw1\">for</span> xx <span class=\"kw1\">in</span> <span class=\"br0\">(</span>x-<span class=\"nu0\">1</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> x+<span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">for</span> yy <span class=\"kw1\">in</span> <span class=\"br0\">(</span>y-<span class=\"nu0\">1</span><span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> y+<span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>                xxyy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>xx<span class=\"sy0\">,</span> yy<span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span> xxyy <span class=\"sy0\">!=</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>                     <span class=\"kw1\">and</span> xxyy <span class=\"kw1\">in</span> grid<br/>                     <span class=\"kw1\">and</span> xxyy <span class=\"kw1\">not</span> <span class=\"kw1\">in</span> mines | markedmines <span class=\"br0\">)</span>:<br/>                    clear<span class=\"br0\">(</span>xx<span class=\"sy0\">,</span> yy<span class=\"sy0\">,</span> showgrid<span class=\"sy0\">,</span> grid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> markedmines<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    grid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> showgrid <span class=\"sy0\">=</span> gridandmines<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    markedmines <span class=\"sy0\">=</span> <span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span> __doc__ <span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>There are\u00a0%i true mines of fixed position in the grid<span class=\"es0\">\\n</span>'</span>\u00a0% <span class=\"kw2\">len</span><span class=\"br0\">(</span>mines<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    printgrid<span class=\"br0\">(</span>showgrid<span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> markedmines <span class=\"sy0\">!=</span> mines:<br/>        inp <span class=\"sy0\">=</span> <span class=\"kw2\">raw_input</span><span class=\"br0\">(</span><span class=\"st0\">'m x y/c x y/p/r: '</span><span class=\"br0\">)</span>.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> inp:<br/>            <span class=\"kw1\">if</span> inp<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'m'</span>:<br/>                x<span class=\"sy0\">,</span> y <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw2\">int</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>-<span class=\"nu0\">1</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> inp<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"kw1\">in</span> markedmines:<br/>                    markedmines.<span class=\"me1\">remove</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    showgrid<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'.'</span><br/>                <span class=\"kw1\">else</span>:<br/>                    markedmines.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    showgrid<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'?'</span><br/>            <span class=\"kw1\">elif</span> inp<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'p'</span>:<br/>                printgrid<span class=\"br0\">(</span>showgrid<span class=\"br0\">)</span><br/>            <span class=\"kw1\">elif</span> inp<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'c'</span>:<br/>                x<span class=\"sy0\">,</span> y <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw2\">int</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>-<span class=\"nu0\">1</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> inp<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"kw1\">in</span> mines | markedmines:<br/>                    <span class=\"kw1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>KLABOOM!! You hit a mine.<span class=\"es0\">\\n</span>'</span> <span class=\"br0\">)</span><br/>                    resign<span class=\"br0\">(</span>showgrid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> markedmines<span class=\"br0\">)</span><br/>                    printgrid<span class=\"br0\">(</span>showgrid<span class=\"br0\">)</span><br/>                    <span class=\"kw1\">break</span><br/>                clear<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">,</span> showgrid<span class=\"sy0\">,</span> grid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> markedmines<span class=\"br0\">)</span><br/>                printgrid<span class=\"br0\">(</span>showgrid<span class=\"br0\">)</span><br/>            <span class=\"kw1\">elif</span> inp<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'r'</span>:<br/>                <span class=\"kw1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>Resigning!<span class=\"es0\">\\n</span>'</span> <span class=\"br0\">)</span><br/>                resign<span class=\"br0\">(</span>showgrid<span class=\"sy0\">,</span> mines<span class=\"sy0\">,</span> markedmines<span class=\"br0\">)</span><br/>                printgrid<span class=\"br0\">(</span>showgrid<span class=\"br0\">)</span><br/>                <span class=\"kw1\">break</span><br/>\u00a0<br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>You got\u00a0%i and missed\u00a0%i of the\u00a0%i mines'</span><br/>          \u00a0% <span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>mines.<span class=\"me1\">intersection</span><span class=\"br0\">(</span>markedmines<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>              <span class=\"kw2\">len</span><span class=\"br0\">(</span>markedmines.<span class=\"me1\">difference</span><span class=\"br0\">(</span>mines<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>              <span class=\"kw2\">len</span><span class=\"br0\">(</span>mines<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 146, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require math/array)<br/>;board uses arrays directly, but maintaining an abstraction is nice<br/>(define (board-ref b row col) (array-ref b (vector row col)))<br/>(define (board-rows b) (vector-ref (array-shape b) 0))<br/>(define (board-cols b) (vector-ref (array-shape b) 1))<br/>(define (on-board? b row col)<br/>  (and (&lt;= 0 row (sub1 (board-rows b)))<br/>       (&lt;= 0 col (sub1 (board-cols b)))))<br/>(define (board-&gt;lists b) (array-&gt;list* b))<br/>;run on adjacent board positions<br/>(define-syntax (for-adj stx)<br/>  (syntax-case stx ()<br/>    [(_ b (r row) (c col) diag? body ...)<br/>     (with-syntax ([is (if (syntax-&gt;datum #'diag?) #''(0 0 1 1 1 -1 -1 -1) #''(0 0 1 -1))]<br/>                   [js (if (syntax-&gt;datum #'diag?) #''(1 -1 0 -1 1 0 -1 1) #''(1 -1 0 0))])<br/>       #'(for ([i is] [j js])<br/>           (let ([r (+ row i)]<br/>                 [c (+ col j)])<br/>             (when (on-board? b r c)<br/>               body ...))))]))<br/>;mark is either hidden, assume-mine, or clear<br/>;n is int equal to # adj mines or -1 for mine<br/>(struct pos ([mark #:mutable] n) #:transparent)<br/>(define (mine? p) (= (pos-n p) -1))<br/>(define (mine-count b) (apply + (array-&gt;list (array-map (\u03bb (p) (if (mine? p) 1 0)) b))))<br/>;hidden0? is needed because only spaces with no mines in them and no mines adjacent<br/>;to them are cleared recursively<br/>(define (hidden0? p)<br/>  (and (symbol=? (pos-mark p) 'hidden)<br/>       (zero? (pos-n p))))<br/>(define (show-pos p)<br/>  (match-let ([(pos m n) p])<br/>    (case m<br/>      [(hidden) \".\"]<br/>      [(assume-mine) \"?\"]<br/>      [(clear) (if (zero? n) \" \" (number-&gt;string n))]<br/>      [else (error \"illegal mark\" m)])))<br/>;put \"|\" around positions<br/>(define (show-board b)<br/>  (for ([row (board-&gt;lists b)])<br/>    (displayln (format \"|~a|\" (string-join (map show-pos row) \"|\")))))<br/>\u00a0<br/>;winning = every position is either cleared or a hidden mine<br/>(define (win? b)<br/>  (for*/and ([r (range 0 (board-rows b))]<br/>             [c (range 0 (board-cols b))])<br/>    (let ([p (board-ref b r c)])<br/>      (or (symbol=? (pos-mark p) 'clear)<br/>          (mine? p)))))<br/>\u00a0<br/>(define (init-board rows cols)<br/>  (let ([chance (+ (/ (random) 10) 0.1)]<br/>       \u00a0;empty board<br/>        [b (array-&gt;mutable-array (build-array (vector rows cols)<br/>                                              (\u03bb (x) (pos 'hidden 0))))])<br/>   \u00a0;loop whole board<br/>    (for* ([row (range 0 rows)]<br/>           [col (range 0 cols)])<br/>      (when (&lt; (random) chance)<br/>       \u00a0;put a mine<br/>        (array-set! b (vector row col) (pos 'hidden -1))<br/>       \u00a0;increment adjacent mine counts unless that adjacent position is a mine<br/>        (for-adj b (r row) (c col) #t<br/>                 (let ([p (board-ref b r c)])<br/>                   (unless (mine? p)<br/>                     (array-set! b (vector r c) (pos 'hidden (add1 (pos-n p)))))))))<br/>    b))<br/>\u00a0<br/>;only clear position if it's not a mine<br/>;only continue recursing when it's a hidden0?<br/>(define (try-clear! p)<br/>  (cond [(mine? p) #f]<br/>        [(hidden0? p) (set-pos-mark! p 'clear) #t]<br/>        [else (set-pos-mark! p 'clear) #f]))<br/>\u00a0<br/>;the following player move functions return boolean where #f = lose, #t = still going<br/>;assuming can never directly lose ((void) == #t from the set!)<br/>;make sure to not allow overwriting an already cleared position<br/>(define (toggle-assume! b row col)<br/>  (let ([p (board-ref b row col)])<br/>    (set-pos-mark! p (case (pos-mark p)<br/>                       [(assume-mine) 'hidden]<br/>                       [(hidden) 'assume-mine]<br/>                       [(clear) 'clear]<br/>                       [else (error \"invalid mark\" (pos-mark p))]))))<br/>\u00a0<br/>;clearing loses when the chosen position is a mine<br/>;void = #t as far as if works, so no need to return #t<br/>(define (clear! b row col)<br/>  (let ([p (board-ref b row col)])<br/>    (and (not (mine? p))<br/>        \u00a0;not a mine, so recursively check adjacents, and maintain list of visited positions<br/>        \u00a0;to avoid infinite loops<br/>         (let ([seen '()])<br/>          \u00a0;clear the chosen position first, only continuing if it's a 0<br/>           (when (try-clear! p)<br/>             (let clear-adj ([row row] [col col])<br/>               (for-adj b (r row) (c col) #f<br/>                       \u00a0;make sure its not seen<br/>                        (when (and (not (member (list r c) seen))<br/>                                   (try-clear! (board-ref b r c)))<br/>                         \u00a0;it was cleared, so loop after saving this position as being seen<br/>                          (set! seen (cons (list r c) seen))<br/>                          (clear-adj r c)))))))))<br/>\u00a0<br/>(define assume-string \"a\")<br/>(define clear-string \"c\")<br/>;validates input...returns either #f for an error or the move to execute<br/>(define (parse-and-create-move! b s)<br/>  (match (string-split s)<br/>    [(list type row col)<br/>     (let ([row (string-&gt;number row)]<br/>           [col (string-&gt;number col)])<br/>       (and (number? row)<br/>            (number? col)<br/>            (let ([row (sub1 row)]<br/>                  [col (sub1 col)])<br/>              (and (on-board? b row col)<br/>                   (or (and (string=? type assume-string) (\u03bb () (toggle-assume! b row col)))<br/>                       (and (string=? type clear-string) (\u03bb () (clear! b row col))))))))]<br/>    [else #f]))<br/>(define (run)<br/>  (displayln (string-append \"--- Enter one of:\\n\"<br/>                            (format \"--- \\\"~a &lt;row&gt; &lt;col&gt;\\\" to clear at (row,col), or~n\" clear-string)<br/>                            (format (string-append \"--- \\\"~a &lt;row&gt; &lt;col&gt;\\\" to flag a possible mine \"<br/>                                                   \"(or clear a flag) at (row,col).~n\")<br/>                                    assume-string)))<br/>  (let ([b (init-board 4 6)])<br/>    (displayln (format \"There are ~a mines.~n\" (mine-count b)))<br/>    (let run ()<br/>      (show-board b)<br/>      (display \"enter move: \")<br/>     \u00a0;parse either failed or gave the procedure to execute<br/>      (let ([proc? (parse-and-create-move! b (read-line))])<br/>       \u00a0;was the parse successful?<br/>        (if proc?<br/>           \u00a0;then run it<br/>            (if (proc?)<br/>               \u00a0;didn't lose, so either we won or we're not done<br/>                (if (win? b) (displayln \"CLEAR!\") (run))<br/>                (displayln \"BOOM!\"))<br/>           \u00a0;parse failed<br/>            (run))))))<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 165, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">puts</span> <span class=\"co4\">&lt;&lt;EOS<br/>    Minesweeper game.<br/>\u00a0<br/>    There is an n by m grid that has a random number of between 20% to 60%<br/>    of randomly hidden mines that need to be found. <br/>\u00a0<br/>    Positions in the grid are modified by entering their coordinates<br/>    where the first coordinate is horizontal in the grid and the second<br/>    vertical. The top left of the grid is position 1,1; the bottom right is<br/>    at n,m.<br/>\u00a0<br/>    * The total number of mines to be found is shown at the beginning of the<br/>    game.<br/>    * Each mine occupies a single grid point, and its position is initially<br/>    unknown to the player<br/>    * The grid is shown as a rectangle of characters between moves.<br/>    * You are initially shown all grids as obscured, by a single dot '.'<br/>    * You may mark what you think is the position of a mine which will show<br/>    as a '?'<br/>    * You can mark what you think is free space by entering its coordinates.<br/>   \u00a0:*  If the point is free space then it is cleared, as are any adjacent<br/>    points that are also free space- this is repeated recursively for<br/>    subsequent adjacent free points unless that point is marked as a mine<br/>    or is a mine.<br/>   \u00a0::*   Points marked as a mine show as a '?'.<br/>   \u00a0::*   Other free points show as an integer count of the number of adjacent<br/>    true mines in its immediate neighbourhood, or as a single space ' ' if the<br/>    free point is not adjacent to any true mines.<br/>    * Of course you loose if you try to clear space that starts on a mine.<br/>    * You win when you have correctly identified all mines.<br/>\u00a0<br/>\u00a0<br/>    When prompted you may:<br/>        Toggle where you think a mine is at position x, y:<br/>          m &lt;x&gt; &lt;y&gt;<br/>        Clear the grid starting at position x, y (and print the result):<br/>          c &lt;x&gt; &lt;y&gt;<br/>        Print the grid so far:<br/>          p<br/>        Quit<br/>          q<br/>    Resigning will first show the grid with an 'N' for unfound true mines, a<br/>    'Y' for found true mines and a '?' for where you marked clear space as a<br/>    mine<br/>EOS</span><br/>\u00a0<br/>WIDTH, HEIGHT = <span class=\"nu0\">6</span>, <span class=\"nu0\">4</span><br/>PCT = <span class=\"nu0\">0.15</span><br/>NUM_MINES = <span class=\"br0\">(</span>WIDTH <span class=\"sy0\">*</span> HEIGHT <span class=\"sy0\">*</span> PCT<span class=\"br0\">)</span>.<span class=\"me1\">round</span><br/>\u00a0<br/><span class=\"kw1\">def</span> create_mines sx, sy<br/>  arr = <span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>WIDTH<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>HEIGHT, <span class=\"kw2\">false</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  NUM_MINES.<span class=\"me1\">times</span> <span class=\"kw1\">do</span><br/>    x, y = <span class=\"kw3\">rand</span><span class=\"br0\">(</span>WIDTH<span class=\"br0\">)</span>, <span class=\"kw3\">rand</span><span class=\"br0\">(</span>HEIGHT<span class=\"br0\">)</span><br/>    <span class=\"co1\"># place it if it isn't at (sx, sy) and we haven't already placed a mine</span><br/>    <span class=\"kw1\">redo</span> <span class=\"kw1\">if</span> arr<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> <span class=\"kw1\">or</span> <span class=\"br0\">(</span>x == sx <span class=\"kw1\">and</span> y == sy<span class=\"br0\">)</span><br/>    arr<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> = <span class=\"kw2\">true</span><br/>  <span class=\"kw1\">end</span><br/>  arr<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> num_marks<br/>  <span class=\"re0\">$screen</span>.<span class=\"me1\">inject</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>sum, row<span class=\"sy0\">|</span> sum <span class=\"sy0\">+</span> row.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"st0\">\"?\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> show_grid revealed = <span class=\"kw2\">false</span><br/>  <span class=\"kw1\">if</span> revealed<br/>    <span class=\"kw3\">puts</span> <span class=\"re0\">$mines</span>.<span class=\"me1\">transpose</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>row<span class=\"sy0\">|</span> row.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>cell<span class=\"sy0\">|</span> cell\u00a0? <span class=\"st0\">\"*\"</span>\u00a0: <span class=\"st0\">\" \"</span> <span class=\"br0\">}</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Grid has #{NUM_MINES} mines, #{num_marks} marked.\"</span><br/>    <span class=\"kw3\">puts</span> <span class=\"re0\">$screen</span>.<span class=\"me1\">transpose</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span> <span class=\"sy0\">|</span>row<span class=\"sy0\">|</span> row.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>SURROUND = <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">product</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span>     <span class=\"co1\"># surround 8</span><br/><span class=\"kw1\">def</span> surrounding x, y<br/>  <span class=\"co1\"># apply the passed block to each spot around (x, y)</span><br/>  SURROUND.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>dx, dy<span class=\"sy0\">|</span><br/>    <span class=\"co1\"># don't check if we're out of bounds, or at (0,0)</span><br/>    <span class=\"kw1\">yield</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span>dx, y<span class=\"sy0\">+</span>dy<span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>...<span class=\"me1\">WIDTH</span><span class=\"br0\">)</span>.<span class=\"me1\">cover</span>?<span class=\"br0\">(</span>x<span class=\"sy0\">+</span>dx<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>...<span class=\"me1\">HEIGHT</span><span class=\"br0\">)</span>.<span class=\"me1\">cover</span>?<span class=\"br0\">(</span>y<span class=\"sy0\">+</span>dy<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> clear_space x, y<br/>  <span class=\"kw2\">return</span> <span class=\"kw1\">unless</span> <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> == <span class=\"st0\">\".\"</span><br/>  <span class=\"co1\"># check nearby spaces</span><br/>  count = <span class=\"nu0\">0</span><br/>  surrounding<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>px, py<span class=\"sy0\">|</span> count <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span> <span class=\"kw1\">if</span> <span class=\"re0\">$mines</span><span class=\"br0\">[</span>px<span class=\"br0\">]</span><span class=\"br0\">[</span>py<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">if</span> count == <span class=\"nu0\">0</span><br/>    <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> = <span class=\"st0\">\" \"</span><br/>    surrounding<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>px, py<span class=\"sy0\">|</span> clear_space px, py <span class=\"br0\">}</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> = count.<span class=\"me1\">to_s</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> victory?<br/>  <span class=\"kw2\">return</span> <span class=\"kw2\">false</span> <span class=\"kw1\">if</span> <span class=\"re0\">$mines</span>.<span class=\"kw2\">nil</span>?  <span class=\"co1\"># first one, don't need to check</span><br/>  <span class=\"kw2\">return</span> <span class=\"kw2\">false</span> <span class=\"kw1\">if</span> num_marks\u00a0!= NUM_MINES<br/>  mines_left = NUM_MINES<br/>  WIDTH.<span class=\"me1\">times</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>x<span class=\"sy0\">|</span><br/>    HEIGHT.<span class=\"me1\">times</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>y<span class=\"sy0\">|</span><br/>      mines_left <span class=\"sy0\">-</span>= <span class=\"nu0\">1</span> <span class=\"kw1\">if</span> <span class=\"re0\">$mines</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> <span class=\"kw1\">and</span> <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> == <span class=\"st0\">\"?\"</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  mines_left == <span class=\"nu0\">0</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> check_input x, y<br/>  x, y = x.<span class=\"me1\">to_i</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, y.<span class=\"me1\">to_i</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>  <span class=\"br0\">[</span>x, y<span class=\"br0\">]</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>...<span class=\"me1\">WIDTH</span><span class=\"br0\">)</span>.<span class=\"me1\">cover</span>?<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>...<span class=\"me1\">HEIGHT</span><span class=\"br0\">)</span>.<span class=\"me1\">cover</span>?<span class=\"br0\">(</span>y<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"re0\">$mines</span> = <span class=\"kw2\">nil</span><br/><span class=\"re0\">$screen</span> = <span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>WIDTH<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>HEIGHT, <span class=\"st0\">\".\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"Welcome to Minesweeper!\"</span><br/>show_grid<br/>\u00a0<br/><span class=\"kw3\">loop</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw3\">print</span> <span class=\"st0\">\"&gt; \"</span><br/>  action = <span class=\"kw3\">gets</span>.<span class=\"kw3\">chomp</span>.<span class=\"me1\">downcase</span><br/>\u00a0<br/>  <span class=\"kw1\">case</span> action<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">\"quit\"</span>, <span class=\"st0\">\"exit\"</span>, <span class=\"st0\">\"x\"</span>, <span class=\"st0\">\"q\"</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Bye!\"</span><br/>    <span class=\"kw1\">break</span><br/>  <span class=\"kw1\">when</span> <span class=\"sy0\">/</span>^m <span class=\"br0\">(</span>\\d<span class=\"sy0\">+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>\\d<span class=\"sy0\">+</span><span class=\"br0\">)</span>$<span class=\"sy0\">/</span><br/>    <span class=\"co1\"># mark this cell</span><br/>    x, y = check_input $1, $2<br/>    <span class=\"kw1\">next</span> <span class=\"kw1\">unless</span> x<br/>    <span class=\"kw1\">if</span> <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> == <span class=\"st0\">\".\"</span><br/>      <span class=\"co1\"># mark it</span><br/>      <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> = <span class=\"st0\">\"?\"</span><br/>      <span class=\"kw1\">if</span> victory?<br/>        show_grid<br/>        <span class=\"kw3\">puts</span> <span class=\"st0\">\"You win!\"</span><br/>        <span class=\"kw1\">break</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">elsif</span> <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> == <span class=\"st0\">\"?\"</span><br/>      <span class=\"co1\"># unmark it</span><br/>      <span class=\"re0\">$screen</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> = <span class=\"st0\">\".\"</span><br/>    <span class=\"kw1\">end</span><br/>    show_grid<br/>  <span class=\"kw1\">when</span> <span class=\"sy0\">/</span>^c <span class=\"br0\">(</span>\\d<span class=\"sy0\">+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>\\d<span class=\"sy0\">+</span><span class=\"br0\">)</span>$<span class=\"sy0\">/</span><br/>    x, y = check_input $1, $2<br/>    <span class=\"kw1\">next</span> <span class=\"kw1\">unless</span> x<br/>    <span class=\"re0\">$mines</span> <span class=\"sy0\">||</span>= create_mines<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"re0\">$mines</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span><br/>      <span class=\"kw3\">puts</span> <span class=\"st0\">\"You hit a mine!\"</span><br/>      show_grid <span class=\"kw2\">true</span><br/>      <span class=\"kw1\">break</span><br/>    <span class=\"kw1\">else</span><br/>      clear_space x, y<br/>      show_grid<br/>      <span class=\"kw1\">if</span> victory?<br/>        <span class=\"kw3\">puts</span> <span class=\"st0\">\"You win!\"</span><br/>        <span class=\"kw1\">break</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">when</span> <span class=\"st0\">\"p\"</span><br/>    show_grid<br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Rust", "loc": 316, "block": "<pre class=\"text highlighted_source\">extern crate rand;<br/>\u00a0<br/>use std::io;<br/>use std::io::Write;<br/>\u00a0<br/>fn main() {<br/>\u00a0<br/>    use minesweeper::{MineSweeper, GameStatus};<br/>\u00a0<br/>    let mut width = 6;<br/>    let mut height = 4;<br/>    let mut mine_perctg = 10;<br/>    let mut game = MineSweeper::new(width, height, mine_perctg);<br/>\u00a0<br/>    loop {<br/>        let mut command = String::new();<br/>\u00a0<br/>        println!(<br/>            \"\\n\\<br/>             M I N E S W E E P E R\\n\\<br/>             \\n\\<br/>             Commands: \\n\\<br/>             line col            - reveal line,col \\n\\<br/>             m line col          - mark   line,col \\n\\<br/>             q                   - quit\\n\\<br/>             n                   - new game\\n\\<br/>             n width height perc - new game size and mine percentage\\n\"<br/>        );<br/>\u00a0<br/>        game.print();<br/>        print!(\"&gt; \");<br/>        io::stdout().flush().unwrap();<br/>        while let Ok(_) = io::stdin().read_line(&amp;mut command) {<br/>            let mut command_ok = false;<br/>            {<br/>                let values: Vec&lt;&amp;str&gt; = command.trim().split(' ').collect();<br/>                if values.len() == 1 {<br/>                    if values[0] == \"q\" {<br/>                        println!(\"Goodbye\");<br/>                        return;<br/>                    } else if values[0] == \"n\" {<br/>                        println!(\"New game\");<br/>                        game = MineSweeper::new(width, height, mine_perctg);<br/>                        command_ok = true;<br/>                    }<br/>                } else if values.len() == 2 {<br/>                    if let (Ok(x), Ok(y)) = (<br/>                        values[0].parse::&lt;usize&gt;(),<br/>                        values[1].parse::&lt;usize&gt;(),<br/>                    )<br/>                    {<br/>                        game.play(x - 1, y - 1);<br/>\u00a0<br/>                        match game.game_status {<br/>                            GameStatus::Won =&gt; println!(\"You won!\"),<br/>                            GameStatus::Lost =&gt; println!(\"You lost!\"),<br/>                            _ =&gt; (),<br/>                        }<br/>                        command_ok = true;<br/>                    }<br/>                } else if values.len() == 3 {<br/>                    if values[0] == \"m\" {<br/>                        if let (Ok(x), Ok(y)) = (<br/>                            values[1].parse::&lt;usize&gt;(),<br/>                            values[2].parse::&lt;usize&gt;(),<br/>                        )<br/>                        {<br/>                            game.mark(x - 1, y - 1);<br/>                            command_ok = true;<br/>                        }<br/>                    }<br/>                } else if values.len() == 4 {<br/>                    if values[0] == \"n\" {<br/>                        if let (Ok(new_width), Ok(new_height), Ok(new_mines_perctg)) =<br/>                            (<br/>                                values[1].parse::&lt;usize&gt;(),<br/>                                values[2].parse::&lt;usize&gt;(),<br/>                                values[3].parse::&lt;usize&gt;(),<br/>                            )<br/>                        {<br/>                            width = new_width;<br/>                            height = new_height;<br/>                            mine_perctg = new_mines_perctg;<br/>                            game = MineSweeper::new(width, height, mine_perctg);<br/>                            command_ok = true;<br/>                        }<br/>                    }<br/>                }<br/>            }<br/>\u00a0<br/>            if command_ok {<br/>                game.print();<br/>            } else {<br/>                println!(\"Invalid command\");<br/>            }<br/>\u00a0<br/>            print!(\"&gt; \");<br/>            io::stdout().flush().unwrap();<br/>            command.clear();<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>pub mod minesweeper {<br/>\u00a0<br/>    pub struct MineSweeper {<br/>        cell: [[Cell; 100]; 100],<br/>        pub game_status: GameStatus,<br/>        mines: usize,<br/>        width: usize,<br/>        height: usize,<br/>        revealed_count: usize,<br/>    }<br/>\u00a0<br/>    #[derive(Copy, Clone)]<br/>    struct Cell {<br/>        content: CellContent,<br/>        mark: Mark,<br/>        revealed: bool,<br/>    }<br/>\u00a0<br/>    #[derive(Copy, Clone)]<br/>    enum CellContent {<br/>        Empty,<br/>        Mine,<br/>        MineNeighbour { count: u8 },<br/>    }<br/>\u00a0<br/>    #[derive(Copy, Clone)]<br/>    enum Mark {<br/>        None,<br/>        Mine,<br/>    }<br/>\u00a0<br/>    pub enum GameStatus {<br/>        InGame,<br/>        Won,<br/>        Lost,<br/>    }<br/>\u00a0<br/>    extern crate rand;<br/>\u00a0<br/>    use std::cmp::max;<br/>    use std::cmp::min;<br/>    use self::rand::Rng;<br/>    use self::CellContent::*;<br/>    use self::GameStatus::*;<br/>\u00a0<br/>    impl MineSweeper {<br/>        pub fn new(width: usize, height: usize, percentage_of_mines: usize) -&gt; MineSweeper {<br/>            let mut game = MineSweeper {<br/>                cell: [[Cell {<br/>                    content: Empty,<br/>                    mark: Mark::None,<br/>                    revealed: false,<br/>                }; 100]; 100],<br/>                game_status: InGame,<br/>                mines: (width * height * percentage_of_mines) / 100,<br/>                width: width,<br/>                height: height,<br/>                revealed_count: 0,<br/>            };<br/>            game.put_mines();<br/>            game.calc_neighbours();<br/>            game<br/>        }<br/>\u00a0<br/>        pub fn play(&amp;mut self, x: usize, y: usize) {<br/>            match self.game_status {<br/>                InGame =&gt; {<br/>                    if\u00a0!self.cell[x][y].revealed {<br/>                        match self.cell[x][y].content {<br/>                            Mine =&gt; {<br/>                                self.cell[x][y].revealed = true;<br/>                                self.revealed_count += 1;<br/>                                self.game_status = Lost;<br/>                            }<br/>                            Empty =&gt; {<br/>                                self.flood_fill_reveal(x, y);<br/>                                if self.revealed_count + self.mines == self.width * self.height {<br/>                                    self.game_status = Won;<br/>                                }<br/>                            }<br/>                            MineNeighbour { .. } =&gt; {<br/>                                self.cell[x][y].revealed = true;<br/>                                self.revealed_count += 1;<br/>                                if self.revealed_count + self.mines == self.width * self.height {<br/>                                    self.game_status = Won;<br/>                                }<br/>                            }<br/>                        }<br/>                    }<br/>                }<br/>                _ =&gt; println!(\"Game has ended\"),<br/>            }<br/>        }<br/>\u00a0<br/>        pub fn mark(&amp;mut self, x: usize, y: usize) {<br/>            self.cell[x][y].mark = match self.cell[x][y].mark {<br/>                Mark::None =&gt; Mark::Mine,<br/>                Mark::Mine =&gt; Mark::None,<br/>            }<br/>        }<br/>\u00a0<br/>        pub fn print(&amp;self) {<br/>            print!(\"\u250c\");<br/>            for _ in 0..self.width {<br/>                print!(\"\u2500\");<br/>            }<br/>            println!(\"\u2510\");<br/>            for y in 0..self.height {<br/>                print!(\"\u2502\");<br/>                for x in 0..self.width {<br/>                    self.cell[x][y].print();<br/>                }<br/>                println!(\"\u2502\");<br/>            }<br/>            print!(\"\u2514\");<br/>            for _ in 0..self.width {<br/>                print!(\"\u2500\");<br/>            }<br/>            println!(\"\u2518\");<br/>        }<br/>\u00a0<br/>        fn put_mines(&amp;mut self) {<br/>            let mut rng = rand::thread_rng();<br/>            for _ in 0..self.mines {<br/>                while let (x, y, true) = (<br/>                    rng.gen::&lt;usize&gt;()\u00a0% self.width,<br/>                    rng.gen::&lt;usize&gt;()\u00a0% self.height,<br/>                    true,<br/>                )<br/>                {<br/>                    match self.cell[x][y].content {<br/>                        Mine =&gt; continue,<br/>                        _ =&gt; {<br/>                            self.cell[x][y].content = Mine;<br/>                            break;<br/>                        }<br/>                    }<br/>                }<br/>            }<br/>        }<br/>\u00a0<br/>        fn calc_neighbours(&amp;mut self) {<br/>            for x in 0..self.width {<br/>                for y in 0..self.height {<br/>                    if\u00a0!self.cell[x][y].is_bomb() {<br/>                        let mut adjacent_bombs = 0;<br/>\u00a0<br/>                        for i in max(x as isize - 1, 0) as usize..min(x + 2, self.width) {<br/>                            for j in max(y as isize - 1, 0) as usize..min(y + 2, self.height) {<br/>                                adjacent_bombs += if self.cell[i][j].is_bomb() { 1 } else { 0 };<br/>                            }<br/>                        }<br/>\u00a0<br/>                        if adjacent_bombs == 0 {<br/>                            self.cell[x][y].content = Empty;<br/>                        } else {<br/>                            self.cell[x][y].content = MineNeighbour { count: adjacent_bombs };<br/>                        }<br/>                    }<br/>                }<br/>            }<br/>        }<br/>\u00a0<br/>        fn flood_fill_reveal(&amp;mut self, x: usize, y: usize) {<br/>            let mut stack = Vec::&lt;(usize, usize)&gt;::new();<br/>            stack.push((x, y));<br/>\u00a0<br/>            while let Some((i, j)) = stack.pop() {<br/>                if self.cell[i][j].revealed {<br/>                    continue;<br/>                }<br/>                self.cell[i][j].revealed = true;<br/>                self.revealed_count += 1;<br/>                if let Empty = self.cell[i][j].content {<br/>                    for m in max(i as isize - 1, 0) as usize..min(i + 2, self.width) {<br/>                        for n in max(j as isize - 1, 0) as usize..min(j + 2, self.height) {<br/>                            if\u00a0!self.cell[m][n].is_bomb() &amp;&amp;\u00a0!self.cell[m][n].revealed {<br/>                                stack.push((m, n));<br/>                            }<br/>                        }<br/>                    }<br/>                }<br/>            }<br/>        }<br/>    }<br/>\u00a0<br/>    impl Cell {<br/>        pub fn print(&amp;self) {<br/>            print!(<br/>                \"{}\",<br/>                if self.revealed {<br/>                    match self.content {<br/>                        Empty =&gt; ' ',<br/>                        Mine =&gt; '*',<br/>                        MineNeighbour { count } =&gt; char::from(count + b'0'),<br/>                    }<br/>                } else {<br/>                    match self.mark {<br/>                        Mark::Mine =&gt; '?',<br/>                        Mark::None =&gt; '.',<br/>                    }<br/>                }<br/>            );<br/>        }<br/>\u00a0<br/>        pub fn is_bomb(&amp;self) -&gt; bool {<br/>            match self.content {<br/>                Mine =&gt; true,<br/>                _ =&gt; false,<br/>            }<br/>        }<br/>    }<br/>}</pre>"}, {"lang": "Tcl", "loc": 150, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/><span class=\"kw2\">fconfigure</span> stdout -buffering none<br/>\u00a0<br/><span class=\"co1\"># Set up the grid and fill it with some mines</span><br/><span class=\"kw1\">proc</span> makeGrid <span class=\"br0\">{</span>n m<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> grid mine<br/>    unset -nocomplain grid mine<br/>    <span class=\"kw1\">set</span> grid<span class=\"br0\">(</span>size<span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$n</span> <span class=\"re0\">$m</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> grid<span class=\"br0\">(</span>shown<span class=\"br0\">)</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">set</span> grid<span class=\"br0\">(</span>marked<span class=\"br0\">)</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$m</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span> .<br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> squares <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$m</span> <span class=\"sy0\">*</span> <span class=\"re0\">$n</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> mine<span class=\"br0\">(</span>count<span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span><span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">0.4</span>+<span class=\"nu0\">0.2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$squares</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> count <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$count</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$mine</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> count<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> i <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>+int<span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$n</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"kw1\">set</span> j <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>+int<span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$m</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exist mine<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">set</span> mine<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span> x<br/>\t\t<span class=\"kw1\">break</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$mine</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Print out the grid</span><br/><span class=\"kw1\">proc</span> displayGrid <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> grid<br/>    lassign <span class=\"re0\">$grid</span><span class=\"br0\">(</span>size<span class=\"br0\">)</span> n m<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$m</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> row <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">append</span> row <span class=\"re0\">$grid</span><span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"re0\">$row</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Toggle the possible-mine flag on a cell</span><br/><span class=\"kw1\">proc</span> markCell <span class=\"br0\">{</span>x y<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> grid<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exist grid<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">return</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$grid</span><span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> eq <span class=\"st0\">\".\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"st0\">\"?\"</span><br/>\t<span class=\"kw2\">incr</span> grid<span class=\"br0\">(</span>marked<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$grid</span><span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> eq <span class=\"st0\">\"?\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"st0\">\".\"</span><br/>\t<span class=\"kw2\">incr</span> grid<span class=\"br0\">(</span>marked<span class=\"br0\">)</span> -<span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Helper procedure that iterates over the 9 squares centered on a location</span><br/><span class=\"kw1\">proc</span> foreachAround <span class=\"br0\">{</span>x y xv yv script<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> grid<br/>    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"re0\">$xv</span> i <span class=\"re0\">$yv</span> j<br/>    <span class=\"kw1\">foreach</span> i <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"re0\">$x</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">foreach</span> j <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"re0\">$y</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exist grid<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">uplevel</span> <span class=\"nu0\">1</span> <span class=\"re0\">$script</span><span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Reveal a cell; returns if it was a mine</span><br/><span class=\"kw1\">proc</span> clearCell <span class=\"br0\">{</span>x y<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> grid mine<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exist grid<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">]</span> || <span class=\"re0\">$grid</span><span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> ne <span class=\"st0\">\".\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"co1\"># Do nothing...</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exist mine<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"st0\">\"!\"</span><br/>\trevealGrid<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"co1\"># Lose...</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> surround <span class=\"nu0\">0</span><br/>    foreachAround <span class=\"re0\">$x</span> <span class=\"re0\">$y</span> i j <span class=\"br0\">{</span><span class=\"kw2\">incr</span> surround <span class=\"br0\">[</span><span class=\"kw2\">info</span> exist mine<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    <span class=\"kw2\">incr</span> grid<span class=\"br0\">(</span>shown<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$surround</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"st0\">\" \"</span><br/>\tforeachAround <span class=\"re0\">$x</span> <span class=\"re0\">$y</span> i j <span class=\"br0\">{</span>clearCell <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$x</span>,<span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"re0\">$surround</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Check the winning condition</span><br/><span class=\"kw1\">proc</span> won<span class=\"sy0\">?</span> <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> grid mine<br/>    lassign <span class=\"re0\">$grid</span><span class=\"br0\">(</span>size<span class=\"br0\">)</span> n m<br/>    <span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$grid</span><span class=\"br0\">(</span>shown<span class=\"br0\">)</span> + <span class=\"re0\">$mine</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span> == <span class=\"re0\">$n</span> <span class=\"sy0\">*</span> <span class=\"re0\">$m</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Update the grid to show mine locations (marked or otherwise)</span><br/><span class=\"kw1\">proc</span> revealGrid <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> grid mine<br/>    lassign <span class=\"re0\">$grid</span><span class=\"br0\">(</span>size<span class=\"br0\">)</span> n m<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$m</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exist mine<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">continue</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$grid</span><span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span> eq <span class=\"st0\">\".\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span> <span class=\"st0\">\"x\"</span><br/>\t    <span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$grid</span><span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span> eq <span class=\"st0\">\"?\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">set</span> grid<span class=\"br0\">(</span><span class=\"re0\">$i</span>,<span class=\"re0\">$j</span><span class=\"br0\">)</span> <span class=\"st0\">\"X\"</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># The main game loop</span><br/><span class=\"kw1\">proc</span> play <span class=\"br0\">{</span>n m<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> m <span class=\"br0\">[</span>makeGrid <span class=\"re0\">$n</span> <span class=\"re0\">$m</span><span class=\"br0\">]</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"There are $m true mines of fixed position in the grid<span class=\"es0\">\\n</span>\"</span><br/>    displayGrid<br/>    <span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"m x y/c x y/p/r: \"</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">gets</span> stdin line<span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span> <span class=\"co1\"># check for eof too!</span><br/>\t<span class=\"kw1\">switch</span> -nocase -<span class=\"kw2\">regexp</span> <span class=\"br0\">[</span><span class=\"kw2\">string</span> trim <span class=\"re0\">$line</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    <span class=\"br0\">{</span>^m\\s+\\d+\\s+\\d+<span class=\"sy0\">$</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\tmarkCell <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$line</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$line</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"br0\">{</span>^c\\s+\\d+\\s+\\d+<span class=\"sy0\">$</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>clearCell <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$line</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$line</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"KABOOM!\"</span><br/>\t\t    displayGrid<br/>\t\t    <span class=\"kw1\">break</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>won<span class=\"sy0\">?</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"You win!\"</span><br/>\t\t    displayGrid<br/>\t\t    <span class=\"kw1\">break</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"br0\">{</span>^p<span class=\"sy0\">$</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\tdisplayGrid<br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"br0\">{</span>^r<span class=\"sy0\">$</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">puts</span> <span class=\"st0\">\"Resigning...\"</span><br/>\t\trevealGrid<br/>\t\tdisplayGrid<br/>\t\t<span class=\"kw1\">break</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>play <span class=\"nu0\">6</span> <span class=\"nu0\">4</span></pre>"}, {"lang": "VBA", "loc": 1, "block": "<pre>In your Vbaproject, insert\u00a0:\n- 1 Module\n- 1 Class Module (Name it cMinesweeper)</pre>"}]}