{"task": "Sockets", "blocks": [{"lang": "Ada", "loc": 14, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> GNAT.<span class=\"me1\">Sockets</span>;  <span class=\"kw3\">use</span> GNAT.<span class=\"me1\">Sockets</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Socket_Send <span class=\"kw1\">is</span><br/>   Client\u00a0: Socket_Type;<br/><span class=\"kw1\">begin</span><br/>   Initialize;<br/>   Create_Socket  <span class=\"br0\">(</span>Socket =&gt; Client<span class=\"br0\">)</span>;<br/>   Connect_Socket <span class=\"br0\">(</span>Socket =&gt; Client,<br/>                   Server =&gt; <span class=\"br0\">(</span>Family =&gt; Family_Inet,<br/>                              Addr   =&gt; Inet_Addr <span class=\"br0\">(</span><span class=\"st0\">\"127.0.0.1\"</span><span class=\"br0\">)</span>,<br/>                              Port   =&gt; <span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   String'Write <span class=\"br0\">(</span>Stream <span class=\"br0\">(</span>Client<span class=\"br0\">)</span>, <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span>;<br/>   Close_Socket <span class=\"br0\">(</span>Client<span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Socket_Send;</pre>"}, {"lang": "AutoHotkey", "loc": 125, "block": "<pre class=\"autohotkey highlighted_source\">Network_Port <span class=\"sy0\">=</span> <span class=\"nu0\">256</span><br/>Network_Address <span class=\"sy0\">=</span> 127<span class=\"sy0\">.</span>0<span class=\"sy0\">.</span>0<span class=\"sy0\">.</span>1<br/>NewData <span class=\"sy0\">:=</span> false<br/>DataReceived <span class=\"sy0\">=</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gosub.htm\"><span class=\"kw3\">GoSub</span></a><span class=\"sy0\">,</span> Connection_Init<br/>SendData<span class=\"br0\">(</span>socket<span class=\"sy0\">,</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"re2\">Connection_Init:<br/></span><a href=\"http://www.autohotkey.com/docs/commands/OnExit.htm\"><span class=\"kw3\">OnExit</span></a><span class=\"sy0\">,</span> ExitSub<br/>\u00a0<br/>socket <span class=\"sy0\">:=</span> ConnectToAddress<span class=\"br0\">(</span>Network_Address<span class=\"sy0\">,</span> Network_Port<span class=\"br0\">)</span><br/><span class=\"kw1\">if</span> socket <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Process.htm\"><span class=\"kw3\">Process</span></a><span class=\"sy0\">,</span> Exist<br/><a href=\"http://www.autohotkey.com/docs/commands/DetectHiddenWindows.htm\"><span class=\"kw3\">DetectHiddenWindows</span></a> On<br/>ScriptMainWindowId <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">WinExist</span></a><span class=\"br0\">(</span><span class=\"st0\">\"ahk_class AutoHotkey ahk_pid \"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#ErrorLevel\"><span class=\"kw2\">ErrorLevel</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/DetectHiddenWindows.htm\"><span class=\"kw3\">DetectHiddenWindows</span></a> Off<br/>\u00a0<br/>NotificationMsg <span class=\"sy0\">=</span> 0x5556<br/><a href=\"http://www.autohotkey.com/docs/commands/OnMessage.htm\"><span class=\"kw3\">OnMessage</span></a><span class=\"br0\">(</span>NotificationMsg<span class=\"sy0\">,</span> <span class=\"st0\">\"ReceiveData\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>FD_READ <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>FD_CLOSE <span class=\"sy0\">=</span> <span class=\"nu0\">32</span><br/><span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSAAsyncSelect\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> socket<span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> ScriptMainWindowId<span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> NotificationMsg<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> FD_READ|FD_CLOSE<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <span class=\"st0\">\"WSAAsyncSelect() indicated Winsock error \"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSAGetLastError\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">return</span><br/>\u00a0<br/>\u00a0<br/>ConnectToAddress<span class=\"br0\">(</span>IPAddress<span class=\"sy0\">,</span> Port<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/VarSetCapacity.htm\"><span class=\"kw3\">VarSetCapacity</span></a><span class=\"br0\">(</span>wsaData<span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"br0\">)</span><br/>    result <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSAStartup\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UShort\"</span><span class=\"sy0\">,</span> 0x0002<span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>wsaData<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#ErrorLevel\"><span class=\"kw2\">ErrorLevel</span></a><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a> WSAStartup<span class=\"br0\">(</span><span class=\"br0\">)</span> could not be called due to error <span class=\"re0\">%ErrorLevel%</span><span class=\"sy0\">.</span> Winsock <span class=\"nu0\">2.0</span> <span class=\"kw1\">or</span> higher is required<span class=\"sy0\">.</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> result<br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <span class=\"st0\">\"WSAStartup() indicated Winsock error \"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSAGetLastError\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    AF_INET <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>    SOCK_STREAM <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    IPPROTO_TCP <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><br/>    socket <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\socket\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> AF_INET<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> SOCK_STREAM<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> IPPROTO_TCP<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> socket <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <span class=\"st0\">\"socket() indicated Winsock error \"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSAGetLastError\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    SizeOfSocketAddress <span class=\"sy0\">=</span> <span class=\"nu0\">16</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/VarSetCapacity.htm\"><span class=\"kw3\">VarSetCapacity</span></a><span class=\"br0\">(</span>SocketAddress<span class=\"sy0\">,</span> SizeOfSocketAddress<span class=\"br0\">)</span><br/>    InsertInteger<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> SocketAddress<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> AF_INET<span class=\"br0\">)</span><br/>    InsertInteger<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\htons\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UShort\"</span><span class=\"sy0\">,</span> Port<span class=\"br0\">)</span><span class=\"sy0\">,</span> SocketAddress<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    InsertInteger<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\inet_addr\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Str\"</span><span class=\"sy0\">,</span> IPAddress<span class=\"br0\">)</span><span class=\"sy0\">,</span> SocketAddress<span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\connect\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> socket<span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>SocketAddress<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> SizeOfSocketAddress<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <span class=\"st0\">\"connect() indicated Winsock error \"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSAGetLastError\"</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"?\"</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> socket<br/><span class=\"br0\">}</span><br/>\u00a0<br/>ReceiveData<span class=\"br0\">(</span>wParam<span class=\"sy0\">,</span> lParam<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    global DataReceived<br/>    global NewData<br/>    socket <span class=\"sy0\">:=</span> wParam<br/>    ReceivedDataSize <span class=\"sy0\">=</span> <span class=\"nu0\">4096</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/VarSetCapacity.htm\"><span class=\"kw3\">VarSetCapacity</span></a><span class=\"br0\">(</span>ReceivedData<span class=\"sy0\">,</span> ReceivedDataSize<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        ReceivedDataLength <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\recv\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> socket<span class=\"sy0\">,</span> <span class=\"st0\">\"Str\"</span><span class=\"sy0\">,</span> ReceivedData<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> ReceivedDataSize<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> ReceivedDataLength <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>        <span class=\"kw1\">if</span> ReceivedDataLength <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>        <span class=\"br0\">{</span><br/>            WinsockError <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSAGetLastError\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> WinsockError <span class=\"sy0\">=</span> <span class=\"nu0\">10035</span><br/>            <span class=\"br0\">{</span><br/>                DataReceived <span class=\"sy0\">=</span> <span class=\"re0\">%TempDataReceived%</span><br/>                NewData <span class=\"sy0\">:=</span> true<br/>                <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span> WinsockError <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">10054</span><br/>                <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <span class=\"st0\">\"recv() indicated Winsock error \"</span> <span class=\"sy0\">.</span> WinsockError<br/>            <a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            TempDataReceived <span class=\"sy0\">=</span><br/>        TempDataReceived <span class=\"sy0\">=</span> <span class=\"re0\">%TempDataReceived%</span><span class=\"re0\">%ReceivedData%</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>SendData<span class=\"br0\">(</span>wParam<span class=\"sy0\">,</span>SendData<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    socket <span class=\"sy0\">:=</span> wParam<br/>    SendDataSize <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/VarSetCapacity.htm\"><span class=\"kw3\">VarSetCapacity</span></a><span class=\"br0\">(</span>SendData<span class=\"br0\">)</span><br/>    SendDataSize <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>    sendret <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\send\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> socket<span class=\"sy0\">,</span> <span class=\"st0\">\"Str\"</span><span class=\"sy0\">,</span> SendData<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> SendDatasize<span class=\"sy0\">,</span> <span class=\"st0\">\"Int\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>InsertInteger<span class=\"br0\">(</span>pInteger<span class=\"sy0\">,</span> ByRef pDest<span class=\"sy0\">,</span> pOffset <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> pSize <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"re0\">%pSize%</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"RtlFillMemory\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>pDest <span class=\"sy0\">+</span> pOffset <span class=\"sy0\">+</span> <span class=\"re3\">A_Index</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UInt\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"UChar\"</span><span class=\"sy0\">,</span> pInteger <span class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">8</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"re3\">A_Index</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> 0xFF<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re2\">ReceiveProcedure:<br/></span>    <span class=\"kw1\">if</span> NewData<br/>        <a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> ReceivedText<span class=\"sy0\">,</span> <span class=\"re0\">%DataReceived%</span><br/>    NewData <span class=\"sy0\">:=</span> false<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">ExitSub:<br/></span><a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Ws2_32\\WSACleanup\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a></pre>"}, {"lang": "AutoIt", "loc": 7, "block": "<pre class=\"autoit highlighted_source\"><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Func</span></a> _HelloWorldSocket<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/TCPStartup.htm\"><span class=\"kw3\">TCPStartup</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Socket</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/TCPConnect.htm\"><span class=\"kw3\">TCPConnect</span></a><span class=\"br0\">(</span><span class=\"st0\">\"127.0.0.1\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/TCPSend.htm\"><span class=\"kw3\">TCPSend</span></a><span class=\"br0\">(</span><span class=\"re0\">$Socket</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Hello World\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/TCPCloseSocket.htm\"><span class=\"kw3\">TCPCloseSocket</span></a><span class=\"br0\">(</span><span class=\"re0\">$Socket</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/TCPShutdown.htm\"><span class=\"kw3\">TCPShutdown</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndFunc</span></a></pre>"}, {"lang": "BBC BASIC", "loc": 12, "block": "<pre class=\"text highlighted_source\">      INSTALL @lib$+\"SOCKLIB\"<br/>      PROC_initsockets<br/>\u00a0<br/>      socket% = FN_tcpconnect(\"localhost\", \"256\")<br/>      IF socket% &lt;=0 ERROR 100, \"Failed to open socket\"<br/>\u00a0<br/>      REM Don't use FN_writesocket since an error is expected<br/>      msg$ = \"hello socket world\"<br/>      SYS `send`, socket%,\u00a0!^msg$, LEN(msg$), 0 TO result%<br/>\u00a0<br/>      PROC_closesocket(socket%)<br/>      PROC_exitsockets</pre>"}, {"lang": "C", "loc": 37, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/><span class=\"co2\">#include &lt;sys/types.h&gt;</span><br/><span class=\"co2\">#include &lt;sys/socket.h&gt;</span><br/><span class=\"co2\">#include &lt;netdb.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>msg <span class=\"sy0\">=</span> <span class=\"st0\">\"hello socket world\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>   <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> sock<span class=\"sy0\">,</span> len<span class=\"sy0\">,</span> slen<span class=\"sy0\">;</span><br/>\u00a0<br/>   <span class=\"kw4\">struct</span> addrinfo hints<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>addrs<span class=\"sy0\">;</span>  <br/>   <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/memset.html\"><span class=\"kw3\">memset</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>hints<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> addrinfo<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   hints.<span class=\"me1\">ai_family</span> <span class=\"sy0\">=</span> AF_UNSPEC<span class=\"sy0\">;</span><br/>   hints.<span class=\"me1\">ai_socktype</span> <span class=\"sy0\">=</span> SOCK_STREAM<span class=\"sy0\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">==</span> getaddrinfo<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"256\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>hints<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>addrs<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">{</span><br/>       sock <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>addrs<span class=\"sy0\">-&gt;</span>ai_family<span class=\"sy0\">,</span> addrs<span class=\"sy0\">-&gt;</span>ai_socktype<span class=\"sy0\">,</span> addrs<span class=\"sy0\">-&gt;</span>ai_protocol<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"kw1\">if</span> <span class=\"br0\">(</span> sock <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>       <span class=\"br0\">{</span><br/>           <span class=\"kw1\">if</span> <span class=\"br0\">(</span> connect<span class=\"br0\">(</span>sock<span class=\"sy0\">,</span> addrs<span class=\"sy0\">-&gt;</span>ai_addr<span class=\"sy0\">,</span> addrs<span class=\"sy0\">-&gt;</span>ai_addrlen<span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>           <span class=\"br0\">{</span><br/>               <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>pm <span class=\"sy0\">=</span> msg<span class=\"sy0\">;</span><br/>               <span class=\"kw1\">do</span><br/>               <span class=\"br0\">{</span><br/>                  len <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>pm<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                  slen <span class=\"sy0\">=</span> send<span class=\"br0\">(</span>sock<span class=\"sy0\">,</span> pm<span class=\"sy0\">,</span> len<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                  pm <span class=\"sy0\">+=</span> slen<span class=\"sy0\">;</span><br/>               <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">&lt;=</span> slen<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>slen <span class=\"sy0\">&lt;</span> len<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>           <span class=\"br0\">}</span><br/>           close<span class=\"br0\">(</span>sock<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"br0\">}</span><br/>       freeaddrinfo<span class=\"br0\">(</span>addrs<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 16, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co1\">//compile with g++ main.cpp -lboost_system -pthread </span><br/>\u00a0<br/><span class=\"co2\">#include &lt;boost/asio.hpp&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  boost<span class=\"sy4\">::</span><span class=\"me2\">asio</span><span class=\"sy4\">::</span><span class=\"me2\">io_service</span> io_service<span class=\"sy4\">;</span><br/>  boost<span class=\"sy4\">::</span><span class=\"me2\">asio</span><span class=\"sy4\">::</span><span class=\"me2\">ip</span><span class=\"sy4\">::</span><span class=\"me2\">tcp</span><span class=\"sy4\">::</span><span class=\"me2\">socket</span> sock<span class=\"br0\">(</span>io_service<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  boost<span class=\"sy4\">::</span><span class=\"me2\">asio</span><span class=\"sy4\">::</span><span class=\"me2\">ip</span><span class=\"sy4\">::</span><span class=\"me2\">tcp</span><span class=\"sy4\">::</span><span class=\"me2\">resolver</span> resolver<span class=\"br0\">(</span>io_service<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  boost<span class=\"sy4\">::</span><span class=\"me2\">asio</span><span class=\"sy4\">::</span><span class=\"me2\">ip</span><span class=\"sy4\">::</span><span class=\"me2\">tcp</span><span class=\"sy4\">::</span><span class=\"me2\">resolver</span><span class=\"sy4\">::</span><span class=\"me2\">query</span> query<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"st0\">\"4321\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  boost<span class=\"sy4\">::</span><span class=\"me2\">asio</span><span class=\"sy4\">::</span><span class=\"me2\">connect</span><span class=\"br0\">(</span>sock, resolver.<span class=\"me1\">resolve</span><span class=\"br0\">(</span>query<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  boost<span class=\"sy4\">::</span><span class=\"me2\">asio</span><span class=\"sy4\">::</span><span class=\"me2\">write</span><span class=\"br0\">(</span>sock, boost<span class=\"sy4\">::</span><span class=\"me2\">asio</span><span class=\"sy4\">::</span><span class=\"me2\">buffer</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello world socket<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 15, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.IO</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Net.Sockets</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program <span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        TcpClient tcp <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> TcpClient<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        StreamWriter writer <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> StreamWriter<span class=\"br0\">(</span>tcp<span class=\"sy0\">.</span><span class=\"me1\">GetStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        writer<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        writer<span class=\"sy0\">.</span><span class=\"me1\">Flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        tcp<span class=\"sy0\">.</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 10, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">ns</span> socket<span class=\"sy0\">-</span>example<br/>  <span class=\"br0\">(</span>:<span class=\"kw1\">import</span> <span class=\"br0\">(</span>java<span class=\"sy0\">.</span>net Socket<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>java<span class=\"sy0\">.</span>io PrintWriter<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> send<span class=\"sy0\">-</span>data <span class=\"br0\">[</span>host msg<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">with-open</span> <span class=\"br0\">[</span>sock <span class=\"br0\">(</span>Socket<span class=\"sy0\">.</span> host <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>              printer <span class=\"br0\">(</span>PrintWriter<span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span>getOutputStream sock<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">.</span>println printer msg<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>send<span class=\"sy0\">-</span>data <span class=\"st0\">\"localhost\"</span> <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Common Lisp", "loc": 4, "block": "<pre class=\"lisp highlighted_source\">CL-USER<span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span>usocket<span class=\"sy0\">:</span><span class=\"me1\">with-client-socket</span> <span class=\"br0\">(</span>socket stream <span class=\"st0\">\"localhost\"</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>write-line <span class=\"st0\">\"hello socket world\"</span> stream<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>values<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">; No value</span></pre>"}, {"lang": "D", "loc": 15, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">module</span> socket <span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span> <span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">socket</span> <span class=\"sy0\">;</span><br/><span class=\"kw4\">version</span><span class=\"br0\">(</span>Win32<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"co1\">// For Win32 systems, need to link with ws2_32.lib. </span><br/>  <span class=\"kw2\">pragma</span><span class=\"br0\">(</span>lib<span class=\"sy0\">,</span> <span class=\"st0\">\"ws2_32.lib\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span> <br/><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">long</span> res<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">auto</span> socket <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> Socket<span class=\"br0\">(</span>AddressFamily.<span class=\"me1\">INET</span><span class=\"sy0\">,</span> SocketType.<span class=\"me1\">STREAM</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>  socket.<span class=\"me1\">connect</span><span class=\"br0\">(</span><span class=\"kw2\">new</span> InternetAddress<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span><span class=\"sy0\">,</span><span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>  res <span class=\"sy0\">=</span> socket.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>  writefln<span class=\"br0\">(</span><span class=\"st0\">\"Socket\u00a0%d bytes sent.\"</span><span class=\"sy0\">,</span> res<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>  socket.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 19, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> Sockets<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> IdTCPClient<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  lTCPClient<span class=\"sy1\">:</span> TIdTCPClient<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  lTCPClient <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TIdTCPClient<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"kw1\">nil</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">try</span><br/>    lTCPClient<span class=\"sy1\">.</span><span class=\"me1\">Host</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">'127.0.0.1'</span><span class=\"sy1\">;</span><br/>    lTCPClient<span class=\"sy1\">.</span><span class=\"me1\">Port</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">256</span><span class=\"sy1\">;</span><br/>    lTCPClient<span class=\"sy1\">.</span><span class=\"me1\">Connect</span><span class=\"sy1\">;</span><br/>    lTCPClient<span class=\"sy1\">.</span><span class=\"me1\">IOHandler</span><span class=\"sy1\">.</span><span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'hello socket world'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">finally</span><br/>    lTCPClient<span class=\"sy1\">.</span><span class=\"me1\">Free</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Elena", "loc": 12, "block": "<pre class=\"text highlighted_source\">import system'net.<br/>import system'text.<br/>import extensions'text.<br/>import system'io.<br/>\u00a0<br/>program =<br/>[<br/>    var socket\u00a0:= Socket new(AF_INET,SOCK_STREAM,IPPROTO_TCP).<br/>    socket connect(\"127.0.0.1\",256).<br/>    socket write(AnsiEncoder toByteArray(\"hello socket world\")).<br/>    socket close.    <br/>].</pre>"}, {"lang": "Elixir", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>defmodule Sockets do<br/>  require Logger<br/>\u00a0<br/>  def send_message(port, message) do<br/>    {:ok, socket} =\u00a0:gen_tcp.connect('localhost', port, [])<br/>   \u00a0:gen_tcp.send(socket, message)<br/>  end<br/>end<br/>\u00a0<br/>Sockets.send_message(256, \"hello socket world\")<br/>\u00a0</pre>"}, {"lang": "Emacs Lisp", "loc": 5, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>proc <span class=\"br0\">(</span>make-network-process <span class=\"sy0\">:</span><span class=\"kw1\">name</span> <span class=\"st0\">\"my sock\"</span><br/>                                  <span class=\"sy0\">:</span><span class=\"me1\">host</span> 'local    <span class=\"co1\">;; or hostname string</span><br/>                                  <span class=\"sy0\">:</span><span class=\"me1\">service</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>process-send-string proc <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>delete-process proc<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Erlang", "loc": 9, "block": "<pre class=\"erlang highlighted_source\"><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>socket<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>start<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"re5\">Sock</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">connect</span><span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">256</span><span class=\"sy1\">,</span><br/>                                 <span class=\"br0\">[</span><span class=\"kw4\">binary</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>packet<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    ok <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">send</span><span class=\"br0\">(</span><span class=\"re5\">Sock</span><span class=\"sy1\">,</span> <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    ok <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">close</span><span class=\"br0\">(</span><span class=\"re5\">Sock</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 1, "block": "<pre class=\"text highlighted_source\">\"localhost\" 256 &lt;inet&gt; utf8 [ \"hello socket world\" print ] with-client</pre>"}, {"lang": "Fantom", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>using inet<br/>\u00a0<br/>class Socket<br/>{<br/>  public static Void main ()<br/>  {<br/>    sock\u00a0:= TcpSocket()<br/>    sock.connect(IpAddr(\"localhost\"), 256)<br/>\u00a0<br/>    sock.out.printLine(\"hello socket world\")<br/>    sock.out.flush<br/>    sock.close<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 7, "block": "<pre class=\"text highlighted_source\">include unix/socket.fs<br/>\u00a0<br/>s\" localhost\" 256 open-socket<br/>\u00a0<br/>dup s\" hello socket world\" rot write-socket<br/>\u00a0<br/>close-socket</pre>"}, {"lang": "Go", "loc": 19, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"net\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    conn<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> net<span class=\"sy3\">.</span>Dial<span class=\"sy1\">(</span><span class=\"st0\">\"tcp\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"localhost:256\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">defer</span> conn<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>    _<span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> conn<span class=\"sy3\">.</span>Write<span class=\"sy1\">([]</span><span class=\"kw4\">byte</span><span class=\"sy1\">(</span><span class=\"st0\">\"hello socket world\"</span><span class=\"sy1\">))</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 3, "block": "<pre class=\"groovy highlighted_source\">s <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> java.<span class=\"me1\">net</span>.<a href=\"http://www.google.de/search?as_q=Socket&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">Socket</span></a><span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>s <span class=\"sy0\">&lt;&lt;</span> <span class=\"st0\">\"hello socket world\"</span><br/>s.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20close\"><span class=\"kw9\">close</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 3, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Network<br/>\u00a0<br/>main <span class=\"sy0\">=</span> withSocketsDo <span class=\"sy0\">$</span> sendTo <span class=\"st0\">\"localhost\"</span> <span class=\"br0\">(</span>PortNumber <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:toEnum\"><span class=\"kw3\">toEnum</span></a> <span class=\"nu0\">256</span><span class=\"br0\">)</span> <span class=\"st0\">\"hello socket world\"</span></pre>"}, {"lang": "Icon and Unicon", "loc": 8, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> cfunc<br/><span class=\"kw1\">procedure</span> main <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>   hello<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">1024</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> hello <span class=\"br0\">(</span>host<span class=\"sy1\">,</span> port<span class=\"br0\">)</span><br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>tconnect<span class=\"br0\">(</span>host<span class=\"sy1\">,</span> port<span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"unable to connect to\"</span><span class=\"sy1\">,</span> host<span class=\"sy1\">,</span> <span class=\"st0\">\":\"</span><span class=\"sy1\">,</span> port<span class=\"br0\">)</span> <span class=\"sy1\">,</span>  <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "IDL", "loc": 3, "block": "<pre class=\"idl highlighted_source\">socket, unit, <span class=\"st0\">'localhost'</span>,<span class=\"nu0\">256</span>,<span class=\"sy0\">/</span>get_lun  <br/>printf,unit,<span class=\"st0\">\"hello socket world\"</span> <br/>close, unit</pre>"}, {"lang": "J", "loc": 5, "block": "<pre class=\"j highlighted_source\">   coinsert<span class=\"st_h\">'jsocket'</span> [ require <span class=\"st_h\">'socket'</span>             <span class=\"co1\">NB.  Sockets library</span><br/>   socket =.  &gt;{.sdcheck sdsocket<span class=\"st_h\">''</span>                 <span class=\"co1\">NB.  Open a socket</span><br/>   host   =. sdcheck sdgethostbyname <span class=\"st_h\">'localhost'</span>    <span class=\"co1\">NB.  Resolve host</span><br/>   sdcheck sdconnect socket\u00a0; host ,&lt; <span class=\"nu0\">256</span>           <span class=\"co1\">NB.  Create connection to port 256</span><br/>   sdcheck <span class=\"st_h\">'hello socket world'</span> sdsend socket , <span class=\"nu0\">0</span>   <span class=\"co1\">NB.  Send msg</span></pre>"}, {"lang": "Java", "loc": 14, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.io.IOException</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.net.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> SocketSend <span class=\"br0\">{</span><br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a> <span class=\"br0\">{</span><br/>    sendData<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> sendData<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> host, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> msg<span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a> <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asocket+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Socket</span></a> sock <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asocket+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Socket</span></a><span class=\"br0\">(</span> host, <span class=\"nu0\">256</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    sock.<span class=\"me1\">getOutputStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span>msg.<span class=\"me1\">getBytes</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    sock.<span class=\"me1\">getOutputStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    sock.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>socket = connect(\"localhost\",256)<br/>write(socket, \"hello socket world\")<br/>close(socket)<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 10, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.2.21</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"me1\">Socket</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sock <span class=\"sy0\">=</span> Socket<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>    sock.<span class=\"me1\">use</span> <span class=\"br0\">{</span><br/>        it.<span class=\"me1\">outputStream</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"hello socket world\"</span>.<span class=\"me1\">toByteArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 5, "block": "<pre class=\"text highlighted_source\">local(net) = net_tcp<br/>#net-&gt;connect('127.0.0.1',256)<br/>#net-&gt;dowithclose =&gt; {<br/>    #net-&gt;writestring('Hello World')<br/>}</pre>"}, {"lang": "Lua", "loc": 6, "block": "<pre class=\"lua highlighted_source\">socket <span class=\"sy0\">=</span> <span class=\"kw3\">require</span> <span class=\"st0\">\"socket\"</span><br/>host<span class=\"sy0\">,</span> port <span class=\"sy0\">=</span> <span class=\"st0\">\"127.0.0.1\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">256</span><br/>\u00a0<br/>sid <span class=\"sy0\">=</span> socket<span class=\"sy0\">.</span>udp<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>sid<span class=\"sy0\">:</span>sendto<span class=\"br0\">(</span> <span class=\"st0\">\"hello socket world\"</span><span class=\"sy0\">,</span> host<span class=\"sy0\">,</span> port <span class=\"br0\">)</span><br/>sid<span class=\"sy0\">:</span>close<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Myrddin", "loc": 11, "block": "<pre class=\"text highlighted_source\">use std<br/>\u00a0<br/>const main = {<br/>\tmatch std.dial(\"tcp!localhost!256\")<br/>\t| `std.Ok fd:\t<br/>\t\tstd.write(fd, \"hello socket world\")<br/>\t\tstd.close(fd)<br/>\t| `std.Err err:<br/>\t\tstd.fatal(\"could not open fd: {}\\n\", err)<br/>\t;;<br/>}</pre>"}, {"lang": "Nemerle", "loc": 13, "block": "<pre class=\"text highlighted_source\">using System.Text;<br/>using System.Net.Sockets;<br/>\u00a0<br/>module Program<br/>{<br/>    Main()\u00a0: void<br/>    {<br/>        def sock = Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);<br/>        sock.Connect(\"127.0.0.1\", 1000);<br/>        _ = sock.Send(Encoding.ASCII.GetBytes(\"Hell, world!\"));<br/>        sock.Close();<br/>    }<br/>}</pre>"}, {"lang": "NetRexx", "loc": 29, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref symbols nobinary<br/><span class=\"kw1\">import</span> java.<span class=\"me0\">net</span>.<br/>\u00a0<br/><span class=\"me0\">runSample</span><span class=\"br0\">(</span>arg<span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method runSample<span class=\"br0\">(</span>arg<span class=\"br0\">)</span> <span class=\"kw2\">private</span> <span class=\"kw2\">static</span><br/>  <span class=\"kw1\">parse</span> arg host<span class=\"st0\">':'</span>port<span class=\"st0\">':'</span>message<br/>  <span class=\"kw1\">if</span> host    = <span class=\"st0\">''</span> <span class=\"kw3\">then</span> host    = <span class=\"st0\">'localhost'</span><br/>  <span class=\"kw1\">if</span> port    = <span class=\"st0\">''</span> <span class=\"kw3\">then</span> port    = <span class=\"nu0\">256</span><br/>  <span class=\"kw1\">if</span> message = <span class=\"st0\">''</span> <span class=\"kw3\">then</span> message = <span class=\"st0\">'hello socket world'</span><br/>  sendToSocket<span class=\"br0\">(</span>host, port, message<span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method sendToSocket<span class=\"br0\">(</span>host, port, message<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span><br/>  <span class=\"kw1\">do</span><br/>    sokt = Socket<span class=\"br0\">(</span>host, port<span class=\"br0\">)</span><br/>    soks = sokt.<span class=\"me0\">getOutputStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    soks.<span class=\"me0\">write</span><span class=\"br0\">(</span><span class=\"br0\">(</span>String message<span class=\"br0\">)</span>.<span class=\"me0\">getBytes</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    soks.<span class=\"me0\">flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    sokt.<span class=\"me0\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">catch</span> ix = IOException<br/>    ix.<span class=\"me0\">printStackTrace</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "NewLISP", "loc": 6, "block": "<pre class=\"newlisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#set\"><span class=\"kw1\">set</span></a> <span class=\"re5\">'socket</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#net-connect\"><span class=\"kw1\">net-connect</span></a> <span class=\"st0\">\"localhost\"</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#net-send\"><span class=\"kw1\">net-send</span></a> socket <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#net-close\"><span class=\"kw1\">net-close</span></a> socket<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#exit\"><span class=\"kw1\">exit</span></a><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 6, "block": "<pre class=\"text highlighted_source\">import net<br/>\u00a0<br/>var s = newSocket()<br/>s.connect(\"localhost\", Port(256))<br/>s.send(\"Hello Socket World\")<br/>s.close()</pre>"}, {"lang": "Objeck", "loc": 15, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">use</span> Net<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> Socket <span class=\"br0\">{</span><br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      socket <span class=\"sy0\">:=</span> TCPSocket<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>socket<span class=\"sy0\">-&gt;</span><span class=\"me1\">IsOpen</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        socket<span class=\"sy0\">-&gt;</span><span class=\"me1\">WriteString</span><span class=\"br0\">(</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        socket<span class=\"sy0\">-&gt;</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Objective-C", "loc": 20, "block": "<pre class=\"objc highlighted_source\"><span class=\"co2\">// declare the class to conform to NSStreamDelegate protocol</span><br/>\u00a0<br/><span class=\"co2\">// in some method</span><br/><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSOutputStream_Class/\"><span class=\"kw5\">NSOutputStream</span></a> <span class=\"sy0\">*</span>oStream;<br/><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSStream_Class/\"><span class=\"kw5\">NSStream</span></a> getStreamsToHost<span class=\"sy0\">:</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSHost_Class/\"><span class=\"kw5\">NSHost</span></a> hostWithName<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"localhost\"</span><span class=\"br0\">]</span> port<span class=\"sy0\">:</span><span class=\"nu0\">256</span> inputStream<span class=\"sy0\">:</span><span class=\"kw2\">NULL</span> outputStream<span class=\"sy0\">:&amp;</span>oStream<span class=\"br0\">]</span>;<br/><span class=\"br0\">[</span>oStream setDelegate<span class=\"sy0\">:</span>self<span class=\"br0\">]</span>;<br/><span class=\"br0\">[</span>oStream scheduleInRunLoop<span class=\"sy0\">:</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSRunLoop_Class/\"><span class=\"kw5\">NSRunLoop</span></a> currentRunLoop<span class=\"br0\">]</span> forMode<span class=\"sy0\">:</span>NSDefaultRunLoopMode<span class=\"br0\">]</span>;<br/><span class=\"br0\">[</span>oStream open<span class=\"br0\">]</span>;<br/>\u00a0<br/>\u00a0<br/><span class=\"co2\">// later, in the same class:</span><br/><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span>stream<span class=\"sy0\">:</span><span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSStream_Class/\"><span class=\"kw5\">NSStream</span></a> <span class=\"sy0\">*</span><span class=\"br0\">)</span>aStream handleEvent<span class=\"sy0\">:</span><span class=\"br0\">(</span>NSStreamEvent<span class=\"br0\">)</span>streamEvent <span class=\"br0\">{</span><br/>    <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSOutputStream_Class/\"><span class=\"kw5\">NSOutputStream</span></a> <span class=\"sy0\">*</span>oStream <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSOutputStream_Class/\"><span class=\"kw5\">NSOutputStream</span></a> <span class=\"sy0\">*</span><span class=\"br0\">)</span>aStream;<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>streamEvent <span class=\"sy0\">==</span> NSStreamEventHasBytesAvailable<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"sy0\">*</span>str <span class=\"sy0\">=</span> <span class=\"co3\">@</span><span class=\"st0\">\"hello socket world\"</span>;<br/>        <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>rawstring <span class=\"sy0\">=</span> <span class=\"br0\">[</span>str UTF8String<span class=\"br0\">]</span>;<br/>        <span class=\"br0\">[</span>oStream write<span class=\"sy0\">:</span>rawstring maxLength<span class=\"sy0\">:</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>rawstring<span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/>        <span class=\"br0\">[</span>oStream close<span class=\"br0\">]</span>;<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 11, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">open</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html\"><span class=\"kw2\">Unix</span></a><br/>\u00a0<br/><span class=\"kw1\">let</span> init_socket addr port <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> inet_addr <span class=\"sy0\">=</span> <span class=\"br0\">(</span>gethostbyname addr<span class=\"br0\">)</span><span class=\"sy0\">.</span>h_addr_list<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> sockaddr <span class=\"sy0\">=</span> ADDR_INET <span class=\"br0\">(</span>inet_addr, port<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> sock <span class=\"sy0\">=</span> socket PF_INET SOCK_STREAM <span class=\"nu0\">0</span> <span class=\"kw1\">in</span><br/>  connect sock sockaddr<span class=\"sy0\">;</span><br/>  <span class=\"co1\">(* convert the file descriptor into high-level channels: *)</span><br/>  <span class=\"kw1\">let</span> outchan <span class=\"sy0\">=</span> out_channel_of_descr sock <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> inchan <span class=\"sy0\">=</span> in_channel_of_descr sock <span class=\"kw1\">in</span><br/>  <span class=\"br0\">(</span>inchan, outchan<span class=\"br0\">)</span></pre>"}, {"lang": "Oz", "loc": 6, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  Socket = <span class=\"br0\">{</span>New Open<span class=\"sy0\">.</span>socket init<span class=\"br0\">}</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Socket connect<span class=\"br0\">(</span>port:256<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span>Socket write<span class=\"br0\">(</span>vs:<span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span>Socket close<span class=\"br0\">}</span></pre>"}, {"lang": "Pascal", "loc": 9, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> Socket<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$host</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/gethostbyname.html\"><span class=\"kw3\">gethostbyname</span></a><span class=\"br0\">(</span><span class=\"st_h\">'localhost'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$in</span> <span class=\"sy0\">=</span> sockaddr_in<span class=\"br0\">(</span><span class=\"nu0\">256</span><span class=\"sy0\">,</span> <span class=\"re0\">$host</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$proto</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/getprotobyname.html\"><span class=\"kw3\">getprotobyname</span></a><span class=\"br0\">(</span><span class=\"st_h\">'tcp'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/socket.html\"><span class=\"kw3\">socket</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"sy0\">,</span> AF_INET<span class=\"sy0\">,</span> SOCK_STREAM<span class=\"sy0\">,</span> <span class=\"re0\">$proto</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/connect.html\"><span class=\"kw3\">connect</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"sy0\">,</span> <span class=\"re0\">$in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/send.html\"><span class=\"kw3\">send</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"sy0\">,</span> <span class=\"st_h\">'hello socket world'</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/close.html\"><span class=\"kw3\">close</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 9, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> Socket<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$host</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/gethostbyname.html\"><span class=\"kw3\">gethostbyname</span></a><span class=\"br0\">(</span><span class=\"st_h\">'localhost'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$in</span> <span class=\"sy0\">=</span> sockaddr_in<span class=\"br0\">(</span><span class=\"nu0\">256</span><span class=\"sy0\">,</span> <span class=\"re0\">$host</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$proto</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/getprotobyname.html\"><span class=\"kw3\">getprotobyname</span></a><span class=\"br0\">(</span><span class=\"st_h\">'tcp'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/socket.html\"><span class=\"kw3\">socket</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"sy0\">,</span> AF_INET<span class=\"sy0\">,</span> SOCK_STREAM<span class=\"sy0\">,</span> <span class=\"re0\">$proto</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/connect.html\"><span class=\"kw3\">connect</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"sy0\">,</span> <span class=\"re0\">$in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/send.html\"><span class=\"kw3\">send</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"sy0\">,</span> <span class=\"st_h\">'hello socket world'</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/close.html\"><span class=\"kw3\">close</span></a><span class=\"br0\">(</span>Socket_Handle<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 6, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$host</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'127.0.0.1'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$port</span> <span class=\"sy0\">=</span> <span class=\"nu0\">256</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$client</span> <span class=\"sy0\">=</span> IO<span class=\"sy0\">::</span><span class=\"me2\">Socket</span><span class=\"sy0\">::</span><span class=\"me2\">INET</span><span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"re0\">$host</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$port</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$client</span><span class=\"sy0\">.</span><span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st_h\">'hello socket world'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$client</span><span class=\"sy0\">.</span><span class=\"me1\">close</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PHP", "loc": 3, "block": "<pre class=\"php highlighted_source\"><span class=\"re0\">$socket</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/fsockopen\"><span class=\"kw3\">fsockopen</span></a><span class=\"br0\">(</span><span class=\"st_h\">'localhost'</span><span class=\"sy0\">,</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/fputs\"><span class=\"kw3\">fputs</span></a><span class=\"br0\">(</span><span class=\"re0\">$socket</span><span class=\"sy0\">,</span> <span class=\"st_h\">'hello socket world'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/fclose\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span><span class=\"re0\">$socket</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PicoLisp", "loc": 3, "block": "<pre class=\"text highlighted_source\">(when (connect \"localhost\" 256)<br/>   (out @ (prinl \"hello socket world\"))<br/>   (close @) )</pre>"}, {"lang": "Pike", "loc": 8, "block": "<pre class=\"pike highlighted_source\"><span class=\"kw1\">import</span> Stdio<span class=\"sy0\">;</span><br/>\u00a0<br/>int main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>   object con <span class=\"sy0\">=</span> File<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   con<span class=\"sy0\">-</span>&gt;connect<span class=\"br0\">(</span><span class=\"st0\">\"127.0.0.1\"</span>,<span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   con<span class=\"sy0\">-</span>&gt;write<span class=\"br0\">(</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   con<span class=\"sy0\">-</span>&gt;close<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Prolog", "loc": 6, "block": "<pre class=\"prolog highlighted_source\">start<span class=\"br0\">(</span>Port<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> socket<span class=\"br0\">(</span><span class=\"st_h\">'AF_INET'</span><span class=\"sy4\">,</span>Socket<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>               socket_connect<span class=\"br0\">(</span>Socket<span class=\"sy4\">,</span> <span class=\"st_h\">'AF_INET'</span><span class=\"br0\">(</span>localhost<span class=\"sy4\">,</span>Port<span class=\"br0\">)</span><span class=\"sy4\">,</span> Input<span class=\"sy4\">,</span> Output<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>               <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span>Output<span class=\"sy4\">,</span> <span class=\"st_h\">'hello socket world'</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>               <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">flush_output</span></a><span class=\"br0\">(</span>Output<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>               <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">close</span></a><span class=\"br0\">(</span>Output<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>               <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">close</span></a><span class=\"br0\">(</span>Input<span class=\"br0\">)</span><span class=\"sy4\">.</span></pre>"}, {"lang": "PureBasic", "loc": 4, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw2\">InitNetwork</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw2\">ConnectionID</span> <span class=\"sy0\">=</span> <span class=\"kw2\">OpenNetworkConnection</span><span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/><span class=\"kw2\">SendNetworkString</span><span class=\"br0\">(</span><span class=\"kw2\">ConnectionID</span>, <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">CloseNetworkConnection</span><span class=\"br0\">(</span><span class=\"kw2\">ConnectionID</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 5, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">socket</span><br/>sock <span class=\"sy0\">=</span> <span class=\"kw3\">socket</span>.<span class=\"kw3\">socket</span><span class=\"br0\">(</span><span class=\"kw3\">socket</span>.<span class=\"me1\">AF_INET</span><span class=\"sy0\">,</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">SOCK_STREAM</span><span class=\"br0\">)</span><br/>sock.<span class=\"me1\">connect</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>sock.<span class=\"me1\">sendall</span><span class=\"br0\">(</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span> <br/>sock.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 4, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(let-values ([(in out) (tcp-connect \"localhost\" 256)])<br/>  (display \"hello socket world\\n\" out)<br/>  (close-output-port out))</pre>"}, {"lang": "Rhope", "loc": 4, "block": "<pre class=\"text highlighted_source\">Socket Send(0,0)<br/>|:<br/>    [<a class=\"__cf_email__\" data-cfemail=\"3b755e4c7b755e4f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> Client[\"localhost\",256]]Put String[\"hello socket world\"]<br/>:|</pre>"}, {"lang": "Ring", "loc": 42, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Load \"guilib.ring\"<br/>\u00a0<br/>new qApp {<br/>        oClient = new Client { client() }<br/>        exec()<br/>}<br/>\u00a0<br/>Class Client<br/>\u00a0<br/>        win1 oTcpSocket<br/>\u00a0<br/>        func client<br/>\u00a0<br/>                win1 = new qwidget()<br/>\u00a0<br/>                new qpushbutton(win1) {<br/>                        setgeometry(50,50,100,30)<br/>                        settext(\"connect\")<br/>                        setclickevent(\"oClient.Connect()\")<br/>                }<br/>\u00a0<br/>                win1 {<br/>                        setwindowtitle(\"client\")<br/>                        setgeometry(10,100,400,400)<br/>                        show()<br/>                }<br/>\u00a0<br/>        func connect<br/>                oTcpSocket = new qTcpSocket(win1) {<br/>                        setconnectedevent(\"oClient.pConnected()\")<br/>                        connecttohost(\"127.0.0.1\",256,3,0)<br/>                        waitforconnected(5000)<br/>                }<br/>\u00a0<br/>        func pConnected<br/>                cStr = \"hello socket world\"<br/>                write(cStr,len(cStr))<br/>                flush()<br/>                waitforbyteswritten(300000)<br/>                close()<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 4, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'socket'</span><br/>sock = TCPSocket.<span class=\"kw3\">open</span><span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>sock.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/>sock.<span class=\"me1\">close</span></pre>"}, {"lang": "Rust", "loc": 11, "block": "<pre class=\"text highlighted_source\">use std::io::prelude::*;<br/>use std::net::TcpStream;<br/>\u00a0<br/>fn main() {<br/>    // Open a tcp socket connecting to 127.0.0.1:256, no error handling (unwrap)<br/>    let mut my_stream = TcpStream::connect(\"127.0.0.1:256\").unwrap();<br/>\u00a0<br/>    // Write 'hello socket world' to the stream, ignoring the result of write<br/>    let _ = my_stream.write(b\"hello socket world\");<br/>\u00a0<br/>} // &lt;- my_stream's drop function gets called, which closes the socket</pre>"}, {"lang": "Scala", "loc": 13, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"me1\">Socket</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> sendSocketData <span class=\"br0\">{</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> sendData<span class=\"br0\">(</span>host<span class=\"sy0\">:</span> String, msg<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sock <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Socket<span class=\"br0\">(</span>host, <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>    sock.<span class=\"me1\">getOutputStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span>msg.<span class=\"me1\">getBytes</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    sock.<span class=\"me1\">getOutputStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    sock.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  sendData<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 3, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">s</span> <span class=\"br0\">(</span>socket PF_INET SOCK_STREAM <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>connect <span class=\"kw1\">s</span> AF_INET <span class=\"br0\">(</span>inet<span class=\"sy0\">-</span>pton AF_INET <span class=\"st0\">\"127.0.0.1\"</span><span class=\"br0\">)</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"hello socket world\"</span> <span class=\"kw1\">s</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 11, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"socket.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var file: sock is STD_NULL;<br/>  begin<br/>    sock\u00a0:= openInetSocket(256);<br/>    writeln(sock, \"hello socket world\");<br/>    close(sock);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 8, "block": "<pre class=\"ruby highlighted_source\">var host = Socket.<span class=\"me1\">gethostbyname</span><span class=\"br0\">(</span><span class=\"st0\">'localhost'</span><span class=\"br0\">)</span>;<br/>var <span class=\"kw1\">in</span> = Socket.<span class=\"me1\">sockaddr_in</span><span class=\"br0\">(</span><span class=\"nu0\">256</span>, host<span class=\"br0\">)</span>;<br/>var proto = Socket.<span class=\"me1\">getprotobyname</span><span class=\"br0\">(</span><span class=\"st0\">'tcp'</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>var sock = Socket.<span class=\"kw3\">open</span><span class=\"br0\">(</span>Socket.<span class=\"me1\">AF_INET</span>, Socket.<span class=\"me1\">SOCK_STREAM</span>, proto<span class=\"br0\">)</span>;<br/>sock.<span class=\"me1\">connect</span><span class=\"br0\">(</span><span class=\"kw1\">in</span><span class=\"br0\">)</span>;<br/>sock.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">'hello socket world'</span>, <span class=\"nu0\">0</span>, <span class=\"kw1\">in</span><span class=\"br0\">)</span>;<br/>sock.<span class=\"me1\">close</span>;</pre>"}, {"lang": "Slate", "loc": 10, "block": "<pre class=\"text highlighted_source\">[ | socket |<br/>  [ | addr stream |<br/>    addr: (Net SocketAddress newOn: '127.0.0.1:256').<br/>    socket: (Net Socket newFor: addr domain type: Net Socket Types Stream protocol: Net Socket Protocols Default).<br/>    socket connectTo: addr.<br/>    stream: (Net SocketStream newOn: socket).<br/>    stream nextPutAll: ('hello socket world' as: ByteArray).<br/>    stream flush<br/>  ] ensure: [socket close]<br/>] do.</pre>"}, {"lang": "Smalltalk", "loc": 48, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">PackageLoader</span> fileInPackage: <span class=\"st0\">'TCP'</span>!<br/>\u00a0<br/><span class=\"re0\">Object</span> subclass: <span class=\"re1\">#HelloSocket</span><br/>  instanceVariableNames: <span class=\"st0\">'ss'</span><br/>  classVariableNames: <span class=\"st0\">''</span><br/>  poolDictionaries: <span class=\"st0\">''</span><br/>  category: <span class=\"st0\">'SimpleEcho'</span>!<br/>\u00a0<br/>!<span class=\"re0\">HelloSocket</span> class methodsFor: <span class=\"st0\">'instance creation'</span>!<br/>\u00a0<br/>port: <span class=\"re5\">anInteger</span><br/>  |<span class=\"re3\"> ses </span>|<br/>  <span class=\"re6\">ses</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">super</span> new.<br/>  <span class=\"re5\">ses</span> init: <span class=\"re5\">anInteger</span>.<br/>  ^ses<br/>!!<br/>\u00a0<br/>!<span class=\"re0\">HelloSocket</span> methodsFor: <span class=\"st0\">'instance initialization'</span>!<br/>\u00a0<br/>init: <span class=\"re5\">anInteger</span><br/>  <span class=\"re6\">ss</span> <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"re0\">TCP</span>.<span class=\"re0\">ServerSocket</span> port: <span class=\"re5\">anInteger</span><span class=\"br0\">)</span>.<br/>  ^self<br/>!!<br/>\u00a0<br/>!<span class=\"re0\">HelloSocket</span> methodsFor: <span class=\"st0\">'running'</span>!<br/>\u00a0<br/>run<br/>  |<span class=\"re3\"> s </span>|<br/>  <span class=\"br0\">[</span><br/>    <span class=\"re5\">ss</span> waitForConnection.<br/>    <span class=\"re5\">s</span> <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"re5\">ss</span> accept<span class=\"br0\">)</span>.<br/>    <span class=\"br0\">[</span><span class=\"kw1\">self</span> handleSocket: <span class=\"re5\">s</span><span class=\"br0\">]</span> fork<br/>  <span class=\"br0\">]</span> repeat<br/>!!<br/>\u00a0<br/>!<span class=\"re0\">HelloSocket</span> methodsFor: <span class=\"st0\">'handling'</span>!<br/>\u00a0<br/>handleSocket: <span class=\"re5\">s</span><br/>    |<span class=\"re3\"> msg </span>|<br/>    <span class=\"re6\">msg</span> <span class=\"sy0\">:=</span> <span class=\"st0\">'hello socket world'</span>.<br/>    <span class=\"re5\">msg</span> displayOn: <span class=\"re5\">s</span>.<br/>    <span class=\"br0\">(</span><span class=\"re0\">String</span> with: <span class=\"br0\">(</span><span class=\"re0\">Character</span> value: <span class=\"re5\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span> displayOn: <span class=\"re5\">s</span>.<br/>    <span class=\"re5\">s</span> flush<br/>!!<br/>\u00a0<br/><span class=\"re0\">Smalltalk</span> at: <span class=\"re1\">#helloServer</span> put: <span class=\"br0\">(</span><span class=\"re0\">HelloSocket</span> port: <span class=\"re5\">2560</span><span class=\"br0\">)</span>.<br/>\u00a0<br/><span class=\"re5\">helloServer</span> run.</pre>"}, {"lang": "Symsyn", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/> '127.0.0.1' $addr          <br/> connect $addr 256 sok      <br/> 'hello socket world' [sok] <br/> close sok       <br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 3, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">set</span> io <span class=\"br0\">[</span><span class=\"kw2\">socket</span> localhost <span class=\"nu0\">256</span><span class=\"br0\">]</span><br/><span class=\"kw2\">puts</span> -nonewline <span class=\"re0\">$io</span> <span class=\"st0\">\"hello socket world\"</span><br/><span class=\"kw2\">close</span> <span class=\"re0\">$io</span></pre>"}, {"lang": "Toka", "loc": 14, "block": "<pre class=\"text highlighted_source\">needs sockets<br/>\u00a0<br/>#! A simple abstraction layer that makes writing trivial servers easy<br/>value| server.socket server.connection server.action |<br/>[ ( n- )   pBind to server.socket ] is server.setSocket<br/>[ ( - )    server.socket pAccept to server.connection ] is server.acceptConnection<br/>[ ( - )    server.connection pClose drop ] is server.closeConnection<br/>[ ( $- )   &gt;r server.connection r&gt; string.getLength pWrite drop ] is server.send<br/>[ ( an- )  server.connection -rot pRead drop ] is server.recieve<br/>[ ( qn- )  swap to server.action server.setSocket<br/>  [ server.acceptConnection server.action invoke server.closeConnection TRUE ] whileTrue ] is server.start<br/>\u00a0<br/>#! The actual server<br/>[ \" hello socket world\" server.send ] 256 server.start</pre>"}, {"lang": "TXR", "loc": 4, "block": "<pre class=\"text highlighted_source\">(let* ((server (first (getaddrinfo \"localhost\" 256)))<br/>       (sock (open-socket server.family sock-stream)))<br/>  (sock-connect sock server)<br/>  (put-string \"hello socket world\"))</pre>"}, {"lang": "UNIX Shell", "loc": 1, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw3\">echo</span> <span class=\"st0\">\"hello socket world\"</span> <span class=\"sy0\">|</span> nc localhost <span class=\"nu0\">256</span></pre>"}, {"lang": "Ursa", "loc": 4, "block": "<pre class=\"text highlighted_source\">decl port p<br/>p.connect \"localhost\" 256<br/>out \"hello socket world\" endl p<br/>p.close</pre>"}, {"lang": "Visual Basic .NET", "loc": 15, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"kw1\">Imports</span> System<br/><span class=\"kw1\">Imports</span> System<span class=\"sy0\">.</span><span class=\"me1\">IO</span><br/><span class=\"kw1\">Imports</span> System<span class=\"sy0\">.</span><span class=\"me1\">Net</span><span class=\"sy0\">.</span><span class=\"me1\">Sockets</span><br/>\u00a0<br/><span class=\"kw1\">Public</span> <span class=\"kw1\">Class</span> Program <br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Shared</span> <span class=\"kw1\">Sub</span> Main<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> args <span class=\"kw1\">As</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> tcp <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> TcpClient<span class=\"br0\">(</span><span class=\"st0\">\"localhost\"</span>, <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> writer <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> StreamWriter<span class=\"br0\">(</span>tcp<span class=\"sy0\">.</span><span class=\"me1\">GetStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        writer<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"hello socket world\"</span><span class=\"br0\">)</span><br/>        writer<span class=\"sy0\">.</span><span class=\"me1\">Flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>        tcp<span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=CLOSE+site:msdn.microsoft.com\"><span class=\"kw7\">Close</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Class</span></pre>"}, {"lang": "X86 Assembly", "loc": 165, "block": "<pre class=\"asm highlighted_source\">\u00a0<br/><span class=\"co1\">;using sockets on linux with the 0x80 inturrprets.</span><br/><span class=\"co1\">;</span><br/><span class=\"co1\">;assemble</span><br/><span class=\"co1\">;  nasm -o socket.o -f elf32 -g socket.asm</span><br/><span class=\"co1\">;link</span><br/><span class=\"co1\">;  ld -o socket socket.o</span><br/><span class=\"co1\">;</span><br/><span class=\"co1\">;</span><br/><span class=\"co1\">;Just some assigns for better readability</span><br/>\u00a0<br/><span class=\"kw5\">%assign</span> SOCK_STREAM         <span class=\"nu0\">1</span><br/><span class=\"kw5\">%assign</span> AF_INET             <span class=\"nu0\">2</span><br/><span class=\"kw5\">%assign</span> SYS_socketcall      <span class=\"nu0\">102</span><br/><span class=\"kw5\">%assign</span> SYS_SOCKET          <span class=\"nu0\">1</span><br/><span class=\"kw5\">%assign</span> SYS_CONNECT         <span class=\"nu0\">3</span><br/><span class=\"kw5\">%assign</span> SYS_SEND            <span class=\"nu0\">9</span><br/><span class=\"kw5\">%assign</span> SYS_RECV            <span class=\"nu0\">10</span><br/>\u00a0<br/><span class=\"kw5\">section</span> <span class=\"kw5\">.text</span><br/>  <span class=\"kw5\">global</span> _start<br/>\u00a0<br/><span class=\"co1\">;--------------------------------------------------</span><br/><span class=\"co1\">;Functions to make things easier.\u00a0:]</span><br/><span class=\"co1\">;--------------------------------------------------</span><br/>_socket<span class=\"sy1\">:</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>cArray<span class=\"sy1\">+</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw6\">dword</span> AF_INET<br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>cArray<span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw6\">dword</span> SOCK_STREAM<br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>cArray<span class=\"sy1\">+</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw6\">dword</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> SYS_socketcall<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> SYS_SOCKET<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> cArray<br/>  <span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span><br/>  <span class=\"kw1\">ret</span><br/>\u00a0<br/>_connect<span class=\"sy1\">:</span><br/>  <span class=\"kw1\">call</span> _socket<br/>  <span class=\"kw1\">mov</span> <span class=\"kw6\">dword</span> <span class=\"br0\">[</span>sock<span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">dx</span><span class=\"sy1\">,</span> <span class=\"kw4\">si</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw6\">byte</span> <span class=\"br0\">[</span><span class=\"kw4\">edi</span><span class=\"sy1\">+</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">dl</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw6\">byte</span> <span class=\"br0\">[</span><span class=\"kw4\">edi</span><span class=\"sy1\">+</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">dh</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>cArray<span class=\"sy1\">+</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span>     <span class=\"co1\">;sock;</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>cArray<span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">edi</span>     <span class=\"co1\">;&amp;sockaddr_in;</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">edx</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>cArray<span class=\"sy1\">+</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">edx</span>   <span class=\"co1\">;sizeof(sockaddr_in);</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> SYS_socketcall<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> SYS_CONNECT<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> cArray<br/>  <span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span><br/>  <span class=\"kw1\">ret</span><br/>\u00a0<br/>_send<span class=\"sy1\">:</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">edx</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>sock<span class=\"br0\">]</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>sArray<span class=\"sy1\">+</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"kw4\">edx</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>sArray<span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>sArray<span class=\"sy1\">+</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"kw4\">ecx</span><br/>  <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>sArray<span class=\"sy1\">+</span><span class=\"nu0\">12</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw6\">dword</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> SYS_socketcall<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> SYS_SEND<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> sArray<br/>  <span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span><br/>  <span class=\"kw1\">ret</span><br/>\u00a0<br/>_exit<span class=\"sy1\">:</span><br/>  <span class=\"kw1\">push</span> <span class=\"nu0\">0x1</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">push</span> <span class=\"kw4\">eax</span><br/>  <span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span><br/>\u00a0<br/>_print<span class=\"sy1\">:</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span>  <br/>  <span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span>   <br/>  <span class=\"kw1\">ret</span>         <br/><span class=\"co1\">;--------------------------------------------------</span><br/><span class=\"co1\">;Main code body</span><br/><span class=\"co1\">;--------------------------------------------------</span><br/>\u00a0<br/>_start<span class=\"sy1\">:</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">esi</span><span class=\"sy1\">,</span> szIp    <br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">edi</span><span class=\"sy1\">,</span> sockaddr_in<br/>  <span class=\"kw1\">xor</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span><br/>  <span class=\"kw1\">xor</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span><span class=\"kw4\">ecx</span><br/>  <span class=\"kw1\">xor</span> <span class=\"kw4\">edx</span><span class=\"sy1\">,</span><span class=\"kw4\">edx</span><br/>  <span class=\"sy1\">.</span>cc<span class=\"sy1\">:</span><br/>    <span class=\"kw1\">xor</span>   <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span><span class=\"kw4\">ebx</span><br/>  <span class=\"sy1\">.</span>c<span class=\"sy1\">:</span><br/>    <span class=\"kw1\">lodsb</span><br/>    <span class=\"kw1\">inc</span>   <span class=\"kw4\">edx</span><br/>    <span class=\"kw1\">sub</span>   <span class=\"kw4\">al</span><span class=\"sy1\">,</span><span class=\"st0\">'0'</span><br/>    <span class=\"kw1\">jb</span>   <span class=\"sy1\">.</span>next<br/>    <span class=\"kw1\">imul</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span><span class=\"kw6\">byte</span> <span class=\"nu0\">10</span><br/>    <span class=\"kw1\">add</span>   <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span><br/>    <span class=\"kw1\">jmp</span>   short <span class=\"sy1\">.</span>c<br/>  <span class=\"sy1\">.</span>next<span class=\"sy1\">:</span><br/>    <span class=\"kw1\">mov</span>   <span class=\"br0\">[</span><span class=\"kw4\">edi</span><span class=\"sy1\">+</span><span class=\"kw4\">ecx</span><span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"kw4\">bl</span><br/>    <span class=\"kw1\">inc</span>   <span class=\"kw4\">ecx</span><br/>    <span class=\"kw1\">cmp</span>   <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span><span class=\"kw6\">byte</span> <span class=\"nu0\">4</span><br/>    <span class=\"kw1\">jne</span>   <span class=\"sy1\">.</span>cc<br/>\u00a0<br/>  <span class=\"kw1\">mov</span> <span class=\"kw6\">word</span> <span class=\"br0\">[</span><span class=\"kw4\">edi</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> AF_INET <br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">esi</span><span class=\"sy1\">,</span> szPort <br/>  <span class=\"kw1\">xor</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span><br/>  <span class=\"kw1\">xor</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span><span class=\"kw4\">ebx</span><br/>  <span class=\"sy1\">.</span>nextstr1<span class=\"sy1\">:</span>   <br/>    <span class=\"kw1\">lodsb</span>      <br/>    <span class=\"kw1\">test</span> <span class=\"kw4\">al</span><span class=\"sy1\">,</span><span class=\"kw4\">al</span><br/>    <span class=\"kw1\">jz</span> <span class=\"sy1\">.</span>ret1<br/>    <span class=\"kw1\">sub</span>   <span class=\"kw4\">al</span><span class=\"sy1\">,</span><span class=\"st0\">'0'</span><br/>    <span class=\"kw1\">imul</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span><span class=\"nu0\">10</span><br/>    <span class=\"kw1\">add</span>   <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span>   <br/>    <span class=\"kw1\">jmp</span>   <span class=\"sy1\">.</span>nextstr1<br/>  <span class=\"sy1\">.</span>ret1<span class=\"sy1\">:</span><br/>    <span class=\"kw1\">xchg</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span>   <br/>    <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>sport<span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span><br/>\u00a0<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">si</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>sport<span class=\"br0\">]</span>  <br/>  <span class=\"kw1\">call</span> _connect<br/>  <span class=\"kw1\">cmp</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">jnz</span> short _fail<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> msg<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> msglen<br/>  <span class=\"kw1\">call</span> _send<br/>  <span class=\"kw1\">call</span> _exit<br/>\u00a0<br/>_fail<span class=\"sy1\">:</span><br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">edx</span><span class=\"sy1\">,</span> cerrlen<br/>  <span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> cerrmsg<br/>  <span class=\"kw1\">call</span> _print<br/>  <span class=\"kw1\">call</span> _exit<br/>\u00a0<br/>\u00a0<br/>_recverr<span class=\"sy1\">:</span> <br/>  <span class=\"kw1\">call</span> _exit<br/>_dced<span class=\"sy1\">:</span> <br/>  <span class=\"kw1\">call</span> _exit<br/>\u00a0<br/><span class=\"kw5\">section</span> <span class=\"kw5\">.data</span><br/>cerrmsg      <span class=\"kw5\">db</span> <span class=\"st0\">'failed to connect\u00a0:('</span><span class=\"sy1\">,</span><span class=\"nu0\">0xa</span><br/>cerrlen      <span class=\"kw5\">equ</span> <span class=\"sy2\">$</span><span class=\"sy1\">-</span>cerrmsg<br/>msg          <span class=\"kw5\">db</span> <span class=\"st0\">'Hello socket world!'</span><span class=\"sy1\">,</span><span class=\"nu0\">0xa</span><br/>msglen       <span class=\"kw5\">equ</span> <span class=\"sy2\">$</span><span class=\"sy1\">-</span>msg<br/>\u00a0<br/>szIp         <span class=\"kw5\">db</span> <span class=\"st0\">'127.0.0.1'</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><br/>szPort       <span class=\"kw5\">db</span> <span class=\"st0\">'256'</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw5\">section</span> <span class=\"kw5\">.bss</span><br/>sock         <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/><span class=\"co1\">;general 'array' for syscall_socketcall argument arg.</span><br/>cArray       <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/>             <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/>\t     <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/>             <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"co1\">;send 'array'.</span><br/>sArray      <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw5\">resd</span> <span class=\"nu0\">1</span><br/><span class=\"co1\">;duh?</span><br/>sockaddr_in <span class=\"kw5\">resb</span> <span class=\"nu0\">16</span><br/><span class=\"co1\">;..</span><br/>sport       <span class=\"kw5\">resb</span> <span class=\"nu0\">2</span><br/>buff        <span class=\"kw5\">resb</span> <span class=\"nu0\">1024</span><br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 3, "block": "<pre class=\"text highlighted_source\">var s=Network.TCPClientSocket.connectTo(\"localhost\",256);<br/>s.write(\"hello socket world\");  //--&gt;18<br/>s.close();</pre>"}, {"lang": "Zsh", "loc": 3, "block": "<pre class=\"text highlighted_source\">zmodload zsh/net/tcp<br/>ztcp localhost 256<br/>print hello socket world &gt;&amp;$REPLY</pre>"}]}