{"task": "Thiele%27s_interpolation_formula", "blocks": [{"lang": "Ada", "loc": 17, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Generic_Real_Arrays</span>;<br/>\u00a0<br/><span class=\"kw3\">generic</span><br/>   <span class=\"kw3\">type</span> Real <span class=\"kw1\">is</span> <span class=\"kw3\">digits</span> &lt;&gt;;<br/><span class=\"kw3\">package</span> Thiele <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">package</span> Real_Arrays <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Generic_Real_Arrays</span> <span class=\"br0\">(</span>Real<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">subtype</span> Real_Array <span class=\"kw1\">is</span> Real_Arrays.<span class=\"me1\">Real_Vector</span>;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Thiele_Interpolation <span class=\"br0\">(</span>Length\u00a0: Natural<span class=\"br0\">)</span> <span class=\"kw1\">is</span> <span class=\"kw3\">private</span>;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Create <span class=\"br0\">(</span>X, Y\u00a0: Real_Array<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Thiele_Interpolation;<br/>   <span class=\"kw3\">function</span> Inverse <span class=\"br0\">(</span>T\u00a0: Thiele_Interpolation; X\u00a0: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Real;<br/><span class=\"kw3\">private</span><br/>   <span class=\"kw3\">type</span> Thiele_Interpolation <span class=\"br0\">(</span>Length\u00a0: Natural<span class=\"br0\">)</span> <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      X, Y, RhoX\u00a0: Real_Array <span class=\"br0\">(</span><span class=\"nu0\">1</span> .. <span class=\"me1\">Length</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/><span class=\"kw1\">end</span> Thiele;</pre>"}, {"lang": "ALGOL 68", "loc": 53, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw4\">PROC</span> raise exception <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">STRING</span> msg<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span> <span class=\"kw22\">putf</span><span class=\"br0\">(</span>stand error<span class=\"sy1\">,</span><span class=\"br0\">(</span><span class=\"st0\">\"Exception:\"</span><span class=\"sy1\">,</span> $<span class=\"st0\">\" \"</span>g$<span class=\"sy1\">,</span> msg<span class=\"sy1\">,</span> $l$<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> stop <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># The MODE of lx and ly here should really be a UNION of \"something REAL\",<br/>\"something COMPLex\", and \"something SYMBOLIC\" ... #</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> thiele<span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> lx<span class=\"sy1\">,</span>ly<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span> x<span class=\"br0\">)</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/><span class=\"kw2\">BEGIN</span><br/>  <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> xx<span class=\"sy1\">=</span>lx<span class=\"br0\">[</span><span class=\"sy1\">@</span>1<span class=\"br0\">]</span><span class=\"sy1\">,</span>yy<span class=\"sy1\">=</span>ly<span class=\"br0\">[</span><span class=\"sy1\">@</span>1<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">INT</span> n<span class=\"sy1\">=</span><span class=\"kw8\">UPB</span> xx<span class=\"sy1\">;</span><br/>  <span class=\"kw2\">IF</span> <span class=\"kw8\">UPB</span> yy<span class=\"sy1\">=</span>n <span class=\"kw2\">THEN</span><br/><span class=\"coMULTI\"># Assuming that the values of xx are distinct ... #</span><br/>    <span class=\"br0\">[</span>0<span class=\"sy1\">:</span>n<span class=\"sy1\">-</span>1<span class=\"sy1\">,</span>1<span class=\"sy1\">:</span>n<span class=\"br0\">]</span><span class=\"kw3\">REAL</span> p<span class=\"sy1\">;</span><br/>    p<span class=\"br0\">[</span>0<span class=\"sy1\">,</span><span class=\"br0\">]</span><span class=\"sy1\">:=</span>yy<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> n<span class=\"sy1\">-</span>1 <span class=\"kw2\">DO</span> p<span class=\"br0\">[</span>1<span class=\"sy1\">,</span>i<span class=\"br0\">]</span><span class=\"sy1\">:=</span><span class=\"br0\">(</span>xx<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">-</span>xx<span class=\"br0\">[</span>1<span class=\"sy1\">+</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">/</span><span class=\"br0\">(</span>p<span class=\"br0\">[</span>0<span class=\"sy1\">,</span>i<span class=\"br0\">]</span><span class=\"sy1\">-</span>p<span class=\"br0\">[</span>0<span class=\"sy1\">,</span>1<span class=\"sy1\">+</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> 2 <span class=\"kw2\">TO</span> n<span class=\"sy1\">-</span>1 <span class=\"kw2\">DO</span><br/>      <span class=\"kw2\">FOR</span> j <span class=\"kw2\">TO</span> n<span class=\"sy1\">-</span>i <span class=\"kw2\">DO</span><br/>        p<span class=\"br0\">[</span>i<span class=\"sy1\">,</span>j<span class=\"br0\">]</span><span class=\"sy1\">:=</span><span class=\"br0\">(</span>xx<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy1\">-</span>xx<span class=\"br0\">[</span>j<span class=\"sy1\">+</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">/</span><span class=\"br0\">(</span>p<span class=\"br0\">[</span>i<span class=\"sy1\">-</span>1<span class=\"sy1\">,</span>j<span class=\"br0\">]</span><span class=\"sy1\">-</span>p<span class=\"br0\">[</span>i<span class=\"sy1\">-</span>1<span class=\"sy1\">,</span>j<span class=\"sy1\">+</span>1<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">+</span>p<span class=\"br0\">[</span>i<span class=\"sy1\">-</span>2<span class=\"sy1\">,</span>j<span class=\"sy1\">+</span>1<span class=\"br0\">]</span><br/>      <span class=\"kw2\">OD</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw3\">REAL</span> a<span class=\"sy1\">:=</span>0<span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> n<span class=\"sy1\">-</span>1 <span class=\"kw2\">BY</span> <span class=\"sy1\">-</span>1 <span class=\"kw2\">TO</span> 2 <span class=\"kw2\">DO</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span>x<span class=\"sy1\">-</span>xx<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">/</span><span class=\"br0\">(</span>p<span class=\"br0\">[</span>i<span class=\"sy1\">,</span>1<span class=\"br0\">]</span><span class=\"sy1\">-</span>p<span class=\"br0\">[</span>i<span class=\"sy1\">-</span>2<span class=\"sy1\">,</span>1<span class=\"br0\">]</span><span class=\"sy1\">+</span>a<span class=\"br0\">)</span> <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    yy<span class=\"br0\">[</span>1<span class=\"br0\">]</span><span class=\"sy1\">+</span><span class=\"br0\">(</span>x<span class=\"sy1\">-</span>xx<span class=\"br0\">[</span>1<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">/</span><span class=\"br0\">(</span>p<span class=\"br0\">[</span>1<span class=\"sy1\">,</span>1<span class=\"br0\">]</span><span class=\"sy1\">+</span>a<span class=\"br0\">)</span><br/>  <span class=\"kw2\">ELSE</span><br/>    raise exception<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"Unequal length arrays supplied: \"</span><span class=\"sy1\">,</span><span class=\"kw22\">whole</span><span class=\"br0\">(</span><span class=\"kw8\">UPB</span> xx<span class=\"sy1\">,</span>0<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\" NE \"</span><span class=\"sy1\">,</span><span class=\"kw22\">whole</span><span class=\"br0\">(</span><span class=\"kw8\">UPB</span> yy<span class=\"sy1\">,</span>0<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"kw7\">SKIP</span><br/>  <span class=\"kw2\">FI</span><br/><span class=\"kw2\">END</span><span class=\"sy1\">;</span><br/>\u00a0<br/>test<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>  <span class=\"kw6\">FORMAT</span> <span class=\"kw26\">real</span> fmt <span class=\"sy1\">=</span> $g<span class=\"br0\">(</span>0<span class=\"sy1\">,</span><span class=\"kw26\">real</span> width<span class=\"sy1\">-</span>2<span class=\"br0\">)</span>$<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw3\">REAL</span> lwb x<span class=\"sy1\">=</span>0<span class=\"sy1\">,</span> upb x<span class=\"sy1\">=</span><span class=\"re1\">1.55</span><span class=\"sy1\">,</span> delta x <span class=\"sy1\">=</span> <span class=\"re1\">0.05</span><span class=\"sy1\">;</span> <br/>\u00a0<br/>  <span class=\"br0\">[</span>0<span class=\"sy1\">:</span><span class=\"kw8\">ENTIER</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>upb x<span class=\"sy1\">-</span>lwb x<span class=\"br0\">)</span><span class=\"sy1\">/</span>delta x<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"kw6\">STRUCT</span><span class=\"br0\">(</span><span class=\"kw3\">REAL</span> x<span class=\"sy1\">,</span> <span class=\"kw24\">sin</span> x<span class=\"sy1\">,</span> <span class=\"kw24\">cos</span> x<span class=\"sy1\">,</span> <span class=\"kw24\">tan</span> x<span class=\"br0\">)</span> trig table<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">PROC</span> init trig table <span class=\"sy1\">=</span> <span class=\"kw3\">VOID</span><span class=\"sy1\">:</span> <br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> <span class=\"kw8\">LWB</span> trig table <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> trig table <span class=\"kw2\">DO</span> <br/>      <span class=\"kw3\">REAL</span> x <span class=\"sy1\">=</span> lwb x<span class=\"sy1\">+</span>i<span class=\"sy1\">*</span>delta x<span class=\"sy1\">;</span> <br/>      trig table<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">:=</span><span class=\"br0\">(</span>x<span class=\"sy1\">,</span> <span class=\"kw24\">sin</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw24\">cos</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw24\">tan</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  init trig table<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># Curry the thiele function to create matching inverse trigonometric functions #</span><br/>  <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw3\">REAL</span><span class=\"br0\">)</span><span class=\"kw3\">REAL</span> inv <span class=\"kw24\">sin</span> <span class=\"sy1\">=</span> thiele<span class=\"br0\">(</span><span class=\"kw24\">sin</span> x <span class=\"kw6\">OF</span> trig table<span class=\"sy1\">,</span> x <span class=\"kw6\">OF</span> trig table<span class=\"sy1\">,</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>                  inv <span class=\"kw24\">cos</span> <span class=\"sy1\">=</span> thiele<span class=\"br0\">(</span><span class=\"kw24\">cos</span> x <span class=\"kw6\">OF</span> trig table<span class=\"sy1\">,</span> x <span class=\"kw6\">OF</span> trig table<span class=\"sy1\">,</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>                  inv <span class=\"kw24\">tan</span> <span class=\"sy1\">=</span> thiele<span class=\"br0\">(</span><span class=\"kw24\">tan</span> x <span class=\"kw6\">OF</span> trig table<span class=\"sy1\">,</span> x <span class=\"kw6\">OF</span> trig table<span class=\"sy1\">,</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$<span class=\"st0\">\"pi estimate using \"</span>g<span class=\"st0\">\" interpolation: \"</span>f<span class=\"br0\">(</span><span class=\"kw26\">real</span> fmt<span class=\"br0\">)</span>l$<span class=\"sy1\">,</span> <br/>    <span class=\"st0\">\"sin\"</span><span class=\"sy1\">,</span> 6<span class=\"sy1\">*</span>inv <span class=\"kw24\">sin</span><span class=\"br0\">(</span>1<span class=\"sy1\">/</span>2<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"cos\"</span><span class=\"sy1\">,</span> 3<span class=\"sy1\">*</span>inv <span class=\"kw24\">cos</span><span class=\"br0\">(</span>1<span class=\"sy1\">/</span>2<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"tan\"</span><span class=\"sy1\">,</span> 4<span class=\"sy1\">*</span>inv <span class=\"kw24\">tan</span><span class=\"br0\">(</span>1<span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "C", "loc": 64, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define N 32</span><br/><span class=\"co2\">#define N2 (N * (N - 1) / 2)</span><br/><span class=\"co2\">#define STEP .05</span><br/>\u00a0<br/><span class=\"kw4\">double</span> xval<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">,</span> t_sin<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">,</span> t_cos<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">,</span> t_tan<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* rho tables, layout:<br/>\trho_{n-1}(x0)<br/>\trho_{n-2}(x0), rho_{n-1}(x1),<br/>\t....<br/>\trho_0(x0), rho_0(x1), ... rho_0(x_{n-1})<br/>   rho_i row starts at index (n - 1 - i) * (n - i) / 2  \t*/</span><br/><span class=\"kw4\">double</span> r_sin<span class=\"br0\">[</span>N2<span class=\"br0\">]</span><span class=\"sy0\">,</span> r_cos<span class=\"br0\">[</span>N2<span class=\"br0\">]</span><span class=\"sy0\">,</span> r_tan<span class=\"br0\">[</span>N2<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* both rho and thiele functions recursively resolve values as decribed by<br/>   formulas.  rho is cached, thiele is not. */</span><br/>\u00a0<br/><span class=\"coMULTI\">/* rho_n(x_i, x_{i+1}, ..., x_{i + n}) */</span><br/><span class=\"kw4\">double</span> rho<span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>n<span class=\"br0\">)</span> <span class=\"kw1\">return</span> y<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw4\">int</span> idx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> n<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>N <span class=\"sy0\">-</span> n<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> i<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"sy0\">!=</span> r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/* only happens if value not computed yet */</span><br/>\t\tr<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> n<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"sy0\">/</span> <span class=\"br0\">(</span>rho<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> rho<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"sy0\">+</span> rho<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> thiele<span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> xin<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> rho<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> n<span class=\"br0\">)</span> <span class=\"sy0\">-</span> rho<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\t\t<span class=\"sy0\">+</span> <span class=\"br0\">(</span>xin <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> thiele<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> xin<span class=\"sy0\">,</span> n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co2\">#define i_sin(x) thiele(t_sin, xval, r_sin, x, 0)</span><br/><span class=\"co2\">#define i_cos(x) thiele(t_cos, xval, r_cos, x, 0)</span><br/><span class=\"co2\">#define i_tan(x) thiele(t_tan, xval, r_tan, x, 0)</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> N<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\txval<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> STEP<span class=\"sy0\">;</span><br/>\t\tt_sin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span>xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tt_cos<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span>xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tt_tan<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> t_sin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">/</span> t_cos<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> N2<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t<span class=\"coMULTI\">/* init rho tables to NaN */</span><br/>\t\tr_sin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> r_cos<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> r_tan<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">/</span><span class=\"nu0\">0</span>.<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%16.14f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span> <span class=\"sy0\">*</span> i_sin<span class=\"br0\">(</span><span class=\"nu18\">.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%16.14f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> i_cos<span class=\"br0\">(</span><span class=\"nu18\">.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%16.14f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"sy0\">*</span> i_tan<span class=\"br0\">(</span><span class=\"nu0\">1</span>.<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Common Lisp", "loc": 44, "block": "<pre class=\"lisp highlighted_source\"><span class=\"co1\">;; 256 is heavy overkill, but hey, we memoized</span><br/><span class=\"br0\">(</span>defparameter *thiele-<span class=\"kw1\">length</span>* <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>defparameter *rho-cache* <span class=\"br0\">(</span>make-hash-table <span class=\"sy0\">:</span><span class=\"me1\">test</span> #'<span class=\"kw1\">equal</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defmacro</span> make-thele-func <span class=\"br0\">(</span>f <span class=\"kw1\">name</span> xx0 xx1<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>xv <span class=\"br0\">(</span><span class=\"kw1\">gensym</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>yv <span class=\"br0\">(</span><span class=\"kw1\">gensym</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>x0 <span class=\"br0\">(</span><span class=\"kw1\">gensym</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x1 <span class=\"br0\">(</span><span class=\"kw1\">gensym</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    `<span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">,</span>xv <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ *thiele-<span class=\"kw1\">length</span>*<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span><span class=\"sy0\">,</span>yv <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ *thiele-<span class=\"kw1\">length</span>*<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span><span class=\"sy0\">,</span>x0 <span class=\"sy0\">,</span>xx0<span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span><span class=\"sy0\">,</span>x1 <span class=\"sy0\">,</span>xx1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>loop for i to *thiele-<span class=\"kw1\">length</span>* with x <span class=\"kw1\">do</span><br/>\t     <span class=\"br0\">(</span><span class=\"kw1\">setf</span> x <span class=\"br0\">(</span>+ <span class=\"sy0\">,</span>x0 <span class=\"br0\">(</span>* <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>- <span class=\"sy0\">,</span>x1 <span class=\"sy0\">,</span>x0<span class=\"br0\">)</span> *thiele-<span class=\"kw1\">length</span>*<span class=\"br0\">)</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t   <span class=\"br0\">(</span><span class=\"kw1\">aref</span> <span class=\"sy0\">,</span>yv i<span class=\"br0\">)</span> x<br/>\t\t   <span class=\"br0\">(</span><span class=\"kw1\">aref</span> <span class=\"sy0\">,</span>xv i<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">funcall</span> <span class=\"sy0\">,</span>f x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">defun</span> <span class=\"sy0\">,</span><span class=\"kw1\">name</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">(</span>thiele x <span class=\"sy0\">,</span>yv <span class=\"sy0\">,</span>xv<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> rho <span class=\"br0\">(</span>yv xv n i<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span>hit <span class=\"br0\">(</span>key <span class=\"br0\">(</span><span class=\"kw1\">list</span> yv xv n i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">setf</span> hit <span class=\"br0\">(</span>gethash key *rho-cache*<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      hit<br/>      <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span>gethash key *rho-cache*<span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">zerop</span> n<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> yv i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">minusp</span> n<span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span>t <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>rho yv xv <span class=\"br0\">(</span>- n <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">(</span>/  <span class=\"br0\">(</span>- <span class=\"br0\">(</span><span class=\"kw1\">aref</span> xv i<span class=\"br0\">)</span> <br/>\t\t\t       <span class=\"br0\">(</span><span class=\"kw1\">aref</span> xv <span class=\"br0\">(</span>+ i n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t    <span class=\"br0\">(</span>- <span class=\"br0\">(</span>rho yv xv <span class=\"br0\">(</span><span class=\"nu0\">1</span>- n<span class=\"br0\">)</span> i<span class=\"br0\">)</span><br/>\t\t\t       <span class=\"br0\">(</span>rho yv xv <span class=\"br0\">(</span><span class=\"nu0\">1</span>- n<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> thiele <span class=\"br0\">(</span>x yv xv n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> n *thiele-<span class=\"kw1\">length</span>*<span class=\"br0\">)</span><br/>    <span class=\"nu0\">1</span><br/>    <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>- <span class=\"br0\">(</span>rho yv xv n <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>rho yv xv <span class=\"br0\">(</span>- n <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>- x <span class=\"br0\">(</span><span class=\"kw1\">aref</span> xv <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t  <span class=\"br0\">(</span>thiele x yv xv <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>make-thele-func #'<span class=\"kw1\">sin</span> inv-<span class=\"kw1\">sin</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span>/ pi <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>make-thele-func #'<span class=\"kw1\">cos</span> inv-<span class=\"kw1\">cos</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span>/ pi <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>make-thele-func #'<span class=\"kw1\">tan</span> inv-<span class=\"kw1\">tan</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span>/ pi <span class=\"nu0\">2.1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; tan(pi/2) is INF</span><br/>\u00a0<br/><span class=\"br0\">(</span>format t <span class=\"st0\">\"~f~%\"</span> <span class=\"br0\">(</span>* <span class=\"nu0\">6</span> <span class=\"br0\">(</span>inv-<span class=\"kw1\">sin</span> <span class=\"sy0\">.</span>5<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>format t <span class=\"st0\">\"~f~%\"</span> <span class=\"br0\">(</span>* <span class=\"nu0\">3</span> <span class=\"br0\">(</span>inv-<span class=\"kw1\">cos</span> <span class=\"sy0\">.</span>5<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>format t <span class=\"st0\">\"~f~%\"</span> <span class=\"br0\">(</span>* <span class=\"nu0\">4</span> <span class=\"br0\">(</span>inv-<span class=\"kw1\">tan</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 72, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> std.<span class=\"me1\">array</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Domain <span class=\"br0\">{</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">real</span> b<span class=\"sy0\">,</span> e<span class=\"sy0\">,</span> s<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">auto</span> range<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"coMULTI\">/*nothrow*/</span> @<span class=\"kw4\">safe</span> <span class=\"coMULTI\">/*@nogc*/</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> iota<span class=\"br0\">(</span>b<span class=\"sy0\">,</span> e <span class=\"sy0\">+</span> s<span class=\"sy0\">,</span> s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">real</span> eval0<span class=\"br0\">(</span><span class=\"kw2\">alias</span> RY<span class=\"sy0\">,</span> <span class=\"kw2\">alias</span> X<span class=\"sy0\">,</span> <span class=\"kw2\">alias</span> Y<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">real</span> x<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"kw4\">real</span> a <span class=\"sy0\">=</span> 0.0L<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach_reverse</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">..</span> <span class=\"me1\">X</span>.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> X<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>RY<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">-</span> RY<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> Y<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> X<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>RY<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">immutable</span> <span class=\"kw4\">struct</span> Thiele <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"br0\">]</span> Y<span class=\"sy0\">,</span> X<span class=\"sy0\">,</span> rhoY<span class=\"sy0\">,</span> rhoX<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">this</span><span class=\"br0\">(</span><span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"br0\">]</span> y<span class=\"sy0\">,</span> <span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"br0\">]</span> x<span class=\"br0\">)</span> <span class=\"kw4\">immutable</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"coMULTI\">/*@safe*/</span><br/>    <span class=\"kw2\">in</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">assert</span><span class=\"br0\">(</span>x.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\"at leat 3 values\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">assert</span><span class=\"br0\">(</span>x.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> y.<span class=\"me1\">length</span><span class=\"sy0\">,</span> <span class=\"st0\">\"input arrays not of same size\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw2\">body</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">this</span>.<span class=\"me1\">Y</span> <span class=\"sy0\">=</span> y.<span class=\"me1\">idup</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">this</span>.<span class=\"me1\">X</span> <span class=\"sy0\">=</span> x.<span class=\"me1\">idup</span><span class=\"sy0\">;</span><br/>        rhoY <span class=\"sy0\">=</span> rhoN<span class=\"br0\">(</span>Y<span class=\"sy0\">,</span> X<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        rhoX <span class=\"sy0\">=</span> rhoN<span class=\"br0\">(</span>X<span class=\"sy0\">,</span> Y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">this</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">real</span> <span class=\"kw2\">function</span><span class=\"br0\">(</span><span class=\"kw4\">real</span><span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc f<span class=\"sy0\">,</span><br/>         Domain d <span class=\"sy0\">=</span> Domain<span class=\"br0\">(</span>0.0L<span class=\"sy0\">,</span> 1.55L<span class=\"sy0\">,</span> 0.05L<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">immutable</span> <span class=\"kw4\">pure</span> <span class=\"coMULTI\">/*nothrow @safe*/</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">auto</span> xrng <span class=\"sy0\">=</span> d.<span class=\"me1\">range</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">this</span><span class=\"br0\">(</span>xrng.<span class=\"me1\">map</span><span class=\"sy0\">!</span>f.<span class=\"me1\">array</span><span class=\"sy0\">,</span> xrng<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">auto</span> rhoN<span class=\"br0\">(</span><span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"br0\">]</span> y<span class=\"sy0\">,</span> <span class=\"kw4\">immutable</span> <span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"br0\">]</span> x<span class=\"br0\">)</span><br/>    <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> <span class=\"kw4\">int</span> N <span class=\"sy0\">=</span> x.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">auto</span> p <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> <span class=\"kw4\">real</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">(</span>N<span class=\"sy0\">,</span> N<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        p<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> y<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        p<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> $ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> $<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> x<span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> $<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span><br/>                           <span class=\"br0\">(</span>p<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> $<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> p<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> $<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">..</span> <span class=\"me1\">N</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">immutable</span> M <span class=\"sy0\">=</span> N <span class=\"sy0\">-</span> j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            p<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"me1\">M</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> p<span class=\"br0\">[</span>j<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"me1\">M</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"me1\">M</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>j<span class=\"sy0\">..</span><span class=\"me1\">M</span><span class=\"sy0\">+</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span><br/>                         <span class=\"br0\">(</span>p<span class=\"br0\">[</span>j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">M</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> p<span class=\"br0\">[</span>j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">M</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> p.<span class=\"me1\">map</span><span class=\"sy0\">!</span>q<span class=\"br0\">{</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">alias</span> eval <span class=\"sy0\">=</span> eval0<span class=\"sy0\">!</span><span class=\"br0\">(</span>rhoY<span class=\"sy0\">,</span> X<span class=\"sy0\">,</span> Y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw2\">alias</span> inverse <span class=\"sy0\">=</span> eval0<span class=\"sy0\">!</span><span class=\"br0\">(</span>rhoX<span class=\"sy0\">,</span> Y<span class=\"sy0\">,</span> X<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Can't pass sin, cos and tan directly.</span><br/>    <span class=\"kw4\">immutable</span> tsin <span class=\"sy0\">=</span> Thiele<span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> x.<span class=\"me1\">sin</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> tcos <span class=\"sy0\">=</span> Thiele<span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> x.<span class=\"me1\">cos</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> ttan <span class=\"sy0\">=</span> Thiele<span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> x.<span class=\"me1\">tan</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%d interpolating points<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> tsin.<span class=\"me1\">X</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"std.math.sin(0.5):\u00a0%20.18f\"</span><span class=\"sy0\">,</span> 0.5L.<span class=\"me1\">sin</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"  Thiele sin(0.5):\u00a0%20.18f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> tsin.<span class=\"me1\">eval</span><span class=\"br0\">(</span>0.5L<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"*%20.19f library constant\"</span><span class=\"sy0\">,</span> PI<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%20.19f 6 * inv_sin(0.5)\"</span><span class=\"sy0\">,</span> tsin.<span class=\"me1\">inverse</span><span class=\"br0\">(</span>0.5L<span class=\"br0\">)</span> <span class=\"sy0\">*</span> 6.0L<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%20.19f 3 * inv_cos(0.5)\"</span><span class=\"sy0\">,</span> tcos.<span class=\"me1\">inverse</span><span class=\"br0\">(</span>0.5L<span class=\"br0\">)</span> <span class=\"sy0\">*</span> 3.0L<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%20.19f 4 * inv_tan(1.0)\"</span><span class=\"sy0\">,</span> ttan.<span class=\"me1\">inverse</span><span class=\"br0\">(</span>1.0L<span class=\"br0\">)</span> <span class=\"sy0\">*</span> 4.0L<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Go", "loc": 55, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"co1\">// task 1: build 32 row trig table</span><br/>    <span class=\"kw1\">const</span> nn <span class=\"sy2\">=</span> <span class=\"nu0\">32</span><br/>    <span class=\"kw1\">const</span> step <span class=\"sy2\">=</span> <span class=\"sy3\">.</span><span class=\"nu0\">05</span><br/>    xVal <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> nn<span class=\"sy1\">)</span><br/>    tSin <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> nn<span class=\"sy1\">)</span><br/>    tCos <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> nn<span class=\"sy1\">)</span><br/>    tTan <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> nn<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> xVal <span class=\"sy1\">{</span><br/>        xVal<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span> step<br/>        tSin<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">],</span> tCos<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> math<span class=\"sy3\">.</span>Sincos<span class=\"sy1\">(</span>xVal<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">])</span><br/>        tTan<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> tSin<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy3\">/</span> tCos<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// task 2: define inverses</span><br/>    iSin <span class=\"sy2\">:=</span> thieleInterpolator<span class=\"sy1\">(</span>tSin<span class=\"sy1\">,</span> xVal<span class=\"sy1\">)</span><br/>    iCos <span class=\"sy2\">:=</span> thieleInterpolator<span class=\"sy1\">(</span>tCos<span class=\"sy1\">,</span> xVal<span class=\"sy1\">)</span><br/>    iTan <span class=\"sy2\">:=</span> thieleInterpolator<span class=\"sy1\">(</span>tTan<span class=\"sy1\">,</span> xVal<span class=\"sy1\">)</span><br/>    <span class=\"co1\">// task 3: demonstrate identities</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"%16.14f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy3\">*</span>iSin<span class=\"sy1\">(</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%16.14f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy3\">*</span>iCos<span class=\"sy1\">(</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%16.14f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy3\">*</span>iTan<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> thieleInterpolator<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y <span class=\"sy1\">[]</span><span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    n <span class=\"sy2\">:=</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>x<span class=\"sy1\">)</span><br/>    \u03c1 <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([][]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> n<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> \u03c1 <span class=\"sy1\">{</span><br/>        \u03c1<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> n<span class=\"sy3\">-</span><span class=\"nu2\">i</span><span class=\"sy1\">)</span><br/>        \u03c1<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> y<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        \u03c1<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"sy1\">(</span>x<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy3\">-</span> x<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">])</span> <span class=\"sy3\">/</span> <span class=\"sy1\">(</span>\u03c1<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy3\">-</span> \u03c1<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span><span class=\"nu0\">0</span><span class=\"sy1\">])</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; n<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> j &lt; n<span class=\"sy3\">-</span><span class=\"nu2\">i</span><span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            \u03c1<span class=\"sy1\">[</span>j<span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"sy1\">(</span>x<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span><span class=\"sy3\">-</span>x<span class=\"sy1\">[</span>j<span class=\"sy3\">+</span><span class=\"nu2\">i</span><span class=\"sy1\">])</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>\u03c1<span class=\"sy1\">[</span>j<span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">-</span>\u03c1<span class=\"sy1\">[</span>j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">])</span> <span class=\"sy3\">+</span> \u03c1<span class=\"sy1\">[</span>j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// \u03c10 used in closure.  the rest of \u03c1 becomes garbage.</span><br/>    \u03c1<span class=\"nu0\">0</span> <span class=\"sy2\">:=</span> \u03c1<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>xin <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">var</span> a <span class=\"kw4\">float64</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> n <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &gt; <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">--</span> <span class=\"sy1\">{</span><br/>            a <span class=\"sy2\">=</span> <span class=\"sy1\">(</span>xin <span class=\"sy3\">-</span> x<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">])</span> <span class=\"sy3\">/</span> <span class=\"sy1\">(</span>\u03c1<span class=\"nu0\">0</span><span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy3\">-</span> \u03c1<span class=\"nu0\">0</span><span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy3\">+</span> a<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">return</span> y<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy3\">+</span> <span class=\"sy1\">(</span>xin<span class=\"sy3\">-</span>x<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">])</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>\u03c1<span class=\"nu0\">0</span><span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">+</span>a<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 32, "block": "<pre class=\"haskell highlighted_source\">thiele <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>thiele xs ys <span class=\"sy0\">=</span> f rho1 <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> xs<span class=\"br0\">)</span><br/>  <span class=\"kw1\">where</span><br/>    f <span class=\"sy0\">_</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">_</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    f r<span class=\"sy0\">@</span><span class=\"br0\">(</span>r0:r1:r2:rs<span class=\"br0\">)</span> <span class=\"br0\">(</span>x:xs<span class=\"br0\">)</span> v <span class=\"sy0\">=</span> r2 <span class=\"sy0\">-</span> r0 <span class=\"sy0\">+</span> <span class=\"br0\">(</span>v <span class=\"sy0\">-</span> x<span class=\"br0\">)</span> <span class=\"sy0\">/</span> f <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> r<span class=\"br0\">)</span> xs v<br/>    rho1 <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">!!</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span> rho<br/>    rho <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span><span class=\"br0\">]</span>\u00a0: <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span><span class=\"br0\">]</span>\u00a0: ys\u00a0: rnext <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> rho<span class=\"br0\">)</span> xs <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> xs<span class=\"br0\">)</span><br/>      <span class=\"kw1\">where</span><br/>        rnext <span class=\"sy0\">_</span> <span class=\"sy0\">_</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>        rnext r<span class=\"sy0\">@</span><span class=\"br0\">(</span>r0:r1:rs<span class=\"br0\">)</span> x xn <span class=\"sy0\">=</span><br/>          <span class=\"kw1\">let</span> z<span class=\"sy0\">_</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zipWith\"><span class=\"kw3\">zipWith</span></a><br/>          <span class=\"kw1\">in</span> z<span class=\"sy0\">_</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> r0<span class=\"br0\">)</span> <span class=\"br0\">(</span>z<span class=\"sy0\">_</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>z<span class=\"sy0\">_</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"br0\">)</span> x xn<span class=\"br0\">)</span> <span class=\"br0\">(</span>z<span class=\"sy0\">_</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"br0\">)</span> r1 <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> r1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0:<br/>             rnext <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> r<span class=\"br0\">)</span> x <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> xn<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- Inverted interpolation function of f</span><br/>invInterp <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>invInterp f xs <span class=\"sy0\">=</span> thiele <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> f xs<span class=\"br0\">)</span> xs<br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a><br/>    <span class=\"br0\">[</span> <span class=\"nu0\">3.21</span> <span class=\"sy0\">*</span> inv<span class=\"sy0\">_</span>sin <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sin\"><span class=\"kw3\">sin</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pi\"><span class=\"kw3\">pi</span></a> <span class=\"sy0\">/</span> <span class=\"nu0\">3.21</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pi\"><span class=\"kw3\">pi</span></a> <span class=\"sy0\">/</span> <span class=\"nu0\">1.2345</span> <span class=\"sy0\">*</span> inv<span class=\"sy0\">_</span>cos <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:cos\"><span class=\"kw3\">cos</span></a> <span class=\"nu0\">1.2345</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">,</span> <span class=\"nu0\">7</span> <span class=\"sy0\">*</span> inv<span class=\"sy0\">_</span>tan <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tan\"><span class=\"kw3\">tan</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pi\"><span class=\"kw3\">pi</span></a> <span class=\"sy0\">/</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">]</span><br/>  <span class=\"kw1\">where</span><br/>    <span class=\"br0\">[</span>inv<span class=\"sy0\">_</span>sin<span class=\"sy0\">,</span> inv<span class=\"sy0\">_</span>cos<span class=\"sy0\">,</span> inv<span class=\"sy0\">_</span>tan<span class=\"br0\">]</span> <span class=\"sy0\">=</span><br/>      <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:uncurry\"><span class=\"kw3\">uncurry</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">.</span> div<span class=\"sy0\">_</span>pi<span class=\"br0\">)</span> <span class=\"sy0\">.</span> invInterp<span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span><br/>      <span class=\"br0\">[</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sin\"><span class=\"kw3\">sin</span></a><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:cos\"><span class=\"kw3\">cos</span></a><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tan\"><span class=\"kw3\">tan</span></a><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"co1\">-- N points taken uniformly from 0 to Pi/d</span><br/>    div<span class=\"sy0\">_</span>pi <span class=\"br0\">(</span>d<span class=\"sy0\">,</span> n<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pi\"><span class=\"kw3\">pi</span></a> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>d <span class=\"sy0\">*</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> n<span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 4, "block": "<pre class=\"j highlighted_source\">\u00a0<br/>span =: {. - {:  <span class=\"co1\">NB. head - tail</span><br/>spans =: span\\   <span class=\"co1\">NB. apply span to successive infixes</span><br/>\u00a0</pre>"}, {"lang": "Java", "loc": 55, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">static</span> java.<span class=\"me1\">lang</span>.<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"sy0\">*;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Test <span class=\"br0\">{</span><br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> N <span class=\"sy0\">=</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> N2 <span class=\"sy0\">=</span> <span class=\"br0\">(</span>N <span class=\"sy0\">*</span> <span class=\"br0\">(</span>N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> STEP <span class=\"sy0\">=</span> <span class=\"nu0\">0.05</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> xval <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> t_sin <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> t_cos <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> t_tan <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> r_sin <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>N2<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> r_cos <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>N2<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> r_tan <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>N2<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> rho<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> x, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> y, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> r, <span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> y<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">int</span> idx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> n<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>N <span class=\"sy0\">-</span> n<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> i<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"sy0\">!=</span> r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> n<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                    <span class=\"sy0\">/</span> <span class=\"br0\">(</span>rho<span class=\"br0\">(</span>x, y, r, i, n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> rho<span class=\"br0\">(</span>x, y, r, i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"sy0\">+</span> rho<span class=\"br0\">(</span>x, y, r, i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, n <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> thiele<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> x, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> y, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> r, <span class=\"kw4\">double</span> xin, <span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> rho<span class=\"br0\">(</span>x, y, r, <span class=\"nu0\">0</span>, n<span class=\"br0\">)</span> <span class=\"sy0\">-</span> rho<span class=\"br0\">(</span>x, y, r, <span class=\"nu0\">0</span>, n <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>                <span class=\"sy0\">+</span> <span class=\"br0\">(</span>xin <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> thiele<span class=\"br0\">(</span>x, y, r, xin, n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> N<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> STEP<span class=\"sy0\">;</span><br/>            t_sin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> sin<span class=\"br0\">(</span>xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            t_cos<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> cos<span class=\"br0\">(</span>xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            t_tan<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> t_sin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">/</span> t_cos<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> N2<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            r_sin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> r_cos<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> r_tan<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">NaN</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%16.14f%n\"</span>, <span class=\"nu0\">6</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span>t_sin, xval, r_sin, <span class=\"nu0\">0.5</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%16.14f%n\"</span>, <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span>t_cos, xval, r_cos, <span class=\"nu0\">0.5</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%16.14f%n\"</span>, <span class=\"nu0\">4</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span>t_tan, xval, r_tan, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Kotlin", "loc": 43, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>const <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> N <span class=\"sy0\">=</span> <span class=\"nu0\">32</span><br/>const <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> N2 <span class=\"sy0\">=</span> N <span class=\"sy0\">*</span> <span class=\"br0\">(</span>N - <span class=\"nu0\">1</span><span class=\"br0\">)</span> / <span class=\"nu0\">2</span><br/>const <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> STEP <span class=\"sy0\">=</span> <span class=\"nu0\">0.05</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xval <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tsin <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tcos <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ttan <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rsin <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>N2<span class=\"br0\">)</span> <span class=\"br0\">{</span> Double.<span class=\"me1\">NaN</span> <span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rcos <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>N2<span class=\"br0\">)</span> <span class=\"br0\">{</span> Double.<span class=\"me1\">NaN</span> <span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rtan <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>N2<span class=\"br0\">)</span> <span class=\"br0\">{</span> Double.<span class=\"me1\">NaN</span> <span class=\"br0\">}</span><br/>\u00a0<br/>fun rho<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> DoubleArray, y<span class=\"sy0\">:</span> DoubleArray, r<span class=\"sy0\">:</span> DoubleArray, i<span class=\"sy0\">:</span> Int, n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <span class=\"nu0\">0.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> y<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> idx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>N - <span class=\"nu0\">1</span> - n<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>N - n<span class=\"br0\">)</span> / <span class=\"nu0\">2</span> + i<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span>.<span class=\"me1\">isNaN</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> - x<span class=\"br0\">[</span>i + n<span class=\"br0\">]</span><span class=\"br0\">)</span> / <br/>                 <span class=\"br0\">(</span>rho<span class=\"br0\">(</span>x, y, r, i, n - <span class=\"nu0\">1</span><span class=\"br0\">)</span> - rho<span class=\"br0\">(</span>x, y, r, i + <span class=\"nu0\">1</span>, n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> +<br/>                  rho<span class=\"br0\">(</span>x, y, r, i + <span class=\"nu0\">1</span>, n - <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> r<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun thiele<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> DoubleArray, y<span class=\"sy0\">:</span> DoubleArray, r<span class=\"sy0\">:</span> DoubleArray, xin<span class=\"sy0\">:</span> Double, n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span> <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> N - <span class=\"nu0\">1</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <span class=\"nu0\">1.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> rho<span class=\"br0\">(</span>x, y, r, <span class=\"nu0\">0</span>, n<span class=\"br0\">)</span> - rho<span class=\"br0\">(</span>x, y, r, <span class=\"nu0\">0</span>, n - <span class=\"nu0\">2</span><span class=\"br0\">)</span> + <br/>           <span class=\"br0\">(</span>xin - x<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span> / thiele<span class=\"br0\">(</span>x, y, r, xin, n + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until N<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> STEP<br/>        tsin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Math.<span class=\"me1\">sin</span><span class=\"br0\">(</span>xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        tcos<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Math.<span class=\"me1\">cos</span><span class=\"br0\">(</span>xval<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        ttan<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> tsin<span class=\"br0\">[</span>i<span class=\"br0\">]</span> / tcos<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"%16.14f\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">6</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span>tsin, xval, rsin, <span class=\"nu0\">0.5</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"%16.14f\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span>tcos, xval, rcos, <span class=\"nu0\">0.5</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"%16.14f\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">4</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span>ttan, xval, rtan, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 36, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> xv, fv <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfst\"><span class=\"kw3\">fst</span></a>, <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsnd\"><span class=\"kw3\">snd</span></a><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> rdiff a l r <span class=\"sy0\">=</span><br/>   <span class=\"kw1\">if</span> l <span class=\"sy0\">&gt;</span> r <span class=\"kw1\">then</span> <span class=\"nu0\">0.0</span> <span class=\"kw1\">else</span><br/>   <span class=\"kw1\">if</span> l <span class=\"sy0\">=</span> r <span class=\"kw1\">then</span> fv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span> <span class=\"kw1\">else</span><br/>   <span class=\"kw1\">if</span> l<span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"sy0\">=</span> r <span class=\"kw1\">then</span> <span class=\"br0\">(</span>xv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span> <span class=\"sy0\">-.</span> xv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/.</span> <span class=\"br0\">(</span>fv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span> <span class=\"sy0\">-.</span> fv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">else</span><br/>   <span class=\"br0\">(</span>xv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span> <span class=\"sy0\">-.</span> xv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/.</span> <span class=\"br0\">(</span>rdiff a l <span class=\"br0\">(</span>r<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-.</span> rdiff a <span class=\"br0\">(</span>l<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> r<span class=\"br0\">)</span> <span class=\"sy0\">+.</span> rdiff a <span class=\"br0\">(</span>l<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>r<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> thiele x a a0 k n <span class=\"sy0\">=</span><br/>   <span class=\"kw1\">if</span> k <span class=\"sy0\">=</span> n <span class=\"kw1\">then</span> <span class=\"nu0\">1.0</span> <span class=\"kw1\">else</span><br/>   rdiff a a0 <span class=\"br0\">(</span>a0<span class=\"sy0\">+</span>k<span class=\"br0\">)</span> <span class=\"sy0\">-.</span> rdiff a a0 <span class=\"br0\">(</span>a0<span class=\"sy0\">+</span>k<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+.</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-.</span> xv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>a0<span class=\"sy0\">+</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/.</span> thiele x a a0 <span class=\"br0\">(</span>k<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> n<br/>\u00a0<br/><span class=\"kw1\">let</span> interpolate x a n <span class=\"sy0\">=</span><br/>   <span class=\"kw1\">let</span> m <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>length a <span class=\"kw1\">in</span><br/>   <span class=\"kw1\">let</span> dist i <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALabs_float\"><span class=\"kw3\">abs_float</span></a> <span class=\"br0\">(</span>x <span class=\"sy0\">-.</span> xv a<span class=\"sy0\">.</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>   <span class=\"kw1\">let</span> nearer i j <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> dist j <span class=\"sy0\">&lt;</span> dist i <span class=\"kw1\">then</span> j <span class=\"kw1\">else</span> i <span class=\"kw1\">in</span><br/>   <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> closest i j <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> j <span class=\"sy0\">=</span> m <span class=\"kw1\">then</span> i <span class=\"kw1\">else</span> closest <span class=\"br0\">(</span>nearer i j<span class=\"br0\">)</span> <span class=\"br0\">(</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>   <span class=\"kw1\">let</span> c <span class=\"sy0\">=</span> closest <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"kw1\">in</span><br/>   <span class=\"kw1\">let</span> c<span class=\"sy0\">'</span> <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> c <span class=\"sy0\">&lt;</span> n<span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"kw1\">then</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> c <span class=\"sy0\">&gt;</span> m<span class=\"sy0\">-</span>n <span class=\"kw1\">then</span> m<span class=\"sy0\">-</span>n <span class=\"kw1\">else</span> c<span class=\"sy0\">-</span><span class=\"br0\">(</span>n<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>   thiele x a c<span class=\"sy0\">'</span> <span class=\"nu0\">0</span> n<br/>\u00a0<br/><span class=\"kw1\">let</span> table a b n f <span class=\"sy0\">=</span><br/>   <span class=\"kw1\">let</span> g i <span class=\"sy0\">=</span><br/>      <span class=\"kw1\">let</span> x <span class=\"sy0\">=</span> a <span class=\"sy0\">+.</span> <span class=\"br0\">(</span>b<span class=\"sy0\">-.</span>a<span class=\"br0\">)</span><span class=\"sy0\">*.</span><span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> i<span class=\"br0\">)</span><span class=\"sy0\">/.</span><span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>      <span class=\"br0\">(</span>f x, x<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>   <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>init n g<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">[</span>sin_tab<span class=\"sy0\">;</span> cos_tab<span class=\"sy0\">;</span> tan_tab<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map <span class=\"br0\">(</span>table <span class=\"nu0\">0.0</span> <span class=\"nu0\">1.55</span> <span class=\"nu0\">32</span><span class=\"br0\">)</span> <span class=\"br0\">[</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsin\"><span class=\"kw3\">sin</span></a><span class=\"sy0\">;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALcos\"><span class=\"kw3\">cos</span></a><span class=\"sy0\">;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALtan\"><span class=\"kw3\">tan</span></a><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">let</span> test n <span class=\"sy0\">=</span><br/>   <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"\\nDegree\u00a0%d interpolation:\\n\"</span> n<span class=\"sy0\">;</span><br/>   <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"6*arcsin(0.5) =\u00a0%.15f\\n\"</span> <span class=\"br0\">(</span><span class=\"nu0\">6.0</span><span class=\"sy0\">*.</span><span class=\"br0\">(</span>interpolate <span class=\"nu0\">0.5</span> sin_tab n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"3*arccos(0.5) =\u00a0%.15f\\n\"</span> <span class=\"br0\">(</span><span class=\"nu0\">3.0</span><span class=\"sy0\">*.</span><span class=\"br0\">(</span>interpolate <span class=\"nu0\">0.5</span> cos_tab n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"4*arctan(1.0) =\u00a0%.15f\\n\"</span> <span class=\"br0\">(</span><span class=\"nu0\">4.0</span><span class=\"sy0\">*.</span><span class=\"br0\">(</span>interpolate <span class=\"nu0\">1.0</span> tan_tab n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter test <span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"sy0\">;</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> <span class=\"nu0\">16</span><span class=\"br0\">]</span></pre>"}, {"lang": "Perl 6", "loc": 48, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"co1\"># reciprocal difference:</span><br/><span class=\"kw2\">multi</span> <span class=\"kw2\">sub</span> \u03c1<span class=\"br0\">(</span><span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span> <span class=\"kw1\">where</span> <span class=\"sy0\">*</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"co1\"># Identity</span><br/><span class=\"kw2\">multi</span> <span class=\"kw2\">sub</span> \u03c1<span class=\"br0\">(</span><span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span> <span class=\"kw1\">where</span> <span class=\"sy0\">*</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">&amp;f</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"kw1\">x</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> <span class=\"kw2\">sub</span> \u03c1<span class=\"br0\">(</span><span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span> <span class=\"kw1\">where</span> <span class=\"sy0\">*</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span><span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">)</span>       <span class=\"co1\"># ( x - x[n] )</span><br/>    <span class=\"co2\">/ (\u03c1(&amp;f, @x[^(@x - 1)])     # /</span> <span class=\"br0\">(</span> \u03c1<span class=\"br0\">[</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"kw1\">x</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">...,</span> <span class=\"kw1\">x</span><span class=\"br0\">[</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">-</span> \u03c1<span class=\"br0\">(</span><span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..^@</span><span class=\"kw1\">x</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>       <span class=\"co1\"># - \u03c1[n-1](x[1], ..., x[n]) )</span><br/>    <span class=\"sy0\">+</span> \u03c1<span class=\"br0\">(</span><span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw1\">x</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..^</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"kw1\">x</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"co1\"># + \u03c1[n-2](x[1], ..., x[n-1])</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Thiele:</span><br/><span class=\"kw2\">multi</span> <span class=\"kw2\">sub</span> thiele<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">%f</span><span class=\"sy0\">,</span> <span class=\"re0\">$ord</span> <span class=\"kw1\">where</span> <span class=\"br0\">{</span> <span class=\"re0\">$ord</span> <span class=\"sy0\">==</span> <span class=\"sy0\">+</span><span class=\"re0\">%f</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span> <span class=\"co1\"># Identity</span><br/><span class=\"kw2\">multi</span> <span class=\"kw2\">sub</span> thiele<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">%f</span><span class=\"sy0\">,</span> <span class=\"re0\">$ord</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">&amp;f</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"re0\">%f</span><span class=\"br0\">{</span><span class=\"re0\">$^a</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span>                <span class=\"co1\"># f(x) as a table lookup</span><br/>\u00a0<br/>  <span class=\"co1\"># must sort hash keys to maintain order between invocations</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> \u03c1<span class=\"br0\">(</span><span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"re0\">%f</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span><span class=\"br0\">[</span><span class=\"sy0\">^</span><span class=\"br0\">(</span><span class=\"re0\">$ord</span> <span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> \u03c1<span class=\"br0\">(</span><span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"re0\">%f</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span><span class=\"br0\">[</span><span class=\"sy0\">^</span><span class=\"br0\">(</span><span class=\"re0\">$ord</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"re0\">%f</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span><span class=\"br0\">[</span><span class=\"re0\">$ord</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$cont</span> <span class=\"sy0\">=</span> thiele<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">%f</span><span class=\"sy0\">,</span> <span class=\"re0\">$ord</span> <span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"co1\"># Thiele always takes this form:</span><br/>  <span class=\"kw1\">return</span> <span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> <span class=\"re0\">$num</span> <span class=\"sy0\">/</span> <span class=\"re0\">$cont</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">## Demo</span><br/><span class=\"kw2\">sub</span> mk<span class=\"sy0\">-</span>inv<span class=\"br0\">(</span><span class=\"re0\">&amp;fn</span><span class=\"sy0\">,</span> <span class=\"re0\">$d</span><span class=\"sy0\">,</span> <span class=\"re0\">$lim</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">%h</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"re0\">$lim</span> <span class=\"br0\">{</span> <span class=\"re0\">%h</span><span class=\"br0\">{</span> <span class=\"re0\">&amp;fn</span><span class=\"br0\">(</span><span class=\"re0\">$_</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">$_</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <span class=\"re0\">%h</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> MAIN<span class=\"br0\">(</span><span class=\"re0\">$tblsz</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">%invsin</span> <span class=\"sy0\">=</span> mk<span class=\"sy0\">-</span>inv<span class=\"br0\">(</span><span class=\"re0\">&amp;sin</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.05</span><span class=\"sy0\">,</span> <span class=\"re0\">$tblsz</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">%invcos</span> <span class=\"sy0\">=</span> mk<span class=\"sy0\">-</span>inv<span class=\"br0\">(</span><span class=\"re0\">&amp;cos</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.05</span><span class=\"sy0\">,</span> <span class=\"re0\">$tblsz</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">%invtan</span> <span class=\"sy0\">=</span> mk<span class=\"sy0\">-</span>inv<span class=\"br0\">(</span><span class=\"re0\">&amp;tan</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.05</span><span class=\"sy0\">,</span> <span class=\"re0\">$tblsz</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$sin_pi</span> <span class=\"sy0\">=</span> <span class=\"nu0\">6</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span> <span class=\"re0\">%invsin</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$cos_pi</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span> <span class=\"re0\">%invcos</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$tan_pi</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"sy0\">*</span> thiele<span class=\"br0\">(</span><span class=\"nu0\">1.0</span><span class=\"sy0\">,</span> <span class=\"re0\">%invtan</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw3\">say</span> <span class=\"st0\">\"pi = {pi}\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw3\">say</span> <span class=\"st0\">\"estimations using a table of $tblsz elements:\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw3\">say</span> <span class=\"st0\">\"sin interpolation: $sin_pi\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw3\">say</span> <span class=\"st0\">\"cos interpolation: $cos_pi\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw3\">say</span> <span class=\"st0\">\"tan interpolation: $tan_pi\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PicoLisp", "loc": 54, "block": "<pre class=\"text highlighted_source\">(scl 17)<br/>(load \"@lib/math.l\")<br/>\u00a0<br/>(setq<br/>   *X-Table (range 0.0 1.55 0.05)<br/>   *SinTable (mapcar sin *X-Table)<br/>   *CosTable (mapcar cos *X-Table)<br/>   *TanTable (mapcar tan *X-Table)<br/>   *TrigRows (length *X-Table) )<br/>\u00a0<br/>(let N2 (&gt;&gt; 1 (* *TrigRows (dec *TrigRows)))<br/>   (setq<br/>      *InvSinTable (need N2)<br/>      *InvCosTable (need N2)<br/>      *InvTanTable (need N2) ) )<br/>\u00a0<br/>(de rho (Tbl Inv I N)<br/>   (cond<br/>      ((lt0 N) 0)<br/>      ((=0 N) (get *X-Table I))<br/>      (T<br/>         (let Idx (+ I (&gt;&gt; 1 (* (- *TrigRows 1 N) (- *TrigRows N))))<br/>            (or<br/>               (get Inv Idx)<br/>               (set (nth Inv Idx)  # only happens if value not computed yet<br/>                  (+<br/>                     (rho Tbl Inv (inc I) (- N 2))<br/>                     (*/<br/>                        (- (get Tbl I) (get Tbl (+ I N)))<br/>                        1.0<br/>                        (-<br/>                           (rho Tbl Inv I (dec N))<br/>                           (rho Tbl Inv (inc I) (dec N)) ) ) ) ) ) ) ) ) )<br/>\u00a0<br/>(de thiele (Tbl Inv X N)<br/>   (if (&gt; N *TrigRows)<br/>      1.0<br/>      (+<br/>         (-<br/>            (rho Tbl Inv 1 (dec N))<br/>            (rho Tbl Inv 1 (- N 3)) )<br/>         (*/<br/>            (- X (get Tbl N))<br/>            1.0<br/>            (thiele Tbl Inv X (inc N)) ) ) ) )<br/>\u00a0<br/>(de iSin (X)<br/>   (thiele *SinTable *InvSinTable X 1) )<br/>\u00a0<br/>(de iCos (X)<br/>   (thiele *CosTable *InvCosTable X 1) )<br/>\u00a0<br/>(de iTan (X)<br/>   (thiele *TanTable *InvTanTable 1.0 1) )</pre>"}, {"lang": "PowerShell", "loc": 69, "block": "<pre class=\"powershell highlighted_source\"><span class=\"kw3\">Function</span> Reciprocal<span class=\"sy0\">-</span>Difference<span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"re0\">$function</span> <span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"re0\">$rho</span><span class=\"sy0\"><a class=\"__cf_email__\" data-cfemail=\"7f423f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"re0\">$rho</span><span class=\"sy0\">+=</span><span class=\"nu0\">0</span><br/>    <span class=\"re0\">$funcl</span> <span class=\"sy0\">=</span> <span class=\"re0\">$function</span>.length<br/>    <span class=\"kw3\">if</span><span class=\"br0\">(</span> <span class=\"re0\">$funcl</span> <span class=\"kw4\">-gt</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"sy0\">-</span><span class=\"nu0\">2</span>..<span class=\"br0\">(</span><span class=\"re0\">$funcl</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$i</span><span class=\"sy0\">=</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><br/>            <span class=\"co1\">#Write-Host \"$($i+1) - $($rho[$i+1]) - $($rho[$i+1].GetType())\"</span><br/>            <span class=\"re0\">$rho</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> $<span class=\"br0\">(</span> <span class=\"nu0\">0</span>..<span class=\"br0\">(</span><span class=\"re0\">$funcl</span><span class=\"sy0\">-</span><span class=\"re0\">$i</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Where-Object</span> <span class=\"br0\">{</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"kw4\">-lt</span> <span class=\"re0\">$funcl</span><span class=\"br0\">}</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$j</span><span class=\"sy0\">=</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><br/>                <span class=\"kw3\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"br0\">{</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"kw4\">-lt</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>                    <span class=\"br0\">{</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"kw4\">-eq</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"re0\">$function</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>                    <span class=\"br0\">{</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"kw4\">-gt</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span> <span class=\"re0\">$function</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$function</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"sy0\">+</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span> <span class=\"re0\">$rho</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$rho</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">$rho</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"kw3\">if</span><span class=\"br0\">(</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"kw4\">-lt</span> <span class=\"re0\">$funcl</span> <span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"re0\">$rho</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">0</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">$rho</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">Function</span> Thiele<span class=\"sy0\">-</span>Interpolation <span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"re0\">$function</span> <span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"re0\">$funcl</span> <span class=\"sy0\">=</span> <span class=\"re0\">$function</span>.length<br/>    <span class=\"re0\">$invoke</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"{<span class=\"es0\">`n</span><span class=\"es0\">`t</span>param([Double] <span class=\"es0\">`$</span>x)<span class=\"es0\">`n</span>\"</span><br/>    <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"re0\">$funcl</span> <span class=\"kw4\">-gt</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"re0\">$rho</span> <span class=\"sy0\">=</span> Reciprocal<span class=\"sy0\">-</span>Difference <span class=\"re0\">$function</span><br/>        <span class=\"br0\">(</span><span class=\"re0\">$funcl</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>..<span class=\"nu0\">0</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <br/>            <span class=\"re0\">$invoke</span> <span class=\"sy0\">+=</span> <span class=\"st0\">\"<span class=\"es0\">`t</span>\"</span><br/>            <span class=\"re0\">$invoke</span> <span class=\"sy0\">+=</span> <span class=\"st0\">'$x{0} = {1} - {2}'</span> <span class=\"kw4\">-f</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"re0\">$rho</span><span class=\"br0\">[</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"re0\">$rho</span><span class=\"br0\">[</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>            <span class=\"kw3\">if</span><span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"kw4\">-lt</span> <span class=\"br0\">(</span><span class=\"re0\">$funcl</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"re0\">$invoke</span> <span class=\"sy0\">+=</span> <span class=\"st0\">' + ( $x - {0} ) / $x{1} '</span> <span class=\"kw4\">-f</span> <span class=\"re0\">$function</span><span class=\"br0\">[</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"re0\">$invoke</span> <span class=\"sy0\">+=</span> <span class=\"st0\">\"<span class=\"es0\">`n</span>\"</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$invoke</span><span class=\"sy0\">+=</span><span class=\"st0\">\"<span class=\"es0\">`t</span><span class=\"es0\">`$</span>x0<span class=\"es0\">`n</span>}\"</span><br/>    <span class=\"br0\">}</span> <span class=\"kw3\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$invoke</span> <span class=\"sy0\">+=</span> <span class=\"st0\">\"<span class=\"es0\">`t</span><span class=\"es0\">`$</span>x<span class=\"es0\">`n</span>}\"</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">invoke-expression</span> <span class=\"re0\">$invoke</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$sint</span><span class=\"sy0\"><a class=\"__cf_email__\" data-cfemail=\"605d20\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></span><span class=\"br0\">{</span><span class=\"br0\">}</span>; <span class=\"nu0\">0</span>..<span class=\"nu0\">31</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">0.05</span> <span class=\"br0\">}</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <span class=\"re0\">$sint</span><span class=\"br0\">[</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Math<span class=\"br0\">]</span>::sin<span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"re0\">$cost</span><span class=\"sy0\"><a class=\"__cf_email__\" data-cfemail=\"91acd1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></span><span class=\"br0\">{</span><span class=\"br0\">}</span>; <span class=\"nu0\">0</span>..<span class=\"nu0\">31</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">0.05</span> <span class=\"br0\">}</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <span class=\"re0\">$cost</span><span class=\"br0\">[</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Math<span class=\"br0\">]</span>::cos<span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"re0\">$tant</span><span class=\"sy0\"><a class=\"__cf_email__\" data-cfemail=\"043944\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></span><span class=\"br0\">{</span><span class=\"br0\">}</span>; <span class=\"nu0\">0</span>..<span class=\"nu0\">31</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">0.05</span> <span class=\"br0\">}</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <span class=\"re0\">$tant</span><span class=\"br0\">[</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Math<span class=\"br0\">]</span>::tan<span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"re0\">$asint</span><span class=\"sy0\">=</span><span class=\"kw1\">New-Object</span> <span class=\"st0\">'Double[][]'</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>; <span class=\"re0\">$sint</span>.GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Sort-Object</span> Value <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$asint</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Value; <span class=\"re0\">$asint</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Name; <span class=\"re0\">$i</span><span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/><span class=\"re0\">$acost</span><span class=\"sy0\">=</span><span class=\"kw1\">New-Object</span> <span class=\"st0\">'Double[][]'</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>; <span class=\"re0\">$cost</span>.GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Sort-Object</span> Value <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span> <span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$acost</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Value; <span class=\"re0\">$acost</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Name; <span class=\"re0\">$i</span><span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/><span class=\"re0\">$atant</span><span class=\"sy0\">=</span><span class=\"kw1\">New-Object</span> <span class=\"st0\">'Double[][]'</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>; <span class=\"re0\">$tant</span>.GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Sort-Object</span> Value <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$atant</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Value; <span class=\"re0\">$atant</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Name; <span class=\"re0\">$i</span><span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$asin</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Thiele<span class=\"sy0\">-</span>Interpolation <span class=\"re0\">$asint</span><span class=\"br0\">)</span><br/><span class=\"co1\">#uncomment to see the function</span><br/><span class=\"co1\">#\"{$asin}\"</span><br/><span class=\"nu0\">6</span><span class=\"sy0\">*</span><span class=\"re0\">$asin</span>.InvokeReturnAsIs<span class=\"br0\">(</span>.5<span class=\"br0\">)</span><br/><span class=\"re0\">$acos</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Thiele<span class=\"sy0\">-</span>Interpolation <span class=\"re0\">$acost</span><span class=\"br0\">)</span><br/><span class=\"co1\">#uncomment to see the function</span><br/><span class=\"co1\">#\"{$acos}\"</span><br/><span class=\"nu0\">3</span><span class=\"sy0\">*</span><span class=\"re0\">$acos</span>.InvokeReturnAsIs<span class=\"br0\">(</span>.5<span class=\"br0\">)</span><br/><span class=\"re0\">$atan</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Thiele<span class=\"sy0\">-</span>Interpolation <span class=\"re0\">$atant</span><span class=\"br0\">)</span><br/><span class=\"co1\">#uncomment to see the function</span><br/><span class=\"co1\">#\"{$atan}\"</span><br/><span class=\"nu0\">4</span><span class=\"sy0\">*</span><span class=\"re0\">$atan</span>.InvokeReturnAsIs<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 32, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#!/usr/bin/env python3</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">math</span><br/>\u00a0<br/><span class=\"kw1\">def</span> thieleInterpolator<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span>:<br/>    \u03c1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>yi<span class=\"br0\">]</span>*<span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span>-i<span class=\"br0\">)</span> <span class=\"kw1\">for</span> i<span class=\"sy0\">,</span> yi <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>\u03c1<span class=\"br0\">)</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>        \u03c1<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> - x<span class=\"br0\">[</span>i+<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span>\u03c1<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> - \u03c1<span class=\"br0\">[</span>i+<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>\u03c1<span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>\u03c1<span class=\"br0\">)</span>-i<span class=\"br0\">)</span>:<br/>            \u03c1<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span>j<span class=\"br0\">]</span>-x<span class=\"br0\">[</span>j+i<span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span>\u03c1<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i-<span class=\"nu0\">1</span><span class=\"br0\">]</span>-\u03c1<span class=\"br0\">[</span>j+<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> + \u03c1<span class=\"br0\">[</span>j+<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i-<span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>    \u03c1<span class=\"nu0\">0</span> <span class=\"sy0\">=</span> \u03c1<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">def</span> t<span class=\"br0\">(</span>xin<span class=\"br0\">)</span>:<br/>        a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>\u03c1<span class=\"nu0\">0</span><span class=\"br0\">)</span>-<span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>            a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>xin - x<span class=\"br0\">[</span>i-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span>\u03c1<span class=\"nu0\">0</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> - \u03c1<span class=\"nu0\">0</span><span class=\"br0\">[</span>i-<span class=\"nu0\">2</span><span class=\"br0\">]</span> + a<span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> y<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> + <span class=\"br0\">(</span>xin-x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span>\u03c1<span class=\"nu0\">0</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>+a<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> t<br/>\u00a0<br/><span class=\"co1\"># task 1: build 32 row trig table</span><br/>xVal <span class=\"sy0\">=</span> <span class=\"br0\">[</span>i*<span class=\"nu0\">.05</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>tSin <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw3\">math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> xVal<span class=\"br0\">]</span><br/>tCos <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw3\">math</span>.<span class=\"me1\">cos</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> xVal<span class=\"br0\">]</span><br/>tTan <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw3\">math</span>.<span class=\"me1\">tan</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> xVal<span class=\"br0\">]</span><br/><span class=\"co1\"># task 2: define inverses</span><br/>iSin <span class=\"sy0\">=</span> thieleInterpolator<span class=\"br0\">(</span>tSin<span class=\"sy0\">,</span> xVal<span class=\"br0\">)</span><br/>iCos <span class=\"sy0\">=</span> thieleInterpolator<span class=\"br0\">(</span>tCos<span class=\"sy0\">,</span> xVal<span class=\"br0\">)</span><br/>iTan <span class=\"sy0\">=</span> thieleInterpolator<span class=\"br0\">(</span>tTan<span class=\"sy0\">,</span> xVal<span class=\"br0\">)</span><br/><span class=\"co1\"># task 3: demonstrate identities</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{:16.14f}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">6</span>*iSin<span class=\"br0\">(</span><span class=\"nu0\">.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{:16.14f}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>*iCos<span class=\"br0\">(</span><span class=\"nu0\">.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{:16.14f}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">4</span>*iTan<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 41, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(define xs (for/vector ([x (in-range 0.0 1.6 0.05)]) x))<br/>(define (x i) (vector-ref xs i))<br/>\u00a0<br/>(define-syntax define-table <br/>  (syntax-rules ()<br/>    [(_ f tf rf if) <br/>     (begin (define tab (for/vector ([x xs]) (f x)))<br/>            (define (tf n) (vector-ref tab n))<br/>            (define cache (make-vector (/ (* 32 31) 2) #f))<br/>            (define (rf n thunk)<br/>              (or (vector-ref cache n)<br/>                  (let ([v (thunk)])<br/>                    (vector-set! cache n v)<br/>                    v)))<br/>            (define (if t) (thiele tf x rf t 0)))]))<br/>\u00a0<br/>(define-table sin tsin rsin isin)<br/>(define-table cos tcos rcos icos)<br/>(define-table tan ttan rtan itan)<br/>\u00a0<br/>(define (rho x y r i n)<br/>  (cond<br/>    [(&lt; n 0) 0]<br/>    [(= n 0) (y i)]<br/>    [else (r (+ (/ (* (- 32 1 n) (- 32 n)) 2) i)<br/>             (\u03bb() (+ (/ (- (x i) (x (+ i n)))<br/>                        (- (rho x y r i (- n 1)) (rho x y r (+ i 1) (- n 1))))<br/>                     (rho x y r (+ i 1) (- n 2)))))]))<br/>\u00a0<br/>(define (thiele x y r xin n)<br/>  (cond<br/>    [(&gt; n 31) 1]<br/>    [(+ (rho x y r 0 n) (- (rho x y r 0 (- n 2))) <br/>        (/ (- xin (x n)) (thiele x y r xin (+ n 1))))]))<br/>\u00a0<br/>(* 6 (isin 0.5)) <br/>(* 3 (icos 0.5)) <br/>(* 4 (itan 1.))  <br/>\u00a0</pre>"}, {"lang": "Sidef", "loc": 39, "block": "<pre class=\"ruby highlighted_source\">func thiele<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var \u03c1 = <span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> <span class=\"br0\">[</span>y<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>y.<span class=\"me1\">len</span><span class=\"sy0\">-</span>i<span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span>^y<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> ^<span class=\"br0\">(</span>\u03c1.<span class=\"kw1\">end</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        \u03c1<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>\u03c1<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> \u03c1<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> i <span class=\"br0\">(</span><span class=\"nu0\">2</span> .. \u03c1.<span class=\"kw1\">end</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> j <span class=\"br0\">(</span><span class=\"nu0\">0</span> .. \u03c1.<span class=\"me1\">end</span><span class=\"sy0\">-</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            \u03c1<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> = <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">-</span>x<span class=\"br0\">[</span>j<span class=\"sy0\">+</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>\u03c1<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>\u03c1<span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> \u03c1<span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    var \u03c1<span class=\"nu0\">0</span> = \u03c1<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>\u00a0<br/>    func t<span class=\"br0\">(</span>xin<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        var a = <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">for</span> i <span class=\"br0\">(</span>\u03c1<span class=\"nu0\">0</span>.<span class=\"me1\">len</span> ^.. <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            a = <span class=\"br0\">(</span><span class=\"br0\">(</span>xin <span class=\"sy0\">-</span> x<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>\u03c1<span class=\"nu0\">0</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">-</span> \u03c1<span class=\"nu0\">0</span><span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        y<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>xin<span class=\"sy0\">-</span>x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>\u03c1<span class=\"nu0\">0</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">return</span> t<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># task 1: build 32 row trig table</span><br/>var xVal = <span class=\"br0\">{</span><span class=\"sy0\">|</span>k<span class=\"sy0\">|</span> k <span class=\"sy0\">*</span> <span class=\"nu0\">0.05</span> <span class=\"br0\">}</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span>^<span class=\"nu0\">32</span><span class=\"br0\">)</span><br/>var tSin = xVal.<span class=\"me1\">map</span> <span class=\"br0\">{</span> .<span class=\"me1\">sin</span> <span class=\"br0\">}</span><br/>var tCos = xVal.<span class=\"me1\">map</span> <span class=\"br0\">{</span> .<span class=\"me1\">cos</span> <span class=\"br0\">}</span><br/>var tTan = xVal.<span class=\"me1\">map</span> <span class=\"br0\">{</span> .<span class=\"me1\">tan</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># task 2: define inverses</span><br/>var iSin = thiele<span class=\"br0\">(</span>tSin, xVal<span class=\"br0\">)</span><br/>var iCos = thiele<span class=\"br0\">(</span>tCos, xVal<span class=\"br0\">)</span><br/>var iTan = thiele<span class=\"br0\">(</span>tTan, xVal<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\"># task 3: demonstrate identities</span><br/>say <span class=\"nu0\">6</span><span class=\"sy0\">*</span>iSin<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>say <span class=\"nu0\">3</span><span class=\"sy0\">*</span>iCos<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>say <span class=\"nu0\">4</span><span class=\"sy0\">*</span>iTan<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre>"}, {"lang": "Tcl", "loc": 44, "block": "<pre class=\"tcl highlighted_source\"><span class=\"co1\">#</span><br/><span class=\"co1\">### Create a thiele-interpretation function with the given name that interpolates</span><br/><span class=\"co1\">### off the given table.</span><br/><span class=\"co1\">#</span><br/><span class=\"kw1\">proc</span> thiele <span class=\"br0\">{</span>name\u00a0: X -<span class=\"sy0\">&gt;</span> F<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\"># Sanity check</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$X</span><span class=\"br0\">]</span> <span class=\"sy0\">!</span>= <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$F</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">error</span> <span class=\"st0\">\"unequal length lists supplied: [llength $X]\u00a0!= [llength $F]\"</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">#</span><br/>    <span class=\"co1\">### Compute the table of reciprocal differences</span><br/>    <span class=\"co1\">#</span><br/>    <span class=\"kw1\">set</span> p <span class=\"br0\">[</span>lrepeat <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$X</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>lrepeat <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$X</span><span class=\"br0\">]</span> <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">foreach</span> x0 <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$X</span> <span class=\"nu0\">0</span> end-<span class=\"nu0\">1</span><span class=\"br0\">]</span> x1 <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$X</span> <span class=\"nu0\">1</span> end<span class=\"br0\">]</span> \\<br/>\t    f0 <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$F</span> <span class=\"nu0\">0</span> end-<span class=\"nu0\">1</span><span class=\"br0\">]</span> f1 <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$F</span> <span class=\"nu0\">1</span> end<span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">lset</span> p <span class=\"re0\">$i</span> <span class=\"nu0\">0</span> <span class=\"re0\">$f0</span><br/>\t<span class=\"kw2\">lset</span> p <span class=\"re0\">$i</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$x0</span> - <span class=\"re0\">$x1</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"re0\">$f0</span> - <span class=\"re0\">$f1</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">lset</span> p <span class=\"br0\">[</span><span class=\"kw2\">incr</span> i<span class=\"br0\">]</span> <span class=\"nu0\">0</span> <span class=\"re0\">$f1</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span><span class=\"sy0\">&lt;</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$X</span><span class=\"br0\">]</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">&lt;</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$X</span><span class=\"br0\">]</span>-<span class=\"re0\">$j</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lset</span> p <span class=\"re0\">$i</span> <span class=\"re0\">$j</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$p</span> <span class=\"re0\">$i</span>+<span class=\"nu0\">1</span> <span class=\"re0\">$j</span>-<span class=\"nu0\">2</span><span class=\"br0\">]</span> +<br/>\t\t<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$X</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span> - <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$X</span> <span class=\"re0\">$i</span>+<span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">)</span> /<br/>\t\t<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$p</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span> - <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$p</span> <span class=\"re0\">$i</span>+<span class=\"nu0\">1</span> <span class=\"re0\">$j</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t    <span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">#</span><br/>    <span class=\"co1\">### Make pseudo-curried function that actually evaluates Thiele's formula</span><br/>    <span class=\"co1\">#</span><br/>    <span class=\"kw2\">interp</span> alias <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"re0\">$name</span> <span class=\"br0\">{</span><span class=\"br0\">}</span> apply <span class=\"br0\">{</span><span class=\"br0\">{</span>X rho f1 x<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> a <span class=\"nu0\">0.0</span><br/>\t<span class=\"kw1\">foreach</span> Xi  <span class=\"br0\">[</span>lreverse <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$X</span> <span class=\"nu0\">2</span> end<span class=\"br0\">]</span><span class=\"br0\">]</span> \\<br/>\t\tRi  <span class=\"br0\">[</span>lreverse <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$rho</span> <span class=\"nu0\">2</span> end<span class=\"br0\">]</span><span class=\"br0\">]</span> \\<br/>\t\tRi2 <span class=\"br0\">[</span>lreverse <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$rho</span> <span class=\"nu0\">0</span> end-<span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> a <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$x</span> - <span class=\"re0\">$Xi</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"re0\">$Ri</span> - <span class=\"re0\">$Ri2</span> + <span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$f1</span> + <span class=\"br0\">(</span><span class=\"re0\">$x</span> - <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$X</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$rho</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> + <span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"re0\">$X</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$p</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$F</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "zkl", "loc": 40, "block": "<pre class=\"text highlighted_source\">const N=32, N2=(N * (N - 1) / 2), STEP=0.05;<br/>\u00a0<br/>fcn rho(xs,ys,rs, i,n){<br/>   if (n &lt; 0) return(0.0);<br/>   if (not n) return(ys[i]);<br/>\u00a0<br/>   idx\u00a0:= (N - 1 - n) * (N - n) / 2 + i;<br/>   if (Void==rs[idx])<br/>      rs[idx] = (xs[i] - xs[i + n])<br/>\t\t/ (rho(xs, ys, rs, i, n - 1) - rho(xs, ys, rs, i + 1, n - 1))<br/>\t\t+ rho(xs, ys, rs, i + 1, n - 2);<br/>   return(rs[idx]);<br/>}<br/>\u00a0<br/>fcn thiele(xs,ys,rs, xin, n){<br/>   if (n &gt; N - 1) return(1.0);<br/>   rho(xs, ys, rs, 0, n) - rho(xs, ys, rs, 0, n - 2)<br/>      + (xin - xs[n]) / thiele(xs, ys, rs, xin, n + 1);<br/>}<br/>\u00a0<br/>///////////<br/>\u00a0<br/>reg t_sin=L(), t_cos=L(), t_tan=L(),<br/>    r_sin=L(), r_cos=L(), r_tan=L(),  xval=L();<br/>\u00a0<br/>i_sin\u00a0:= thiele.fpM(\"11101\",t_sin, xval, r_sin, 0);<br/>i_cos\u00a0:= thiele.fpM(\"11101\",t_cos, xval, r_cos, 0);<br/>i_tan\u00a0:= thiele.fpM(\"11101\",t_tan, xval, r_tan, 0);<br/>\u00a0<br/>foreach i in (N){<br/>   xval.append(x:=STEP*i);<br/>   t_sin.append(x.sin());<br/>   t_cos.append(x.cos());<br/>   t_tan.append(t_sin[i] / t_cos[i]);<br/>}<br/>foreach i in (N2){ r_sin+Void; r_cos+Void; r_tan+Void; }<br/>\u00a0<br/>print(\"%16.14f\\n\".fmt( 6.0 * i_sin(0.5)));<br/>print(\"%16.14f\\n\".fmt( 3.0 * i_cos(0.5)));<br/>print(\"%16.14f\\n\".fmt( 4.0 * i_tan(1.0)));</pre>"}]}