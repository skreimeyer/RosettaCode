{"task": "Julia_set", "blocks": [{"lang": "ALGOL 68", "loc": 35, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw2\">BEGIN</span><br/>    <span class=\"kw3\">REAL</span> c <span class=\"kw26\">real</span><span class=\"sy1\">,</span> c imaginary<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">STRING</span> <span class=\"kw26\">real</span> and imaginary <span class=\"sy1\">:=</span> <span class=\"kw2\">IF</span> <span class=\"kw27\">argc</span> <span class=\"sy1\">&lt;</span> 3 <span class=\"kw2\">THEN</span> <span class=\"st0\">\"-0.8\"</span>  <span class=\"kw2\">ELSE</span> <span class=\"kw27\">argv</span><span class=\"br0\">(</span> 3 <span class=\"br0\">)</span> <span class=\"kw2\">FI</span><br/>                               <span class=\"sy1\">+</span> <span class=\"st0\">\" \"</span><br/>                               <span class=\"sy1\">+</span> <span class=\"kw2\">IF</span> <span class=\"kw27\">argc</span> <span class=\"sy1\">&lt;</span> 4 <span class=\"kw2\">THEN</span> <span class=\"st0\">\"0.156\"</span> <span class=\"kw2\">ELSE</span> <span class=\"kw27\">argv</span><span class=\"br0\">(</span> 4 <span class=\"br0\">)</span> <span class=\"kw2\">FI</span><br/>                               <span class=\"sy1\">+</span> <span class=\"st0\">\" \"</span><br/>                               <span class=\"sy1\">;</span><br/>    <span class=\"kw6\">FILE</span> numbers<span class=\"sy1\">;</span><br/>    <span class=\"kw22\">associate</span><span class=\"br0\">(</span> numbers<span class=\"sy1\">,</span> <span class=\"kw26\">real</span> and imaginary <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    get<span class=\"br0\">(</span> numbers<span class=\"sy1\">,</span> <span class=\"br0\">(</span> c <span class=\"kw26\">real</span><span class=\"sy1\">,</span> c imaginary <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw22\">fixed</span><span class=\"br0\">(</span> c <span class=\"kw26\">real</span><span class=\"sy1\">,</span> <span class=\"sy1\">-</span>8<span class=\"sy1\">,</span> 4 <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">fixed</span><span class=\"br0\">(</span> c imaginary<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>8<span class=\"sy1\">,</span> 4 <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> v <span class=\"kw2\">FROM</span> <span class=\"sy1\">-</span>100 <span class=\"kw2\">BY</span> 10 <span class=\"kw2\">TO</span> 100 <span class=\"kw2\">DO</span><br/>        <span class=\"kw2\">FOR</span> h <span class=\"kw2\">FROM</span> <span class=\"sy1\">-</span>280 <span class=\"kw2\">BY</span> 10 <span class=\"kw2\">TO</span> 280 <span class=\"kw2\">DO</span><br/>            <span class=\"kw3\">REAL</span> x <span class=\"sy1\">:=</span> h <span class=\"sy1\">/</span> 200<span class=\"sy1\">;</span><br/>            <span class=\"kw3\">REAL</span> y <span class=\"sy1\">:=</span> v <span class=\"sy1\">/</span> 100<span class=\"sy1\">;</span><br/>            <span class=\"kw3\">CHAR</span> plot char <span class=\"sy1\">:=</span> <span class=\"st0\">\"#\"</span><span class=\"sy1\">;</span><br/>            <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> 50<br/>            <span class=\"kw2\">WHILE</span><br/>                <span class=\"kw3\">REAL</span> z <span class=\"kw26\">real</span>      <span class=\"sy1\">=</span> <span class=\"br0\">(</span> x <span class=\"sy1\">*</span> x <span class=\"br0\">)</span> <span class=\"sy1\">-</span> <span class=\"br0\">(</span> y <span class=\"sy1\">*</span> y <span class=\"br0\">)</span> <span class=\"sy1\">+</span> c <span class=\"kw26\">real</span><span class=\"sy1\">;</span><br/>                <span class=\"kw3\">REAL</span> z imaginary <span class=\"sy1\">=</span> <span class=\"br0\">(</span> x <span class=\"sy1\">*</span> y <span class=\"sy1\">*</span> 2 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> c imaginary<span class=\"sy1\">;</span><br/>                <span class=\"kw2\">IF</span> z <span class=\"kw26\">real</span> <span class=\"sy1\">*</span> z <span class=\"kw26\">real</span> <span class=\"sy1\">&lt;=</span> 10000<br/>                <span class=\"kw2\">THEN</span> <span class=\"kw7\">TRUE</span><br/>                <span class=\"kw2\">ELSE</span><br/>                    plot char <span class=\"sy1\">:=</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">;</span><br/>                    <span class=\"kw7\">FALSE</span><br/>                <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">DO</span><br/>                x <span class=\"sy1\">:=</span> z <span class=\"kw26\">real</span><span class=\"sy1\">;</span><br/>                y <span class=\"sy1\">:=</span> z imaginary<br/>            <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> plot char <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><br/><span class=\"kw2\">END</span></pre>"}, {"lang": "AWK", "loc": 28, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f JULIA_SET.AWK [real imaginary]</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    c_real      = <span class=\"br0\">(</span><span class=\"kw3\">ARGV</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy2\">!=</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"sy5\">?</span> <span class=\"kw3\">ARGV</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy5\">:</span> <span class=\"sy3\">-</span><span class=\"nu0\">0.8</span><br/>    c_imaginary = <span class=\"br0\">(</span><span class=\"kw3\">ARGV</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy2\">!=</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"sy5\">?</span> <span class=\"kw3\">ARGV</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy5\">:</span> <span class=\"nu0\">0.156</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\u00a0%s<span class=\"es0\">\\n</span>\"</span>,c_real,c_imaginary<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>v=<span class=\"sy3\">-</span><span class=\"nu0\">100</span>; v<span class=\"sy2\">&lt;=</span><span class=\"nu0\">100</span>; v<span class=\"sy3\">+</span>=<span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>h=<span class=\"sy3\">-</span><span class=\"nu0\">280</span>; h<span class=\"sy2\">&lt;=</span><span class=\"nu0\">280</span>; h<span class=\"sy3\">+</span>=<span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        x = h <span class=\"sy3\">/</span> <span class=\"nu0\">200</span><br/>        y = v <span class=\"sy3\">/</span> <span class=\"nu0\">100</span><br/>        plot_char = <span class=\"st0\">\"#\"</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>; i<span class=\"sy2\">&lt;=</span><span class=\"nu0\">50</span>; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          z_real = x <span class=\"sy3\">*</span> x <span class=\"sy3\">-</span> y <span class=\"sy3\">*</span> y <span class=\"sy3\">+</span> c_real<br/>          z_imaginary = x <span class=\"sy3\">*</span> y <span class=\"sy3\">*</span> <span class=\"nu0\">2</span> <span class=\"sy3\">+</span> c_imaginary<br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span>z_real <span class=\"sy3\">^</span> <span class=\"nu0\">2</span> <span class=\"sy2\">&gt;</span> <span class=\"nu0\">10000</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            plot_char = <span class=\"st0\">\" \"</span><br/>            <span class=\"kw1\">break</span><br/>          <span class=\"br0\">}</span><br/>          x = z_real<br/>          y = z_imaginary<br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%1s\"</span>,plot_char<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "BASIC", "loc": 16, "block": "<pre class=\"text highlighted_source\"> 10 LET C=-.8<br/> 20 LET D=.156<br/> 30 FOR V=43 TO 0 STEP -1<br/> 40 FOR H=0 TO 63<br/> 50 LET X=(H-32)/21<br/> 60 LET Y=(V-22)/21<br/> 70 FOR A=1 TO 50<br/> 80 LET R=X*X-Y*Y+C<br/> 90 LET I=2*X*Y+D<br/>100 IF R*R&gt;1000 THEN GOTO 150<br/>110 LET X=R<br/>120 LET Y=I<br/>130 NEXT A<br/>140 PLOT H,V<br/>150 NEXT H<br/>160 NEXT V</pre>"}, {"lang": "C", "loc": 1, "block": "<pre>&lt;executable name&gt; &lt;width of graphics window&gt; &lt;height of graphics window&gt; &lt;real part of complex number&gt; &lt;imag part of complex number&gt; &lt;limiting radius&gt; &lt;Number of iterations to be tested&gt;\n</pre>"}, {"lang": "C++", "loc": 137, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;windows.h&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;complex&gt;</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> BMP_SIZE <span class=\"sy1\">=</span> <span class=\"nu0\">600</span>, ITERATIONS <span class=\"sy1\">=</span> <span class=\"nu0\">512</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">const</span> <span class=\"kw4\">long</span> <span class=\"kw4\">double</span> FCT <span class=\"sy1\">=</span> <span class=\"nu16\">2.85</span>, hFCT <span class=\"sy1\">=</span> FCT <span class=\"sy2\">/</span> <span class=\"nu16\">2.0</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> myBitmap <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    myBitmap<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> pen<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span>, brush<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span>, clr<span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span>, wid<span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    ~myBitmap<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        DeleteObject<span class=\"br0\">(</span> pen <span class=\"br0\">)</span><span class=\"sy4\">;</span> DeleteObject<span class=\"br0\">(</span> brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        DeleteDC<span class=\"br0\">(</span> hdc <span class=\"br0\">)</span><span class=\"sy4\">;</span> DeleteObject<span class=\"br0\">(</span> bmp <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">bool</span> create<span class=\"br0\">(</span> <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        BITMAPINFO bi<span class=\"sy4\">;</span><br/>        ZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>bi, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bi <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSize</span>        <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bi.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biBitCount</span>    <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biCompression</span> <span class=\"sy1\">=</span> BI_RGB<span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biPlanes</span>      <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biWidth</span>       <span class=\"sy1\">=</span>  w<span class=\"sy4\">;</span><br/>        bi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biHeight</span>      <span class=\"sy1\">=</span> <span class=\"sy2\">-</span>h<span class=\"sy4\">;</span><br/>        HDC dc <span class=\"sy1\">=</span> GetDC<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        bmp <span class=\"sy1\">=</span> CreateDIBSection<span class=\"br0\">(</span> dc, <span class=\"sy3\">&amp;</span>bi, DIB_RGB_COLORS, <span class=\"sy3\">&amp;</span>pBits, <span class=\"kw2\">NULL</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>bmp <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>        hdc <span class=\"sy1\">=</span> CreateCompatibleDC<span class=\"br0\">(</span> dc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        SelectObject<span class=\"br0\">(</span> hdc, bmp <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        ReleaseDC<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span>, dc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        width <span class=\"sy1\">=</span> w<span class=\"sy4\">;</span> height <span class=\"sy1\">=</span> h<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> clear<span class=\"br0\">(</span> BYTE clr <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">memset</span><span class=\"br0\">(</span> pBits, clr, width <span class=\"sy2\">*</span> height <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setBrushColor<span class=\"br0\">(</span> DWORD bClr <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> brush <span class=\"br0\">)</span> DeleteObject<span class=\"br0\">(</span> brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        brush <span class=\"sy1\">=</span> CreateSolidBrush<span class=\"br0\">(</span> bClr <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        SelectObject<span class=\"br0\">(</span> hdc, brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setPenColor<span class=\"br0\">(</span> DWORD c <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        clr <span class=\"sy1\">=</span> c<span class=\"sy4\">;</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setPenWidth<span class=\"br0\">(</span> <span class=\"kw4\">int</span> w <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        wid <span class=\"sy1\">=</span> w<span class=\"sy4\">;</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> saveBitmap<span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span> path <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        BITMAPFILEHEADER fileheader<span class=\"sy4\">;</span><br/>        BITMAPINFO       infoheader<span class=\"sy4\">;</span><br/>        BITMAP           bitmap<span class=\"sy4\">;</span><br/>        DWORD            wb<span class=\"sy4\">;</span><br/>        GetObject<span class=\"br0\">(</span> bmp, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bitmap <span class=\"br0\">)</span>, <span class=\"sy3\">&amp;</span>bitmap <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        DWORD<span class=\"sy2\">*</span> dwpBits <span class=\"sy1\">=</span> <span class=\"kw3\">new</span> DWORD<span class=\"br0\">[</span>bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>        ZeroMemory<span class=\"br0\">(</span> dwpBits, bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span> <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        ZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>infoheader, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPINFO <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        ZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>fileheader, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPFILEHEADER <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biBitCount</span> <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span><br/>        infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biCompression</span> <span class=\"sy1\">=</span> BI_RGB<span class=\"sy4\">;</span><br/>        infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biPlanes</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>        infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSize</span> <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> infoheader.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biHeight</span> <span class=\"sy1\">=</span> bitmap.<span class=\"me1\">bmHeight</span><span class=\"sy4\">;</span><br/>        infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biWidth</span> <span class=\"sy1\">=</span> bitmap.<span class=\"me1\">bmWidth</span><span class=\"sy4\">;</span><br/>        infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSizeImage</span> <span class=\"sy1\">=</span> bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span> <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        fileheader.<span class=\"me1\">bfType</span>    <span class=\"sy1\">=</span> <span class=\"nu12\">0x4D42</span><span class=\"sy4\">;</span><br/>        fileheader.<span class=\"me1\">bfOffBits</span> <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> infoheader.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPFILEHEADER <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        fileheader.<span class=\"me1\">bfSize</span>    <span class=\"sy1\">=</span> fileheader.<span class=\"me1\">bfOffBits</span> <span class=\"sy2\">+</span> infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSizeImage</span><span class=\"sy4\">;</span><br/>        GetDIBits<span class=\"br0\">(</span> hdc, bmp, <span class=\"nu0\">0</span>, height, <span class=\"br0\">(</span> LPVOID <span class=\"br0\">)</span>dwpBits, <span class=\"sy3\">&amp;</span>infoheader, DIB_RGB_COLORS <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        HANDLE file <span class=\"sy1\">=</span> CreateFile<span class=\"br0\">(</span> path.<span class=\"me1\">c_str</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, GENERIC_WRITE, <span class=\"nu0\">0</span>, <span class=\"kw2\">NULL</span>, CREATE_ALWAYS, <br/>            FILE_ATTRIBUTE_NORMAL, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        WriteFile<span class=\"br0\">(</span> file, <span class=\"sy3\">&amp;</span>fileheader, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPFILEHEADER <span class=\"br0\">)</span>, <span class=\"sy3\">&amp;</span>wb, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        WriteFile<span class=\"br0\">(</span> file, <span class=\"sy3\">&amp;</span>infoheader.<span class=\"me1\">bmiHeader</span>, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> infoheader.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span>, <span class=\"sy3\">&amp;</span>wb, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        WriteFile<span class=\"br0\">(</span> file, dwpBits, bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span> <span class=\"sy2\">*</span> <span class=\"nu0\">4</span>, <span class=\"sy3\">&amp;</span>wb, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        CloseHandle<span class=\"br0\">(</span> file <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw3\">delete</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> dwpBits<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    HDC getDC<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span>     <span class=\"br0\">{</span> <span class=\"kw1\">return</span> hdc<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span>  <span class=\"br0\">{</span> <span class=\"kw1\">return</span> width<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> height<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    DWORD<span class=\"sy2\">*</span> bits<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span> DWORD<span class=\"sy2\">*</span> <span class=\"br0\">)</span>pBits<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> pen <span class=\"br0\">)</span> DeleteObject<span class=\"br0\">(</span> pen <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        pen <span class=\"sy1\">=</span> CreatePen<span class=\"br0\">(</span> PS_SOLID, wid, clr <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        SelectObject<span class=\"br0\">(</span> hdc, pen <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    HBITMAP bmp<span class=\"sy4\">;</span> HDC    hdc<span class=\"sy4\">;</span><br/>    HPEN    pen<span class=\"sy4\">;</span> HBRUSH brush<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">void</span>    <span class=\"sy2\">*</span>pBits<span class=\"sy4\">;</span> <span class=\"kw4\">int</span>    width, height, wid<span class=\"sy4\">;</span><br/>    DWORD    clr<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw2\">class</span> julia <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> draw<span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">complex</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">long</span> <span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> k <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        bmp.<span class=\"me1\">create</span><span class=\"br0\">(</span> BMP_SIZE, BMP_SIZE <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        DWORD<span class=\"sy2\">*</span> bits <span class=\"sy1\">=</span> bmp.<span class=\"me1\">bits</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw4\">int</span> res, pos<span class=\"sy4\">;</span><br/>        std<span class=\"sy4\">::</span><span class=\"me2\">complex</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">long</span> <span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> c, factor<span class=\"br0\">(</span> FCT <span class=\"sy2\">/</span> BMP_SIZE, FCT <span class=\"sy2\">/</span> BMP_SIZE <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> BMP_SIZE<span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            pos <span class=\"sy1\">=</span> y <span class=\"sy2\">*</span> BMP_SIZE<span class=\"sy4\">;</span><br/>\u00a0<br/>            c.<span class=\"me1\">imag</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> factor.<span class=\"me1\">imag</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> y <span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"sy2\">-</span>hFCT <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> BMP_SIZE<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                c.<span class=\"me1\">real</span><span class=\"br0\">(</span> factor.<span class=\"me1\">real</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> x <span class=\"sy2\">+</span> <span class=\"sy2\">-</span>hFCT <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>                res <span class=\"sy1\">=</span> inSet<span class=\"br0\">(</span> c, k <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> res <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">int</span> n_res <span class=\"sy1\">=</span> res <span class=\"sy2\">%</span> <span class=\"nu0\">255</span><span class=\"sy4\">;</span><br/>                    <span class=\"kw1\">if</span><span class=\"br0\">(</span> res <span class=\"sy1\">&lt;</span> <span class=\"br0\">(</span> ITERATIONS <span class=\"sy1\">&gt;&gt;</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> res <span class=\"sy1\">=</span> RGB<span class=\"br0\">(</span> n_res <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu0\">2</span>, n_res <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu0\">3</span>, n_res <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>                    <span class=\"kw1\">else</span> res <span class=\"sy1\">=</span> RGB<span class=\"br0\">(</span> n_res <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu0\">4</span>, n_res <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu0\">2</span>, n_res <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu0\">5</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>                <span class=\"br0\">}</span><br/>                bits<span class=\"br0\">[</span>pos<span class=\"sy2\">++</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> res<span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        bmp.<span class=\"me1\">saveBitmap</span><span class=\"br0\">(</span> <span class=\"st0\">\"./js.bmp\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int</span> inSet<span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">complex</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">long</span> <span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> z, std<span class=\"sy4\">::</span><span class=\"me2\">complex</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">long</span> <span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> c <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">long</span> <span class=\"kw4\">double</span> dist<span class=\"sy4\">;</span><span class=\"co1\">//, three = 3.0;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> ec <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> ec <span class=\"sy1\">&lt;</span> ITERATIONS<span class=\"sy4\">;</span> ec<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            z <span class=\"sy1\">=</span> z <span class=\"sy2\">*</span> z<span class=\"sy4\">;</span> z <span class=\"sy1\">=</span> z <span class=\"sy2\">+</span> c<span class=\"sy4\">;</span><br/>            dist <span class=\"sy1\">=</span> <span class=\"br0\">(</span> z.<span class=\"me1\">imag</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> z.<span class=\"me1\">imag</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"br0\">(</span> z.<span class=\"me1\">real</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> z.<span class=\"me1\">real</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> dist <span class=\"sy1\">&gt;</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"br0\">(</span> ec <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    myBitmap bmp<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"kw4\">int</span> argc, <span class=\"kw4\">char</span><span class=\"sy2\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    std<span class=\"sy4\">::</span><span class=\"me2\">complex</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">long</span> <span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> c<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">long</span> <span class=\"kw4\">double</span> factor <span class=\"sy1\">=</span> FCT <span class=\"sy2\">/</span> BMP_SIZE<span class=\"sy4\">;</span><br/>    c.<span class=\"me1\">imag</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> factor <span class=\"sy2\">*</span> <span class=\"nu0\">184</span> <span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"sy2\">-</span><span class=\"nu16\">1.4</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    c.<span class=\"me1\">real</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> factor <span class=\"sy2\">*</span> <span class=\"nu0\">307</span> <span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"sy2\">-</span><span class=\"nu16\">2.0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    julia j<span class=\"sy4\">;</span> j.<span class=\"me1\">draw</span><span class=\"br0\">(</span> c <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span>    <br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 49, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System.Drawing</span><span class=\"sy0\">;</span><br/><span class=\"co1\">// Note: You have to add the System.Drawing assembly </span><br/><span class=\"co1\">//  (right-click \"references,\" Add Reference, Assemblies, Framework,</span><br/><span class=\"co1\">//    System.Drawing, OK)</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> RosettaJuliaSet<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> w <span class=\"sy0\">=</span> <span class=\"nu0\">800</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> h <span class=\"sy0\">=</span> <span class=\"nu0\">600</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> zoom <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> maxiter <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> moveX <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> moveY <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">double</span> cX <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.7</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">double</span> cY <span class=\"sy0\">=</span> <span class=\"nu0\">0.27015</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">double</span> zx, zy, tmp<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> colors <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">from</span> c <span class=\"kw1\">in</span> Enumerable<span class=\"sy0\">.</span><span class=\"me1\">Range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>                          <span class=\"kw1\">select</span> Color<span class=\"sy0\">.</span><span class=\"me1\">FromArgb</span><span class=\"br0\">(</span><span class=\"br0\">(</span>c <span class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">36</span>, <span class=\"br0\">(</span>c <span class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">3</span> <span class=\"sy0\">&amp;</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">36</span>, <span class=\"br0\">(</span>c <span class=\"sy0\">&amp;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">85</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> bitmap <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Bitmap<span class=\"br0\">(</span>w, h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> y<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    zx <span class=\"sy0\">=</span> <span class=\"nu0\">1.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> w <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> w<span class=\"br0\">)</span> <span class=\"sy0\">+</span> moveX<span class=\"sy0\">;</span><br/>                    zy <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> h <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> h<span class=\"br0\">)</span> <span class=\"sy0\">+</span> moveY<span class=\"sy0\">;</span><br/>                    i <span class=\"sy0\">=</span> maxiter<span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>zx <span class=\"sy0\">*</span> zx <span class=\"sy0\">+</span> zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        tmp <span class=\"sy0\">=</span> zx <span class=\"sy0\">*</span> zx <span class=\"sy0\">-</span> zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">+</span> cX<span class=\"sy0\">;</span><br/>                        zy <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> zx <span class=\"sy0\">*</span> zy <span class=\"sy0\">+</span> cY<span class=\"sy0\">;</span><br/>                        zx <span class=\"sy0\">=</span> tmp<span class=\"sy0\">;</span><br/>                        i <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    bitmap<span class=\"sy0\">.</span><span class=\"me1\">SetPixel</span><span class=\"br0\">(</span>x, y, colors<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            bitmap<span class=\"sy0\">.</span><span class=\"me1\">Save</span><span class=\"br0\">(</span><span class=\"st0\">\"julia-set.png\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 59, "block": "<pre class=\"cobol highlighted_source\"><span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> JULIA-SET-<span class=\"kw3\">PROGRAM</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  WS-COMPLEX-CONSTANT<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> C-REAL             <span class=\"kw3\">PIC</span> S9V999<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> C-IMAGINARY        <span class=\"kw3\">PIC</span> S9V999<span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  WS-ARGAND-PLANE<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> X                  <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> Y                  <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  WS-COMPLEX-VARIABLE<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> Z-REAL             <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> Z-IMAGINARY        <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  WS-TEMPORARY-RESULTS<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> X-SQUARED          <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> Y-SQUARED          <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> X-TIMES-Y          <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> Z-REAL-SQUARED     <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>V999<span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  WS-LOOP-COUNTERS<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> HORIZONTAL         <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> VERTICAL           <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> ITERATIONS         <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">77</span>  WS-PLOT-<span class=\"kw3\">CHARACTER</span>     <span class=\"kw3\">PIC</span> X<span class=\"sy0\">.</span><br/><span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>INPUT-COMPLEX-CONSTANT-PARAGRAPH<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">ACCEPT</span> C-REAL      <span class=\"kw3\">FROM</span> CONSOLE<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">ACCEPT</span> C-IMAGINARY <span class=\"kw3\">FROM</span> CONSOLE<span class=\"sy0\">.</span><br/>CONTROL-PARAGRAPH<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">PERFORM</span> OUTER-LOOP-PARAGRAPH  <span class=\"kw2\">VARYING</span> VERTICAL   <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">10</span><br/>    <span class=\"kw2\">UNTIL</span> VERTICAL <span class=\"kw3\">IS</span> <span class=\"kw3\">GREATER</span> <span class=\"kw3\">THAN</span> <span class=\"nu0\">320</span><span class=\"sy0\">.</span><br/>    <span class=\"kw3\">STOP</span> <span class=\"kw3\">RUN</span><span class=\"sy0\">.</span><br/>OUTER-LOOP-PARAGRAPH<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">PERFORM</span> COMPUTATION-PARAGRAPH <span class=\"kw2\">VARYING</span> HORIZONTAL <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">10</span><br/>    <span class=\"kw2\">UNTIL</span> HORIZONTAL <span class=\"kw3\">IS</span> <span class=\"kw3\">GREATER</span> <span class=\"kw3\">THAN</span> <span class=\"nu0\">560</span><span class=\"sy0\">.</span><br/>    <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">''</span> <span class=\"kw3\">UPON</span> CONSOLE<span class=\"sy0\">.</span><br/>COMPUTATION-PARAGRAPH<span class=\"sy0\">.</span><br/>    <span class=\"kw3\">SUBTRACT</span> <span class=\"nu0\">280</span>   <span class=\"kw3\">FROM</span> HORIZONTAL <span class=\"kw2\">GIVING</span> X<span class=\"sy0\">.</span><br/>    <span class=\"kw3\">SUBTRACT</span> <span class=\"nu0\">160</span>   <span class=\"kw3\">FROM</span> VERTICAL   <span class=\"kw2\">GIVING</span> Y<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">DIVIDE</span>   X     <span class=\"kw3\">BY</span>   <span class=\"nu0\">200</span>        <span class=\"kw2\">GIVING</span> X<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">DIVIDE</span>   Y     <span class=\"kw3\">BY</span>   <span class=\"nu0\">100</span>        <span class=\"kw2\">GIVING</span> Y<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MOVE</span>     <span class=\"st0\">'#'</span>   <span class=\"kw2\">TO</span>   WS-PLOT-<span class=\"kw3\">CHARACTER</span><span class=\"sy0\">.</span><br/>    <span class=\"kw2\">PERFORM</span> COMPLEX-MULTIPLICATION-PARAGRAPH<br/>    <span class=\"kw2\">VARYING</span> ITERATIONS <span class=\"kw3\">FROM</span>   <span class=\"nu0\">1</span>  <span class=\"kw3\">BY</span>      <span class=\"nu0\">1</span><br/>    <span class=\"kw2\">UNTIL</span>   ITERATIONS        <span class=\"kw3\">IS</span> <span class=\"kw3\">GREATER</span> <span class=\"kw3\">THAN</span> <span class=\"nu0\">50</span><br/>    <span class=\"kw3\">OR</span>      WS-PLOT-<span class=\"kw3\">CHARACTER</span> <span class=\"kw3\">IS</span> <span class=\"kw3\">EQUAL</span>   <span class=\"kw2\">TO</span>   <span class=\"kw3\">SPACE</span><span class=\"sy0\">.</span><br/>    <span class=\"kw2\">DISPLAY</span> WS-PLOT-<span class=\"kw3\">CHARACTER</span> <span class=\"kw3\">UPON</span> CONSOLE <span class=\"kw3\">WITH</span> <span class=\"kw3\">NO</span> <span class=\"kw3\">ADVANCING</span><span class=\"sy0\">.</span><br/>COMPLEX-MULTIPLICATION-PARAGRAPH<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MULTIPLY</span> X         <span class=\"kw3\">BY</span>   X         <span class=\"kw2\">GIVING</span> X-SQUARED<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MULTIPLY</span> Y         <span class=\"kw3\">BY</span>   Y         <span class=\"kw2\">GIVING</span> Y-SQUARED<span class=\"sy0\">.</span><br/>    <span class=\"kw3\">SUBTRACT</span> Y-SQUARED <span class=\"kw3\">FROM</span> X-SQUARED <span class=\"kw2\">GIVING</span> Z-REAL<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">ADD</span>      C-REAL    <span class=\"kw2\">TO</span>   Z-REAL<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MULTIPLY</span> X         <span class=\"kw3\">BY</span>   Y         <span class=\"kw2\">GIVING</span> X-TIMES-Y<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MULTIPLY</span> X-TIMES-Y <span class=\"kw3\">BY</span>   <span class=\"nu0\">2</span>         <span class=\"kw2\">GIVING</span> Z-IMAGINARY<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">ADD</span> C-IMAGINARY    <span class=\"kw2\">TO</span>   Z-IMAGINARY<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MULTIPLY</span> Z-REAL    <span class=\"kw3\">BY</span>   Z-REAL    <span class=\"kw2\">GIVING</span> Z-REAL-SQUARED<span class=\"sy0\">.</span><br/>    <span class=\"kw1\">IF</span>  Z-REAL-SQUARED <span class=\"kw3\">IS</span>   <span class=\"kw3\">GREATER</span>   <span class=\"kw3\">THAN</span>   <span class=\"nu0\">10000</span> <span class=\"kw3\">THEN</span><br/>    <span class=\"kw2\">MOVE</span> <span class=\"kw3\">SPACE</span>         <span class=\"kw2\">TO</span>   WS-PLOT-<span class=\"kw3\">CHARACTER</span><span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MOVE</span> Z-REAL        <span class=\"kw2\">TO</span>   X<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MOVE</span> Z-IMAGINARY   <span class=\"kw2\">TO</span>   Y<span class=\"sy0\">.</span></pre>"}, {"lang": "Elixir", "loc": 25, "block": "<pre class=\"text highlighted_source\">defmodule Julia do<br/>  def set(c_real, c_imag) do<br/>    IO.puts \"#{c_real}, #{c_imag}\"<br/>    vlist = Enum.take_every(-100..100, 4)<br/>    hlist = Enum.take_every(-280..280, 4)<br/>    Enum.each(vlist, fn v -&gt;<br/>      Enum.map(hlist, fn h -&gt;<br/>        loop(c_real, c_imag, h/200, v/100, \"#\", 0)<br/>      end) |&gt; IO.puts<br/>    end)<br/>  end<br/>\u00a0<br/>  defp loop(_, _, _, _, char, i) when i&gt;=50, do: char<br/>  defp loop(_, _, _, _, \" \", _), do: \" \"<br/>  defp loop(c_real, c_imag, x, y, char, i) do<br/>    z_real = (x * x - y * y) + c_real<br/>    z_imag = x * y * 2 + c_imag<br/>    char = if z_real * z_real &gt; 10000, do: \" \", else: char<br/>    loop(c_real, c_imag, z_real, z_imag, char, i+1)<br/>  end<br/>end<br/>\u00a0<br/>c_real = if r=Enum.at(System.argv, 0), do: Float.parse(r) |&gt; elem(0), else: -0.8<br/>c_imag = if c=Enum.at(System.argv, 1), do: Float.parse(c) |&gt; elem(0), else: 0.156<br/>Julia.set(c_real, c_imag)</pre>"}, {"lang": "F#", "loc": 12, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"kw1\">let</span> getJuliaValues width height centerX centerY zoom maxIter <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> initzx x <span class=\"sy0\">=</span> <span class=\"nu0\">1.5</span> <span class=\"sy0\">*</span> <span class=\"kw4\">float</span><span class=\"br0\">(</span>x <span class=\"sy0\">-</span> width<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> <span class=\"kw4\">float</span><span class=\"br0\">(</span>width<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> initzy y <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">*</span> <span class=\"kw4\">float</span><span class=\"br0\">(</span>y <span class=\"sy0\">-</span> height<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> <span class=\"kw4\">float</span><span class=\"br0\">(</span>height<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> calc y x <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> loop i zx zy <span class=\"sy0\">=</span><br/>      <span class=\"kw1\">if</span> i<span class=\"sy0\">=</span>maxIter <span class=\"kw1\">then</span> <span class=\"nu0\">0</span><br/>      <span class=\"kw1\">elif</span> zx<span class=\"sy0\">*</span>zx <span class=\"sy0\">+</span> zy<span class=\"sy0\">*</span>zy <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">4.0</span> <span class=\"kw1\">then</span> i<br/>      <span class=\"kw1\">else</span> loop <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>zx<span class=\"sy0\">*</span>zx <span class=\"sy0\">-</span> zy<span class=\"sy0\">*</span>zy <span class=\"sy0\">+</span> centerX<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"sy0\">*</span>zx<span class=\"sy0\">*</span>zy <span class=\"sy0\">+</span> centerY<span class=\"br0\">)</span><br/>    loop <span class=\"nu0\">0</span> <span class=\"br0\">(</span>initzx x<span class=\"br0\">)</span> <span class=\"br0\">(</span>initzy y<span class=\"br0\">)</span><br/>  <span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"me1\">height</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> y<span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"me1\">width</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">map</span> <span class=\"br0\">(</span>calc y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Go", "loc": 53, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"image\"</span><br/>\t<span class=\"st0\">\"image/color\"</span><br/>\t<span class=\"st0\">\"image/png\"</span><br/>\t<span class=\"st0\">\"log\"</span><br/>\t<span class=\"st0\">\"os\"</span><br/>\t<span class=\"st0\">\"sync\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">const</span> <span class=\"sy1\">(</span><br/>\t\twidth<span class=\"sy1\">,</span> height <span class=\"sy2\">=</span> <span class=\"nu0\">800</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">600</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>\t\tmaxIter       <span class=\"sy2\">=</span> <span class=\"nu0\">255</span><br/>\t\tcX<span class=\"sy1\">,</span> cY        <span class=\"sy2\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">27015</span><br/>\t\tfileName      <span class=\"sy2\">=</span> <span class=\"st0\">\"julia.png\"</span><br/>\t<span class=\"sy1\">)</span><br/>\timg <span class=\"sy2\">:=</span> image<span class=\"sy3\">.</span>NewNRGBA<span class=\"sy1\">(</span>image<span class=\"sy3\">.</span>Rect<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> width<span class=\"sy1\">,</span> height<span class=\"sy1\">))</span><br/>\u00a0<br/>\t<span class=\"kw1\">var</span> wg sync<span class=\"sy3\">.</span>WaitGroup<br/>\twg<span class=\"sy3\">.</span>Add<span class=\"sy1\">(</span>width<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">for</span> x <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> x &lt; width<span class=\"sy1\">;</span> x<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\tthisx <span class=\"sy2\">:=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>x<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">go</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">var</span> tmp<span class=\"sy1\">,</span> zx<span class=\"sy1\">,</span> zy <span class=\"kw4\">float64</span><br/>\t\t\t<span class=\"kw1\">var</span> <span class=\"nu2\">i</span> <span class=\"kw4\">uint8</span><br/>\t\t\t<span class=\"kw1\">for</span> y <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><span class=\"sy1\">;</span> y &lt; height<span class=\"sy1\">;</span> y<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\t\tzx <span class=\"sy2\">=</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span> <span class=\"sy3\">*</span> <span class=\"sy1\">(</span>thisx <span class=\"sy3\">-</span> width<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span> <span class=\"sy3\">/</span> <span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span> <span class=\"sy3\">*</span> width<span class=\"sy1\">)</span><br/>\t\t\t\tzy <span class=\"sy2\">=</span> <span class=\"sy1\">(</span>y <span class=\"sy3\">-</span> height<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span> <span class=\"sy3\">/</span> <span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span> <span class=\"sy3\">*</span> height<span class=\"sy1\">)</span><br/>\t\t\t\t<span class=\"nu2\">i</span> <span class=\"sy2\">=</span> maxIter<br/>\t\t\t\t<span class=\"kw1\">for</span> zx<span class=\"sy3\">*</span>zx<span class=\"sy3\">+</span>zy<span class=\"sy3\">*</span>zy &lt; <span class=\"nu0\">4</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span> &amp;&amp; <span class=\"nu2\">i</span> &gt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t\t\ttmp <span class=\"sy2\">=</span> zx<span class=\"sy3\">*</span>zx <span class=\"sy3\">-</span> zy<span class=\"sy3\">*</span>zy <span class=\"sy3\">+</span> cX<br/>\t\t\t\t\tzy <span class=\"sy2\">=</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><span class=\"sy3\">*</span>zx<span class=\"sy3\">*</span>zy <span class=\"sy3\">+</span> cY<br/>\t\t\t\t\tzx <span class=\"sy2\">=</span> tmp<br/>\t\t\t\t\t<span class=\"nu2\">i</span><span class=\"sy2\">--</span><br/>\t\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t\timg<span class=\"sy3\">.</span>Set<span class=\"sy1\">(</span><span class=\"kw4\">int</span><span class=\"sy1\">(</span>thisx<span class=\"sy1\">),</span> <span class=\"kw4\">int</span><span class=\"sy1\">(</span>y<span class=\"sy1\">),</span> color<span class=\"sy3\">.</span>RGBA<span class=\"sy1\">{</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> <span class=\"nu2\">i</span> &lt;&lt; <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">255</span><span class=\"sy1\">})</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\twg<span class=\"sy3\">.</span>Done<span class=\"sy1\">()</span><br/>\t\t<span class=\"sy1\">}()</span><br/>\t<span class=\"sy1\">}</span><br/>\twg<span class=\"sy3\">.</span>Wait<span class=\"sy1\">()</span><br/>\timgFile<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Create<span class=\"sy1\">(</span>fileName<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\tlog<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">defer</span> imgFile<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">:=</span> png<span class=\"sy3\">.</span>Encode<span class=\"sy1\">(</span>imgFile<span class=\"sy1\">,</span> img<span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\timgFile<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\t\tlog<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "J", "loc": 4, "block": "<pre class=\"j highlighted_source\">load <span class=\"st_h\">'~addons/graphics/fvj4/complex_dynamics.ijs'</span><br/>pal2=: <span class=\"nu0\">255</span>,~<span class=\"nu0\">0</span>,&lt;.<span class=\"sy0\">(</span><span class=\"nu0\">254</span>$<span class=\"nu0\">1</span> <span class=\"nu0\">0.8</span> <span class=\"nu0\">0.6</span><span class=\"sy0\">)</span>*Hue <span class=\"nu0\">5r6</span>*<span class=\"sy0\">(</span>i.%&lt;:<span class=\"sy0\">)</span><span class=\"nu0\">254</span><br/>g=: [:\u00a0%: <span class=\"nu0\">0.3746j0.102863</span> <span class=\"nu0\">0.132565j0.389103</span> <span class=\"nu0\">_0.373935j_0.353777</span> <span class=\"nu0\">1</span>&amp;p.<br/>view_image pal2;b=:g escapetc <span class=\"sy0\">(</span><span class=\"nu0\">10</span> <span class=\"nu0\">255</span><span class=\"sy0\">)</span> <span class=\"nu0\">500</span> zl_clur <span class=\"nu0\">_1.5</span> <span class=\"nu0\">1.5j1.5</span></pre>"}, {"lang": "Java", "loc": 65, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.image.BufferedImage</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> JuliaSet <span class=\"kw1\">extends</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajpanel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JPanel</span></a> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> maxIter <span class=\"sy0\">=</span> <span class=\"nu0\">300</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">double</span> zoom <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">double</span> cY, cX<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> JuliaSet<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        setPreferredSize<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a><span class=\"br0\">(</span><span class=\"nu0\">800</span>, <span class=\"nu0\">600</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        setBackground<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">white</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> drawJuliaSet<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> w <span class=\"sy0\">=</span> getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> h <span class=\"sy0\">=</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a> image <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a><span class=\"br0\">(</span>w, h,<br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a>.<span class=\"me1\">TYPE_INT_RGB</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        cX <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.7</span><span class=\"sy0\">;</span><br/>        cY <span class=\"sy0\">=</span> <span class=\"nu0\">0.27015</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> moveX <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, moveY <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> zx, zy<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> y<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                zx <span class=\"sy0\">=</span> <span class=\"nu0\">1.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> w <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> w<span class=\"br0\">)</span> <span class=\"sy0\">+</span> moveX<span class=\"sy0\">;</span><br/>                zy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> h <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> h<span class=\"br0\">)</span> <span class=\"sy0\">+</span> moveY<span class=\"sy0\">;</span><br/>                <span class=\"kw4\">float</span> i <span class=\"sy0\">=</span> maxIter<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">while</span> <span class=\"br0\">(</span>zx <span class=\"sy0\">*</span> zx <span class=\"sy0\">+</span> zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">double</span> tmp <span class=\"sy0\">=</span> zx <span class=\"sy0\">*</span> zx <span class=\"sy0\">-</span> zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">+</span> cX<span class=\"sy0\">;</span><br/>                    zy <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> zx <span class=\"sy0\">*</span> zy <span class=\"sy0\">+</span> cY<span class=\"sy0\">;</span><br/>                    zx <span class=\"sy0\">=</span> tmp<span class=\"sy0\">;</span><br/>                    i<span class=\"sy0\">--;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">HSBtoRGB</span><span class=\"br0\">(</span><span class=\"br0\">(</span>maxIter <span class=\"sy0\">/</span> i<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                image.<span class=\"me1\">setRGB</span><span class=\"br0\">(</span>x, y, c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        g.<span class=\"me1\">drawImage</span><span class=\"br0\">(</span>image, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> paintComponent<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> gg<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">super</span>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a><span class=\"br0\">)</span> gg<span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">KEY_ANTIALIASING</span>,<br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        drawJuliaSet<span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aswingutilities+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SwingUtilities</span></a>.<span class=\"me1\">invokeLater</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a> f <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setDefaultCloseOperation</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a>.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setTitle</span><span class=\"br0\">(</span><span class=\"st0\">\"Julia Set\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setResizable</span><span class=\"br0\">(</span><span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> JuliaSet<span class=\"br0\">(</span><span class=\"br0\">)</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aborderlayout+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BorderLayout</span></a>.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setLocationRelativeTo</span><span class=\"br0\">(</span><span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setVisible</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 58, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"kw1\">var</span> maxIterations <span class=\"sy0\">=</span> <span class=\"nu0\">450</span><span class=\"sy0\">,</span> minX <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>.5<span class=\"sy0\">,</span> maxX <span class=\"sy0\">=</span> .5<span class=\"sy0\">,</span> <br/>    minY <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>.5<span class=\"sy0\">,</span> maxY <span class=\"sy0\">=</span> .5<span class=\"sy0\">,</span> wid<span class=\"sy0\">,</span> hei<span class=\"sy0\">,</span> ctx<span class=\"sy0\">,</span><br/>    jsX <span class=\"sy0\">=</span> <span class=\"nu0\">0.285</span><span class=\"sy0\">,</span> jsY <span class=\"sy0\">=</span> <span class=\"nu0\">0.01</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> remap<span class=\"br0\">(</span> x<span class=\"sy0\">,</span> t1<span class=\"sy0\">,</span> t2<span class=\"sy0\">,</span> s1<span class=\"sy0\">,</span> s2 <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> f <span class=\"sy0\">=</span> <span class=\"br0\">(</span> x <span class=\"sy0\">-</span> t1 <span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span> t2 <span class=\"sy0\">-</span> t1 <span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        g <span class=\"sy0\">=</span> f <span class=\"sy0\">*</span> <span class=\"br0\">(</span> s2 <span class=\"sy0\">-</span> s1 <span class=\"br0\">)</span> <span class=\"sy0\">+</span> s1<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> g<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> getColor<span class=\"br0\">(</span> c <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> r<span class=\"sy0\">,</span> g<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> p <span class=\"sy0\">=</span> c <span class=\"sy0\">/</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span><br/>        l <span class=\"sy0\">=</span> ~~<span class=\"br0\">(</span> p <span class=\"sy0\">*</span> <span class=\"nu0\">6</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> o <span class=\"sy0\">=</span> p <span class=\"sy0\">*</span> <span class=\"nu0\">6</span> <span class=\"sy0\">-</span> l<span class=\"sy0\">,</span> <br/>        q <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> o<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">switch</span><span class=\"br0\">(</span> l <span class=\"sy0\">%</span> <span class=\"nu0\">6</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> g <span class=\"sy0\">=</span> o<span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> r <span class=\"sy0\">=</span> q<span class=\"sy0\">;</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> o<span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> g <span class=\"sy0\">=</span> q<span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span> r <span class=\"sy0\">=</span> o<span class=\"sy0\">;</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">:</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> g <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> q<span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">var</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"#\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> <span class=\"st0\">\"00\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> ~~<span class=\"br0\">(</span> r <span class=\"sy0\">*</span> <span class=\"nu0\">255</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span> <span class=\"nu0\">16</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>.<span class=\"me1\">slice</span><span class=\"br0\">(</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"sy0\">+</span> <br/>                  <span class=\"br0\">(</span> <span class=\"st0\">\"00\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> ~~<span class=\"br0\">(</span> g <span class=\"sy0\">*</span> <span class=\"nu0\">255</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span> <span class=\"nu0\">16</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>.<span class=\"me1\">slice</span><span class=\"br0\">(</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"sy0\">+</span> <br/>                  <span class=\"br0\">(</span> <span class=\"st0\">\"00\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> ~~<span class=\"br0\">(</span> b <span class=\"sy0\">*</span> <span class=\"nu0\">255</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span> <span class=\"nu0\">16</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>.<span class=\"me1\">slice</span><span class=\"br0\">(</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> drawFractal<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> a<span class=\"sy0\">,</span> as<span class=\"sy0\">,</span> za<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> bs<span class=\"sy0\">,</span> zb<span class=\"sy0\">,</span> cnt<span class=\"sy0\">,</span> clr<br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> hei<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> wid<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            a <span class=\"sy0\">=</span> remap<span class=\"br0\">(</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> wid<span class=\"sy0\">,</span> minX<span class=\"sy0\">,</span> maxX <span class=\"br0\">)</span><br/>            b <span class=\"sy0\">=</span> remap<span class=\"br0\">(</span> j<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> hei<span class=\"sy0\">,</span> minY<span class=\"sy0\">,</span> maxY <span class=\"br0\">)</span><br/>            cnt <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            while<span class=\"br0\">(</span> <span class=\"sy0\">++</span>cnt <span class=\"sy0\">&lt;</span> maxIterations <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                za <span class=\"sy0\">=</span> a <span class=\"sy0\">*</span> a<span class=\"sy0\">;</span> zb <span class=\"sy0\">=</span> b <span class=\"sy0\">*</span> b<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> za <span class=\"sy0\">+</span> zb <span class=\"sy0\">&gt;</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                as <span class=\"sy0\">=</span> za <span class=\"sy0\">-</span> zb<span class=\"sy0\">;</span> bs <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> a <span class=\"sy0\">*</span> b<span class=\"sy0\">;</span><br/>                a <span class=\"sy0\">=</span> as <span class=\"sy0\">+</span> jsX<span class=\"sy0\">;</span> b <span class=\"sy0\">=</span> bs <span class=\"sy0\">+</span> jsY<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> cnt <span class=\"sy0\">&lt;</span> maxIterations <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> getColor<span class=\"br0\">(</span> cnt <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            ctx.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> init<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> canvas <span class=\"sy0\">=</span> document.<span class=\"me1\">createElement</span><span class=\"br0\">(</span> <span class=\"st0\">\"canvas\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    wid <span class=\"sy0\">=</span> hei <span class=\"sy0\">=</span> <span class=\"nu0\">800</span><span class=\"sy0\">;</span><br/>    canvas.<span class=\"me1\">width</span> <span class=\"sy0\">=</span> wid<span class=\"sy0\">;</span> canvas.<span class=\"me1\">height</span> <span class=\"sy0\">=</span> hei<span class=\"sy0\">;</span><br/>    ctx <span class=\"sy0\">=</span> canvas.<span class=\"me1\">getContext</span><span class=\"br0\">(</span> <span class=\"st0\">\"2d\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"black\"</span><span class=\"sy0\">;</span> ctx.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> wid<span class=\"sy0\">,</span> hei <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    document.<span class=\"me1\">body</span>.<span class=\"me1\">appendChild</span><span class=\"br0\">(</span> canvas <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    drawFractal<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "jq", "loc": 18, "block": "<pre class=\"text highlighted_source\"># Example values:<br/># $re\u00a0: -0.8<br/># $im\u00a0: 0.156<br/>{}<br/>| range(-100; 101; 10) as $v<br/>| (( range (-280; 281; 10) as $h<br/>  | .x = $h / 200<br/>  | .y = $v / 100<br/>  | .plot = \"#\"<br/>  | .i = 0<br/>  | until (.i == 50 or .plot == \".\";<br/>           .i += 1<br/>           | .z_real = ((.x * .x) - (.y * .y) + $re)<br/>           | .z_imag = ((.x * .y * 2) + $im)<br/> \t   | if pow(.z_real; 2) &gt; 10000 then .plot = \" \" <br/>             else .x = .z_real | .y = .z_imag<br/>   \t     end )<br/>  | .plot ), \"\\n\")</pre>"}, {"lang": "Julia", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>function iter(z,c)<br/>  n = 0<br/>  while (abs2(z)&lt;4)  z = z^2+c\u00a0; n+=1 end<br/>  return n<br/>end<br/>\u00a0<br/>coord(i,j,w,h,a,b) = 2*a*(i-1)/(w-1) - a + im * (2*b*(j-1)/(h-1) - b)<br/>\u00a0<br/>palette(n) = string(min(3n,255),\" \", min(n,255),\" \", 0);<br/>\u00a0<br/>julia(c) = (w,h,a,b,i,j) -&gt; palette(iter(coord(i,j,w,h,a,b), c))<br/>\u00a0<br/>writeppm(f; width=600,height=300,a=2,b=1,file=\"julia.ppm\") =<br/>  open(file, \"w\") do out<br/>    write(out, string(\"P3\\n\", width, \" \", height, \"\\n255\\n\"))<br/>    writedlm(out, [f(width,height,a,b,i,j) for j = 1:height, i = 1:width], '\\n')<br/>  end<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 54, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">image</span>.<span class=\"me1\">BufferedImage</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">JFrame</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Julia<span class=\"sy0\">_</span>panel <span class=\"sy0\">:</span> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">JPanel</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    init <span class=\"br0\">{</span><br/>        preferredSize <span class=\"sy0\">=</span> Dimension<span class=\"br0\">(</span><span class=\"nu0\">800</span>, <span class=\"nu0\">600</span><span class=\"br0\">)</span><br/>        background <span class=\"sy0\">=</span> Color.<span class=\"me1\">white</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    public <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun paintComponent<span class=\"br0\">(</span>gg<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a> <span class=\"br0\">(</span>gg as Graphics2D<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            setRenderingHint<span class=\"br0\">(</span>RenderingHints.<span class=\"me1\">KEY_ANTIALIASING</span>, RenderingHints.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> w <span class=\"sy0\">=</span> width<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> h <span class=\"sy0\">=</span> height<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> image <span class=\"sy0\">=</span> BufferedImage<span class=\"br0\">(</span>w, h, BufferedImage.<span class=\"me1\">TYPE_INT_RGB</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x in <span class=\"nu0\">0</span>..<span class=\"me1\">w</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>y in <span class=\"nu0\">0</span>..<span class=\"me1\">h</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> zx <span class=\"sy0\">=</span> <span class=\"nu0\">1.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>x - w / <span class=\"nu0\">2</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> w<span class=\"br0\">)</span> + moveX<br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> zy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>y - h / <span class=\"nu0\">2</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> h<span class=\"br0\">)</span> + moveY<br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> i <span class=\"sy0\">=</span> maxIter.<span class=\"me1\">toFloat</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>zx <span class=\"sy0\">*</span> zx + zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tmp <span class=\"sy0\">=</span> zx <span class=\"sy0\">*</span> zx - zy <span class=\"sy0\">*</span> zy + cX<br/>                        zy <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> zx <span class=\"sy0\">*</span> zy + cY<br/>                        zx <span class=\"sy0\">=</span> tmp<br/>                        i--<br/>                    <span class=\"br0\">}</span><br/>                    image.<span class=\"me1\">setRGB</span><span class=\"br0\">(</span>x, y, Color.<span class=\"me1\">HSBtoRGB</span><span class=\"br0\">(</span>maxIter / i <span class=\"sy0\">%</span> <span class=\"nu0\">1</span>, 1f, <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">toFloat</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            drawImage<span class=\"br0\">(</span>image, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> maxIter <span class=\"sy0\">=</span> <span class=\"nu0\">300</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> zoom <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> moveX <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> moveY <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cY <span class=\"sy0\">=</span> -<span class=\"nu0\">0.7</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cX <span class=\"sy0\">=</span> <span class=\"nu0\">0.27015</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a> <span class=\"br0\">(</span>JFrame<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        defaultCloseOperation <span class=\"sy0\">=</span> JFrame.<span class=\"me1\">EXIT_ON_CLOSE</span><br/>        title <span class=\"sy0\">=</span> <span class=\"st0\">\"Julia Set\"</span><br/>        isResizable <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>        add<span class=\"br0\">(</span>Julia<span class=\"sy0\">_</span>panel<span class=\"br0\">(</span><span class=\"br0\">)</span>, java.<span class=\"me1\">awt</span>.<span class=\"me1\">BorderLayout</span>.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><br/>        pack<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        setLocationRelativeTo<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>        isVisible <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre class=\"text highlighted_source\">JuliaSetPoints[-0.77 + 0.22 I, \"ClosenessTolerance\" -&gt; 0.01]</pre>"}, {"lang": "Perl", "loc": 25, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> Imager<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span><span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"sy0\">,</span> <span class=\"re0\">$zoom</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">800</span><span class=\"sy0\">,</span> <span class=\"nu0\">600</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$img</span> <span class=\"sy0\">=</span> Imager<span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>xsize <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$w</span><span class=\"sy0\">,</span> ysize <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$h</span><span class=\"sy0\">,</span> channels <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$maxIter</span> <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$cX</span><span class=\"sy0\">,</span> <span class=\"re0\">$cY</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.7</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.27015</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$moveX</span><span class=\"sy0\">,</span> <span class=\"re0\">$moveY</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$color</span> <span class=\"sy0\">=</span> Imager<span class=\"sy0\">::</span><span class=\"me2\">Color</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"st_h\">'#000000'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$w</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$y</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$zx</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$w</span> <span class=\"co2\">/ 2) /</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> <span class=\"re0\">$zoom</span> <span class=\"sy0\">*</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">$moveX</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$zy</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$h</span> <span class=\"co2\">/ 2) /</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> <span class=\"re0\">$zoom</span> <span class=\"sy0\">*</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">$moveY</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$maxIter</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$zx</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$zy</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"kw1\">and</span> <span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"br0\">(</span><span class=\"re0\">$zy</span><span class=\"sy0\">,</span> <span class=\"re0\">$zx</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"re0\">$zx</span> <span class=\"sy0\">*</span> <span class=\"re0\">$zy</span> <span class=\"sy0\">+</span> <span class=\"re0\">$cY</span><span class=\"sy0\">,</span> <span class=\"re0\">$zx</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$zy</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$cX</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$color</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">set</span><span class=\"br0\">(</span>hsv <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><span class=\"re0\">$i</span> <span class=\"sy0\">/</span> <span class=\"re0\">$maxIter</span> <span class=\"sy0\">*</span> <span class=\"nu0\">360</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$img</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">setpixel</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> color <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$color</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$img</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/write.html\"><span class=\"kw3\">write</span></a><span class=\"br0\">(</span>file <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'julia_set.png'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 39, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">use</span> Image<span class=\"sy0\">::</span><span class=\"me2\">PNG</span><span class=\"sy0\">::</span><span class=\"me2\">Portable</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">800</span><span class=\"sy0\">,</span> <span class=\"nu0\">600</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$out</span> <span class=\"sy0\">=</span> Image<span class=\"sy0\">::</span><span class=\"me2\">PNG</span><span class=\"sy0\">::</span><span class=\"me2\">Portable</span><span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"sy0\">:</span> <span class=\"sy0\">:</span>width<span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span>height<span class=\"br0\">(</span><span class=\"re0\">$h</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$maxIter</span> <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$c</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.7</span> <span class=\"sy0\">+</span> 0<span class=\"sy0\">.</span>27015i<span class=\"sy0\">;</span><br/>\u00a0<br/>julia<span class=\"br0\">(</span><span class=\"re0\">$out</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$out</span><span class=\"sy0\">.</span><span class=\"me1\">write</span><span class=\"sy0\">:</span> <span class=\"st_h\">'Julia-set-perl6.png'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> julia <span class=\"br0\">(</span> <span class=\"re0\">$png</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">$w</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$x</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">$h</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$y</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> Complex<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$w</span> <span class=\"co2\">/ 2) /</span> <span class=\"re0\">$w</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$h</span> <span class=\"co2\">/ 2) /</span> <span class=\"re0\">$h</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$maxIter</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw3\">abs</span><span class=\"br0\">(</span><span class=\"re0\">$z</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span> <span class=\"kw1\">and</span> <span class=\"sy0\">--</span><span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"re0\">$z</span><span class=\"sy0\">*</span><span class=\"re0\">$z</span> <span class=\"sy0\">+</span> <span class=\"re0\">$c</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"re0\">$png</span><span class=\"sy0\">.</span><span class=\"me1\">set</span><span class=\"sy0\">:</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"sy0\">|</span>hsv2rgb<span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">/</span> <span class=\"re0\">$maxIter</span> <span class=\"sy0\">*</span> <span class=\"nu0\">360</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">?</span><span class=\"re0\">$i</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">reverse</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> hsv2rgb <span class=\"br0\">(</span> <span class=\"re0\">$h</span><span class=\"sy0\">,</span> <span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$v</span> <span class=\"br0\">)</span><span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$c</span> <span class=\"sy0\">=</span> <span class=\"re0\">$v</span> <span class=\"sy0\">*</span> <span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"re0\">$c</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span class=\"kw3\">abs</span><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$h</span><span class=\"sy0\">/</span><span class=\"nu0\">60</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$m</span> <span class=\"sy0\">=</span> <span class=\"re0\">$v</span> <span class=\"sy0\">-</span> <span class=\"re0\">$c</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$r</span><span class=\"sy0\">,</span> <span class=\"re0\">$g</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> <span class=\"kw1\">given</span> <span class=\"re0\">$h</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">when</span>   <span class=\"nu0\">0</span><span class=\"sy0\">..^</span><span class=\"nu0\">60</span>  <span class=\"br0\">{</span> <span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span>  <span class=\"nu0\">60</span><span class=\"sy0\">..^</span><span class=\"nu0\">120</span> <span class=\"br0\">{</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span> <span class=\"nu0\">120</span><span class=\"sy0\">..^</span><span class=\"nu0\">180</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span> <span class=\"nu0\">180</span><span class=\"sy0\">..^</span><span class=\"nu0\">240</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span> <span class=\"nu0\">240</span><span class=\"sy0\">..^</span><span class=\"nu0\">300</span> <span class=\"br0\">{</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span> <span class=\"nu0\">300</span><span class=\"sy0\">..^</span><span class=\"nu0\">360</span> <span class=\"br0\">{</span> <span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"br0\">(</span> <span class=\"re0\">$r</span><span class=\"sy0\">,</span> <span class=\"re0\">$g</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$_</span><span class=\"sy0\">+</span><span class=\"re0\">$m</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Int</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">$r</span><span class=\"sy0\">,</span> <span class=\"re0\">$g</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Processing", "loc": 66, "block": "<pre class=\"java highlighted_source\"><span class=\"kw4\">void</span> setup<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  size<span class=\"br0\">(</span><span class=\"nu0\">640</span>, <span class=\"nu0\">480</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">float</span> cX <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.7</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">float</span> cY <span class=\"sy0\">=</span> <span class=\"nu0\">0.27015</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">float</span> zx, zy<span class=\"sy0\">;</span><br/><span class=\"kw4\">float</span> maxIter <span class=\"sy0\">=</span> <span class=\"nu0\">300</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> draw<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> width<span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> height<span class=\"sy0\">;</span> y<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      zx <span class=\"sy0\">=</span> <span class=\"nu0\">1.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> width <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> width<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      zy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> height <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> height<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw4\">float</span> i <span class=\"sy0\">=</span> maxIter<span class=\"sy0\">;</span><br/>      <span class=\"kw1\">while</span> <span class=\"br0\">(</span>zx <span class=\"sy0\">*</span> zx <span class=\"sy0\">+</span> zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">float</span> tmp <span class=\"sy0\">=</span> zx <span class=\"sy0\">*</span> zx <span class=\"sy0\">-</span> zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">+</span> cX<span class=\"sy0\">;</span><br/>        zy <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> zx <span class=\"sy0\">*</span> zy <span class=\"sy0\">+</span> cY<span class=\"sy0\">;</span><br/>        zx <span class=\"sy0\">=</span> tmp<span class=\"sy0\">;</span><br/>        i <span class=\"sy0\">-=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>      color c <span class=\"sy0\">=</span> hsv2rgb<span class=\"br0\">(</span>i <span class=\"sy0\">/</span> maxIter <span class=\"sy0\">*</span> <span class=\"nu0\">360</span>, <span class=\"nu0\">1</span>, i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      set<span class=\"br0\">(</span>x, y, c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  noLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>color hsv2rgb<span class=\"br0\">(</span><span class=\"kw4\">float</span> h, <span class=\"kw4\">float</span> s, <span class=\"kw4\">float</span> v<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">float</span> c <span class=\"sy0\">=</span> v <span class=\"sy0\">*</span> s<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">float</span> x <span class=\"sy0\">=</span> c <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> abs<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>h<span class=\"sy0\">/</span><span class=\"nu0\">60</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">float</span> m <span class=\"sy0\">=</span> v <span class=\"sy0\">-</span> c<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">float</span> r, g, b<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>h <span class=\"sy0\">&lt;</span> <span class=\"nu0\">60</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    r <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>    g <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>    b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>h <span class=\"sy0\">&lt;</span> <span class=\"nu0\">120</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    r <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>    g <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>    b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>h <span class=\"sy0\">&lt;</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    r <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    g <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>    b <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>h <span class=\"sy0\">&lt;</span> <span class=\"nu0\">240</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    r <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    g <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>    b <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>h <span class=\"sy0\">&lt;</span> <span class=\"nu0\">300</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    r <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>    g <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    b <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>    r <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>    g <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    b <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw4\">int</span> ri <span class=\"sy0\">=</span> round<span class=\"br0\">(</span><span class=\"br0\">(</span>r <span class=\"sy0\">+</span> m<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> gi <span class=\"sy0\">=</span> round<span class=\"br0\">(</span><span class=\"br0\">(</span>g <span class=\"sy0\">+</span> m<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> bi <span class=\"sy0\">=</span> round<span class=\"br0\">(</span><span class=\"br0\">(</span>b <span class=\"sy0\">+</span> m<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> color<span class=\"br0\">(</span>ri, gi, bi<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Python", "loc": 24, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> PIL <span class=\"kw1\">import</span> Image<br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">\"__main__\"</span>:<br/>\tw<span class=\"sy0\">,</span> h<span class=\"sy0\">,</span> zoom <span class=\"sy0\">=</span> <span class=\"nu0\">800</span><span class=\"sy0\">,</span><span class=\"nu0\">600</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><br/>\tbitmap <span class=\"sy0\">=</span> Image.<span class=\"kw3\">new</span><span class=\"br0\">(</span><span class=\"st0\">\"RGB\"</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>w<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"white\"</span><span class=\"br0\">)</span><br/>\tpix <span class=\"sy0\">=</span> bitmap.<span class=\"me1\">load</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>\tcX<span class=\"sy0\">,</span> cY <span class=\"sy0\">=</span> -<span class=\"nu0\">0.7</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.27015</span><br/>\tmoveX<span class=\"sy0\">,</span> moveY <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.0</span><br/>\tmaxIter <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span>:<br/>\t\t<span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span>:<br/>\t\t\tzx <span class=\"sy0\">=</span> <span class=\"nu0\">1.5</span>*<span class=\"br0\">(</span>x - w/<span class=\"nu0\">2</span><span class=\"br0\">)</span>/<span class=\"br0\">(</span><span class=\"nu0\">0.5</span>*zoom*w<span class=\"br0\">)</span> + moveX<br/>\t\t\tzy <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span>*<span class=\"br0\">(</span>y - h/<span class=\"nu0\">2</span><span class=\"br0\">)</span>/<span class=\"br0\">(</span><span class=\"nu0\">0.5</span>*zoom*h<span class=\"br0\">)</span> + moveY<br/>\t\t\ti <span class=\"sy0\">=</span> maxIter<br/>\t\t\t<span class=\"kw1\">while</span> zx*zx + zy*zy <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"kw1\">and</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span>:<br/>\t\t\t\ttmp <span class=\"sy0\">=</span> zx*zx - zy*zy + cX<br/>\t\t\t\tzy<span class=\"sy0\">,</span>zx <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span>*zx*zy + cY<span class=\"sy0\">,</span> tmp<br/>\t\t\t\ti -<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"co1\"># convert byte to RGB (3 bytes), kinda magic to get nice colors</span><br/>\t\t\tpix<span class=\"br0\">[</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">21</span><span class=\"br0\">)</span> + <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> + i*<span class=\"nu0\">8</span><br/>\u00a0<br/>\tbitmap.<span class=\"me1\">show</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 111, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>;; Based on Mandelbrot code (GPL) from:<br/>;;  https://github.com/hebr3/Mandelbrot-Set-Racket/blob/master/Mandelbrot.v6.rkt <br/>;; Julia set algoithm (and coloring) from:<br/>;;  http://lodev.org/cgtutor/juliamandelbrot.html<br/>;; HSV code (GPL) based on:<br/>;;  https://github.com/takikawa/pict-utils/blob/master/pict-utils/hsv.rkt <br/>\u00a0<br/>#lang racket<br/>\u00a0<br/>;; Required to generate image<br/>(require picturing-programs)<br/>\u00a0<br/>;; CONSTANTS - NUMBERS<br/>(define DEPTH  300)<br/>(define WIDTH  800)<br/>(define HEIGHT 600)<br/>\u00a0<br/>;; Structures<br/>(struct posn [x y] #:transparent)<br/>\u00a0<br/>;; CONSTANTS - GRAPHIC<br/>(define BACKGROUND (rectangle WIDTH HEIGHT 'solid 'grey))<br/>(define jcnst (posn -0.7 0.27015))<br/>\u00a0<br/>;; PROCEDURES<br/>;; make an RGB color from HSV values<br/>(define (make-color/hsv hue saturation value)<br/>  (define chroma (* saturation value))<br/>  (define hue* (/ (remainder* hue (* 2 pi)) (/ pi 3)))<br/>  (define X (* chroma (- 1 (abs (- (remainder* hue* 2) 1)))))<br/>  (define-values (r1 g1 b1)<br/>    (cond [(and (&lt;= 0 hue*) (&lt; hue* 1)) (values chroma X 0)]<br/>          [(and (&lt;= 1 hue*) (&lt; hue* 2)) (values X chroma 0)]<br/>          [(and (&lt;= 2 hue*) (&lt; hue* 3)) (values 0 chroma X)]<br/>          [(and (&lt;= 3 hue*) (&lt; hue* 4)) (values 0 X chroma)]<br/>          [(and (&lt;= 4 hue*) (&lt; hue* 5)) (values X 0 chroma)]<br/>          [(and (&lt;= 5 hue*) (&lt; hue* 6)) (values chroma 0 X)]))<br/>  (define m (- value chroma))<br/>  (apply make-color (map (\u03bb (x) (exact-round (* 255 (+ x m))))<br/>                         (list r1 g1 b1))))<br/>\u00a0<br/>;; general remainder<br/>(define (remainder* n1 n2)<br/>  (define num-divides (/ n1 n2))<br/>  (- n1 (* (floor num-divides) n2)))<br/>\u00a0<br/>;; Posn -&gt; Number<br/>;; Returns the magnitude of the posn<br/>(define (posn-mag pt)<br/>  (let ([pt-x (posn-x pt)]<br/>        [pt-y (posn-y pt)])<br/>    (sqrt (+ (* pt-x pt-x)<br/>                 (* pt-y pt-y)))))<br/>\u00a0<br/>;; Posn Posn -&gt; Posn<br/>;; Posn addition<br/>(define (posn+ pt1 pt2)<br/>  (let ([pt1-x (posn-x pt1)]<br/>        [pt1-y (posn-y pt1)]<br/>        [pt2-x (posn-x pt2)]<br/>        [pt2-y (posn-y pt2)])<br/>    (posn (+ pt1-x pt2-x)<br/>          (+ pt1-y pt2-y))))<br/>\u00a0<br/>;; Posn Posn -&gt; Posn<br/>;; Posn multiplication<br/>(define (posn* pt1 pt2)<br/>  (let ([x1 (posn-x pt1)]<br/>        [y1 (posn-y pt1)]<br/>        [x2 (posn-x pt2)]<br/>        [y2 (posn-y pt2)])<br/>    (posn (- (* x1 x2) (* y1 y2))<br/>          (+ (* x1 y2) (* x2 y1)))))<br/>\u00a0<br/>;; Posn -&gt; Posn<br/>;; Posn square<br/>(define (posn-sqr pt)<br/>  (posn* pt pt))<br/>\u00a0<br/>;; Posn -&gt; Number<br/>;; Returns the julia set  escape number for a given complex number<br/>;; given in rectangular coordinates.<br/>(define (julia-set-number  start)<br/>  (define (iter result count)<br/>    (cond [(&gt; (posn-mag result) 2) (sub1 count)]<br/>          [(&gt; count DEPTH) DEPTH]<br/>          [else (iter (posn+ jcnst (posn-sqr result))<br/>                      (add1 count))]))<br/>  (iter start 1))<br/>\u00a0<br/>;; Number -&gt; Number<br/>;; Returns the scaled location of a point<br/>(define (scaled-x x)<br/>  (/ (* 1.5 (- x (/ WIDTH 2))) (* 0.5 WIDTH)))<br/>(define (scaled-y y)<br/>  (/ (- y (/ HEIGHT 2)) (* 0.5 HEIGHT)))<br/>\u00a0<br/>;; Generates image<br/>(define M-Image<br/>  (map-image<br/>   (\u03bb (x y c)<br/>     (let* ([ref (julia-set-number  (posn (scaled-x x) (scaled-y y)))])<br/>       (cond [(= ref DEPTH) (name-&gt;color 'black)]<br/>             [else (make-color/hsv (* 2 (* pi (/ ref DEPTH))) 1 1)]) ))<br/> BACKGROUND))<br/>\u00a0<br/>M-Image\u00a0;show image if using drracket<br/>\u00a0<br/>(save-image M-Image \"julias.png\")<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 21, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  displays  an  ASCII plot   (character plot)   of a  Julia set.          */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> real imag fine <span class=\"sy0\">.</span>                       <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> real==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> real==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> real= -<span class=\"nu0\">0.8</span>         <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">if</span> imag==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> imag==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> imag=  <span class=\"nu0\">0.156</span>       <span class=\"coMULTI\">/* \"      \"         \"   \"   \"     \"    */</span><br/><span class=\"kw1\">if</span> fine==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> fine==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> fine= <span class=\"nu0\">50</span>           <span class=\"coMULTI\">/* \"      \"         \"   \"   \"     \"    */</span><br/>_=scrsize<span class=\"br0\">(</span><span class=\"br0\">)</span>; <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> _ sd sw; sd=sd-<span class=\"nu0\">4</span>; sw=sw-<span class=\"nu0\">1</span> <span class=\"coMULTI\">/*obtain useable area for the terminal.*/</span><br/>                                                 <span class=\"coMULTI\">/*$:  the plot line that is constructed*/</span><br/>         <span class=\"kw1\">do</span>   v= -sd%2  <span class=\"kw2\">to</span> sd%2;     $=          <span class=\"coMULTI\">/*step through  vertical   axis values.*/</span><br/>           <span class=\"kw1\">do</span> h= -sw%2  <span class=\"kw2\">to</span> sw%2                  <span class=\"coMULTI\">/*  \"     \"    horizontal    \"     \"   */</span><br/>           x=h<span class=\"sy0\">/</span>sw<span class=\"sy0\">*</span><span class=\"nu0\">2</span>                              <span class=\"coMULTI\">/*calculate the initial   X   value.   */</span><br/>           y=v<span class=\"sy0\">/</span>sd<span class=\"sy0\">*</span><span class=\"nu0\">2</span>                              <span class=\"coMULTI\">/*    \"      \"     \"      Y     \"      */</span><br/>           @=<span class=\"st0\">'\u25a0'</span>;    <span class=\"kw1\">do</span> fine                     <span class=\"coMULTI\">/*FINE: is the \"fineness\" for the plot.*/</span><br/>                     zr=x<span class=\"sy0\">*</span>x - y<span class=\"sy0\">*</span>y + real         <span class=\"coMULTI\">/*calculate a new   real   Julia point.*/</span><br/>                     zi=x<span class=\"sy0\">*</span>y<span class=\"sy0\">*</span><span class=\"nu0\">2</span>     + imag         <span class=\"coMULTI\">/*    \"     \"  \"  imaginal   \"     \"   */</span><br/>                     <span class=\"kw1\">if</span> zr<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">10000</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>; @=<span class=\"st0\">' '</span>; <span class=\"kw1\">leave</span>; <span class=\"kw3\">end</span>    <span class=\"coMULTI\">/*is  ZR  too large? */</span><br/>                     x=zr;    y=zi                                 <span class=\"coMULTI\">/*use this new point.*/</span><br/>                     <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*50*/</span><br/>           $=$ <span class=\"sy0\">||</span> @                              <span class=\"coMULTI\">/*append the plot char to the plot line*/</span><br/>           <span class=\"kw3\">end</span>            <span class=\"coMULTI\">/*h*/</span><br/>         <span class=\"kw1\">if</span> $<span class=\"sy0\">\\</span>=<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"kw6\">strip</span><span class=\"br0\">(</span>$, <span class=\"st0\">'T'</span><span class=\"br0\">)</span>        <span class=\"coMULTI\">/*only display a plot line if non-blank*/</span><br/>         <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*v*/</span>                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 60, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Julia Set<br/>\u00a0<br/>load \"guilib.ring\"<br/>\u00a0<br/>new qapp <br/>        {<br/>        win1 = new qwidget() {<br/>                  setwindowtitle(\"Julia set\")<br/>                  setgeometry(100,100,500,400)<br/>                  label1 = new qlabel(win1) {<br/>                              setgeometry(10,10,400,400)<br/>                              settext(\"\")<br/>                  }<br/>                  new qpushbutton(win1) {<br/>                          setgeometry(150,300,100,30)<br/>                          settext(\"draw\")<br/>                          setclickevent(\"draw()\")<br/>                  }<br/>                  show()<br/>        }<br/>        exec()<br/>        }<br/>\u00a0<br/>func draw<br/>        p1 = new qpicture()<br/>               color = new qcolor() {<br/>               setrgb(0,0,255,255)<br/>        }<br/>        pen = new qpen() {<br/>                 setcolor(color)<br/>                 setwidth(1)<br/>        }<br/>        paint = new qpainter() {<br/>                  begin(p1)<br/>                  setpen(pen)<br/>\u00a0<br/>        creal=-0.8<br/>        cimag=0.156<br/>        for v=-16 to 16<br/>             for h=-64 to 64<br/>                   x=h/40<br/>                   y=v/20<br/>                   for i=1 to 50<br/>                         flag = 1<br/>                         zreal=x*x-y*y+creal<br/>                         zimag=x*y*2+cimag<br/>                         if zreal*zreal&gt;1000 flag = 0 loop ok<br/>                         x=zreal<br/>                         y=zimag<br/>                  next <br/>                  if flag = 1<br/>                     drawpoint(h+100,150-v)<br/>                  ok<br/>             next<br/>        next<br/>        endpaint()<br/>        }<br/>        label1 { setpicture(p1) show() }<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 18, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> julia<span class=\"br0\">(</span>c_real, c_imag<span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span> <span class=\"kw4\">Complex</span><span class=\"br0\">(</span>c_real, c_imag<span class=\"br0\">)</span><br/>  <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span>.<span class=\"me1\">step</span><span class=\"br0\">(</span><span class=\"nu0\">1.0</span>, <span class=\"nu0\">0.04</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>v<span class=\"sy0\">|</span><br/>    <span class=\"kw3\">puts</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.4</span>.<span class=\"me1\">step</span><span class=\"br0\">(</span><span class=\"nu0\">1.4</span>, <span class=\"nu0\">0.02</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>h<span class=\"sy0\">|</span> judge<span class=\"br0\">(</span>c_real, c_imag, h, v<span class=\"br0\">)</span><span class=\"br0\">}</span>.<span class=\"me1\">join</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> judge<span class=\"br0\">(</span>c_real, c_imag, x, y<span class=\"br0\">)</span><br/>  <span class=\"nu0\">50</span>.<span class=\"me1\">times</span> <span class=\"kw1\">do</span><br/>    z_real = <span class=\"br0\">(</span>x <span class=\"sy0\">*</span> x <span class=\"sy0\">-</span> y <span class=\"sy0\">*</span> y<span class=\"br0\">)</span> <span class=\"sy0\">+</span> c_real<br/>    z_imag = x <span class=\"sy0\">*</span> y <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> c_imag<br/>    <span class=\"kw2\">return</span> <span class=\"st0\">\" \"</span>  <span class=\"kw1\">if</span> z_real<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">10000</span><br/>    x, y = z_real, z_imag<br/>  <span class=\"kw1\">end</span><br/>  <span class=\"st0\">\"#\"</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>julia<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.8</span>, <span class=\"nu0\">0.156</span><span class=\"br0\">)</span></pre>"}, {"lang": "Rust", "loc": 47, "block": "<pre class=\"text highlighted_source\">extern crate image;<br/>\u00a0<br/>use image::{ImageBuffer, Pixel, Rgb};<br/>\u00a0<br/>fn main() {<br/>    // 4\u00a0: 3 ratio is nice<br/>    let width = 8000;<br/>    let height = 6000;<br/>\u00a0<br/>    let mut img = ImageBuffer::new(width as u32, height as u32);<br/>\u00a0<br/>    // constants to tweak for appearance<br/>    let cx = -0.9;<br/>    let cy = 0.27015;<br/>    let iterations = 110;<br/>\u00a0<br/>    for x in 0..width {<br/>        for y in 0..height {<br/>            let inner_height = height as f32;<br/>            let inner_width = width as f32;<br/>            let inner_y = y as f32;<br/>            let inner_x = x as f32;<br/>\u00a0<br/>            let mut zx = 3.0 * (inner_x - 0.5 * inner_width) / (inner_width);<br/>            let mut zy = 2.0 * (inner_y - 0.5 * inner_height) / (inner_height);<br/>\u00a0<br/>            let mut i = iterations;<br/>\u00a0<br/>            while zx * zx + zy * zy &lt; 4.0 &amp;&amp; i &gt; 1 {<br/>                let tmp = zx * zx - zy * zy + cx;<br/>                zy = 2.0 * zx * zy + cy;<br/>                zx = tmp;<br/>                i -= 1;<br/>            }<br/>\u00a0<br/>            // guesswork to make the rgb color values look okay<br/>            let r = (i &lt;&lt; 3) as u8;<br/>            let g = (i &lt;&lt; 5) as u8;<br/>            let b = (i &lt;&lt; 4) as u8;<br/>            let pixel = Rgb::from_channels(r, g, b, 0);<br/>            img.put_pixel(x as u32, y as u32, pixel);<br/>        }<br/>    }<br/>\u00a0<br/>    let _ = img.save(\"output.png\");<br/>\u00a0<br/>}</pre>"}, {"lang": "Scala", "loc": 58, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"sy0\">_</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">image</span>.<span class=\"me1\">BufferedImage</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"sy0\">_</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> JuliaSet <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  SwingUtilities.<span class=\"me1\">invokeLater</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> JFrame<span class=\"br0\">(</span><span class=\"st0\">\"Julia Set\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> JuliaSet<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> JPanel <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>maxIter, zoom<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">300</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> paintComponent<span class=\"br0\">(</span>gg<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> g <span class=\"sy0\">=</span> gg.<span class=\"me1\">asInstanceOf</span><span class=\"br0\">[</span>Graphics2D<span class=\"br0\">]</span><br/>\u00a0<br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> drawJuliaSet<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>w, h<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>getWidth, getHeight<span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> image <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> BufferedImage<span class=\"br0\">(</span>w, h, BufferedImage.<span class=\"me1\">TYPE_INT_RGB</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>cX, cY<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>-<span class=\"nu0\">0.7</span>, <span class=\"nu0\">0.27015</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> moveX, moveY <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> zx, zy <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0</span> until w<span class=\"sy0\">;</span><br/>                 y <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0</span> until h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>              zx <span class=\"sy0\">=</span> <span class=\"nu0\">1.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>x - w / <span class=\"nu0\">2</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> w<span class=\"br0\">)</span> + moveX<br/>              zy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>y - h / <span class=\"nu0\">2</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> zoom <span class=\"sy0\">*</span> h<span class=\"br0\">)</span> + moveY<br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> i<span class=\"sy0\">:</span> Float <span class=\"sy0\">=</span> maxIter<br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>zx <span class=\"sy0\">*</span> zx + zy <span class=\"sy0\">*</span> zy <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tmp <span class=\"sy0\">=</span> zx <span class=\"sy0\">*</span> zx - zy <span class=\"sy0\">*</span> zy + cX<br/>                zy <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> zx <span class=\"sy0\">*</span> zy + cY<br/>                zx <span class=\"sy0\">=</span> tmp<br/>                i -<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>              <span class=\"br0\">}</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c <span class=\"sy0\">=</span> Color.<span class=\"me1\">HSBtoRGB</span><span class=\"br0\">(</span><span class=\"br0\">(</span>maxIter / i<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>              image.<span class=\"me1\">setRGB</span><span class=\"br0\">(</span>x, y, c<span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>            g.<span class=\"me1\">drawImage</span><span class=\"br0\">(</span>image, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>          <span class=\"br0\">}</span><br/>\u00a0<br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><br/>          g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span>RenderingHints.<span class=\"me1\">KEY_ANTIALIASING</span>, RenderingHints.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><br/>          drawJuliaSet<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        setBackground<span class=\"br0\">(</span>Color.<span class=\"me1\">white</span><span class=\"br0\">)</span><br/>        setPreferredSize<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Dimension<span class=\"br0\">(</span><span class=\"nu0\">800</span>, <span class=\"nu0\">600</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>\u00a0<br/>      add<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> JuliaSet, BorderLayout.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><br/>      pack<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      setDefaultCloseOperation<span class=\"br0\">(</span>WindowConstants.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><br/>      setLocationRelativeTo<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>      setResizable<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><span class=\"br0\">)</span><br/>      setVisible<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Sidef", "loc": 21, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span><span class=\"br0\">(</span><span class=\"st0\">'Imager'</span><span class=\"br0\">)</span><br/>\u00a0<br/>var <span class=\"br0\">(</span>w, h<span class=\"br0\">)</span> = <span class=\"br0\">(</span><span class=\"nu0\">640</span>, <span class=\"nu0\">480</span><span class=\"br0\">)</span><br/>var img = <span class=\"sy0\">%</span>s<span class=\"st0\">'Imager'</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>xsize <span class=\"sy0\">=&gt;</span> w, ysize <span class=\"sy0\">=&gt;</span> h, channels <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\u00a0<br/>var maxIter = <span class=\"nu0\">50</span><br/>var c = <span class=\"kw4\">Complex</span><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.388</span>, <span class=\"nu0\">0.613</span><span class=\"br0\">)</span><br/>\u00a0<br/>var color = <span class=\"sy0\">%</span>s<span class=\"st0\">'Imager::Color'</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"st0\">'#000000'</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> x,y <span class=\"kw1\">in</span> <span class=\"br0\">(</span>^w ~X ^h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var i = maxIter<br/>    var z = <span class=\"kw4\">Complex</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x <span class=\"sy0\">-</span> w<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> w <span class=\"sy0\">*</span> <span class=\"nu0\">3</span>, <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> h<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> h <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>z.<span class=\"me1\">abs</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">--</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        z = <span class=\"br0\">(</span>z<span class=\"sy0\">*</span>z <span class=\"sy0\">+</span> c<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    color.<span class=\"me1\">set</span><span class=\"br0\">(</span>hsv <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span>i <span class=\"sy0\">/</span> maxIter <span class=\"sy0\">*</span> <span class=\"nu0\">360</span>, <span class=\"nu0\">1</span>, i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    img.<span class=\"me1\">setpixel</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> x, y <span class=\"sy0\">=&gt;</span> y, color <span class=\"sy0\">=&gt;</span> color<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>img.<span class=\"me1\">write</span><span class=\"br0\">(</span>file <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"JuliaSet_sidef.png\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "zkl", "loc": 23, "block": "<pre class=\"text highlighted_source\">fcn juliaSet{<br/>   w,h,zoom:=800,600, 1;<br/>   bitmap:=PPM(w,h,0xFF|FF|FF);  // White background<br/>\u00a0<br/>   cX,cY:=-0.7, 0.27015;<br/>   moveX,moveY:=0.0, 0.0;<br/>   maxIter:=255;<br/>\u00a0<br/>   foreach x,y in (w,h){<br/>      zx:=1.5*(x - w/2)/(0.5*zoom*w) + moveX;<br/>      zy:=1.0*(y - h/2)/(0.5*zoom*h) + moveY;<br/>      i:=maxIter;<br/>      while(zx*zx + zy*zy &lt; 4 and i &gt; 1){<br/>\t tmp:=zx*zx - zy*zy + cX;<br/>\t zy,zx=2.0*zx*zy + cY, tmp;<br/>\t i-=1;<br/>      }<br/>      // convert byte to RGB (3 bytes), kinda magic to get nice colors<br/>      bitmap[x,y]=i.shiftLeft(21) + i.shiftLeft(10) + i*8;<br/>   }<br/>\u00a0<br/>   bitmap.writeJPGFile(\"juliaSet.jpg\",True);<br/>}();</pre>"}]}