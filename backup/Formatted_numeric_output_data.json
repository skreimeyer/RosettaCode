{"task": "Formatted_numeric_output", "blocks": [{"lang": "8th", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>7.125 \"%09.3f\" s:strfmt<br/>. cr<br/>\u00a0</pre>"}, {"lang": "Ada", "loc": 14, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>.<span class=\"me1\">Editing</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_Io</span>.<span class=\"me1\">Editing</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_Io</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Zero_Fill <span class=\"kw1\">is</span><br/>   Pic_String: String\u00a0:= <span class=\"st0\">\"&lt;999999.99&gt;\"</span>;<br/>   Pic\u00a0: Picture\u00a0:= To_Picture<span class=\"br0\">(</span>Pic_String<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">type</span> Money <span class=\"kw1\">is</span> <span class=\"kw3\">delta</span> <span class=\"nu0\">0.01</span> <span class=\"kw3\">digits</span> <span class=\"nu0\">8</span>;<br/>   <span class=\"kw3\">package</span> Money_Output <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Decimal_Output<span class=\"br0\">(</span>Money<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">use</span> Money_Output;<br/>\u00a0<br/>   Value\u00a0: Money\u00a0:= <span class=\"nu0\">37.25</span>;<br/><span class=\"kw1\">begin</span><br/>   Put<span class=\"br0\">(</span>Item =&gt; Value, Pic =&gt; Pic<span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Zero_Fill;</pre>"}, {"lang": "ALGOL 68", "loc": 17, "block": "<pre class=\"algol68 highlighted_source\">main<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>  <span class=\"kw3\">REAL</span> r<span class=\"sy1\">=</span><span class=\"kw24\">exp</span><span class=\"br0\">(</span><span class=\"kw23\">pi</span><span class=\"br0\">)</span><span class=\"sy1\">-</span><span class=\"kw23\">pi</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span>r<span class=\"sy1\">,</span><span class=\"kw22\">newline</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g<span class=\"br0\">(</span><span class=\"sy1\">-</span>16<span class=\"sy1\">,</span>4<span class=\"br0\">)</span>l$<span class=\"sy1\">,-</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g<span class=\"br0\">(</span><span class=\"sy1\">-</span>16<span class=\"sy1\">,</span>4<span class=\"br0\">)</span>l$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g<span class=\"br0\">(</span> 16<span class=\"sy1\">,</span>4<span class=\"br0\">)</span>l$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g<span class=\"br0\">(</span> 16<span class=\"sy1\">,</span>4<span class=\"sy1\">,</span>1<span class=\"br0\">)</span>l$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$<span class=\"sy1\">-</span>dddd.ddddl$<span class=\"sy1\">,-</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$<span class=\"sy1\">-</span>dddd.ddddl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$<span class=\"sy1\">+</span>dddd.ddddl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$ddddd.ddddl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$zzzzd.ddddl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$zzzz<span class=\"sy1\">-</span>d.ddddl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$zzzz<span class=\"sy1\">-</span>d.ddddedl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$zzzz<span class=\"sy1\">-</span>d.ddddeddl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$4z<span class=\"sy1\">-</span>d.4de4dl$<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "AmigaE", "loc": 19, "block": "<pre class=\"text highlighted_source\">PROC newRealF(es, fl, digit, len=0, zeros=TRUE)<br/>  DEF s, t, i<br/>  IF (len = 0) OR (len &lt; (digit+3))<br/>    RETURN RealF(es, fl, digit)<br/>  ELSE<br/>    s\u00a0:= String(len)<br/>    t\u00a0:= RealF(es, fl, digit)<br/>    FOR i\u00a0:= 0 TO len-EstrLen(t)-1 DO StrAdd(s, IF zeros THEN '0' ELSE ' ')<br/>    StrAdd(s, t)<br/>    StrCopy(es, s)<br/>    DisposeLink(s)<br/>    DisposeLink(t)<br/>  ENDIF<br/>ENDPROC es<br/>\u00a0<br/>PROC main()<br/>  DEF s[100]\u00a0: STRING<br/>  WriteF('\\s\\n', newRealF(s, 7.125, 3,9))<br/>ENDPROC</pre>"}, {"lang": "APL", "loc": 2, "block": "<pre class=\"text highlighted_source\">      'ZF15.9' \u2395FMT 7.125<br/>00007.125000000</pre>"}, {"lang": "AWK", "loc": 9, "block": "<pre class=\"awk highlighted_source\"><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>  r=<span class=\"nu0\">7.125</span><br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\u00a0%9.3f<span class=\"es0\">\\n</span>\"</span>,<span class=\"sy3\">-</span>r<br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\u00a0%9.3f<span class=\"es0\">\\n</span>\"</span>,r<br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\u00a0%-9.3f<span class=\"es0\">\\n</span>\"</span>,r<br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\u00a0%09.3f<span class=\"es0\">\\n</span>\"</span>,<span class=\"sy3\">-</span>r<br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\u00a0%09.3f<span class=\"es0\">\\n</span>\"</span>,r<br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\u00a0%-09.3f<span class=\"es0\">\\n</span>\"</span>,r<br/><span class=\"br0\">}</span></pre>"}, {"lang": "AutoHotkey", "loc": 8, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% pad<span class=\"br0\">(</span><span class=\"nu0\">7.25</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span>  <span class=\"co1\">; 0007.25</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% pad<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">7.25</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"co1\">; -007.25</span><br/>\u00a0<br/>pad<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>len<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">; pad with 0's from left to len chars</span><br/>   <a href=\"http://www.autohotkey.com/docs/commands/IfLess.htm\"><span class=\"kw3\">IfLess</span></a> x<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"kw1\">Return</span> <span class=\"st0\">\"-\"</span> pad<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>x<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>len<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>   <a href=\"http://www.autohotkey.com/docs/commands/VarSetCapacity.htm\"><span class=\"kw3\">VarSetCapacity</span></a><span class=\"br0\">(</span>p<span class=\"sy0\">,</span>len<span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Asc</span></a><span class=\"br0\">(</span><span class=\"st0\">\"0\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">Return</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>p x<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>len<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "BaCon", "loc": 3, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' Formatted numeric output</span><br/>n = <span class=\"nu0\">7.125</span><br/><span class=\"kw1\">PRINT</span> n FORMAT <span class=\"st0\">\"%09.3f<span class=\"es0\">\\n</span>\"</span></pre>"}, {"lang": "BBC BASIC", "loc": 11, "block": "<pre class=\"text highlighted_source\">      PRINT FNformat(PI, 9, 3)<br/>      PRINT FNformat(-PI, 9, 3)<br/>      END<br/>\u00a0<br/>      DEF FNformat(n, sl%, dp%)<br/>      LOCAL @%<br/>      @% = &amp;1020000 OR dp% &lt;&lt; 8<br/>      IF n &gt;= 0 THEN<br/>        = RIGHT$(STRING$(sl%,\"0\") + STR$(n), sl%)<br/>      ENDIF<br/>      = \"-\" + RIGHT$(STRING$(sl%,\"0\") + STR$(-n), sl%-1)</pre>"}, {"lang": "bc", "loc": 77, "block": "<pre class=\"text highlighted_source\">/*<br/> * Print number n, using at least c characters.<br/> *<br/> * Different from normal, this function:<br/> *  1. Uses the current ibase (not the obase) to print the number.<br/> *  2. Prunes \"0\" digits from the right, so p(1.500, 1) prints \"1.5\".<br/> *  3. Pads \"0\" digits to the left, so p(-1.5, 6) prints \"-001.5\".<br/> *  4. Never prints a newline.<br/> *<br/> * Use an assignment, as t = p(1.5, 1), to discard the return value<br/> * from this function so that bc not prints the return value.<br/> */<br/>define p(n, c) {<br/>\tauto d, d[], f, f[], i, m, r, s, v<br/>\ts = scale\t/* Save original scale. */<br/>\u00a0<br/>\tif (n &lt; 0) {<br/>\t\t\"-\"\t/* Print negative sign. */<br/>\t\tc -= 1<br/>\t\tn = -n\t/* Remove negative sign from n. */<br/>\t}<br/>\u00a0<br/>\t/* d[] takes digits before the radix point. */<br/>\tscale = 0<br/>\tfor (m = n / 1; m\u00a0!= 0; m /= 10) d[d++] = m\u00a0% 10<br/>\u00a0<br/>\t/* f[] takes digits after the radix point. */<br/>\tr = n - (n / 1)\t\t/* r is these digits. */<br/>\tscale = scale(n)<br/>\tf = -1\t\t\t/* f counts the digits of r. */<br/>\tfor (m = r + 1; m\u00a0!= 0; m /= 10) f += 1<br/>\tscale = 0<br/>\tr = r * (10 ^ f) / 1\t/* Remove radix point from r. */<br/>\tif (r\u00a0!= 0) {<br/>\t\twhile (r\u00a0% 10 == 0) {\t/* Prune digits. */<br/>\t\t\tf -= 1<br/>\t\t\tr /= 10<br/>\t\t}<br/>\t\tfor (i = 0; i &lt; f; i++) {<br/>\t\t\tf[i] = r\u00a0% 10<br/>\t\t\tr /= 10<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\t/* Pad \"0\" digits to reach c characters. */<br/>\tc -= d<br/>\tif (f &gt; 0) c -= 1 + f<br/>\tfor (1; c &gt; 0; c--) \"0\"\t\t/* Print \"0\". */<br/>\u00a0<br/>\t/* i = index, m = maximum index, r = digit to print. */<br/>\tm = d + f<br/>\tfor (i = 1; i &lt;= m; i++) {<br/>\t\tif (i &lt;= d) r = d[d - i]<br/>\t\tif (i &gt; d) r = f[m - i]<br/>\t\tif (i == d + 1) \".\"\t/* Print radix point. */<br/>\u00a0<br/>\t\tv = 0<br/>\t\tif (r == v++) \"0\"\t/* Print digit. */<br/>\t\tif (r == v++) \"1\"<br/>\t\tif (r == v++) \"2\"\t/* r == 2 might not work, */<br/>\t\tif (r == v++) \"3\"\t/* unless ibase is ten.   */<br/>\t\tif (r == v++) \"4\"<br/>\t\tif (r == v++) \"5\"<br/>\t\tif (r == v++) \"6\"<br/>\t\tif (r == v++) \"7\"<br/>\t\tif (r == v++) \"8\"<br/>\t\tif (r == v++) \"9\"<br/>\t\tif (r == v++) \"A\"<br/>\t\tif (r == v++) \"B\"<br/>\t\tif (r == v++) \"C\"<br/>\t\tif (r == v++) \"D\"<br/>\t\tif (r == v++) \"E\"<br/>\t\tif (r == v++) \"F\"<br/>\t}<br/>\u00a0<br/>\tscale = s  /* Restore original scale. */<br/>}</pre>"}, {"lang": "C#", "loc": 22, "block": "<pre class=\"csharp highlighted_source\">\u00a0<br/><span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>\u00a0<br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>\u00a0<br/>            <span class=\"kw4\">float</span> myNumbers <span class=\"sy0\">=</span> 7<span class=\"sy0\">.</span>125F<span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw4\">string</span> strnumber <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>myNumbers<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>strnumber<span class=\"sy0\">.</span><span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">9</span>, <span class=\"st0\">'0'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>    <span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C", "loc": 11, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw4\">float</span> r<span class=\"sy0\">=</span><span class=\"nu16\">7.125</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%9.3f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,-</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%9.3f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%-9.3f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%09.3f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,-</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%09.3f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%-09.3f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 8, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;iomanip&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setfill</span><span class=\"br0\">(</span><span class=\"st0\">'0'</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">fixed</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setprecision</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu16\">7.125</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>cl-format true <span class=\"st0\">\"~9,3,,,'0F\"</span> <span class=\"nu0\">7.125</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 10, "block": "<pre class=\"cobol highlighted_source\"><span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> NUMERIC-OUTPUT-<span class=\"kw3\">PROGRAM</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  WS-EXAMPLE<span class=\"sy0\">.</span><br/>    <span class=\"nu0\">05</span> X            <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>V9<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>    <span class=\"kw2\">MOVE</span>     <span class=\"nu0\">7.125</span>  <span class=\"kw2\">TO</span>   X<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">DISPLAY</span>  X      <span class=\"kw3\">UPON</span> CONSOLE<span class=\"sy0\">.</span><br/>    <span class=\"kw3\">STOP</span> <span class=\"kw3\">RUN</span><span class=\"sy0\">.</span></pre>"}, {"lang": "Common Lisp", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>format t <span class=\"st0\">\"~9,3,,,'0F\"</span> <span class=\"nu0\">7.125</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 11, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> r <span class=\"sy0\">=</span> <span class=\"nu16\">7.125</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%9.3f\"</span><span class=\"sy0\">,</span>  <span class=\"sy0\">-</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%9.3f\"</span><span class=\"sy0\">,</span>   r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%-9.3f\"</span><span class=\"sy0\">,</span>  r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%09.3f\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%09.3f\"</span><span class=\"sy0\">,</span>  r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%-09.3f\"</span><span class=\"sy0\">,</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "dc", "loc": 112, "block": "<pre class=\"text highlighted_source\">[*<br/> * (n) (c) lpx<br/> * Print number n, using at least c characters.<br/> *<br/> * Different from normal, this function:<br/> *  1. Uses the current ibase (not the obase) to print the number.<br/> *  2. Prunes \"0\" digits from the right, so [1.500 1 lxp] prints \"1.5\".<br/> *  3. Pads \"0\" digits to the left, so [_1.5 6 lxp] prints \"-001.5\".<br/> *  4. Never prints a newline.<br/> *]sz<br/>[<br/> Sc Sn          [Local n, c = from stack.]sz<br/> K Ss           [Local s = original scale.]sz<br/> [Reserve local variables D, F, I, L.]sz<br/> 0 SD 0 SF 0 SI 0 SL<br/>\u00a0<br/> [              [If n &lt; 0:]sz<br/>  [-]P           [Print negative sign.]sz<br/>  lc 1 - sc      [Decrement c.]sz<br/>  0 ln - sn      [Negate n.]sz<br/> ]sI 0 ln &lt;I<br/>\u00a0<br/> [* <br/>  * Array D[] takes digits before the radix point.<br/>  *]sz<br/> 0 k            [scale = 0]sz<br/> 0 Sd           [Local d = 0]sz<br/> ln 1 /         [Push digits before radix point.]sz<br/> [              [Loop to fill D[]:]sz<br/>  d 10\u00a0% ld\u00a0:D   [D[d] = next digit.]sz<br/>  ld 1 + sd      [Increment d.]sz<br/>  10 /           [Remove digit.]sz<br/>  d 0\u00a0!=L        [Loop until no digits.]sz<br/> ]sL d 0\u00a0!=L<br/> sz             [Pop digits.]sz<br/>\u00a0<br/> [*<br/>  * Array F[] takes digits after the radix point.<br/>  *]sz<br/> ln ln 1 / -    [Push digits after radix point.]sz<br/> d X k          [scale = enough.]sz<br/> _1 Sf          [Local f = -1]sz<br/> d 1 +          [Push 1 + digits after radix point.]sz<br/> [              [Loop to count digits:]sz<br/>  lf 1 + sf      [Increment f.]sz<br/>  10 /           [Remove digit.]sz<br/>  d 0\u00a0!=L        [Loop until no digits.]sz<br/> ]sL d 0\u00a0!=L<br/> sz             [Pop 1 + digits.]sz<br/> 0 k            [scale = 0]sz<br/> 10 lf ^ * 1 /  [Remove radix point from digits.]sz<br/> [              [Loop to prune digits:]sz<br/>  lf 1 - sf      [Decrement f.]sz<br/>  10 /           [Remove digit.]sz<br/>  d 10\u00a0% 0 =L    [Loop while last digit is 0.]sz<br/> ]sL d 10\u00a0% 0 =L<br/> 0 Si           [Local i = 0]sz<br/> [              [Loop to fill F[]:]sz<br/>  d 10\u00a0% li\u00a0:F   [F[i] = next digit.]sz<br/>  10 /           [Remove digit.]sz<br/>  li 1 + si      [Increment i.]sz<br/>  lf li &lt;L       [Loop while i &lt; f.]sz<br/> ]sL lf li &lt;L<br/> sz             [Pop digits.]sz<br/>\u00a0<br/> lc ld -        [Push count = c - d.]sz<br/> [              [If f &gt; 0:]sz<br/>  1 lf + -       [Subtract 1 radix point + f from count.]sz<br/> ]sI 0 lf &gt;I<br/> [              [Loop:]sz<br/>  [0]P           [Print a padding \"0\".]sz<br/>  1 -            [Decrement count.]sz<br/>  d 0 &lt;L         [Loop while count &gt; 0.]sz<br/> ]sL d 0 &lt;L<br/> sz             [Pop count.]sz<br/>\u00a0<br/> [              [Local function (digit) lPx:]sz<br/>  [              [Execute:]sz<br/>   [*<br/>    * Push the string that matches the digit.<br/>    *]sz<br/>   [[0] 2Q]sI d 0 =I  [[1] 2Q]sI d 1 =I  [[2] 2Q]sI d 2 =I  [[3] 2Q]sI d 3 =I<br/>   [[4] 2Q]sI d 4 =I  [[5] 2Q]sI d 5 =I  [[6] 2Q]sI d 6 =I  [[7] 2Q]sI d 7 =I<br/>   [[8] 2Q]sI d 8 =I  [[9] 2Q]sI d 9 =I  [[A] 2Q]sI d A =I  [[B] 2Q]sI d B =I<br/>   [[C] 2Q]sI d C =I  [[D] 2Q]sI d D =I  [[E] 2Q]sI d E =I  [[F] 2Q]sI d F =I<br/>   [?]            [Else push \"?\".]sz<br/>  ]x<br/>  P              [Print the string.]sz<br/>  sz             [Pop the digit.]sz<br/> ]SP<br/> ld             [Push counter = d.]sz<br/> [              [Loop:]sz<br/>  1 -            [Decrement counter.]sz<br/>  d\u00a0;D lPx       [Print digit D[counter].]sz<br/>  d 0 &lt;L         [Loop while counter &gt; 0.]sz<br/> ]sL d 0 &lt;L<br/> sz             [Pop counter.]sz<br/> [              [If f &gt; 0:]sz<br/>  [.]P           [Print radix point.]sz<br/>  lf              [Push counter = f.]sz<br/>  [              [Loop:]sz<br/>   1 -            [Decrement counter.]sz<br/>   d\u00a0;F lPx       [Print digit F[counter].]sz<br/>   d 0 &lt;L         [Loop while counter &gt; 0.]sz<br/>  ]sL d 0 &lt;L<br/>  sz             [Pop counter.]sz<br/> ]sI 0 lf &gt;I<br/>\u00a0<br/> [Restore variables n, c, d, f, D, F, L, I, P.]sz<br/> Lnsz Lcsz Ldsz Lfsz LDsz LFsz LLsz LIsz LPsz<br/> Ls k           [Restore variable s. Restore original scale.]sz<br/>]sp</pre>"}, {"lang": "Delphi", "loc": 21, "block": "<pre class=\"delphi highlighted_source\">\u00a0<br/><span class=\"kw1\">program</span> FormattedNumericOutput<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">const</span><br/>  fVal <span class=\"sy3\">=</span> <span class=\"nu0\">7.125</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"kw3\">FormatFloat</span><span class=\"br0\">(</span><span class=\"st0\">'0000#.000'</span><span class=\"sy1\">,</span>fVal<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"kw3\">FormatFloat</span><span class=\"br0\">(</span><span class=\"st0\">'0000#.0000000'</span><span class=\"sy1\">,</span>fVal<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"kw3\">FormatFloat</span><span class=\"br0\">(</span><span class=\"st0\">'##.0000000'</span><span class=\"sy1\">,</span>fVal<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"kw3\">FormatFloat</span><span class=\"br0\">(</span><span class=\"st0\">'0'</span><span class=\"sy1\">,</span>fVal<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"kw3\">FormatFloat</span><span class=\"br0\">(</span><span class=\"st0\">'#.#E-0'</span><span class=\"sy1\">,</span>fVal<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"kw3\">FormatFloat</span><span class=\"br0\">(</span><span class=\"st0\">'#,##0.00;;Zero'</span><span class=\"sy1\">,</span>fVal<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  Readln<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Eiffel", "loc": 69, "block": "<pre class=\"eiffel highlighted_source\">\u00a0<br/>note<br/>\tdescription <span class=\"sy0\">:</span> <span class=\"st0\">\"{<br/>2 Examples are given.<br/>The first example uses the standard library's FORMAT_DOUBLE class.<br/>The second example uses the AEL_PRINTF class from the freely available<br/>Amalasoft Eiffel Library (AEL).<br/>\u00a0<br/>See additional comments in the code.<br/>}\"</span><br/>\u00a0<br/><span class=\"kw1\">class</span> APPLICATION<br/>\u00a0<br/><span class=\"kw1\">inherit</span><br/>\tAEL_PRINTF <span class=\"co1\">-- Optional, see below</span><br/>\u00a0<br/><span class=\"kw2\">create</span><br/>\tmake<br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Initialization</span><br/>\u00a0<br/>\tmake<br/>\t\t\t<span class=\"co1\">-- Run application.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\tprint_formatted_std <span class=\"br0\">(</span><span class=\"nu0\">7.125</span><span class=\"br0\">)</span><br/>\t\t\tprint_formatted_ael <span class=\"br0\">(</span><span class=\"nu0\">7.125</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\t<span class=\"co1\">--|--------------------------------------------------------------</span><br/>\u00a0<br/>\tprint_formatted_std <span class=\"br0\">(</span>v<span class=\"sy0\">:</span> REAL_64<span class=\"br0\">)</span><br/>\t\t\t<span class=\"co1\">-- Print the value 'v' as a zero-padded string in a fixed </span><br/>\t\t\t<span class=\"co1\">-- overall width of 9 places and, with a precision of</span><br/>\t\t\t<span class=\"co1\">-- to 3 places to the right of the decimal point.</span><br/>\t\t\t<span class=\"co1\">-- Use the FORMAT_DOUBLE class from the standard library</span><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\tfmt<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+format_double&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">FORMAT_DOUBLE</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">create</span> fmt.<span class=\"me1\">make</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t\t\tfmt.<span class=\"me1\">zero_fill</span><br/>\t\t\tprint <span class=\"br0\">(</span>fmt.<span class=\"me1\">formatted</span> <span class=\"br0\">(</span>v<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\t<span class=\"co1\">--|--------------------------------------------------------------</span><br/>\u00a0<br/>\tprint_formatted_ael <span class=\"br0\">(</span>v<span class=\"sy0\">:</span> REAL_64<span class=\"br0\">)</span><br/>\t\t\t<span class=\"co1\">-- Print the value 'v' as a zero-padded string in a fixed </span><br/>\t\t\t<span class=\"co1\">-- overall width of 9 places and, with a precision of</span><br/>\t\t\t<span class=\"co1\">-- to 3 places to the right of the decimal point.</span><br/>\t\t\t<span class=\"co1\">-- Use the AEL_PRINTF class from the Amalasoft Eiffel Library</span><br/>\t\t\t<span class=\"co1\">-- freely available from www.amalasoft.com</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"co1\">-- printf accepts a format string and an argument list</span><br/>\t\t\t<span class=\"co1\">-- The argument list is a container (often a manifest </span><br/>\t\t\t<span class=\"co1\">-- array) of values corresponding to the type of the format </span><br/>\t\t\t<span class=\"co1\">-- specified in the format string argument.</span><br/>\t\t\t<span class=\"co1\">-- When only one argument is needed, then there is also the </span><br/>\t\t\t<span class=\"co1\">-- option to use just the value, without the container.</span><br/>\t\t\t<span class=\"co1\">-- In this example, the line would be:</span><br/>\t\t\t<span class=\"co1\">--   printf (\"%%09.3f%N\", v)</span><br/>\t\t\t<span class=\"co1\">-- The more deliberate form is used in the actual example, </span><br/>\t\t\t<span class=\"co1\">-- as it is more representative of common usage, when there </span><br/>\t\t\t<span class=\"co1\">-- are multiple value arguments.</span><br/>\u00a0<br/>\t\t\tprintf <span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">%%</span>09.3f<span class=\"es0\">%N</span>\"</span>, <span class=\"sy0\">&lt;&lt;</span> v <span class=\"sy0\">&gt;&gt;</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw2\">end</span><br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 14, "block": "<pre class=\"text highlighted_source\">n = 7.125<br/>:io.fwrite \"~f~n\", [n]<br/>:io.fwrite \"~.3f~n\", [n]<br/>:io.fwrite \"~9f~n\", [n]<br/>:io.fwrite \"~9.3f~n\", [n]<br/>:io.fwrite \"~9..0f~n\", [n]<br/>:io.fwrite \"~9.3.0f~n\", [n]<br/>:io.fwrite \"~9.3._f~n\", [n]<br/>:io.fwrite \"~f~n\", [-n]<br/>:io.fwrite \"~9.3f~n\", [-n]<br/>:io.fwrite \"~9.3.0f~n\", [-n]<br/>:io.fwrite \"~e~n\", [n]<br/>:io.fwrite \"~12.4e~n\", [n]<br/>:io.fwrite \"~12.4.0e~n\", [n]</pre>"}, {"lang": "Emacs Lisp", "loc": 3, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>format <span class=\"st0\">\"%09.3f\"</span> <span class=\"nu0\">7.125</span><span class=\"br0\">)</span><br/><span class=\"sy0\">=&gt;</span><br/><span class=\"st0\">\"00007.125\"</span></pre>"}, {"lang": "Erlang", "loc": 1, "block": "<pre>14&gt; io:fwrite(\"~9.3.0f~n\", [7.125]).\n00007.125\n</pre>"}, {"lang": "ERRE", "loc": 41, "block": "<pre class=\"text highlighted_source\">PROGRAM FORMATTED<br/>\u00a0<br/>PROCEDURE FORMATTED_PRINT(N,LENGTH,DEC_PLACES-&gt;FP$)<br/>\u00a0<br/>    LOCAL I,C$,NN$<br/>\u00a0<br/>    FORMAT$=STRING$(LENGTH,\"#\")+\".\"<br/>\u00a0<br/>    FOR I=1 TO DEC_PLACES DO<br/>       FORMAT$=FORMAT$+\"#\"<br/>    END FOR<br/>\u00a0<br/>    OPEN(\"O\",1,\"FORMAT.$$$\")<br/>       WRITE(#1,FORMAT$;N)<br/>    CLOSE(1)<br/>\u00a0<br/>    OPEN(\"I\",1,\"FORMAT.$$$\")<br/>       INPUT(LINE,#1,N$)<br/>    CLOSE(1)<br/>\u00a0<br/>   \u00a0! add leading zeros<br/>    FOR I=1 TO LEN(N$) DO<br/>       C$=MID$(N$,I,1)<br/>       IF C$=\" \" OR C$=\"%\" THEN NN$=NN$+\"0\" ELSE NN$=NN$+C$<br/>    END FOR<br/>\u00a0<br/>    FP$=RIGHT$(\"000000000000\"+NN$,LENGTH)\u00a0! chop to required length<br/>\u00a0<br/>END PROCEDURE<br/>\u00a0<br/>BEGIN<br/>\u00a0<br/>   PRINT(CHR$(12);)\u00a0! CLS<br/>\u00a0<br/>   FOR I=1 TO 10 DO<br/>     N=RND(1)*10^(INT(10*RND(1))-2)<br/>     FORMATTED_PRINT(N,16,5-&gt;FP$)<br/>     PRINT(\"Raw number =\";N;TAB(30);\"Using custom function =\";FP$)<br/>   END FOR<br/>\u00a0<br/>END PROGRAM</pre>"}, {"lang": "Euphoria", "loc": 7, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">constant</span> r <span class=\"sy1\">=</span> <span class=\"nu0\">7.125</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%9.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span><span class=\"sy1\">-</span>r<span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%9.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span>r<span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%-9.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span>r<span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%09.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span><span class=\"sy1\">-</span>r<span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%09.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span>r<span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%-09.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span>r<span class=\"br0\">)</span></pre>"}, {"lang": "FreeBASIC", "loc": 7, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co2\">#Include \"vbcompat.bi\"</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> s <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>  = Format<span class=\"br0\">(</span><span class=\"nu0\">7.125</span>, <span class=\"st0\">\"00000.0##\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span> s<br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "F#", "loc": 1, "block": "<pre class=\"fsharp highlighted_source\">printfn <span class=\"st0\">\"%09.3f\"</span> 7.125f</pre>"}, {"lang": "Factor", "loc": 2, "block": "<pre class=\"text highlighted_source\">USE: formatting<br/>7.125 \"%09.3f\\n\" printf</pre>"}, {"lang": "Fantom", "loc": 9, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>class Main<br/>{<br/>  public static Void main()<br/>  {<br/>    echo (7.125.toStr.padl(9, '0'))<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 8, "block": "<pre class=\"text highlighted_source\">\\ format 'n' digits of the double word 'd'<br/>: #n ( d n -- d )  0\u00a0?do # loop\u00a0;<br/>\u00a0<br/>\\ ud.0 prints an unsigned double<br/>: ud.0 ( d n -- )  &lt;# 1- #n #s #&gt; type\u00a0;<br/>\u00a0<br/>\\ d.0 prints a signed double<br/>: d.0 ( d n -- )  &gt;r tuck dabs &lt;# r&gt; 1- #n #s rot sign #&gt; type\u00a0;</pre>"}, {"lang": "Fortran", "loc": 2, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw3\">INTEGER</span> <span class=\"sy0\">::</span> <span class=\"kw1\">number</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7125</span><br/>WRITE<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">\"(I8.8)\"</span><span class=\"br0\">)</span> <span class=\"kw1\">number</span>   <span class=\"co1\">! Prints 00007125</span></pre>"}, {"lang": "FutureBasic", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>include \"ConsoleWindow\"<br/>\u00a0<br/>print using \"0000#.###\"; 7.125<br/>\u00a0</pre>"}, {"lang": "Gambas", "loc": 5, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <a href=\"http://gambasdoc.org/help/lang/format\"><span class=\"kw2\">Format</span></a><span class=\"br0\">(</span><span class=\"st0\">\"7.125\"</span>, <span class=\"st0\">\"00000.000\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "gnuplot", "loc": 1, "block": "<pre class=\"gnuplot highlighted_source\"><span class=\"kw1\">print</span> <span class=\"kw4\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%09.3f\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">7.125</span><span class=\"br0\">)</span></pre>"}, {"lang": "Go", "loc": 1, "block": "<pre class=\"go highlighted_source\">fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"%09.3f\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"sy3\">.</span><span class=\"nu0\">125</span><span class=\"sy1\">)</span></pre>"}, {"lang": "Groovy", "loc": 1, "block": "<pre class=\"groovy highlighted_source\">printf <span class=\"br0\">(</span><span class=\"st0\">\"%09.3f\"</span>, <span class=\"nu0\">7.125</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 3, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Text<span class=\"sy0\">.</span>Printf<br/>main <span class=\"sy0\">=</span><br/>  printf <span class=\"st0\">\"%09.3f\"</span> <span class=\"nu0\">7.125</span></pre>"}, {"lang": "HicEst", "loc": 1, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>ClipBoard<span class=\"sy1\">,</span> Format<span class=\"sy1\">=</span><span class=\"st0\">'i5.5, F4.3'</span><span class=\"br0\">)</span> <span class=\"kw1\">INT</span><span class=\"br0\">(</span><span class=\"nu0\">7.125</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span><span class=\"nu0\">7.125</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>    <span class=\"co1\">! 00007.125 </span></pre>"}, {"lang": "i", "loc": 23, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>concept FixedLengthFormat(value, length) {<br/>\tstring = text(abs(value))<br/>\tprefix = \"\"<br/>\tsign = \"\"<br/>\u00a0<br/>\tif value &lt; 0<br/>\t\tsign = \"-\"<br/>\tend<br/>\u00a0<br/>\tif #string &lt; length<br/>\t\tprefix = \"0\"*(length-#sign-#string-#prefix)<br/>\tend<br/>\u00a0<br/>\treturn sign+prefix+string<br/>}<br/>\u00a0<br/>software {<br/>\td = 7.125<br/>\tprint(FixedLengthFormat(d, 9))<br/>\tprint(FixedLengthFormat(-d, 9))<br/>}<br/>\u00a0</pre>"}, {"lang": "IDL", "loc": 3, "block": "<pre class=\"idl highlighted_source\">n <span class=\"sy0\">=</span> <span class=\"nu0\">7.125</span><br/>print, n, format<span class=\"sy0\">=</span><span class=\"st0\">'(f08.3)'</span><br/><span class=\"sy0\">;==</span>&gt; <span class=\"nu0\">0007.125</span></pre>"}, {"lang": "Icon and Unicon", "loc": 10, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> printf<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">every</span>  r <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">pi</span> <span class=\"sy1\">|</span> <span class=\"sy1\">-</span>r <span class=\"sy1\">|</span> <span class=\"nu0\">100</span><span class=\"sy1\">-</span>r <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">write</span><span class=\"br0\">(</span>r<span class=\"sy1\">,</span><span class=\"st0\">\" &lt;=== no printf\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">every</span> p <span class=\"sy1\">:=</span> <span class=\"st0\">\"|%r|\"</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"|%9.3r|\"</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"|%-9.3r|\"</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"|%0.3r|\"</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"|%e|\"</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"|%d|\"</span> <span class=\"kw1\">do</span> <br/>     <span class=\"kw4\">write</span><span class=\"br0\">(</span>sprintf<span class=\"br0\">(</span>p<span class=\"sy1\">,</span>r<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\" &lt;=== sprintf \"</span><span class=\"sy1\">,</span>p<span class=\"br0\">)</span><br/><span class=\"br0\">}</span> <br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 2, "block": "<pre class=\"j highlighted_source\">   <span class=\"st_h\">'r&lt;0&gt;9.3'</span> <span class=\"sy0\">(</span><span class=\"nu0\">8</span>!:<span class=\"nu0\">2</span><span class=\"sy0\">)</span> <span class=\"nu0\">7.125</span><br/><span class=\"nu0\">00007.125</span></pre>"}, {"lang": "Java", "loc": 6, "block": "<pre class=\"java5 highlighted_source\"><span class=\"kw2\">public</span> <span class=\"kw2\">class</span> Printing<span class=\"br0\">{</span><br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">void</span> main<span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw3\">double</span> printer = <span class=\"nu0\">7.125</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%09.3f\"</span>,printer<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"co1\">//System.out.format works the same way</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 3, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">123</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> str <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"st0\">\"00000\"</span> <span class=\"sy0\">+</span> n<span class=\"br0\">)</span>.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>alert<span class=\"br0\">(</span>str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 15, "block": "<pre class=\"text highlighted_source\">def pp0(width):<br/>  tostring<br/>  | if width &gt; length then (width - length) * \"0\" + . else . end;<br/>\u00a0<br/># pp(left; right) formats a decimal number to occupy<br/># (left+right+1) positions if possible,<br/># where \"left\" is the number of characters to the left of<br/># the decimal point, and similarly for \"right\".<br/>def pp(left; right):<br/>  def lpad: if (left &gt; length) then ((left - length) * \"0\") + . else . end;<br/>  tostring as $s<br/>  | $s<br/>  | index(\".\") as $ix<br/>  | ((if $ix then $s[0:$ix] else $s end) | lpad) + \".\" +<br/>    (if $ix then $s[$ix+1:] | .[0:right] else \"\" end);</pre>"}, {"lang": "Julia", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>test = [7.125, [rand()*10^rand(0:4) for i in 1:9]]<br/>\u00a0<br/>println(\"Formatting some numbers with the @sprintf macro (using \\\"%09.3f\\\"):\")<br/>for i in test<br/>    println(@sprintf \"   \u00a0%09.3f\" i)<br/>end<br/>\u00a0<br/>using Formatting<br/>println()<br/>println(\"The same thing using the Formatting package:\")<br/>fe = FormatExpr(\"    {1:09.3f}\")<br/>for i in test<br/>    printfmtln(fe, i)<br/>end<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 6, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.5-2</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> num <span class=\"sy0\">=</span> <span class=\"nu0\">7.125</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"%09.3f\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>num<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 1, "block": "<pre class=\"text highlighted_source\">7.125 -&gt; asstring(-precision = 3, -padding = 9, -padchar = '0')</pre>"}, {"lang": "Liberty BASIC", "loc": 22, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">10</span><br/>    n <span class=\"sy0\">=</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><span class=\"nu0\">10</span>^<span class=\"br0\">(</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"nu0\">10</span> <span class=\"sy0\">*</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"Raw number =\"</span>; n; <span class=\"st0\">\"Using custom function =\"</span>; FormattedPrint$<span class=\"br0\">(</span> n<span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/><span class=\"kw1\">next</span> i<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> FormattedPrint$<span class=\"br0\">(</span> n<span class=\"sy0\">,</span> length<span class=\"sy0\">,</span> decPlaces<span class=\"br0\">)</span><br/>    format$ <span class=\"sy0\">=</span><span class=\"st0\">\"#.\"</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> decPlaces<br/>        format$ <span class=\"sy0\">=</span>format$ <span class=\"sy0\">+</span><span class=\"st0\">\"#\"</span><br/>    <span class=\"kw1\">next</span> i<br/>\u00a0<br/>    n$ <span class=\"sy0\">=</span><span class=\"kw2\">using</span><span class=\"br0\">(</span> format$<span class=\"sy0\">,</span> n<span class=\"br0\">)</span>            <span class=\"co1\">'   remove leading spaces if less than 3 figs left of decimal</span><br/>                                        <span class=\"co1\">'   add leading zeros</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span> n$<span class=\"br0\">)</span><br/>        c$ <span class=\"sy0\">=</span><span class=\"kw2\">mid$</span><span class=\"br0\">(</span> n$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> c$ <span class=\"sy0\">=</span><span class=\"st0\">\" \"</span> <span class=\"kw1\">or</span> c$ <span class=\"sy0\">=</span><span class=\"st0\">\"%\"</span> <span class=\"kw1\">then</span> nn$ <span class=\"sy0\">=</span>nn$ <span class=\"sy0\">+</span><span class=\"st0\">\"0\"</span> <span class=\"kw1\">else</span> nn$ <span class=\"sy0\">=</span>nn$ <span class=\"sy0\">+</span>c$<br/>    <span class=\"kw1\">next</span> i<br/>    FormattedPrint$ <span class=\"sy0\">=</span><span class=\"kw2\">right$</span><span class=\"br0\">(</span> <span class=\"st0\">\"000000000000\"</span> <span class=\"sy0\">+</span>nn$<span class=\"sy0\">,</span> length<span class=\"br0\">)</span> <span class=\"co1\">'   chop to required length</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0</pre>"}, {"lang": "Logo", "loc": 4, "block": "<pre class=\"text highlighted_source\">to zpad\u00a0:num\u00a0:width\u00a0:precision<br/>  output map [ifelse\u00a0? = \"| | [\"0] [?]] form\u00a0:num\u00a0:width\u00a0:precision<br/>end<br/>print zpad 7.125 9 3 \u00a0; 00007.125</pre>"}, {"lang": "Lua", "loc": 9, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> digits<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw3\">math.floor</span><span class=\"br0\">(</span><span class=\"kw3\">math.log</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"kw3\">math.log</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> fixedprint<span class=\"br0\">(</span>num<span class=\"sy0\">,</span> digs<span class=\"br0\">)</span> <span class=\"co1\">--digs = number of digits before decimal point</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> digs <span class=\"sy0\">-</span> digits<span class=\"br0\">(</span>num<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">io.write</span><span class=\"st0\">\"0\"</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw3\">print</span><span class=\"br0\">(</span>num<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>fixedprint<span class=\"br0\">(</span><span class=\"nu0\">7.125</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"co1\">--&gt; 00007.125</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Print str$(7.125,\"00000.000\")<br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 16, "block": "<pre class=\"text highlighted_source\">printf(\"%f\", Pi);<br/>    3.141593<br/>printf(\"%.0f\", Pi);<br/>    3<br/>printf(\"%.2f\", Pi);<br/>    3.14<br/>printf(\"%08.2f\", Pi);<br/>    00003.14<br/>printf(\"%8.2f\", Pi);<br/>        3.14<br/>printf(\"%-8.2f|\", Pi);<br/>    3.14    |<br/>printf(\"%+08.2f\", Pi);<br/>    +0003.14<br/>printf(\"%+0*.*f\",8, 2, Pi);<br/>    +0003.14</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 2, "block": "<pre class=\"text highlighted_source\">StringTake[\"000000\" &lt;&gt; ToString[7.125], -9]<br/>00007.125</pre>"}, {"lang": "MATLAB / Octave", "loc": 2, "block": "<pre class=\"matlab highlighted_source\">&gt;&gt; <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/disp.html\"><span class=\"kw2\">disp</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%09.3f'</span>,<span class=\"nu0\">7.125</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"nu0\">00007.125</span></pre>"}, {"lang": "Mercury", "loc": 13, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>:- module formatted_numeric_output.<br/>:- interface.<br/>:- import_module io.<br/>\u00a0<br/>:- pred main(io::di, io::uo) is det.<br/>\u00a0<br/>:- implementation.<br/>:- import_module list, string.<br/>\u00a0<br/>main(!IO)\u00a0:-<br/>    io.format(\"%09.3f\\n\", [f(7.125)],\u00a0!IO).<br/>\u00a0</pre>"}, {"lang": "Modula-3", "loc": 1, "block": "<pre class=\"modula3 highlighted_source\">IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>Fmt.<span class=\"me1\">Pad</span><span class=\"br0\">(</span><span class=\"st0\">\"7.125<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> length <span class=\"sy0\">:=</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> padChar <span class=\"sy0\">:=</span> <span class=\"st_h\">'0'</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "NetRexx", "loc": 17, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>\u00a0<br/>options replace format comments java crossref savelog symbols <span class=\"kw2\">binary</span><br/>\u00a0<br/><span class=\"kw1\">import</span> java.<span class=\"me0\">text</span>.<span class=\"me0\">MessageFormat</span><br/>\u00a0<br/>sevenPointOneTwoFive = double <span class=\"nu0\">7.125</span><br/>\u00a0<br/><span class=\"co1\">-- using NetRexx Built-In Functions (BIFs)</span><br/><span class=\"kw1\">say</span> Rexx<span class=\"br0\">(</span>sevenPointOneTwoFive<span class=\"br0\">)</span>.<span class=\"me0\">format</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span>.<span class=\"kw6\">changestr</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>, <span class=\"st0\">'0'</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- using Java library constructs</span><br/>System.<span class=\"me0\">out</span>.<span class=\"me0\">printf</span><span class=\"br0\">(</span><span class=\"st0\">'%09.3f\\n'</span>, <span class=\"br0\">[</span>Double<span class=\"br0\">(</span>sevenPointOneTwoFive<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> MessageFormat.<span class=\"me0\">format</span><span class=\"br0\">(</span><span class=\"st0\">'{0,number,#00000.###}'</span>, <span class=\"br0\">[</span>Double<span class=\"br0\">(</span>sevenPointOneTwoFive<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 7, "block": "<pre class=\"text highlighted_source\">import strfmt<br/>const r = 7.125<br/>echo r<br/>echo((-r).format(\"9.3f\"))<br/>echo(r.format(\"9.3f\"))<br/>echo((-r).format(\"09.3f\"))<br/>echo(r.format(\"09.3f\"))</pre>"}, {"lang": "Oberon-2", "loc": 1, "block": "<pre class=\"oberon2 highlighted_source\">Out.<span class=\"me1\">Real</span><span class=\"br0\">(</span><span class=\"nu0\">7.125</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Objective-C", "loc": 1, "block": "<pre class=\"objc highlighted_source\">NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%09.3f\"</span>, <span class=\"nu0\">7.125</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "OCaml", "loc": 1, "block": "<pre class=\"ocaml highlighted_source\"><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%09.3f\\n\"</span> <span class=\"nu0\">7.125</span></pre>"}, {"lang": "OpenEdge/Progress", "loc": 3, "block": "<pre class=\"progress highlighted_source\"><span class=\"kw1\">MESSAGE</span><br/>   <span class=\"kw1\">STRING</span><span class=\"br0\">(</span> <span class=\"nu0\">7.125</span><span class=\"sy0\">,</span> <span class=\"st0\">\"99999.999\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">VIEW-AS</span> <span class=\"kw1\">ALERT-BOX</span><span class=\"sy0\">.</span></pre>"}, {"lang": "Oz", "loc": 11, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">PrintFloat</span> X Prec<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Property<span class=\"sy0\">.</span>put <span class=\"st0\">'print.floatPrecision'</span> Prec<span class=\"br0\">}</span><br/>     S = <span class=\"br0\">{</span>Float<span class=\"sy0\">.</span>toString X<span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"br0\">{</span>Append<br/>      <span class=\"kw1\">for</span> I <span class=\"kw1\">in</span> 1<span class=\"sy0\">..</span>Prec<span class=\"sy0\">-</span><span class=\"br0\">{</span>Length S<span class=\"br0\">}</span><span class=\"sy0\">+</span>1 collect:C <span class=\"kw1\">do</span> <span class=\"br0\">{</span>C <span class=\"re3\">&amp;0</span><span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/>      S<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span> <br/>  <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo <span class=\"br0\">{</span>PrintFloat 7<span class=\"sy0\">.</span>125 8<span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%09.4f<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">Pi</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%09.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">7.125</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%09.3f<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">7.125</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 1, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw3\">say</span> <span class=\"nu0\">7.125</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%09.3f'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 1, "block": "<pre class=\"text highlighted_source\">printf(1,\"%09.3f\\n\",7.125)</pre>"}, {"lang": "PHP", "loc": 1, "block": "<pre class=\"php highlighted_source\"><span class=\"kw1\">echo</span> <a href=\"http://www.php.net/str_pad\"><span class=\"kw3\">str_pad</span></a><span class=\"br0\">(</span><span class=\"nu19\">7.125</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"st_h\">'0'</span><span class=\"sy0\">,</span> STR_PAD_LEFT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PicoLisp", "loc": 2, "block": "<pre class=\"text highlighted_source\">(pad 9 (format 7125 3))<br/>(pad 9 (format 7125 3 \",\"))  # European format</pre>"}, {"lang": "PL/I", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>put edit (X) (p'999999.V999'); /* Western format. */<br/>\u00a0<br/>put edit (X) (p'999999,V999'); /* In European format. */<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Pop11", "loc": 19, "block": "<pre class=\"text highlighted_source\">;;; field of length 12, 3 digits after decimal place<br/>format_print('~12,3,0,`*,`0F', [1299.19]);<br/>;;; prints \"00001299.190\"<br/>format_print('~12,3,0,`*,`0F', [100000000000000000]);<br/>;;; Since the number does not fit into the field prints \"************\"<br/>;;; that is stars instead of the number<br/>format_print('~12,3,0,`*,`0F', [-1299.19]);<br/>;;; prints \"000-1299.190\"<br/>;;; that is _leading zeros_ before sign<br/>\u00a0<br/>format_print('~3,1,12,`0:$', [1299.19]);<br/>;;; prints \"00001299.190\"<br/>format_print('~3,1,12,`0:$', [-1299.19]);<br/>;;; prints \"-0001299.190\"<br/>;;; that is sign before leading zeros<br/>format_print('~3,1,12,`0:$', [100000000000000000]);<br/>;;; prints \"100000000000000000.000\"<br/>;;; that is uses more space if the number does not fit into<br/>;;; fixed width</pre>"}, {"lang": "PowerShell", "loc": 1, "block": "<pre class=\"powershell highlighted_source\"><span class=\"st0\">'{0:00000.000}'</span> <span class=\"kw4\">-f</span> <span class=\"nu0\">7.125</span></pre>"}, {"lang": "PureBasic", "loc": 1, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">StrF</span><span class=\"br0\">(</span><span class=\"nu0\">7.125</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span>,<span class=\"nu0\">8</span>,<span class=\"st0\">\"0\"</span><span class=\"br0\">)</span>    <span class=\"co1\">; Will be 0007.125</span></pre>"}, {"lang": "Python", "loc": 10, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">math</span> <span class=\"kw1\">import</span> pi<span class=\"sy0\">,</span> exp<br/>r <span class=\"sy0\">=</span> exp<span class=\"br0\">(</span>pi<span class=\"br0\">)</span>-pi<br/><span class=\"kw1\">print</span> r<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"e=%e f=%f g=%g G=%G s=%s r=%r!\"</span>%<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"e=%9.4e f=%9.4f g=%9.4g!\"</span>%<span class=\"br0\">(</span>-r<span class=\"sy0\">,</span>-r<span class=\"sy0\">,</span>-r<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"e=%9.4e f=%9.4f g=%9.4g!\"</span>%<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"e=%-9.4e f=%-9.4f g=%-9.4g!\"</span>%<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"e=%09.4e f=%09.4f g=%09.4g!\"</span>%<span class=\"br0\">(</span>-r<span class=\"sy0\">,</span>-r<span class=\"sy0\">,</span>-r<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"e=%09.4e f=%09.4f g=%09.4g!\"</span>%<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"e=%-09.4e f=%-09.4f g=%-09.4g!\"</span>%<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>r<span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 28, "block": "<pre class=\"text highlighted_source\">&gt; sprintf(\"%f\", pi)<br/>[1] \"3.141593\"<br/>&gt; sprintf(\"%.3f\", pi)<br/>[1] \"3.142\"<br/>&gt; sprintf(\"%1.0f\", pi)<br/>[1] \"3\"<br/>&gt; sprintf(\"%5.1f\", pi)<br/>[1] \"  3.1\"<br/>&gt; sprintf(\"%05.1f\", pi)<br/>[1] \"003.1\"<br/>&gt; sprintf(\"%+f\", pi)<br/>[1] \"+3.141593\"<br/>&gt; sprintf(\"% f\", pi)<br/>[1] \" 3.141593\"<br/>&gt; sprintf(\"%-10f\", pi)# left justified<br/>[1] \"3.141593  \"<br/>&gt; sprintf(\"%e\", pi)<br/>[1] \"3.141593e+00\"<br/>&gt; sprintf(\"%E\", pi)<br/>[1] \"3.141593E+00\"<br/>&gt; sprintf(\"%g\", pi)<br/>[1] \"3.14159\"<br/>&gt; sprintf(\"%g\",   1e6 * pi) # -&gt; exponential<br/>[1] \"3.14159e+06\"<br/>&gt; sprintf(\"%.9g\", 1e6 * pi) # -&gt; \"fixed\"<br/>[1] \"3141592.65\"<br/>&gt; sprintf(\"%G\", 1e-6 * pi)<br/>[1] \"3.14159E-06\"</pre>"}, {"lang": "Racket", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>-&gt; (displayln (~a 7.125 #:width 9 #:align 'right #:pad-string \"0\"))<br/>00007.125<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 36, "block": "<pre class=\"rebol highlighted_source\"><span class=\"coMULTI\">rebol [<br/>\tTitle: \"Formatted Numeric Output\"<br/>\tURL: http://rosettacode.org/wiki/Formatted_Numeric_Output<br/>]</span><br/>\u00a0<br/><span class=\"co1\">; REBOL has no built-in facilities for printing pictured output. </span><br/><span class=\"co1\">; However, it's not too hard to cook something up using the</span><br/><span class=\"co1\">; string manipulation facilities. </span><br/>\u00a0<br/>zeropad: <span class=\"kw2\">func</span> <span class=\"br0\">[</span><br/>\t<span class=\"st0\">\"Pad number with zeros or spaces. Works on entire number.\"</span><br/>\tpad <span class=\"st0\">\"Number of characters to pad to.\"</span><br/>\tn <span class=\"st0\">\"Number to pad.\"</span><br/>\t<span class=\"sy0\">/</span>space <span class=\"st0\">\"Pad with spaces instead.\"</span><br/>\t<span class=\"sy0\">/</span>local nn c s<br/><span class=\"br0\">]</span><span class=\"br0\">[</span><br/>\tn: <span class=\"kw3\">to-string</span> n  c: <span class=\"st0\">\" \"</span>  s: <span class=\"st0\">\"\"</span><br/>\u00a0<br/>\t<span class=\"kw2\">if</span> <span class=\"kw3\">not</span> space <span class=\"br0\">[</span><br/>\t\tc: <span class=\"st0\">\"0\"</span>  <br/>\t\t<span class=\"kw2\">if</span> #<span class=\"st0\">\"-\"</span> = n<span class=\"sy0\">/</span><span class=\"nu0\">1</span> <span class=\"br0\">[</span>pad: pad - <span class=\"nu0\">1</span>  n: <span class=\"kw3\">copy</span> <span class=\"kw3\">skip</span> n <span class=\"nu0\">1</span>  s: <span class=\"st0\">\"-\"</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">]</span><br/>\u00a0<br/>        <span class=\"kw3\">insert</span><span class=\"sy0\">/</span>dup n c <span class=\"br0\">(</span>pad - <span class=\"kw3\">length?</span> n<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">insert</span> n s<br/>    n <br/><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"co1\">; These tests replicate the C example output.</span><br/>\u00a0<br/><span class=\"kw3\">print</span> <span class=\"br0\">[</span>zeropad<span class=\"sy0\">/</span>space <span class=\"nu0\">9</span> <span class=\"kw3\">negate</span> <span class=\"nu0\">7.125</span><span class=\"br0\">]</span><br/><span class=\"kw3\">print</span> <span class=\"br0\">[</span>zeropad<span class=\"sy0\">/</span>space <span class=\"nu0\">9</span> <span class=\"nu0\">7.125</span><span class=\"br0\">]</span><br/><span class=\"kw3\">print</span> <span class=\"nu0\">7.125</span><br/><span class=\"kw3\">print</span> <span class=\"br0\">[</span>zeropad <span class=\"nu0\">9</span> <span class=\"kw3\">negate</span> <span class=\"nu0\">7.125</span><span class=\"br0\">]</span><br/><span class=\"kw3\">print</span> <span class=\"br0\">[</span>zeropad <span class=\"nu0\">9</span> <span class=\"nu0\">7.125</span><span class=\"br0\">]</span><br/><span class=\"kw3\">print</span> <span class=\"nu0\">7.125</span></pre>"}, {"lang": "Raven", "loc": 3, "block": "<pre class=\"text highlighted_source\">7.125 \"%09.3f\" print<br/>\u00a0<br/>00007.125</pre>"}, {"lang": "REXX", "loc": 60, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program shows various ways to  add leading zeroes  to numbers.   */</span><br/>a=<span class=\"nu0\">7.125</span><br/>b=<span class=\"kw6\">translate</span><span class=\"br0\">(</span><span class=\"kw6\">format</span><span class=\"br0\">(</span>a,<span class=\"nu0\">10</span><span class=\"br0\">)</span>,<span class=\"nu0\">0</span>,<span class=\"st0\">' '</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'a='</span> a<br/><span class=\"kw1\">say</span> <span class=\"st0\">'b='</span> b<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>c=<span class=\"nu0\">8.37</span><br/>d=<span class=\"kw6\">right</span><span class=\"br0\">(</span>c,<span class=\"nu0\">20</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'c='</span> c<br/><span class=\"kw1\">say</span> <span class=\"st0\">'d='</span> d<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>e=<span class=\"nu0\">19.46</span><br/>f=<span class=\"st0\">'000000'</span>e<br/><span class=\"kw1\">say</span> <span class=\"st0\">'e='</span> e<br/><span class=\"kw1\">say</span> <span class=\"st0\">'f='</span> f<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>g=18<span class=\"sy0\">.</span>25e+1<br/>h=000000<span class=\"sy0\">||</span>g<br/><span class=\"kw1\">say</span> <span class=\"st0\">'g='</span> g<br/><span class=\"kw1\">say</span> <span class=\"st0\">'h='</span> h<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>i=<span class=\"nu0\">45.2</span><br/>j=<span class=\"kw6\">translate</span><span class=\"br0\">(</span><span class=\"st0\">'      '</span>i,<span class=\"nu0\">0</span>,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'i='</span> i<br/><span class=\"kw1\">say</span> <span class=\"st0\">'j='</span> j<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>k=<span class=\"nu0\">36.007</span><br/>l=<span class=\"kw6\">insert</span><span class=\"br0\">(</span>00000000,k,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'k='</span> k<br/><span class=\"kw1\">say</span> <span class=\"st0\">'l='</span> l<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>m=<span class=\"sy0\">.</span>10055<br/>n=<span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">20</span><span class=\"br0\">)</span>m<br/><span class=\"kw1\">say</span> <span class=\"st0\">'m='</span> m<br/><span class=\"kw1\">say</span> <span class=\"st0\">'n='</span> n<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>p=<span class=\"nu0\">4.060</span><br/>q=0000000000000<span class=\"sy0\">||</span>p<br/><span class=\"kw1\">say</span> <span class=\"st0\">'p='</span> p<br/><span class=\"kw1\">say</span> <span class=\"st0\">'q='</span> q<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>r=<span class=\"nu0\">876</span><br/>s=<span class=\"kw6\">substr</span><span class=\"br0\">(</span>r+<span class=\"nu0\">10000000</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'r='</span> r<br/><span class=\"kw1\">say</span> <span class=\"st0\">'s='</span> s<br/><span class=\"kw1\">say</span><br/>\u00a0<br/>t=<span class=\"nu0\">13.02</span><br/>u=<span class=\"kw6\">reverse</span><span class=\"br0\">(</span><span class=\"kw6\">reverse</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span>000000000<span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'t='</span> t<br/><span class=\"kw1\">say</span> <span class=\"st0\">'u='</span> u<br/>                                      <span class=\"coMULTI\">/*stick a fork in it, we're done.*/</span></pre>"}, {"lang": "Ring", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>decimals(3)<br/>see fixedprint(7.125, 5) + nl<br/>\u00a0<br/>func fixedprint num, digs<br/>     for i = 1 to digs - len(string(floor(num)))<br/>         see \"0\"<br/>     next<br/>     see num + nl <br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 9, "block": "<pre class=\"ruby highlighted_source\">r = <span class=\"nu0\">7.125</span><br/><span class=\"kw3\">printf</span> <span class=\"st0\">\"\u00a0%9.3f<span class=\"es0\">\\n</span>\"</span>,   r          <span class=\"co1\">#=&gt;      7.125</span><br/><span class=\"kw3\">printf</span> <span class=\"st0\">\"\u00a0%09.3f<span class=\"es0\">\\n</span>\"</span>,  r          <span class=\"co1\">#=&gt;  00007.125</span><br/><span class=\"kw3\">printf</span> <span class=\"st0\">\"\u00a0%09.3f<span class=\"es0\">\\n</span>\"</span>, <span class=\"sy0\">-</span>r          <span class=\"co1\">#=&gt;  -0007.125</span><br/><span class=\"kw3\">printf</span> <span class=\"st0\">\"\u00a0%+09.3f<span class=\"es0\">\\n</span>\"</span>, r          <span class=\"co1\">#=&gt;  +0007.125</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"\u00a0%9.3f\"</span>  <span class=\"sy0\">%</span>  r             <span class=\"co1\">#=&gt;      7.125</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"\u00a0%09.3f\"</span> <span class=\"sy0\">%</span>  r             <span class=\"co1\">#=&gt;  00007.125</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"\u00a0%09.3f\"</span> <span class=\"sy0\">%</span> <span class=\"sy0\">-</span>r             <span class=\"co1\">#=&gt;  -0007.125</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"\u00a0%+09.3f\"</span> <span class=\"sy0\">%</span> r             <span class=\"co1\">#=&gt;  +0007.125</span></pre>"}, {"lang": "Run BASIC", "loc": 1, "block": "<pre class=\"text highlighted_source\">print right$(\"00000\";using(\"#####.##\",7.125),8) ' =&gt; 00007.13</pre>"}, {"lang": "Rust", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>fn main() {<br/>    let x = 7.125;<br/>\u00a0<br/>    println!(\"{:9}\", x);<br/>    println!(\"{:09}\", x);<br/>    println!(\"{:9}\", -x);<br/>    println!(\"{:09}\", -x);<br/>}<br/>\u00a0</pre>"}, {"lang": "Sather", "loc": 6, "block": "<pre class=\"text highlighted_source\">class MAIN is<br/>  main is<br/>    #OUT + #FMT(\"&lt;F0 #####.###&gt;\", 7.1257) + \"\\n\";<br/>    #OUT + #FMT(\"&lt;F0 #####.###&gt;\", 7.1254) + \"\\n\";<br/>  end;<br/>end;</pre>"}, {"lang": "Scala", "loc": 10, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> FormattedNumeric <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> <span class=\"nu0\">7.125</span>                                   <span class=\"co1\">//&gt; r \u00a0: Double = 7.125</span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" ${-r}%9.3f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                        <span class=\"co1\">//&gt;     -7,125</span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" $r%9.3f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                           <span class=\"co1\">//&gt;      7,125</span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" $r%-9.3f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                          <span class=\"co1\">//&gt;  7,125    </span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" ${-r}%09.3f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                       <span class=\"co1\">//&gt;  -0007,125</span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" $r%09.3f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                          <span class=\"co1\">//&gt;  00007,125</span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" $r%-9.3f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                          <span class=\"co1\">//&gt;  7,125    </span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" $r%+09.3f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                         <span class=\"co1\">//&gt;  +0007,125</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 8, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">load</span> <span class=\"st0\">\"srfi-54.scm\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">load</span> <span class=\"st0\">\"srfi-54.scm\"</span><span class=\"br0\">)</span> <span class=\"co1\">;; Don't ask.</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> x <span class=\"nu0\">295643087.65432</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>dotimes <span class=\"br0\">(</span>i <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>print <span class=\"br0\">(</span>cat x <span class=\"nu0\">25</span> <span class=\"nu0\">3.0</span> #\\<span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> #\\, <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"nu0\">4</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Seed7", "loc": 14, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"float.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    const float: r is 7.125;<br/>  begin<br/>    writeln( r digits 3 lpad 9);<br/>    writeln(-r digits 3 lpad 9);<br/>    writeln( r digits 3 lpad0 9);<br/>    writeln(-r digits 3 lpad0 9);<br/>    writeln( r digits 3);<br/>    writeln(-r digits 3);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 1, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%09.3f<span class=\"es0\">\\n</span>\"</span>, <span class=\"nu0\">7.125</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Smalltalk", "loc": 2, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">Transcript</span> show: <span class=\"br0\">(</span><span class=\"re5\">7</span>.<span class=\"re5\">125</span> printPaddedWith: $0 to: <span class=\"re5\">3</span>.<span class=\"re5\">6</span><span class=\"br0\">)</span>; cr.<br/><span class=\"coMULTI\">\"output: 007.125000\"</span></pre>"}, {"lang": "SQL", "loc": 7, "block": "<pre class=\"sql highlighted_source\"><span class=\"kw1\">DECLARE</span> @n <span class=\"kw1\">INT</span><br/><span class=\"kw1\">SELECT</span> @n<span class=\"sy0\">=</span><span class=\"nu0\">123</span><br/><span class=\"kw1\">SELECT</span> <span class=\"kw1\">SUBSTRING</span><span class=\"br0\">(</span><span class=\"kw1\">CONVERT</span><span class=\"br0\">(</span><span class=\"kw1\">CHAR</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">10000</span><span class=\"sy0\">+</span>@n<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw1\">AS</span> FourDigits<br/>\u00a0<br/><span class=\"kw1\">SET</span> @n<span class=\"sy0\">=</span><span class=\"nu0\">5</span><br/>print <span class=\"st0\">\"TwoDigits: \"</span> <span class=\"sy0\">+</span> <span class=\"kw1\">SUBSTRING</span><span class=\"br0\">(</span><span class=\"kw1\">CONVERT</span><span class=\"br0\">(</span><span class=\"kw1\">CHAR</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">+</span>@n<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"co1\">--Output: 05</span></pre>"}, {"lang": "Standard ML", "loc": 1, "block": "<pre class=\"text highlighted_source\">print (StringCvt.padLeft #\"0\" 9 (Real.fmt (StringCvt.FIX (SOME 3)) 7.125) ^ \"\\n\")</pre>"}, {"lang": "Stata", "loc": 2, "block": "<pre class=\"text highlighted_source\">. display\u00a0%010.3f (57/8)<br/>000007.125</pre>"}, {"lang": "Suneido", "loc": 1, "block": "<pre class=\"text highlighted_source\">Print(7.125.Pad(9))</pre>"}, {"lang": "Tcl", "loc": 2, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">set</span> number <span class=\"nu0\">7.342</span><br/><span class=\"kw2\">format</span> <span class=\"st0\">\"%08.3f\"</span> <span class=\"re0\">$number</span></pre>"}, {"lang": "TI-89 BASIC", "loc": 1, "block": "<pre class=\"text highlighted_source\">right(\"00000\" &amp; format(7.12511, \"f3\"), 9)</pre>"}, {"lang": "Toka", "loc": 6, "block": "<pre class=\"text highlighted_source\">needs values<br/>value n<br/>123 to n<br/>\u00a0<br/>2 import printf<br/>\"\u00a0%08d\" n printf</pre>"}, {"lang": "Ursala", "loc": 7, "block": "<pre class=\"text highlighted_source\">#import flo<br/>\u00a0<br/>x = 7.125<br/>\u00a0<br/>#show+<br/>\u00a0<br/>t = &lt;printf/'%09.3f' x&gt;</pre>"}, {"lang": "VBA", "loc": 25, "block": "<pre class=\"vb highlighted_source\"><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw2\">Sub</span> Main()<br/>Debug.<span class=\"kw4\">Print</span> fFormat(13, 2, 1230.3333)<br/>Debug.<span class=\"kw4\">Print</span> fFormat(2, 13, 1230.3333)<br/>Debug.<span class=\"kw4\">Print</span> fFormat(10, 5, 0.3333)<br/>Debug.<span class=\"kw4\">Print</span> fFormat(13, 2, 1230)<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0<br/><span class=\"kw2\">Private</span> <span class=\"kw2\">Function</span> fFormat(NbInt <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, NbDec <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, Nb <span class=\"kw4\">As</span> <span class=\"kw1\">Double</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"co1\">'NbInt\u00a0: Lenght of integral part<br/></span><span class=\"co1\">'NbDec\u00a0: Lenght of decimal part<br/></span><span class=\"co1\">'Nb\u00a0: decimal on integer number<br/></span><span class=\"kw4\">Dim</span> u <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, v <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>   u = CStr(Nb)<br/>   i = InStr(u, Application.DecimalSeparator)<br/>   <span class=\"kw3\">If</span> i &gt; 0 <span class=\"kw3\">Then</span><br/>      v = Mid(u, i + 1)<br/>      u = Left(u, i - 1)<br/>      fFormat = Right(<span class=\"kw1\">String</span>(NbInt, <span class=\"st0\">\"0\"</span>) &amp; u, NbInt) &amp; Application.DecimalSeparator &amp; Left(v &amp; <span class=\"kw1\">String</span>(NbDec, <span class=\"st0\">\"0\"</span>), NbDec)<br/>   <span class=\"kw3\">Else</span><br/>      fFormat = Right(<span class=\"kw1\">String</span>(NbInt, <span class=\"st0\">\"0\"</span>) &amp; u, NbInt) &amp; Application.DecimalSeparator &amp; <span class=\"kw1\">String</span>(NbDec, <span class=\"st0\">\"0\"</span>)<br/>   <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0</pre>"}, {"lang": "VBScript", "loc": 15, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>a = 1234.5678<br/>\u00a0<br/>' Round to three decimal places. Groups by default. Output = \"1,234.568\".<br/>WScript.Echo FormatNumber(a, 3)<br/>\u00a0<br/>' Truncate to three decimal places. Output = \"1234.567\".<br/>WScript.Echo Left(a, InStr(a, \".\") + 3)<br/>\u00a0<br/>' Round to a whole number. Grouping disabled. Output = \"1235\".<br/>WScript.Echo FormatNumber(a, 0, , , False)<br/>\u00a0<br/>' Use integer portion only and pad with zeroes to fill 8 chars. Output = \"00001234\".<br/>WScript.Echo Right(\"00000000\" &amp; Int(a), 8)<br/>\u00a0</pre>"}, {"lang": "Vedit macro language", "loc": 2, "block": "<pre class=\"vedit highlighted_source\">#<span class=\"nu0\">1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7125</span><br/>Num_Ins<span class=\"br0\">(</span>#<span class=\"nu0\">1</span><span class=\"sy0\">,</span> FILL<span class=\"sy0\">+</span>COUNT<span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span> Char<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> Ins_Char<span class=\"br0\">(</span><span class=\"st0\">'.'</span><span class=\"br0\">)</span></pre>"}, {"lang": "Visual Basic", "loc": 3, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/>Debug.<span class=\"kw4\">Print</span> Format$(7.125, <span class=\"st0\">\"00000.000\"</span>)<br/>\u00a0</pre>"}, {"lang": "XSLT", "loc": 1, "block": "<pre>&lt;xsl:value-of select=\"format-number(7.125, '00000000.#############')\" /&gt;\n</pre>"}, {"lang": "zkl", "loc": 5, "block": "<pre class=\"text highlighted_source\">\"%09.3f\".fmt(7.125)   //--&gt;\"00007.125\"<br/>\"%09.3e\".fmt(7.125)   //--&gt;\"7.125e+00\"<br/>\"%09.3g\".fmt(7.125)   //--&gt;\"000007.12\"<br/>\"%09d\".fmt(7.125)     //--&gt;\"000000007\"<br/>\"%09,d\".fmt(78901.125)//--&gt;\"00078,901\"</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 11, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">LET</span> n=<span class=\"nu0\">7.125</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">LET</span> width=<span class=\"nu0\">9</span><br/><span class=\"nu0\">30</span> <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">PRINT</span> <span class=\"kw4\">AT</span> <span class=\"nu0\">10</span>,<span class=\"nu0\">10</span>;n$<br/><span class=\"nu0\">50</span> STOP <br/><span class=\"nu0\">1000</span> <span class=\"co3\">REM Formatted fixed-length</span><br/><span class=\"nu0\">1010</span> <span class=\"kw1\">LET</span> n$=<span class=\"kw3\">STR</span>$ n<br/><span class=\"nu0\">1020</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> width-<span class=\"kw3\">LEN</span> n$<br/><span class=\"nu0\">1030</span> <span class=\"kw1\">LET</span> n$=<span class=\"st0\">\"0\"</span>+n$<br/><span class=\"nu0\">1040</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">1050</span> <span class=\"kw1\">RETURN</span> </pre>"}]}