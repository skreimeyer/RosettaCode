{"task": "Mutual_recursion", "blocks": [{"lang": "ACL2", "loc": 12, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>mutual-recursion<br/> <span class=\"br0\">(</span><span class=\"kw1\">defun</span> f <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>declare <span class=\"br0\">(</span>xargs <span class=\"sy0\">:</span><span class=\"me1\">mode</span> <span class=\"sy0\">:</span><span class=\"me1\">program</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>zp n<span class=\"br0\">)</span><br/>        <span class=\"nu0\">1</span><br/>        <span class=\"br0\">(</span>- n <span class=\"br0\">(</span>m <span class=\"br0\">(</span>f <span class=\"br0\">(</span><span class=\"nu0\">1</span>- n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/> <span class=\"br0\">(</span><span class=\"kw1\">defun</span> m <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>declare <span class=\"br0\">(</span>xargs <span class=\"sy0\">:</span><span class=\"me1\">mode</span> <span class=\"sy0\">:</span><span class=\"me1\">program</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>zp n<span class=\"br0\">)</span><br/>        <span class=\"nu0\">0</span><br/>        <span class=\"br0\">(</span>- n <span class=\"br0\">(</span>f <span class=\"br0\">(</span>m <span class=\"br0\">(</span><span class=\"nu0\">1</span>- n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Ada", "loc": 28, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_Io</span>; <br/><span class=\"kw3\">procedure</span> Mutual_Recursion <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">function</span> M<span class=\"br0\">(</span>N\u00a0: Integer<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Integer;<br/>   <span class=\"kw3\">function</span> F<span class=\"br0\">(</span>N\u00a0: Integer<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Integer <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> N = <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">else</span><br/>         <span class=\"kw1\">return</span> N - M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>N - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> F;<br/>   <span class=\"kw3\">function</span> M<span class=\"br0\">(</span>N\u00a0: Integer<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Integer <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> N = <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;<br/>      <span class=\"kw1\">else</span><br/>         <span class=\"kw1\">return</span> N - F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>N-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> M;<br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">0</span>..<span class=\"nu0\">19</span> <span class=\"kw1\">loop</span><br/>      Put_Line<span class=\"br0\">(</span>Integer'Image<span class=\"br0\">(</span>F<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   New_Line;<br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">0</span>..<span class=\"nu0\">19</span> <span class=\"kw1\">loop</span><br/>      Put_Line<span class=\"br0\">(</span>Integer'Image<span class=\"br0\">(</span>M<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/><span class=\"kw1\">end</span> Mutual_recursion;</pre>"}, {"lang": "Aime", "loc": 42, "block": "<pre class=\"text highlighted_source\">integer F(integer n);<br/>integer M(integer n);<br/>\u00a0<br/>integer F(integer n)<br/>{<br/>    integer r;<br/>    if (n) {<br/>\tr = n - M(F(n - 1));<br/>    } else {<br/>\tr = 1;<br/>    }<br/>    return r;<br/>}<br/>\u00a0<br/>integer M(integer n)<br/>{<br/>    integer r;<br/>    if (n) {<br/>\tr = n - F(M(n - 1));<br/>    } else {<br/>\tr = 0;<br/>    }<br/>    return r;<br/>}<br/>\u00a0<br/>integer main(void)<br/>{<br/>    integer i;<br/>    i = 0;<br/>    while (i &lt; 20) {<br/>\to_winteger(3, F(i));<br/>\ti += 1;<br/>    }<br/>    o_byte('\\n');<br/>    i = 0;<br/>    while (i &lt; 20) {<br/>\to_winteger(3, M(i));<br/>\ti += 1;<br/>    }<br/>    o_byte('\\n');<br/>    return 0;<br/>}</pre>"}, {"lang": "ALGOL 68", "loc": 21, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span><span class=\"br0\">)</span><span class=\"kw3\">INT</span> m<span class=\"sy1\">;</span> <span class=\"coMULTI\"># ONLY required for ELLA ALGOL 68RS - an official subset OF full ALGOL 68 #</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> f <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> n<span class=\"br0\">)</span><span class=\"kw3\">INT</span><span class=\"sy1\">:</span><br/>  <span class=\"kw2\">IF</span> n <span class=\"sy1\">=</span> 0 <span class=\"kw2\">THEN</span> 1<br/>  <span class=\"kw2\">ELSE</span> n <span class=\"sy1\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>\u00a0<br/>m <span class=\"sy1\">:=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> n<span class=\"br0\">)</span><span class=\"kw3\">INT</span><span class=\"sy1\">:</span><br/>  <span class=\"kw2\">IF</span> n <span class=\"sy1\">=</span> 0 <span class=\"kw2\">THEN</span> 0<br/>  <span class=\"kw2\">ELSE</span> n <span class=\"sy1\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>\u00a0<br/>main<span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>  <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> 0 <span class=\"kw2\">TO</span> 19 <span class=\"kw2\">DO</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"kw22\">whole</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">,-</span>3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">new line</span><span class=\"br0\">(</span>stand out<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> 0 <span class=\"kw2\">TO</span> 19 <span class=\"kw2\">DO</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"kw22\">whole</span><span class=\"br0\">(</span>m<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">,-</span>3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">new line</span><span class=\"br0\">(</span>stand out<span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "ALGOL W", "loc": 18, "block": "<pre class=\"text highlighted_source\">begin<br/>   \u00a0% define mutually recursive funtions F and M that compute the elements  \u00a0%<br/>   \u00a0% of the Hofstadter Female and Male sequences                           \u00a0%<br/>\u00a0<br/>    integer procedure F ( integer value n )\u00a0;<br/>        if n = 0 then 1 else n - M( F( n - 1 ) );<br/>\u00a0<br/>    integer procedure M ( integer value n )\u00a0;<br/>        if n = 0 then 0 else n - F( M( n - 1 ) );<br/>\u00a0<br/>   \u00a0% print the first few elements of the sequences                         \u00a0%<br/>    i_w\u00a0:= 2; s_w\u00a0:= 1;\u00a0% set I/O formatting                                \u00a0%<br/>    write( \"F: \" );<br/>    for i\u00a0:= 0 until 20 do writeon( F( i ) );<br/>    write( \"M: \" );<br/>    for i\u00a0:= 0 until 20 do writeon( M( i ) );<br/>\u00a0<br/>end.</pre>"}, {"lang": "AppleScript", "loc": 66, "block": "<pre class=\"applescript highlighted_source\"><span class=\"co1\">-- f\u00a0:: Int -&gt; Int</span><br/><span class=\"kw3\">on</span> f<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>        <span class=\"nu0\">1</span><br/>    <span class=\"kw3\">else</span><br/>        x <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> f<br/>\u00a0<br/><span class=\"co1\">-- m\u00a0:: Int -&gt; Int</span><br/><span class=\"kw3\">on</span> m<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>        <span class=\"nu0\">0</span><br/>    <span class=\"kw3\">else</span><br/>        x <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> m<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- TEST</span><br/><span class=\"kw3\">on</span> <span class=\"kw1\">run</span><br/>    <span class=\"kw3\">set</span> xs <span class=\"kw3\">to</span> range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">19</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">{</span>map<span class=\"br0\">(</span>f, xs<span class=\"br0\">)</span>, map<span class=\"br0\">(</span>m, xs<span class=\"br0\">)</span><span class=\"br0\">}</span><br/><span class=\"kw3\">end</span> <span class=\"kw1\">run</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- GENERIC FUNCTIONS</span><br/>\u00a0<br/><span class=\"co1\">-- map\u00a0:: (a -&gt; b) -&gt; [a] -&gt; [b]</span><br/><span class=\"kw3\">on</span> map<span class=\"br0\">(</span>f, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> length <span class=\"kw3\">of</span> xs<br/>        <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> lng<br/>            <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> lambda<span class=\"br0\">(</span><span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> xs, i, xs<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>        <span class=\"kw3\">return</span> lst<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/><span class=\"kw3\">end</span> map<br/>\u00a0<br/><span class=\"co1\">-- Lift 2nd class handler function into 1st class script wrapper </span><br/><span class=\"co1\">-- mReturn\u00a0:: Handler -&gt; Script</span><br/><span class=\"kw3\">on</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> class <span class=\"kw3\">of</span> f <span class=\"kw3\">is</span> <span class=\"kw3\">script</span> <span class=\"kw3\">then</span><br/>        f<br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">script</span><br/>            <span class=\"kw3\">property</span> lambda\u00a0: f<br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> mReturn<br/>\u00a0<br/><span class=\"co1\">-- range\u00a0:: Int -&gt; Int -&gt; [Int]</span><br/><span class=\"kw3\">on</span> range<span class=\"br0\">(</span>m, n<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> n <span class=\"sy0\">&lt;</span> m <span class=\"kw3\">then</span><br/>        <span class=\"kw3\">set</span> d <span class=\"kw3\">to</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">set</span> d <span class=\"kw3\">to</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>    <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> m <span class=\"kw3\">to</span> n <span class=\"kw1\">by</span> d<br/>        <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> i<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>    <span class=\"kw3\">return</span> lst<br/><span class=\"kw3\">end</span> range</pre>"}, {"lang": "AutoHotkey", "loc": 11, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"nu0\">20</span><br/>   i <span class=\"sy0\">:=</span> <span class=\"re3\">A_Index</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> t <span class=\"sy0\">.=</span> <span class=\"st0\">\"`n\"</span> i <span class=\"st0\">\"`t   \"</span> M<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"st0\">\"`t     \"</span> F<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a> x`tmale`tfemale`n<span class=\"re0\">%t%</span><br/>\u00a0<br/>F<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   <span class=\"kw1\">Return</span> n\u00a0? n <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>M<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   <span class=\"kw1\">Return</span> n\u00a0? n <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"nu0\">0</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 20, "block": "<pre class=\"awk highlighted_source\">cat mutual_recursion.awk<span class=\"sy5\">:</span><br/><span class=\"co1\">#!/usr/local/bin/gawk -f</span><br/>\u00a0<br/><span class=\"co1\"># User defined functions</span><br/><span class=\"kw6\">function</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span> <span class=\"kw6\">return</span> n <span class=\"sy2\">==</span> <span class=\"nu0\">0</span> <span class=\"sy5\">?</span> <span class=\"nu0\">1</span> <span class=\"sy5\">:</span> n <span class=\"sy3\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span> <span class=\"kw6\">return</span> n <span class=\"sy2\">==</span> <span class=\"nu0\">0</span> <span class=\"sy5\">?</span> <span class=\"nu0\">0</span> <span class=\"sy5\">:</span> n <span class=\"sy3\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i=<span class=\"nu0\">0</span>; i <span class=\"sy2\">&lt;=</span> <span class=\"nu0\">20</span>; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw5\">printf</span> <span class=\"st0\">\"%3d \"</span>, F<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw5\">print</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i=<span class=\"nu0\">0</span>; i <span class=\"sy2\">&lt;=</span> <span class=\"nu0\">20</span>; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw5\">printf</span> <span class=\"st0\">\"%3d \"</span>, M<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw5\">print</span> <span class=\"st0\">\"\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "BaCon", "loc": 21, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' Mutually recursive</span><br/><span class=\"kw1\">FUNCTION</span> F<span class=\"br0\">(</span><span class=\"kw1\">int</span> n<span class=\"br0\">)</span> <span class=\"kw1\">TYPE</span> <span class=\"kw1\">int</span><br/>    <span class=\"kw1\">RETURN</span> <span class=\"kw1\">IIF</span><span class=\"br0\">(</span>n = <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, n - M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">END</span> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> M<span class=\"br0\">(</span><span class=\"kw1\">int</span> n<span class=\"br0\">)</span> <span class=\"kw1\">TYPE</span> <span class=\"kw1\">int</span><br/>    <span class=\"kw1\">RETURN</span> <span class=\"kw1\">IIF</span><span class=\"br0\">(</span>n = <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, n - F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">END</span> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"co1\">' Get iteration limit, default 20</span><br/>SPLIT ARGUMENT$ BY <span class=\"st0\">\" \"</span> <span class=\"kw1\">TO</span> arg$ SIZE args<br/>limit = <span class=\"kw1\">IIF</span><span class=\"br0\">(</span>args &gt; <span class=\"nu0\">1</span>, <span class=\"kw1\">VAL</span><span class=\"br0\">(</span>arg$<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">FOR</span> i = <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> limit<br/>    <span class=\"kw1\">PRINT</span> F<span class=\"br0\">(</span>i<span class=\"br0\">)</span> FORMAT <span class=\"st0\">\"%2d \"</span><br/><span class=\"kw1\">NEXT</span><br/><span class=\"kw1\">PRINT</span><br/><span class=\"kw1\">FOR</span> i = <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> limit<br/>    <span class=\"kw1\">PRINT</span> M<span class=\"br0\">(</span>i<span class=\"br0\">)</span> FORMAT <span class=\"st0\">\"%2d \"</span><br/><span class=\"kw1\">NEXT</span><br/><span class=\"kw1\">PRINT</span></pre>"}, {"lang": "BASIC", "loc": 18, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> f! <span class=\"br0\">(</span>n!<span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> m! <span class=\"br0\">(</span>n!<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> f! <span class=\"br0\">(</span>n!<span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        f <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">ELSE</span><br/>        f <span class=\"sy0\">=</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> m! <span class=\"br0\">(</span>n!<span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        m <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">ELSE</span><br/>        m <span class=\"sy0\">=</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span></pre>"}, {"lang": "BBC BASIC", "loc": 16, "block": "<pre class=\"text highlighted_source\">      @% = 3\u00a0: REM Column width<br/>      PRINT \"F sequence:\"<br/>      FOR i% = 0 TO 20<br/>        PRINT FNf(i%)\u00a0;<br/>      NEXT<br/>      PRINT<br/>      PRINT \"M sequence:\"<br/>      FOR i% = 0 TO 20<br/>        PRINT FNm(i%)\u00a0;<br/>      NEXT<br/>      PRINT<br/>      END<br/>\u00a0<br/>      DEF FNf(n%) IF n% = 0 THEN = 1 ELSE = n% - FNm(FNf(n% - 1))<br/>\u00a0<br/>      DEF FNm(n%) IF n% = 0 THEN = 0 ELSE = n% - FNf(FNm(n% - 1))</pre>"}, {"lang": "Bc", "loc": 10, "block": "<pre class=\"text highlighted_source\">cat mutual_recursion.bc:<br/>define f(n) {<br/>  if ( n == 0 ) return(1);<br/>  return(n - m(f(n-1)));<br/>}<br/>\u00a0<br/>define m(n) {<br/>  if ( n == 0 ) return(0);<br/>  return(n - f(m(n-1)));<br/>}</pre>"}, {"lang": "Bracmat", "loc": 8, "block": "<pre class=\"text highlighted_source\"> (F=.!arg:0&amp;1|!arg+-1*M$(F$(!arg+-1)));<br/> (M=.!arg:0&amp;0|!arg+-1*F$(M$(!arg+-1)));<br/>\u00a0<br/> -1:?n&amp;whl'(!n+1:~&gt;20:?n&amp;put$(F$!n \" \"))&amp;put$\\n<br/> 1  1  2  2  3  3  4  5  5  6  6  7  8  8  9  9  10  11  11  12  13<br/>\u00a0<br/> -1:?n&amp;whl'(!n+1:~&gt;20:?n&amp;put$(M$!n \" \"))&amp;put$\\n<br/> 0  0  1  2  2  3  4  4  5  6  6  7  7  8  9  9  10  11  11  12  12</pre>"}, {"lang": "Brat", "loc": 16, "block": "<pre class=\"text highlighted_source\">female = null #yes, this is necessary<br/>\u00a0<br/>male = { n |<br/>  true? n == 0<br/>    { 0 }<br/>    { n - female male(n - 1) }<br/>}<br/>\u00a0<br/>female = { n |<br/>  true? n == 0<br/>    { 1 }<br/>    { n - male female(n - 1 ) }<br/>}<br/>\u00a0<br/>p 0.to(20).map! { n | female n }<br/>p 0.to(20).map! { n | male n }</pre>"}, {"lang": "C", "loc": 30, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* let us declare our functions; indeed here we need<br/>   really only M declaration, so that F can \"see\" it<br/>   and the compiler won't complain with a warning */</span><br/><span class=\"kw4\">int</span> F<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">int</span> M<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> F<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> n <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> M<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> n <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%2d \"</span><span class=\"sy0\">,</span> F<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%2d \"</span><span class=\"sy0\">,</span> M<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> EXIT_SUCCESS<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 36, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;vector&gt;</span><br/><span class=\"co2\">#include &lt;iterator&gt;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Hofstadter<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>  <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> F<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> n <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> n <span class=\"sy2\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> M<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> n <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> n <span class=\"sy2\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy4\">;</span><br/>  vector<span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span> ra, rb<span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy4\">;</span> i<span class=\"sy2\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    ra.<span class=\"me1\">push_back</span><span class=\"br0\">(</span>Hofstadter<span class=\"sy4\">::</span><span class=\"me2\">F</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    rb.<span class=\"me1\">push_back</span><span class=\"br0\">(</span>Hofstadter<span class=\"sy4\">::</span><span class=\"me2\">M</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>  copy<span class=\"br0\">(</span>ra.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, ra.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<br/>       ostream_iterator<span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>  copy<span class=\"br0\">(</span>rb.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, rb.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<br/>       ostream_iterator<span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 21, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">namespace</span> RosettaCode <span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Hofstadter <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> F<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> result <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                result <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> M<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                result <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ceylon", "loc": 14, "block": "<pre class=\"text highlighted_source\">Integer f(Integer n)<br/>    =&gt;  if (n &gt; 0)<br/>        then n - m(f(n-1))<br/>        else 1;<br/>\u00a0<br/>Integer m(Integer n)<br/>    =&gt;  if (n &gt; 0)<br/>        then n - f(m(n-1))<br/>        else 0;<br/>\u00a0<br/>shared void run() {<br/>    printAll((0:20).map(f));<br/>    printAll((0:20).map(m));<br/>}</pre>"}, {"lang": "Clojure", "loc": 11, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>declare F<span class=\"br0\">)</span> <span class=\"co1\">; forward reference </span><br/>\u00a0<br/><span class=\"br0\">(</span>defn M <span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>zero? n<span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span><br/>    <span class=\"br0\">(</span>- n <span class=\"br0\">(</span>F <span class=\"br0\">(</span>M <span class=\"br0\">(</span>dec n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defn F <span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>zero? n<span class=\"br0\">)</span><br/>    <span class=\"nu0\">1</span><br/>    <span class=\"br0\">(</span>- n <span class=\"br0\">(</span>M <span class=\"br0\">(</span>F <span class=\"br0\">(</span>dec n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "CoffeeScript", "loc": 10, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>F = <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  <span class=\"kw1\">if</span> n <span class=\"kw2\">is</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"nu0\">1</span> <span class=\"kw1\">else</span> n <span class=\"sy0\">-</span> M F n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>M = <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  <span class=\"kw1\">if</span> n <span class=\"kw2\">is</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> n <span class=\"sy0\">-</span> F M n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>console.<span class=\"me1\">log</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span>...<span class=\"nu0\">20</span><span class=\"br0\">]</span>.<span class=\"me1\">map</span> F<br/>console.<span class=\"me1\">log</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span>...<span class=\"nu0\">20</span><span class=\"br0\">]</span>.<span class=\"me1\">map</span> M<br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 9, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> m <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">zerop</span> n<span class=\"br0\">)</span><br/>        <span class=\"nu0\">0</span><br/>        <span class=\"br0\">(</span>- n <span class=\"br0\">(</span>f <span class=\"br0\">(</span>m <span class=\"br0\">(</span>- n <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> f <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">zerop</span> n<span class=\"br0\">)</span><br/>        <span class=\"nu0\">1</span><br/>        <span class=\"br0\">(</span>- n <span class=\"br0\">(</span>m <span class=\"br0\">(</span>f <span class=\"br0\">(</span>- n <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 14, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> male<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> n <span class=\"sy0\">?</span> n <span class=\"sy0\">-</span> male<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">female</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> female<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> n <span class=\"sy0\">?</span> n <span class=\"sy0\">-</span> female<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">male</span> <span class=\"sy0\">:</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"nu0\">20</span>.<span class=\"me1\">iota</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span>female.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>    <span class=\"nu0\">20</span>.<span class=\"me1\">iota</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span>male.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D\u00e9j\u00e0 Vu", "loc": 14, "block": "<pre class=\"text highlighted_source\">F n:<br/>\tif n:<br/>\t\t- n M F -- n<br/>\telse:<br/>\t\t1<br/>\u00a0<br/>M n:<br/>\tif n:<br/>\t\t- n F M -- n<br/>\telse:<br/>\t\t0<br/>\u00a0<br/>for i range 0 10:<br/>\t!.( M i F i )</pre>"}, {"lang": "Dart", "loc": 12, "block": "<pre class=\"text highlighted_source\">int M(int n) =&gt; n==0?1:n-F(M(n-1));<br/>int F(int n) =&gt; n==0?0:n-M(F(n-1));<br/>\u00a0<br/>main() {<br/>  String f=\"\",m=\"\";<br/>  for(int i=0;i&lt;20;i++) {<br/>    m+=\"${M(i)} \";<br/>    f+=\"${F(i)} \";<br/>  }<br/>  print(\"M: $m\");<br/>  print(\"F: $f\");<br/>}</pre>"}, {"lang": "Delphi", "loc": 30, "block": "<pre class=\"delphi highlighted_source\">\u00a0<br/><span class=\"kw1\">unit</span> Hofstadter<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">interface</span><br/>\u00a0<br/><span class=\"kw1\">type</span><br/>  THofstadterFemaleMaleSequences <span class=\"sy3\">=</span> <span class=\"kw1\">class</span><br/>  <span class=\"kw1\">public</span><br/>    <span class=\"kw1\">class</span> <span class=\"kw1\">function</span> F<span class=\"br0\">(</span>n<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> <span class=\"kw1\">function</span> M<span class=\"br0\">(</span>n<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">implementation</span><br/>\u00a0<br/><span class=\"kw1\">class</span> <span class=\"kw1\">function</span> THofstadterFemaleMaleSequences<span class=\"sy1\">.</span><span class=\"me1\">F</span><span class=\"br0\">(</span>n<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n &gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> n <span class=\"sy3\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> <span class=\"kw1\">function</span> THofstadterFemaleMaleSequences<span class=\"sy1\">.</span><span class=\"me1\">M</span><span class=\"br0\">(</span>n<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n &gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> n <span class=\"sy3\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "E", "loc": 4, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> <span class=\"br0\">[</span>F<span class=\"sy0\">,</span> M<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><br/>  <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> n <span class=\"br0\">{</span> <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;=&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <span class=\"br0\">{</span> n <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> n <span class=\"br0\">{</span> <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;=&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <span class=\"br0\">{</span> n <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/><span class=\"br0\">]</span></pre>"}, {"lang": "Eiffel", "loc": 49, "block": "<pre class=\"eiffel highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span><br/>\tAPPLICATION<br/>\u00a0<br/><span class=\"kw2\">create</span><br/>\tmake<br/>\u00a0<br/><span class=\"kw1\">feature</span><br/>\u00a0<br/>\tmake<br/>\t\t\t<span class=\"co1\">-- Test of the mutually recursive functions Female and Male.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\tacross<br/>\t\t\t\t<span class=\"nu0\">0</span> <span class=\"sy0\">|</span>..<span class=\"sy0\">|</span> <span class=\"nu0\">19</span> <span class=\"kw2\">as</span> c<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span>Female <span class=\"br0\">(</span>c.<span class=\"me1\">item</span><span class=\"br0\">)</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\tio.<span class=\"me1\">new_line</span><br/>\t\t\tacross<br/>\t\t\t\t<span class=\"nu0\">0</span> <span class=\"sy0\">|</span>..<span class=\"sy0\">|</span> <span class=\"nu0\">19</span> <span class=\"kw2\">as</span> c<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span>Male <span class=\"br0\">(</span>c.<span class=\"me1\">item</span><span class=\"br0\">)</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tFemale <span class=\"br0\">(</span>n<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><span class=\"br0\">)</span><span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t\t<span class=\"co1\">-- Female sequence of the Hofstadter Female and Male sequences.</span><br/>\t\t<span class=\"kw2\">require</span><br/>\t\t\tn_not_negative<span class=\"sy0\">:</span> n <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"kw2\">if</span> n <span class=\"sy0\">/=</span> <span class=\"nu0\">0</span> <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> n <span class=\"sy0\">-</span> Male <span class=\"br0\">(</span>Female <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tMale <span class=\"br0\">(</span>n<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><span class=\"br0\">)</span><span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t\t<span class=\"co1\">-- Male sequence of the Hofstadter Female and Male sequences.</span><br/>\t\t<span class=\"kw2\">require</span><br/>\t\t\tn_not_negative<span class=\"sy0\">:</span> n <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>\t\t\t<span class=\"kw2\">if</span> n <span class=\"sy0\">/=</span> <span class=\"nu0\">0</span> <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> n <span class=\"sy0\">-</span> Female <span class=\"br0\">(</span>Male <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw2\">end</span><br/>\u00a0</pre>"}, {"lang": "Elena", "loc": 20, "block": "<pre class=\"text highlighted_source\">import extensions.<br/>import system'collections.<br/>\u00a0<br/>F = (:n)((n == 0) ifTrue:[^1] ifFalse:[ ^n - (M(F(n-1))) ] ).<br/>M = (:n)((n == 0) ifTrue:[^0] ifFalse:[ ^n - (F(M(n-1))) ] ).<br/>\u00a0<br/>program =<br/>[<br/>    var ra\u00a0:= ArrayList new.<br/>    var rb\u00a0:= ArrayList new.<br/>\u00a0<br/>    0 to:19 do(:i)<br/>    [<br/>        ra append(F eval:i).<br/>        rb append(M eval:i).<br/>    ].<br/>\u00a0<br/>    console printLine(ra).<br/>    console printLine(rb).<br/>].</pre>"}, {"lang": "Elixir", "loc": 9, "block": "<pre class=\"text highlighted_source\">defmodule MutualRecursion do<br/>  def f(0), do: 1<br/>  def f(n), do: n - m(f(n - 1)) <br/>  def m(0), do: 0<br/>  def m(n), do: n - f(m(n - 1)) <br/>end<br/>\u00a0<br/>IO.inspect Enum.map(0..19, fn n -&gt; MutualRecursion.f(n) end)<br/>IO.inspect Enum.map(0..19, fn n -&gt; MutualRecursion.m(n) end)</pre>"}, {"lang": "Erlang", "loc": 13, "block": "<pre class=\"erlang highlighted_source\"><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>mutrec<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>mutrec<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> f<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> m<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">f</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/><span class=\"re3\">f</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">N</span> <span class=\"sy3\">-</span> <span class=\"re3\">m</span><span class=\"br0\">(</span><span class=\"re3\">f</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">m</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/><span class=\"re3\">m</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">N</span> <span class=\"sy3\">-</span> <span class=\"re3\">f</span><span class=\"br0\">(</span><span class=\"re3\">m</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">mutrec</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">map</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~w \"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re3\">f</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t    <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t    <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">map</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~w \"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re3\">m</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t    <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Euphoria", "loc": 21, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw2\">integer</span> idM<span class=\"sy2\">,</span> idF<br/>\u00a0<br/><span class=\"kw1\">function</span> F<span class=\"br0\">(</span><span class=\"kw2\">integer</span> n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> n <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">return</span> n <span class=\"sy1\">-</span> <span class=\"kw2\">call_func</span><span class=\"br0\">(</span>idM<span class=\"sy2\">,</span><span class=\"br0\">{</span>F<span class=\"br0\">(</span>n<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/>idF <span class=\"sy1\">=</span> <span class=\"kw2\">routine_id</span><span class=\"br0\">(</span><span class=\"st0\">\"F\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">function</span> M<span class=\"br0\">(</span><span class=\"kw2\">integer</span> n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> n <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">return</span> n <span class=\"sy1\">-</span> <span class=\"kw2\">call_func</span><span class=\"br0\">(</span>idF<span class=\"sy2\">,</span><span class=\"br0\">{</span>M<span class=\"br0\">(</span>n<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/>idM <span class=\"sy1\">=</span> <span class=\"kw2\">routine_id</span><span class=\"br0\">(</span><span class=\"st0\">\"M\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 8, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> f n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> n <span class=\"kw1\">with</span><br/>    | <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1</span><br/>    | _ <span class=\"sy0\">-&gt;</span> n <span class=\"sy0\">-</span> <span class=\"br0\">(</span>m <span class=\"br0\">(</span>f <span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">and</span> m n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> n <span class=\"kw1\">with</span><br/>    | <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">0</span><br/>    | _ <span class=\"sy0\">-&gt;</span> n <span class=\"sy0\">-</span> <span class=\"br0\">(</span>f <span class=\"br0\">(</span>m <span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 3, "block": "<pre class=\"text highlighted_source\">DEFER: F<br/>: M ( n -- n' ) dup 0 = [ dup 1 - M F - ] unless\u00a0;<br/>: F ( n -- n' ) dup 0 = [ drop 1 ] [ dup 1 - F M - ] if\u00a0;</pre>"}, {"lang": "FALSE", "loc": 5, "block": "<pre class=\"text highlighted_source\">[$[$1-f;!m;!-1-]?1+]f:<br/>[$[$1-m;!f;!-  ]?  ]m:<br/>[0[$20\\&gt;][\\<a class=\"__cf_email__\" data-cfemail=\"e5c1a5\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><a class=\"__cf_email__\" data-cfemail=\"a88ce8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>!.\" \"1+]#%%]t:<br/> f; t;!\"<br/>\"m; t;!</pre>"}, {"lang": "Fantom", "loc": 25, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>class Main<br/>{<br/>  static Int f (Int n)<br/>  {<br/>    if (n &lt;= 0) // ensure n &gt; 0<br/>      return 1<br/>    else<br/>      return n - m(f(n-1))<br/>  }<br/>\u00a0<br/>  static Int m (Int n)<br/>  {<br/>    if (n &lt;= 0) // ensure n &gt; 0<br/>      return 0<br/>    else<br/>      return n - f(m(n-1))<br/>  }<br/>\u00a0<br/>  public static Void main ()<br/>  {<br/>    50.times |Int n| { echo (f(n)) }<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 15, "block": "<pre class=\"text highlighted_source\">defer m<br/>\u00a0<br/>: f ( n -- n )<br/>  dup 0= if 1+ exit then<br/>  dup 1- recurse m -\u00a0;<br/>\u00a0<br/>:noname ( n -- n )<br/>  dup 0= if exit then<br/>  dup 1- recurse f -\u00a0;<br/>is m<br/>\u00a0<br/>: test ( xt n -- ) cr 0 do i over execute . loop drop\u00a0;<br/>\u00a0<br/>' m <a class=\"__cf_email__\" data-cfemail=\"24404142415664\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> 20 test \\ 0 0 1 2 2 3 4 4 5 6 6 7 7 8 9 9 10 11 11 12<br/>' f 20 test        \\ 1 1 2 2 3 3 4 5 5 6 6 7 8 8 9 9 10 11 11 12</pre>"}, {"lang": "Fortran", "loc": 24, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">module</span> MutualRec<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/><span class=\"co1\">contains</span><br/>  pure <span class=\"kw1\">recursive</span> <span class=\"kw1\">function</span> m<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">r</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">n</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>       r <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>       <span class=\"kw1\">return</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    r <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> m<br/>\u00a0<br/>  pure <span class=\"kw1\">recursive</span> <span class=\"kw1\">function</span> f<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">r</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">n</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>       r <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>       <span class=\"kw1\">return</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    r <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> f<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">module</span></pre>"}, {"lang": "FreeBASIC", "loc": 33, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co1\">' Need forward declaration of M as it's used</span><br/><span class=\"co1\">' by F before its defined</span><br/><span class=\"kw1\">Declare</span> <span class=\"kw1\">Function</span> M<span class=\"br0\">(</span>n <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> F<span class=\"br0\">(</span>n <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><br/>   <span class=\"kw1\">If</span> n = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>     <span class=\"kw1\">Return</span> <span class=\"nu0\">1</span><br/>   <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>   <span class=\"kw1\">Return</span> n - M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> M<span class=\"br0\">(</span>n <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><br/>   <span class=\"kw1\">If</span> n = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>     <span class=\"kw1\">Return</span> <span class=\"nu0\">0</span><br/>   <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>   <span class=\"kw1\">Return</span> n - F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> n = <span class=\"nu0\">24</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"n\u00a0:\"</span>;<br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> n\u00a0: <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"###\"</span>; i;   \u00a0: <span class=\"kw1\">Next</span><br/><span class=\"kw1\">Print</span> <br/><span class=\"kw1\">Print</span> <span class=\"kw1\">String</span><span class=\"br0\">(</span><span class=\"nu0\">78</span>, <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"F\u00a0:\"</span>;<br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> n\u00a0: <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"###\"</span>; F<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;\u00a0: <span class=\"kw1\">Next</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"M\u00a0:\"</span>;<br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> n\u00a0: <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"###\"</span>; M<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;\u00a0: <span class=\"kw1\">Next</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Go", "loc": 23, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> F<span class=\"sy1\">(</span>n <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>  <span class=\"kw1\">if</span> n <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span> <span class=\"sy1\">}</span><br/>  <span class=\"kw1\">return</span> n <span class=\"sy3\">-</span> M<span class=\"sy1\">(</span>F<span class=\"sy1\">(</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> M<span class=\"sy1\">(</span>n <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>  <span class=\"kw1\">if</span> n <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"sy1\">}</span><br/>  <span class=\"kw1\">return</span> n <span class=\"sy3\">-</span> F<span class=\"sy1\">(</span>M<span class=\"sy1\">(</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>  <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; <span class=\"nu0\">20</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%2d \"</span><span class=\"sy1\">,</span> F<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">))</span><br/>  <span class=\"sy1\">}</span><br/>  fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">()</span><br/>  <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; <span class=\"nu0\">20</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%2d \"</span><span class=\"sy1\">,</span> M<span class=\"sy1\">(</span>i<span class=\"sy1\">))</span><br/>  <span class=\"sy1\">}</span><br/>  fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">()</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 3, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> f, m  <span class=\"co1\">// recursive closures must be declared before they are defined</span><br/>f <span class=\"sy0\">=</span> <span class=\"br0\">{</span> n <span class=\"sy0\">-&gt;</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span>\u00a0: n <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>m <span class=\"sy0\">=</span> <span class=\"br0\">{</span> n <span class=\"sy0\">-&gt;</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span>\u00a0: n <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 9, "block": "<pre class=\"haskell highlighted_source\">f <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>f n <span class=\"sy0\">|</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> m <span class=\"br0\">(</span>f <span class=\"sy0\">$</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>m <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <br/>m n <span class=\"sy0\">|</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> f <span class=\"br0\">(</span>m <span class=\"sy0\">$</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>       <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> f <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"nu0\">19</span><span class=\"br0\">]</span><br/>       <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> m <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"nu0\">19</span><span class=\"br0\">]</span></pre>"}, {"lang": "Icon and Unicon", "loc": 13, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>arglist<span class=\"br0\">)</span><br/><span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span>F<span class=\"br0\">(</span><span class=\"sy1\">!</span>arglist<span class=\"br0\">)</span><span class=\"br0\">)</span>   <span class=\"co1\"># F of all arguments</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/><span class=\"kw1\">if</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy1\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <br/>   <span class=\"kw1\">return</span> <span class=\"br0\">(</span>n <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span>  n <span class=\"sy1\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/><span class=\"kw1\">if</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy1\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <br/>   <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy1\">=</span> n<span class=\"br0\">)</span> <span class=\"sy1\">|</span> n <span class=\"sy1\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Idris", "loc": 9, "block": "<pre class=\"text highlighted_source\">mutual {<br/>  F\u00a0: Nat -&gt; Nat<br/>  F Z = (S Z)<br/>  F (S n) = (S n) `minus` M(F(n))<br/>\u00a0<br/>  M\u00a0: Nat -&gt; Nat <br/>  M Z = Z<br/>  M (S n) = (S n) `minus` F(M(n))<br/>}</pre>"}, {"lang": "Io", "loc": 6, "block": "<pre class=\"io highlighted_source\">f\u00a0:= <span class=\"kw2\">method</span><span class=\"br0\">(</span>n, <span class=\"kw1\">if</span><span class=\"br0\">(</span> n == <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, n - m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>m\u00a0:= <span class=\"kw2\">method</span><span class=\"br0\">(</span>n, <span class=\"kw1\">if</span><span class=\"br0\">(</span> n == <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, n - f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>Range<br/><span class=\"nu0\">0</span> to<span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"br0\">)</span> <span class=\"kw3\">map</span><span class=\"br0\">(</span>n,f<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span> println<br/><span class=\"nu0\">0</span> to<span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"br0\">)</span> <span class=\"kw3\">map</span><span class=\"br0\">(</span>n,m<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span> println</pre>"}, {"lang": "J", "loc": 2, "block": "<pre class=\"j highlighted_source\">F =: 1:`<span class=\"sy0\">(</span>-  M @ $: @ &lt;:<span class=\"sy0\">)</span> @.* M.\"<span class=\"nu0\">0</span><br/>M =: 0:`<span class=\"sy0\">(</span>-  F @ $: @ &lt;:<span class=\"sy0\">)</span> @.* M.\"<span class=\"nu0\">0</span></pre>"}, {"lang": "Java", "loc": 18, "block": "<pre class=\"java5 highlighted_source\"><span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">int</span> f<span class=\"br0\">(</span><span class=\"kw2\">final</span> <span class=\"kw3\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/> <span class=\"kw2\">return</span> n == <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span>\u00a0: n - m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">int</span> m<span class=\"br0\">(</span><span class=\"kw2\">final</span> <span class=\"kw3\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw2\">return</span> n == <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span>\u00a0: n - f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">void</span> main<span class=\"br0\">(</span><span class=\"kw2\">final</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/> <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw3\">int</span> i = <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i++<span class=\"br0\">)</span><br/>  <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i = <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i++<span class=\"br0\">)</span><br/>  <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>m<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 19, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> f<span class=\"br0\">(</span>num<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/> <span class=\"kw1\">return</span> <span class=\"br0\">(</span>num <span class=\"sy0\">===</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> num <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>num <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> m<span class=\"br0\">(</span>num<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/> <span class=\"kw1\">return</span> <span class=\"br0\">(</span>num <span class=\"sy0\">===</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> num <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>num <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> range<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw4\">Array</span>.<span class=\"me1\">apply</span><span class=\"br0\">(</span><span class=\"kw2\">null</span><span class=\"sy0\">,</span> <span class=\"kw4\">Array</span><span class=\"br0\">(</span>n <span class=\"sy0\">-</span> m <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><br/>    <span class=\"kw1\">function</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> i<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> m <span class=\"sy0\">+</span> i<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> a <span class=\"sy0\">=</span> range<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">//return a new array of the results and join with commas to print</span><br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span>a.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span> <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> f<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"br0\">)</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">', '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span>a.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span> <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> m<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"br0\">)</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">', '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>def M:<br/>  def F: if . == 0 then 1 else . - ((. - 1) | F | M) end;<br/>  if . == 0 then 0 else . - ((. - 1) | M | F) end;<br/>\u00a0<br/>def F:<br/>  if . == 0 then 1 else . - ((. - 1) | F | M) end;</pre>"}, {"lang": "Julia", "loc": 2, "block": "<pre class=\"text highlighted_source\">F(n) = n &lt; 1\u00a0? one(n)\u00a0: n - M(F(n - 1))<br/>M(n) = n &lt; 1\u00a0? zero(n)\u00a0: n - F(M(n - 1))</pre>"}, {"lang": "Kotlin", "loc": 27, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/>fun f<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> <br/>    when <span class=\"br0\">{</span><br/>        n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> -<span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a>   -<span class=\"sy0\">&gt;</span> n - m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>fun m<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span><br/>    when <span class=\"br0\">{</span><br/>        n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> -<span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a>   -<span class=\"sy0\">&gt;</span> n - f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> n <span class=\"sy0\">=</span> <span class=\"nu0\">24</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">\"n\u00a0:\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span>..<span class=\"me1\">n</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"%3d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"-\"</span>.<span class=\"me1\">repeat</span><span class=\"br0\">(</span><span class=\"nu0\">78</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">\"F\u00a0:\"</span><span class=\"br0\">)</span> <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span>..<span class=\"nu0\">24</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"%3d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">\"M\u00a0:\"</span><span class=\"br0\">)</span> <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span>..<span class=\"nu0\">24</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"%3d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>m<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 29, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"F sequence.\"</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">20</span><br/><span class=\"kw1\">print</span> f<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<span class=\"st0\">\" \"</span>;<br/><span class=\"kw1\">next</span><br/><span class=\"kw1\">print</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"M sequence.\"</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">20</span><br/><span class=\"kw1\">print</span> m<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<span class=\"st0\">\" \"</span>;<br/><span class=\"kw1\">next</span><br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> f<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>        f <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">else</span><br/>        f <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> m<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>        m <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">else</span><br/>        m <span class=\"sy0\">=</span> n <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0</pre>"}, {"lang": "LibreOffice Basic", "loc": 95, "block": "<pre class=\"text highlighted_source\">'// LibreOffice Basic Implementation of Hofstadter Female-Male sequences<br/>\u00a0<br/>'// Utility functions<br/>sub setfont(strfont)<br/>\tThisComponent.getCurrentController.getViewCursor.charFontName = strfont<br/>end sub<br/>\u00a0<br/>sub newline<br/>\toVC = thisComponent.getCurrentController.getViewCursor<br/>\toText = oVC.text<br/>\toText.insertControlCharacter(oVC, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)<br/>end sub<br/>\u00a0<br/>sub out(sString)<br/>\toVC = ThisComponent.getCurrentController.getViewCursor<br/>\toText = oVC.text<br/>\toText.insertString(oVC, sString, false)<br/>end sub<br/>\u00a0<br/>sub outln(optional sString)<br/>\tif not ismissing (sString) then out(sString)<br/>\tnewline<br/>end sub<br/>\u00a0<br/>function intformat(n as integer,nlen as integer) as string<br/>\tdim nstr as string<br/>\tnstr = CStr(n)<br/>\twhile len(nstr) &lt; nlen<br/>\t\tnstr = \" \" &amp; nstr<br/>\twend<br/>\tintformat = nstr<br/>end function<br/>\u00a0<br/>'// Hofstadter Female-Male function definitions<br/>function F(n as long) as long<br/>\tif n = 0 Then<br/>\t\tF =  1<br/>\telseif n &gt; 0 Then<br/>\t\tF = n - M(F(n - 1))<br/>\tendif <br/>end function<br/>\u00a0<br/>function M(n)<br/>\tif n = 0 Then<br/>\t\tM = 0<br/>\telseif n &gt; 0 Then<br/>\t\tM = n - F(M(n - 1))<br/>\tendif <br/>end function<br/>\u00a0<br/>'// Hofstadter Female Male sequence demo routine<br/>sub Hofstadter_Female_Male_Demo<br/>\t'// Introductory Text<br/>\tsetfont(\"LM Roman 10\")<br/>\toutln(\"Rosetta Code Hofstadter Female and Male Sequence Challenge\")<br/>\toutln<br/>\tout(\"Two functions are said to be mutually recursive if the first calls the second,\")<br/>\toutln(\" and in turn the second calls the first.\")<br/>\tout(\"Write two mutually recursive functions that compute members of the Hofstadter\")<br/>\toutln(\" Female and Male sequences defined as:\")<br/>\toutln<br/>\tsetfont(\"LM Mono Slanted 10\")<br/>\toutln(chr(9)+\"F(0) = 1\u00a0; M(0)=0\")<br/>\toutln(chr(9)+\"F(n) = n - M(F(n-1)), n &gt; 0\")<br/>\toutln(chr(9)+\"M(n) = n - F(M(n-1)), n &gt; 0\")<br/>\toutln<br/>\t'// Sequence Generation<br/>\tconst nmax as long = 20<br/>\tdim n as long<br/>\tsetfont(\"LM Mono 10\")<br/>\tout(\"n    = \"<br/>\tfor n = 0 to nmax<br/>\t\tout(\" \" + intformat(n, 2))<br/>\tnext n<br/>\toutln<br/>\tout(\"F(n) = \" <br/>\tfor n = 0 to nmax<br/>\t\tout(\" \" + intformat(F(n),2))<br/>\tnext n<br/>\toutln<br/>\tout(\"M(n) = \" <br/>\tfor n = 0 to nmax<br/>\t\tout(\" \" + intformat(M(n), 2))<br/>\tnext n<br/>\toutln<br/>\u00a0<br/>end sub<br/>\u00a0<br/>------------------------------<br/>Output<br/>------------------------------<br/>n    =   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20<br/>F(n) =   1  1  2  2  3  3  4  5  5  6  6  7  8  8  9  9 10 11 11 12 13<br/>M(n) =   0  0  1  2  2  3  4  4  5  6  6  7  7  8  9  9 10 11 11 12 12<br/>\u00a0</pre>"}, {"lang": "Logo", "loc": 13, "block": "<pre class=\"text highlighted_source\">to m\u00a0:n<br/>  if 0 =\u00a0:n [output 0]<br/>  output\u00a0:n - f m\u00a0:n-1<br/>end<br/>to f\u00a0:n<br/>  if 0 =\u00a0:n [output 1]<br/>  output\u00a0:n - m f\u00a0:n-1<br/>end<br/>\u00a0<br/>show cascade 20 [lput m #-1\u00a0?] []<br/>[1 1 2 2 3 3 4 5 5 6 6 7 8 8 9 9 10 11 11 12]<br/>show cascade 20 [lput f #-1\u00a0?] []<br/>[0 0 1 2 2 3 4 4 5 6 6 7 7 8 9 9 10 11 11 12]</pre>"}, {"lang": "LSL", "loc": 30, "block": "<pre class=\"text highlighted_source\">integer iDEPTH = 100;<br/>integer f(integer n) {<br/>\tif(n==0) {<br/>\t\treturn 1;<br/>\t} else {<br/>\t\treturn n-m(f(n - 1));<br/>\t}<br/>}<br/>integer m(integer n) {<br/>\tif(n==0) {<br/>\t\treturn 0;<br/>\t} else {<br/>\t\treturn n-f(m(n - 1));<br/>\t}<br/>}<br/>default {<br/>\tstate_entry() {<br/>\t\tinteger x = 0;<br/>\t\tstring s = \"\";<br/>\t\tfor(x=0\u00a0; x&lt;iDEPTH\u00a0; x++) {<br/>\t\t\ts += (string)(f(x))+\" \";<br/>\t\t}<br/>\t\tllOwnerSay(llList2CSV(llParseString2List(s, [\" \"], [])));<br/>\t\ts = \"\";<br/>\t\tfor(x=0\u00a0; x&lt;iDEPTH\u00a0; x++) {<br/>\t\t\ts += (string)(m(x))+\" \";<br/>\t\t}<br/>\t\tllOwnerSay(llList2CSV(llParseString2List(s, [\" \"], [])));<br/>\t}<br/>}</pre>"}, {"lang": "Lua", "loc": 3, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw1\">function</span> m<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">return</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> n <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">or</span> <span class=\"nu0\">0</span> <span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> f<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">return</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> n <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">or</span> <span class=\"nu0\">1</span> <span class=\"kw1\">end</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 79, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>\\\\ set console 70 characters by 40 lines<br/>Form 70, 40<br/>Module CheckSubs {<br/>      Flush<br/>      Document one$, two$<br/>      For i =0 to 20<br/>            Print format$(\"{0::-3}\",i);<br/>            f(i)<br/>            \\\\  number pop then top value of stack<br/>            one$=format$(\"{0::-3}\",number)<br/>            m(i)<br/>            two$=format$(\"{0::-3}\",number)<br/>      Next i <br/>      Print<br/>      Print one$<br/>      Print two$<br/>      Sub f(x)<br/>            if x&lt;=0 then Push 1\u00a0: Exit sub<br/>            f(x-1)  ' leave result to for m(x)<br/>            m()  <br/>            push x-number<br/>      End Sub<br/>      Sub m(x)<br/>            if x&lt;=0 then Push 0\u00a0: Exit sub<br/>            m(x-1)<br/>            f()<br/>            push x-number<br/>      End Sub    <br/>}<br/>CheckSubs<br/>\u00a0<br/>Module Checkit {<br/>      Function global f(n) {<br/>            if n=0 then =1: exit<br/>            if n&gt;0 then  =n-m(f(n-1))     <br/>      }<br/>      Function global m(n) {<br/>            if n=0 then =0<br/>            if n&gt;0 then  =n-f(m(n-1)) <br/>\u00a0<br/>      }<br/>      Document one$, two$<br/>      For i =0 to 20<br/>            Print format$(\"{0::-3}\",i);<br/>            one$=format$(\"{0::-3}\",f(i))<br/>            two$=format$(\"{0::-3}\",m(i))<br/>      Next i<br/>      Print<br/>      Print one$<br/>      Print two$<br/>}<br/>Checkit<br/>Module Checkit2 {<br/>      Group Alfa {<br/>            function f(n) {<br/>                  if n=0 then =1: exit<br/>                  if n&gt;0 then  =n-.m(.f(n-1))     <br/>            }<br/>            function m(n) {<br/>                  if n=0 then =0<br/>                  if n&gt;0 then  =n-.f(.m(n-1))     <br/>            }<br/>      }<br/>      Document one$, two$<br/>      For i =0 to 20<br/>            Print format$(\"{0::-3}\",i);<br/>            one$=format$(\"{0::-3}\",Alfa.f(i))<br/>            two$=format$(\"{0::-3}\",Alfa.m(i))<br/>      Next i<br/>      Print<br/>      Print one$<br/>      Print two$<br/>      Clipboard one$+{<br/>      }+two$<br/>}<br/>Checkit2<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "M4", "loc": 5, "block": "<pre class=\"text highlighted_source\">define(`female',`ifelse(0,$1,1,`eval($1 - male(female(decr($1))))')')dnl<br/>define(`male',`ifelse(0,$1,0,`eval($1 - female(male(decr($1))))')')dnl<br/>define(`loop',`ifelse($1,$2,,`$3($1) loop(incr($1),$2,`$3')')')dnl<br/>loop(0,20,`female')<br/>loop(0,20,`male')</pre>"}, {"lang": "Maple", "loc": 17, "block": "<pre class=\"text highlighted_source\">female_seq\u00a0:= proc(n)<br/>\tif (n = 0) then<br/>\t\treturn 1;<br/>\telse<br/>\t\treturn n - male_seq(female_seq(n-1));<br/>\tend if;<br/>end proc;<br/>\u00a0<br/>male_seq \u00a0:= proc(n)<br/>\tif (n = 0) then<br/>\t\treturn 0;<br/>\telse<br/>\t\treturn n - female_seq(male_seq(n-1));<br/>\tend if;<br/>end proc;<br/>seq(female_seq(i), i=0..10);<br/>seq(male_seq(i), i=0..10);</pre>"}, {"lang": "Mathematica", "loc": 4, "block": "<pre class=\"text highlighted_source\">f[0]:=1<br/>m[0]:=0<br/>f[n_]:=n-m[f[n-1]]<br/>m[n_]:=n-f[m[n-1]]</pre>"}, {"lang": "MATLAB", "loc": 9, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> Fn = female<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> n == <span class=\"nu0\">0</span><br/>        Fn = <span class=\"nu0\">1</span>;<br/>        <span class=\"kw1\">return</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    Fn = n - male<span class=\"br0\">(</span>female<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Maxima", "loc": 23, "block": "<pre class=\"text highlighted_source\">f[0]: 1$<br/>m[0]: 0$<br/>f[n]\u00a0:= n - m[f[n - 1]]$<br/>m[n]\u00a0:= n - f[m[n - 1]]$<br/>\u00a0<br/>makelist(f[i], i, 0, 10);<br/>[1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 6]<br/>\u00a0<br/>makelist(m[i], i, 0, 10);<br/>[0, 0, 1, 2, 2, 3, 4, 4, 5, 6, 6]<br/>\u00a0<br/>remarray(m, f)$<br/>\u00a0<br/>f(n)\u00a0:= if n = 0 then 1 else n - m(f(n - 1))$<br/>m(n)\u00a0:= if n = 0 then 0 else n - f(m(n - 1))$<br/>\u00a0<br/>makelist(f(i), i, 0, 10);<br/>[1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 6]<br/>\u00a0<br/>makelist(m(i), i, 0, 10);<br/>[0, 0, 1, 2, 2, 3, 4, 4, 5, 6, 6]<br/>\u00a0<br/>remfunction(f, m)$</pre>"}, {"lang": "Mercury", "loc": 22, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>:- module mutual_recursion.<br/>:- interface.<br/>\u00a0<br/>:- import_module io.<br/>:- pred main(io::di, io::uo) is det.<br/>\u00a0<br/>:- implementation.<br/>:- import_module int, list.<br/>\u00a0<br/>main(!IO)\u00a0:-<br/>   io.write(list.map(f, 0..19),\u00a0!IO), io.nl(!IO),<br/>   io.write(list.map(m, 0..19),\u00a0!IO), io.nl(!IO).<br/>\u00a0<br/>:- func f(int) = int.<br/>\u00a0<br/>f(N) = ( if N = 0 then 1 else N - m(f(N - 1)) ).<br/>\u00a0<br/>:- func m(int) = int.<br/>\u00a0<br/>m(N) = ( if N = 0 then 0 else N - f(m(N - 1)) ).<br/>\u00a0</pre>"}, {"lang": "MMIX", "loc": 78, "block": "<pre class=\"mmix highlighted_source\">\t<span class=\"kw2\">LOC</span>\tData_Segment<br/>\u00a0<br/>\t<span class=\"kw2\">GREG</span>\t@<br/>NL\t<span class=\"kw2\">BYTE</span>\t<span class=\"nu2\">#a</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>\t<span class=\"kw2\">GREG</span>\t@<br/>buf\t<span class=\"kw2\">OCTA</span>\t<span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>\u00a0<br/>t\t<span class=\"kw2\">IS</span>\t<span class=\"nu3\">$128</span><br/>Ja\t<span class=\"kw2\">IS</span>\t<span class=\"nu3\">$127</span><br/>\u00a0<br/>\t<span class=\"kw2\">LOC</span> <span class=\"nu2\">#1000</span><br/>\u00a0<br/>\t<span class=\"kw2\">GREG</span> @<br/><span class=\"co3\">// print 2 digits integer with trailing space to StdOut</span><br/><span class=\"co3\">// reg $3 contains int to be printed</span><br/>bp\t<span class=\"kw2\">IS</span>\t<span class=\"nu3\">$71</span><br/>0H\t<span class=\"kw2\">GREG</span>\t<span class=\"nu2\">#0000000000203020</span> <br/>prtInt\t<span class=\"kw1\">STO</span>\t<span class=\"nu1\">0B</span><span class=\"sy0\">,</span>buf\t\t<span class=\"co2\">% initialize buffer</span><br/>\t<span class=\"kw1\">LDA</span>\tbp<span class=\"sy0\">,</span>buf<span class=\"sy0\">+</span><span class=\"nu1\">7</span>\t<span class=\"co2\">% points after LSD </span><br/><span class=\"co3\">\t\t\t\t% REPEAT</span><br/>1H\t<span class=\"kw1\">SUB</span>\tbp<span class=\"sy0\">,</span>bp<span class=\"sy0\">,</span><span class=\"nu1\">1</span>\t\t<span class=\"co2\">%  move buffer pointer</span><br/>\t<span class=\"kw1\">DIV</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu1\">10</span>\t\t<span class=\"co2\">%  divmod (x,10)</span><br/>\t<span class=\"kw1\">GET</span>\tt<span class=\"sy0\">,</span><span class=\"kw3\">rR</span>\t\t<span class=\"co2\">%  get remainder</span><br/>\t<span class=\"kw1\">INCL</span>\tt<span class=\"sy0\">,</span><span class=\"st0\">'0'</span>\t\t<span class=\"co2\">%  make char digit</span><br/>\t<span class=\"kw1\">STB</span>\tt<span class=\"sy0\">,</span>bp\t\t<span class=\"co2\">%  store digit</span><br/>\t<span class=\"kw1\">PBNZ</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu1\">1B</span>\t\t<span class=\"co2\">% UNTIL no more digits</span><br/>\t<span class=\"kw1\">LDA</span>\t<span class=\"nu3\">$255</span><span class=\"sy0\">,</span>bp<br/>\t<span class=\"kw1\">TRAP</span>\t<span class=\"nu1\">0</span><span class=\"sy0\">,</span>Fputs<span class=\"sy0\">,</span>StdOut\t<span class=\"co2\">% print integer</span><br/>\t<span class=\"kw1\">GO</span>\tJa<span class=\"sy0\">,</span>Ja<span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">% 'return'</span><br/><span class=\"co3\"><br/>// Female function</span><br/><span class=\"nu1\">F</span>\t<span class=\"kw1\">GET</span>\t<span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"kw3\">rJ</span>\t\t<span class=\"co2\">% save return addr</span><br/>\t<span class=\"kw1\">PBNZ</span>\t<span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">1F</span>\t\t<span class=\"co2\">% if N\u00a0!= 0 then F N </span><br/>\t<span class=\"kw1\">INCL</span>\t<span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span>\t\t<span class=\"co2\">% F 0 = 1</span><br/>\t<span class=\"kw1\">PUT</span>\t<span class=\"kw3\">rJ</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span>\t\t<span class=\"co2\">% restore return addr</span><br/>\t<span class=\"kw1\">POP</span>\t<span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">% return 1</span><br/>1H\t<span class=\"kw1\">SUBU</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span>\t\t<span class=\"co2\">% N1 = N - 1</span><br/>\t<span class=\"kw1\">PUSHJ</span>\t<span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">F</span>\t\t<span class=\"co2\">% do F (N - 1) </span><br/>\t<span class=\"kw1\">ADDU</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">% place result in arg. reg.</span><br/>\t<span class=\"kw1\">PUSHJ</span>\t<span class=\"nu3\">$2</span><span class=\"sy0\">,</span>M\t\t<span class=\"co2\">% do M F ( N - 1)</span><br/>\t<span class=\"kw1\">PUT</span>\t<span class=\"kw3\">rJ</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span>\t\t<span class=\"co2\">% restore ret addr</span><br/>\t<span class=\"kw1\">SUBU</span>\t<span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><br/>\t<span class=\"kw1\">POP</span>\t<span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">% return N - M F ( N - 1 )</span><br/><span class=\"co3\"><br/>// Male function</span><br/>M\t<span class=\"kw1\">GET</span>\t<span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"kw3\">rJ</span><br/>\t<span class=\"kw1\">PBNZ</span>\t<span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">1F</span><br/>\t<span class=\"kw1\">PUT</span>\t<span class=\"kw3\">rJ</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span><br/>\t<span class=\"kw1\">POP</span>\t<span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">% return M 0 = 0</span><br/>1H\t<span class=\"kw1\">SUBU</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><br/>\t<span class=\"kw1\">PUSHJ</span>\t<span class=\"nu3\">$2</span><span class=\"sy0\">,</span>M<br/>\t<span class=\"kw1\">ADDU</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>\t<span class=\"kw1\">PUSHJ</span>\t<span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">F</span><br/>\t<span class=\"kw1\">PUT</span>\t<span class=\"kw3\">rJ</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span><br/>\t<span class=\"kw1\">SUBU</span>\t<span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><br/>\t<span class=\"kw1\">POP</span>\t<span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t$ return N <span class=\"sy0\">-</span> <span class=\"nu1\">F</span> M <span class=\"br0\">(</span> N <span class=\"sy0\">-</span> <span class=\"nu1\">1</span> <span class=\"br0\">)</span><br/><span class=\"co3\"><br/>// do a female run</span><br/>Main\t<span class=\"kw2\">SET</span>\t<span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">% for (i=0; i&lt;25; i++){</span><br/>1H\t<span class=\"kw1\">ADDU</span>\t<span class=\"nu3\">$4</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">%</span><br/>\t<span class=\"kw1\">PUSHJ</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu1\">F</span>\t\t<span class=\"co2\">%  F (i)</span><br/>\t<span class=\"kw1\">GO</span>\tJa<span class=\"sy0\">,</span>prtInt\t<span class=\"co2\">%  print F (i)</span><br/>\t<span class=\"kw1\">INCL</span>\t<span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><br/>\t<span class=\"kw1\">CMP</span>\tt<span class=\"sy0\">,</span><span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">25</span><br/>\t<span class=\"kw1\">PBNZ</span>\tt<span class=\"sy0\">,</span><span class=\"nu1\">1B</span>\t\t<span class=\"co2\">% }</span><br/>\t<span class=\"kw1\">LDA</span>\t<span class=\"nu3\">$255</span><span class=\"sy0\">,</span>NL<br/>\t<span class=\"kw1\">TRAP</span>\t<span class=\"nu1\">0</span><span class=\"sy0\">,</span>Fputs<span class=\"sy0\">,</span>StdOut<br/><span class=\"co3\">// do a male run</span><br/>\t<span class=\"kw2\">SET</span>\t<span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">% for (i=0; i&lt;25; i++){</span><br/>1H\t<span class=\"kw1\">ADDU</span>\t<span class=\"nu3\">$4</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>\t\t<span class=\"co2\">%</span><br/>\t<span class=\"kw1\">PUSHJ</span>\t<span class=\"nu3\">$3</span><span class=\"sy0\">,</span>M\t\t<span class=\"co2\">%  M (i)</span><br/>\t<span class=\"kw1\">GO</span>\tJa<span class=\"sy0\">,</span>prtInt\t<span class=\"co2\">%  print M (i)</span><br/>\t<span class=\"kw1\">INCL</span>\t<span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><br/>\t<span class=\"kw1\">CMP</span>\tt<span class=\"sy0\">,</span><span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">25</span><br/>\t<span class=\"kw1\">PBNZ</span>\tt<span class=\"sy0\">,</span><span class=\"nu1\">1B</span>\t\t<span class=\"co2\">% }</span><br/>\t<span class=\"kw1\">LDA</span>\t<span class=\"nu3\">$255</span><span class=\"sy0\">,</span>NL<br/>\t<span class=\"kw1\">TRAP</span>\t<span class=\"nu1\">0</span><span class=\"sy0\">,</span>Fputs<span class=\"sy0\">,</span>StdOut<br/>\t<span class=\"kw1\">TRAP</span>\t<span class=\"nu1\">0</span><span class=\"sy0\">,</span>Halt<span class=\"sy0\">,</span><span class=\"nu1\">0</span></pre>"}, {"lang": "Nemerle", "loc": 24, "block": "<pre class=\"text highlighted_source\">using System;<br/>using System.Console;<br/>\u00a0<br/>module Hofstadter<br/>{<br/>    F(n\u00a0: int)\u00a0: int<br/>    {<br/>        |0 =&gt; 1<br/>        |_ =&gt; n - M(F(n - 1))<br/>    }<br/>\u00a0<br/>    M(n\u00a0: int)\u00a0: int<br/>    {<br/>        |0 =&gt; 0<br/>        |_ =&gt; n - F(M(n - 1))<br/>    }<br/>\u00a0<br/>    Main()\u00a0: void<br/>    {<br/>        foreach (n in [0 .. 20]) Write(\"{0} \", F(n));<br/>        WriteLine();<br/>        foreach (n in [0 .. 20]) Write(\"{0} \", M(n));<br/>    }<br/>}</pre>"}, {"lang": "Nim", "loc": 13, "block": "<pre class=\"text highlighted_source\">proc m(n): int<br/>\u00a0<br/>proc f(n): int =<br/>  if n == 0: 1<br/>  else: n - m(f(n-1))<br/>\u00a0<br/>proc m(n): int =<br/>  if n == 0: 0<br/>  else: n - f(m(n-1))<br/>\u00a0<br/>for i in 1 .. 10:<br/>  echo f(i)<br/>  echo m(i)</pre>"}, {"lang": "Objective-C", "loc": 34, "block": "<pre class=\"objc highlighted_source\"><span class=\"co1\">#import &lt;Foundation/Foundation.h&gt;</span><br/>\u00a0<br/><span class=\"kw1\">@interface</span> Hofstadter <span class=\"sy0\">:</span> <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSObject_Class/\"><span class=\"kw5\">NSObject</span></a><br/><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>M<span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>n;<br/><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>F<span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>n;<br/><span class=\"kw1\">@end</span><br/>\u00a0<br/><span class=\"kw1\">@implementation</span> Hofstadter<br/><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>M<span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>n<br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;<br/>  <span class=\"kw1\">return</span> n <span class=\"sy0\">-</span> <span class=\"br0\">[</span>self F<span class=\"sy0\">:</span> <span class=\"br0\">[</span>self M<span class=\"sy0\">:</span> <span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">]</span>;<br/><span class=\"br0\">}</span><br/><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>F<span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>n<br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>;<br/>  <span class=\"kw1\">return</span> n <span class=\"sy0\">-</span> <span class=\"br0\">[</span>self M<span class=\"sy0\">:</span> <span class=\"br0\">[</span>self F<span class=\"sy0\">:</span> <span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">]</span>;<br/><span class=\"br0\">}</span><br/><span class=\"kw1\">@end</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i;<br/>\u00a0<br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>; i &lt; <span class=\"nu0\">20</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%3d \"</span>, <span class=\"br0\">[</span>Hofstadter F<span class=\"sy0\">:</span> i<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>; i &lt; <span class=\"nu0\">20</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%3d \"</span>, <span class=\"br0\">[</span>Hofstadter M<span class=\"sy0\">:</span> i<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Objeck", "loc": 21, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span> MutualRecursion <span class=\"br0\">{</span><br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      f<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"st0\">\"---\"</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      m<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> f<span class=\"br0\">(</span>n <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Int</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\u00a0? <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> n <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> m<span class=\"br0\">(</span>n <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Int</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\u00a0? <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> n <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 7, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> f <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>  <span class=\"sy0\">|</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1</span><br/>  <span class=\"sy0\">|</span> n <span class=\"sy0\">-&gt;</span> n <span class=\"sy0\">-</span> m<span class=\"br0\">(</span>f<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">and</span> m <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>  <span class=\"sy0\">|</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">0</span><br/>  <span class=\"sy0\">|</span> n <span class=\"sy0\">-&gt;</span> n <span class=\"sy0\">-</span> f<span class=\"br0\">(</span>m<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"sy0\">;;</span></pre>"}, {"lang": "Octave", "loc": 19, "block": "<pre class=\"octave highlighted_source\"><span class=\"kw4\">function</span> r <span class=\"sy3\">=</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw4\">for</span> <a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a> <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">:</span><a href=\"http://octave.sourceforge.net/octave/function/length.html\"><span class=\"kw5\">length</span></a><span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw4\">if</span> <span class=\"br0\">(</span>n<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      r<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy5\">;</span><br/>    <span class=\"kw4\">else</span><br/>      r<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy3\">=</span> n<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy1\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>    <span class=\"kw4\">endif</span><br/>  <span class=\"kw4\">endfor</span><br/><span class=\"kw4\">endfunction</span><br/>\u00a0<br/><span class=\"kw4\">function</span> r <span class=\"sy3\">=</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw4\">for</span> <a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a> <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">:</span><a href=\"http://octave.sourceforge.net/octave/function/length.html\"><span class=\"kw5\">length</span></a><span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw4\">if</span> <span class=\"br0\">(</span>n<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      r<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy5\">;</span><br/>    <span class=\"kw4\">else</span><br/>      r<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy3\">=</span> n<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span> <span class=\"sy1\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>    <span class=\"kw4\">endif</span><br/>  <span class=\"kw4\">endfor</span><br/><span class=\"kw4\">endfunction</span></pre>"}, {"lang": "Oforth", "loc": 12, "block": "<pre class=\"text highlighted_source\">Method new: M<br/>\u00a0<br/>Integer method: F<br/>   self 0 == ifTrue: [ 1 return ]<br/>   self self 1 - F M -\u00a0;<br/>\u00a0<br/>Integer method: M<br/>   self 0 == ifTrue: [ 0 return ]<br/>   self self 1 - M F -\u00a0;<br/>\u00a0<br/>0 20 seqFrom map(#F) println<br/>0 20 seqFrom map(#M) println</pre>"}, {"lang": "Ol", "loc": 10, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">letrec</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">F</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> n <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><br/>                  <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"br0\">(</span>M <span class=\"br0\">(</span><span class=\"kw1\">F</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>M <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> n <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><br/>                  <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"br0\">(</span><span class=\"kw1\">F</span> <span class=\"br0\">(</span>M <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>print <span class=\"br0\">(</span><span class=\"kw1\">F</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">; produces 12</span><br/>\u00a0</pre>"}, {"lang": "Order", "loc": 17, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;order/interpreter.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define ORDER_PP_DEF_8f                         \\<br/>ORDER_PP_FN(8fn(8N,                             \\<br/>                8if(8is_0(8N),                  \\<br/>                    1,                          \\<br/>                    8sub(8N, 8m(8f(8dec(8N)))))))</span><br/>\u00a0<br/><span class=\"co2\">#define ORDER_PP_DEF_8m                         \\<br/>ORDER_PP_FN(8fn(8N,                             \\<br/>                8if(8is_0(8N),                  \\<br/>                    0,                          \\<br/>                    8sub(8N, 8f(8m(8dec(8N)))))))</span><br/>\u00a0<br/><span class=\"co1\">//Test</span><br/>ORDER_PP<span class=\"br0\">(</span>8for_each_in_range<span class=\"br0\">(</span>8fn<span class=\"br0\">(</span>8N<span class=\"sy0\">,</span> 8print<span class=\"br0\">(</span><span class=\"nu17\">8f</span><span class=\"br0\">(</span>8N<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>ORDER_PP<span class=\"br0\">(</span>8for_each_in_range<span class=\"br0\">(</span>8fn<span class=\"br0\">(</span>8N<span class=\"sy0\">,</span> 8print<span class=\"br0\">(</span>8m<span class=\"br0\">(</span>8N<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Oz", "loc": 15, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">F</span> N<span class=\"br0\">}</span><br/>     <span class=\"kw1\">if</span> N <span class=\"sy0\">==</span> 0 <span class=\"kw1\">then</span> 1<br/>     <span class=\"kw1\">elseif</span> N <span class=\"sy0\">&gt;</span> 0 <span class=\"kw1\">then</span> N <span class=\"sy0\">-</span> <span class=\"br0\">{</span>M <span class=\"br0\">{</span>F N<span class=\"sy0\">-</span>1<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">M</span> N<span class=\"br0\">}</span><br/>     <span class=\"kw1\">if</span> N <span class=\"sy0\">==</span> 0 <span class=\"kw1\">then</span> 0<br/>     <span class=\"kw1\">elseif</span> N <span class=\"sy0\">&gt;</span> 0 <span class=\"kw1\">then</span> N <span class=\"sy0\">-</span> <span class=\"br0\">{</span>F <span class=\"br0\">{</span>M N<span class=\"sy0\">-</span>1<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Map <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>number 0 9 1<span class=\"br0\">}</span> F<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Map <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>number 0 9 1<span class=\"br0\">}</span> M<span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 2, "block": "<pre class=\"parigp highlighted_source\">F<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw1\">if</span><span class=\"br0\">(</span>n<span class=\"sy0\">,</span>n<span class=\"sy0\">-</span>M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><span class=\"br0\">)</span><br/>M<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw1\">if</span><span class=\"br0\">(</span>n<span class=\"sy0\">,</span>n<span class=\"sy0\">-</span>F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 34, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">Program</span> MutualRecursion<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">{M definition comes after F which uses it}</span><br/><span class=\"kw1\">function</span> M<span class=\"br0\">(</span>n <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span> <span class=\"kw1\">forward</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> F<span class=\"br0\">(</span>n <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">if</span> n <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      F <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><br/>   <span class=\"kw1\">else</span><br/>      F <span class=\"sy1\">:</span><span class=\"sy3\">=</span> n <span class=\"sy3\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> M<span class=\"br0\">(</span>n <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">if</span> n <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      M <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><br/>   <span class=\"kw1\">else</span><br/>      M <span class=\"sy1\">:</span><span class=\"sy3\">=</span> n <span class=\"sy3\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>   i <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span> <br/>   <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">19</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>      <span class=\"kw3\">write</span><span class=\"br0\">(</span>F<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>   <span class=\"kw3\">writeln</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">19</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>      <span class=\"kw3\">write</span><span class=\"br0\">(</span>M<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>   <span class=\"kw3\">writeln</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 7, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> F <span class=\"br0\">{</span> <span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span> <span class=\"re0\">$n</span> <span class=\"sy0\">?</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> M <span class=\"br0\">{</span> <span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span> <span class=\"re0\">$n</span> <span class=\"sy0\">?</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Usage:</span><br/><span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$sequence</span> <span class=\"br0\">(</span><span class=\"re0\">\\&amp;F</span><span class=\"sy0\">,</span> <span class=\"re0\">\\&amp;M</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <a href=\"http://perldoc.perl.org/functions/join.html\"><span class=\"kw3\">join</span></a><span class=\"br0\">(</span><span class=\"st_h\">' '</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"re0\">$sequence</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 6, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">multi</span> F<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"kw2\">multi</span> M<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> F<span class=\"br0\">(</span>\\\ud835\udc5b<span class=\"br0\">)</span> <span class=\"br0\">{</span> \ud835\udc5b <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>\ud835\udc5b <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> M<span class=\"br0\">(</span>\\\ud835\udc5b<span class=\"br0\">)</span> <span class=\"br0\">{</span> \ud835\udc5b <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>\ud835\udc5b <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"kw3\">map</span> <span class=\"re0\">&amp;F</span><span class=\"sy0\">,</span> <span class=\"sy0\">^</span><span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"kw3\">map</span> <span class=\"re0\">&amp;M</span><span class=\"sy0\">,</span> <span class=\"sy0\">^</span><span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 17, "block": "<pre class=\"text highlighted_source\">forward function M(integer n)<br/>\u00a0<br/>function F(integer n)<br/>    return iff(n?n-M(F(n-1)):1)<br/>end function<br/>\u00a0<br/>function M(integer n)<br/>    return iff(n?n-F(M(n-1)):0)<br/>end function<br/>\u00a0<br/>for i=0 to 20 do<br/>    printf(1,\"\u00a0%d\",F(i))<br/>end for<br/>printf(1,\"\\n\")<br/>for i=0 to 20 do<br/>    printf(1,\"\u00a0%d\",M(i))<br/>end for</pre>"}, {"lang": "PHP", "loc": 23, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw2\">function</span> F<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$n</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">function</span> M<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$n</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$ra</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$rb</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <a href=\"http://www.php.net/array_push\"><span class=\"kw3\">array_push</span></a><span class=\"br0\">(</span><span class=\"re0\">$ra</span><span class=\"sy0\">,</span> F<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.php.net/array_push\"><span class=\"kw3\">array_push</span></a><span class=\"br0\">(</span><span class=\"re0\">$rb</span><span class=\"sy0\">,</span> M<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">echo</span> <a href=\"http://www.php.net/implode\"><span class=\"kw3\">implode</span></a><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$ra</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <a href=\"http://www.php.net/implode\"><span class=\"kw3\">implode</span></a><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$rb</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 9, "block": "<pre class=\"text highlighted_source\">(de f (N)<br/>   (if (=0 N)<br/>      1<br/>      (- N (m (f (dec N)))) ) )<br/>\u00a0<br/>(de m (N)<br/>   (if (=0 N)<br/>      0<br/>      (- N (f (m (dec N)))) ) )</pre>"}, {"lang": "PL/I", "loc": 20, "block": "<pre class=\"text highlighted_source\">test: procedure options (main);<br/>\u00a0<br/>M: procedure (n) returns (fixed) recursive;    /* 8/1/2010 */<br/>   declare n fixed;<br/>   if n &lt;= 0 then return (0);<br/>   else return ( n - F(M(n-1)) );<br/>end M;<br/>\u00a0<br/>F: procedure (n) returns (fixed) recursive;<br/>   declare n fixed; <br/>   if n &lt;= 0 then return (1);<br/>   else return ( n - M(F(n-1)) );<br/>end F;<br/>\u00a0<br/>   declare i fixed;<br/>\u00a0<br/>   do i = 1 to 15;<br/>      put skip list ( F(i), M(i) );<br/>   end;<br/>end test;</pre>"}, {"lang": "PostScript", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/female{<br/>/n exch def<br/>n 0 eq<br/>{1}<br/>{<br/>n n 1 sub female male sub<br/>}ifelse<br/>}def<br/>\u00a0<br/>/male{<br/>/n exch def<br/>n 0 eq<br/>{0}<br/>{<br/>n n 1 sub male female sub<br/>}ifelse<br/>}def<br/>\u00a0</pre>"}, {"lang": "PowerShell", "loc": 9, "block": "<pre class=\"powershell highlighted_source\"><span class=\"kw3\">function</span> F<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"kw4\">-eq</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">return</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>    <span class=\"kw3\">return</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>M <span class=\"br0\">(</span>F <span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">function</span> M<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"kw4\">-eq</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">return</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>    <span class=\"kw3\">return</span> <span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>F <span class=\"br0\">(</span>M <span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Prolog", "loc": 13, "block": "<pre class=\"prolog highlighted_source\">female<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>female<span class=\"br0\">(</span>N<span class=\"sy4\">,</span>F<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> N<span class=\"sy6\">&gt;</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span> <br/>\t       N1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> <br/>\t       female<span class=\"br0\">(</span>N1<span class=\"sy4\">,</span>R<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t       male<span class=\"br0\">(</span>R<span class=\"sy4\">,</span> R1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t       F <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N<span class=\"sy3\">-</span>R1<span class=\"sy4\">.</span><br/>\u00a0<br/>male<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>male<span class=\"br0\">(</span>N<span class=\"sy4\">,</span>F<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> N<span class=\"sy6\">&gt;</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span> <br/>\t     N1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> <br/>\t     male<span class=\"br0\">(</span>N1<span class=\"sy4\">,</span>R<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t     female<span class=\"br0\">(</span>R<span class=\"sy4\">,</span> R1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t     F <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N<span class=\"sy3\">-</span>R1<span class=\"sy4\">.</span></pre>"}, {"lang": "Pure", "loc": 4, "block": "<pre class=\"text highlighted_source\">F 0 = 1;<br/>M 0 = 0;<br/>F n = n - M(F(n-1)) if n&gt;0;<br/>M n = n - F(M(n-1)) if n&gt;0;</pre>"}, {"lang": "PureBasic", "loc": 42, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Declare</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">ElseIf</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">ProcedureReturn</span> n <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span> <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">ElseIf</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">ProcedureReturn</span> n <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span> <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> i<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">19</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>F<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">19</span><br/>      <span class=\"kw1\">Continue</span><br/>    <span class=\"kw1\">EndIf</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">19</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>M<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">19</span><br/>      <span class=\"kw1\">Continue</span><br/>    <span class=\"kw1\">EndIf</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span> <br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 5, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">def</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span>: <span class=\"kw1\">return</span> <span class=\"nu0\">1</span> <span class=\"kw1\">if</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> n - M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">def</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span>: <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"kw1\">if</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> n - F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"br0\">[</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"br0\">[</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 2, "block": "<pre class=\"text highlighted_source\">F &lt;- function(n) ifelse(n == 0, 1, n - M(F(n-1)))<br/>M &lt;- function(n) ifelse(n == 0, 0, n - F(M(n-1)))</pre>"}, {"lang": "REBOL", "loc": 18, "block": "<pre class=\"rebol highlighted_source\"><span class=\"coMULTI\">rebol [<br/>    Title: \"Mutual Recursion\"<br/>    URL: http://rosettacode.org/wiki/Mutual_Recursion<br/>\tReferences: [http://en.wikipedia.org/wiki/Hofstadter_sequence#Hofstadter_Female_and_Male_sequences]</span><br/><span class=\"br0\">]</span><br/>\u00a0<br/>f: <span class=\"kw2\">func</span> <span class=\"br0\">[</span><br/>\t<span class=\"st0\">\"Female.\"</span><br/>\tn <span class=\"br0\">[</span><span class=\"kw1\">integer!</span><span class=\"br0\">]</span> <span class=\"st0\">\"Value.\"</span><br/><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">either</span> <span class=\"nu0\">0</span> = n <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>n - m f n - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/>m: <span class=\"kw2\">func</span> <span class=\"br0\">[</span><br/>\t<span class=\"st0\">\"Male.\"</span><br/>\tn <span class=\"br0\">[</span><span class=\"kw1\">integer!</span><span class=\"br0\">]</span> <span class=\"st0\">\"Value.\"</span><br/><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">either</span> <span class=\"nu0\">0</span> = n <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>n - f m n - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/>fs: <span class=\"br0\">[</span><span class=\"br0\">]</span>  ms: <span class=\"br0\">[</span><span class=\"br0\">]</span>  <span class=\"kw2\">for</span> i <span class=\"nu0\">0</span> <span class=\"nu0\">19</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw3\">append</span> fs f i  <span class=\"kw3\">append</span> ms m i<span class=\"br0\">]</span><br/><span class=\"kw3\">print</span> <span class=\"br0\">[</span><span class=\"st0\">\"F:\"</span> <span class=\"kw3\">mold</span> fs  crlf  <span class=\"st0\">\"M:\"</span> <span class=\"kw3\">mold</span> ms<span class=\"br0\">]</span></pre>"}, {"lang": "Racket", "loc": 10, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(define (F n)<br/>  (if (&gt;= 0 n)<br/>      1<br/>      (- n (M (F (sub1 n))))))<br/>\u00a0<br/>(define (M n)<br/>  (if (&gt;= 0 n)<br/>      0<br/>      (- n (F (M (sub1 n))))))</pre>"}, {"lang": "REXX", "loc": 10, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program shows  mutual recursion  (via the Hofstadter Male and Female sequences). */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> lim <span class=\"sy0\">.</span>;       <span class=\"kw1\">if</span> lim=<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> lim=<span class=\"nu0\">40</span>;    w=<span class=\"kw6\">length</span><span class=\"br0\">(</span>lim<span class=\"br0\">)</span>;      pad=<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"st0\">''</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>\u00a0<br/>     <span class=\"kw1\">do</span> j=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> lim;   jj=<span class=\"kw6\">right</span><span class=\"br0\">(</span>j, w<span class=\"br0\">)</span>;    ff=<span class=\"kw6\">right</span><span class=\"br0\">(</span>F<span class=\"br0\">(</span>j<span class=\"br0\">)</span>, w<span class=\"br0\">)</span>;          mm=<span class=\"kw6\">right</span><span class=\"br0\">(</span>M<span class=\"br0\">(</span>j<span class=\"br0\">)</span>, w<span class=\"br0\">)</span><br/>     <span class=\"kw1\">say</span>   pad     <span class=\"st0\">'F('</span>jj<span class=\"st0\">\") =\"</span>            ff   pad   <span class=\"st0\">'M('</span>jj<span class=\"st0\">\") =\"</span>      mm<br/>     <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>F: <span class=\"kw1\">procedure</span>;  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> n;   <span class=\"kw1\">if</span> n==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>;           <span class=\"kw1\">return</span>  n - M<span class=\"br0\">(</span> F<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>M: <span class=\"kw1\">procedure</span>;  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> n;   <span class=\"kw1\">if</span> n==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;           <span class=\"kw1\">return</span>  n - F<span class=\"br0\">(</span> M<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span></pre>"}, {"lang": "Ring", "loc": 21, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>see \"F sequence\u00a0: \"<br/>for i = 0 to 20<br/>    see \"\" + f(i) + \" \"<br/>next <br/>see nl<br/>see \"M sequence\u00a0: \"<br/>for i = 0 to 20<br/>    see \"\" + m(i) + \" \"<br/>next<br/>\u00a0<br/>func f n<br/>     fr = 1<br/>     if n\u00a0!= 0 fr = n - m(f(n - 1)) ok<br/>     return fr<br/>\u00a0<br/>func m n<br/>     mr = 0<br/>     if n\u00a0!= 0 mr = n - f(m(n - 1)) ok<br/>     return mr<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 9, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  n == <span class=\"nu0\">0</span>\u00a0? <span class=\"nu0\">1</span>\u00a0: n <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">def</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  n == <span class=\"nu0\">0</span>\u00a0? <span class=\"nu0\">0</span>\u00a0: n <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">p</span> <span class=\"br0\">(</span><span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> F<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw3\">p</span> <span class=\"br0\">(</span><span class=\"kw3\">Array</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> M<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span></pre>"}, {"lang": "Run BASIC", "loc": 19, "block": "<pre class=\"text highlighted_source\">print \"F sequence:\";<br/>for i = 0 to 20<br/>  print f(i);\" \";<br/>next i<br/>print\u00a0:print \"M sequence:\";<br/>for i = 0 to 20<br/>  print m(i);\" \";<br/>next i<br/>end<br/>\u00a0<br/>function f(n)<br/> f = 1<br/> if n &lt;&gt; 0 then f = n - m(f(n - 1))<br/>end function<br/>\u00a0<br/>function m(n)<br/> m = 0<br/> if n &lt;&gt; 0 then m = n - f(m(n - 1))<br/>end function</pre>"}, {"lang": "Rust", "loc": 25, "block": "<pre class=\"text highlighted_source\">fn f(n: u32) -&gt; u32 {<br/>    match n {<br/>        0 =&gt; 1,<br/>        _ =&gt; n - m(f(n - 1))<br/>    }<br/>}<br/>\u00a0<br/>fn m(n: u32) -&gt; u32 {<br/>    match n {<br/>        0 =&gt; 0,<br/>        _ =&gt; n - f(m(n - 1))<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    for i in (0..20).map(f) {<br/>        print!(\"{} \", i);<br/>    }<br/>    println!(\"\");<br/>\u00a0<br/>    for i in (0..20).map(m) {<br/>        print!(\"{} \", i);<br/>    }<br/>    println!(\"\")<br/>}</pre>"}, {"lang": "S-lang", "loc": 22, "block": "<pre class=\"text highlighted_source\">% Forward definitions: [also deletes any existing definition]<br/>define f();<br/>define m();<br/>\u00a0<br/>define f(n) {<br/>  if (n == 0) return 1;<br/>  else if (n &lt; 0) error(\"oops\");<br/>  return n - m(f(n - 1));<br/>}<br/>\u00a0<br/>define m(n) {<br/>  if (n == 0) return 0;<br/>  else if (n &lt; 0) error(\"oops\");<br/>  return n - f(m(n - 1));<br/>}<br/>\u00a0<br/>foreach $1 ([0:19])<br/>  () = printf(\"%d  \", f($1));<br/>() = printf(\"\\n\");<br/>foreach $1 ([0:19])<br/>  () = printf(\"%d  \", m($1));<br/>() = printf(\"\\n\");</pre>"}, {"lang": "Sather", "loc": 26, "block": "<pre class=\"text highlighted_source\">class MAIN is<br/>\u00a0<br/>  f(n:INT):INT<br/>    pre n &gt;= 0<br/>  is<br/>    if n = 0 then return 1; end;<br/>    return n - m(f(n-1));<br/>  end;<br/>\u00a0<br/>  m(n:INT):INT<br/>    pre n &gt;= 0<br/>  is<br/>    if n = 0 then return 0; end;<br/>    return n - f(m(n-1));<br/>  end;<br/>\u00a0<br/>  main is<br/>    loop i\u00a0::= 0.upto!(19);<br/>      #OUT + #FMT(\"%2d \", f(i));<br/>    end;<br/>    #OUT + \"\\n\";<br/>    loop i\u00a0::= 0.upto!(19);<br/>      #OUT + #FMT(\"%2d \", m(i));<br/>    end;<br/>  end;<br/>end;</pre>"}, {"lang": "Scala", "loc": 7, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> F<span class=\"br0\">(</span>n<span class=\"sy0\">:</span>Int<span class=\"br0\">)</span><span class=\"sy0\">:</span>Int <span class=\"sy0\">=</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> n - M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> M<span class=\"br0\">(</span>n<span class=\"sy0\">:</span>Int<span class=\"br0\">)</span><span class=\"sy0\">:</span>Int <span class=\"sy0\">=</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> n - F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>println<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0</span> until <span class=\"nu0\">20</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span>F<span class=\"br0\">)</span>.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>println<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0</span> until <span class=\"nu0\">20</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span>M<span class=\"br0\">)</span>.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Scheme", "loc": 7, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span><span class=\"kw1\">F</span> n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> n <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"br0\">(</span>M <span class=\"br0\">(</span><span class=\"kw1\">F</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>M n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> n <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"br0\">(</span><span class=\"kw1\">F</span> <span class=\"br0\">(</span>M <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 39, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const func integer: m (in integer: n) is forward;<br/>\u00a0<br/>const func integer: f (in integer: n) is func<br/>  result<br/>    var integer: res is 0;<br/>  begin<br/>    if n = 0 then<br/>      res\u00a0:= 1;<br/>    else<br/>      res\u00a0:= n - m(f(n - 1));<br/>    end if;<br/>  end func;<br/>\u00a0<br/>const func integer: m (in integer: n) is func<br/>  result<br/>    var integer: res is 0;<br/>  begin<br/>    if n = 0 then<br/>      res\u00a0:= 0;<br/>    else<br/>      res\u00a0:= n - f(m(n - 1));<br/>    end if;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var integer: i is 0;<br/>  begin<br/>    for i range 0 to 19 do<br/>      write(f(i) lpad 3);<br/>    end for;<br/>    writeln;<br/>    for i range 0 to 19 do<br/>      write(m(i) lpad 3);<br/>    end for;<br/>    writeln;<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 9, "block": "<pre class=\"ruby highlighted_source\">func F<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"br0\">}</span><br/>func M<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/>F = func<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span>\u00a0? <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> M<span class=\"br0\">(</span>F<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>M = func<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span>\u00a0? <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> F<span class=\"br0\">(</span>M<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">[</span>F, M<span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>seq<span class=\"sy0\">|</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> seq.<span class=\"me1\">call</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">}</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span>^<span class=\"nu0\">20</span><span class=\"br0\">)</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span>.<span class=\"me1\">say</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Smalltalk", "loc": 23, "block": "<pre class=\"smalltalk highlighted_source\">|<span class=\"re0\">F</span> <span class=\"re0\">M</span> ra rb|<br/>\u00a0<br/><span class=\"re0\">F</span> <span class=\"sy0\">:=</span> <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">n</span> |<br/>  <span class=\"br0\">(</span><span class=\"re5\">n</span> <span class=\"sy0\">==</span> <span class=\"re5\">0</span><span class=\"br0\">)</span><br/>    ifTrue: <span class=\"br0\">[</span> <span class=\"re5\">1</span> <span class=\"br0\">]</span><br/>    ifFalse: <span class=\"br0\">[</span> <span class=\"re5\">n</span> - <span class=\"br0\">(</span><span class=\"re0\">M</span> value: <span class=\"br0\">(</span><span class=\"re0\">F</span> value: <span class=\"br0\">(</span><span class=\"re5\">n</span>-<span class=\"re5\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">]</span>       <br/><span class=\"br0\">]</span>.<br/>\u00a0<br/><span class=\"re0\">M</span> <span class=\"sy0\">:=</span> <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">n</span> |<br/>  <span class=\"br0\">(</span><span class=\"re5\">n</span> <span class=\"sy0\">==</span> <span class=\"re5\">0</span><span class=\"br0\">)</span><br/>    ifTrue: <span class=\"br0\">[</span> <span class=\"re5\">0</span> <span class=\"br0\">]</span><br/>    ifFalse: <span class=\"br0\">[</span> <span class=\"re5\">n</span> - <span class=\"br0\">(</span><span class=\"re0\">F</span> value: <span class=\"br0\">(</span><span class=\"re0\">M</span> value: <span class=\"br0\">(</span><span class=\"re5\">n</span>-<span class=\"re5\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><br/><span class=\"br0\">]</span>.<br/>\u00a0<br/><span class=\"re5\">ra</span> <span class=\"sy0\">:=</span> <span class=\"re0\">OrderedCollection</span> new.<br/><span class=\"re5\">rb</span> <span class=\"sy0\">:=</span> <span class=\"re0\">OrderedCollection</span> new.<br/><span class=\"re5\">0</span> to: <span class=\"re5\">19</span> do: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">i</span> |<br/>  ra add: <span class=\"br0\">(</span><span class=\"re0\">F</span> value: <span class=\"re5\">i</span><span class=\"br0\">)</span>.<br/>  <span class=\"re5\">rb</span> add: <span class=\"br0\">(</span><span class=\"re0\">M</span> value: <span class=\"re5\">i</span><span class=\"br0\">)</span><br/><span class=\"br0\">]</span>.<br/>\u00a0<br/><span class=\"re5\">ra</span> displayNl.<br/><span class=\"re5\">rb</span> displayNl.</pre>"}, {"lang": "SNOBOL4", "loc": 15, "block": "<pre class=\"text highlighted_source\">        define('f(n)')\u00a0:(f_end)<br/>f       f = eq(n,0) 1\u00a0:s(return)<br/>        f = n - m(f(n - 1))\u00a0:(return)<br/>f_end<br/>\u00a0<br/>        define('m(n)')\u00a0:(m_end)<br/>m       m = eq(n,0) 0\u00a0:s(return)<br/>        m = n - f(m(n - 1))\u00a0:(return)<br/>m_end <br/>\u00a0<br/>*       # Test and display<br/>L1      s1 = s1 m(i) ' '\u00a0; s2 = s2 f(i) ' '<br/>        i = le(i,25) i + 1\u00a0:s(L1)<br/>        output = 'M: ' s1; output = 'F: ' s2<br/>end</pre>"}, {"lang": "SNUSP", "loc": 21, "block": "<pre class=\"text highlighted_source\">       /======\\<br/>F==!/=!\\?\\+#  | /&gt;-&lt;-\\<br/>    |    \\@\\<a class=\"__cf_email__\" data-cfemail=\"173a57\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/@\\===?/&lt;#<br/>    |      |    |<br/>$+++/======|====/<br/>   \u00a0!    /=/       /+&lt;&lt;-\\<br/>    |    \\!/======?\\&gt;&gt;=?/&lt;#  dup<br/>    |      \\&lt;&lt;+&gt;+&gt;-/<br/>   \u00a0!     \u00a0!<br/>    \\======|====\\<br/>    |      |    |<br/>    |  /===|==\\ |<br/>M==!\\=!\\?\\#|  | |<br/>         \\@/<a class=\"__cf_email__\" data-cfemail=\"cde08d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/@/===?\\&lt;#<br/>        ^       \\&gt;-&lt;-/<br/>        | ^  ^ ^ ^<br/>        | |  | | subtract from n<br/>        | |  | mutual recursion<br/>        | |  recursion<br/>        | n-1<br/>        check for zero</pre>"}, {"lang": "SPL", "loc": 14, "block": "<pre class=\"text highlighted_source\">f(n)=<br/> \u00a0? n=0, &lt;= 1<br/>  &lt;= n-m(f(n-1))<br/>.<br/>m(n)=<br/> \u00a0? n=0, &lt;= 0<br/>  &lt;= n-f(m(n-1))<br/>.<br/>&gt; i, 0..20<br/>  fs += \" \"+f(i)<br/>  ms += \" \"+m(i)<br/>&lt;<br/>#.output(\"F:\",fs)<br/>#.output(\"M:\",ms)</pre>"}, {"lang": "Standard ML", "loc": 5, "block": "<pre class=\"text highlighted_source\">fun f 0 = 1<br/>  | f n = n - m (f (n-1))<br/>and m 0 = 0<br/>  | m n = n - f (m (n-1))<br/>;</pre>"}, {"lang": "Swift", "loc": 16, "block": "<pre class=\"text highlighted_source\">func F(n: Int) -&gt; Int {<br/>  return n == 0\u00a0? 1\u00a0: n - M(F(n-1))<br/>}<br/>\u00a0<br/>func M(n: Int) -&gt; Int {<br/>  return n == 0\u00a0? 0\u00a0: n - F(M(n-1))<br/>}<br/>\u00a0<br/>for i in 0..20 {<br/>  print(\"\\(F(i)) \")<br/>}<br/>println()<br/>for i in 0..20 {<br/>  print(\"\\(M(i)) \")<br/>}<br/>println()</pre>"}, {"lang": "Tcl", "loc": 21, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> m <span class=\"br0\">{</span>n<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$n</span> == <span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">expr</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span> - <span class=\"br0\">[</span>f <span class=\"br0\">[</span>m <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">proc</span> f <span class=\"br0\">{</span>n<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$n</span> == <span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">expr</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span> - <span class=\"br0\">[</span>m <span class=\"br0\">[</span>f <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"br0\">[</span>f <span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\" \"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"\"</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"br0\">[</span>m <span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\" \"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"\"</span></pre>"}, {"lang": "TI-89 BASIC", "loc": 2, "block": "<pre class=\"text highlighted_source\">Define F(n) = when(n=0, 1, n - M(F(n - 1)))<br/>Define M(n) = when(n=0, 0, n - F(M(n - 1)))</pre>"}, {"lang": "TXR", "loc": 12, "block": "<pre class=\"text highlighted_source\">(defun f (n)<br/>  (if (&gt;= 0 n)<br/>    1<br/>    (- n (m (f (- n 1))))))<br/>\u00a0<br/>(defun m (n)<br/>  (if (&gt;= 0 n)<br/>    0<br/>    (- n (f (m (- n 1))))))<br/>\u00a0<br/>(each ((n (range 0 15)))<br/>  (format t \"f(~s) = ~s; m(~s) = ~s\\n\" n (f n) n (m n)))</pre>"}, {"lang": "uBasic/4tH", "loc": 31, "block": "<pre class=\"text highlighted_source\">LOCAL(1)                               ' main uses locals as well<br/>\u00a0<br/>FOR <a class=\"__cf_email__\" data-cfemail=\"4f2e0f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 TO 200                      ' set the array<br/>  @(<a class=\"__cf_email__\" data-cfemail=\"fc9dbc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) = -1<br/>NEXT<br/>\u00a0<br/>PRINT \"F sequence:\"                    ' print the F-sequence<br/>FOR <a class=\"__cf_email__\" data-cfemail=\"600120\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 TO 20<br/>  PRINT FUNC(_f(<a class=\"__cf_email__\" data-cfemail=\"8aebca\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>));\" \";<br/>NEXT<br/>PRINT<br/>\u00a0<br/>PRINT \"M sequence:\"                    ' print the M-sequence<br/>FOR <a class=\"__cf_email__\" data-cfemail=\"93f2d3\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 TO 20<br/>  PRINT FUNC(_m(<a class=\"__cf_email__\" data-cfemail=\"f796b7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>));\" \";<br/>NEXT<br/>PRINT<br/>\u00a0<br/>END<br/>\u00a0<br/>\u00a0<br/>_f PARAM(1)                            ' F-function<br/>  IF <a class=\"__cf_email__\" data-cfemail=\"264766\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 THEN RETURN (1)            ' memoize the solution<br/>  IF @(<a class=\"__cf_email__\" data-cfemail=\"9ffedf\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) &lt; 0 THEN @(<a class=\"__cf_email__\" data-cfemail=\"432203\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) = <a class=\"__cf_email__\" data-cfemail=\"85e4c5\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> - FUNC(_m(FUNC(_f(<a class=\"__cf_email__\" data-cfemail=\"c3a283\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> - 1))))<br/>RETURN (@(<a class=\"__cf_email__\" data-cfemail=\"412001\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>))                         ' return array element<br/>\u00a0<br/>\u00a0<br/>_m PARAM(1)                            ' M-function<br/>  IF <a class=\"__cf_email__\" data-cfemail=\"87e6c7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 THEN RETURN (0)            ' memoize the solution<br/>  IF @(<a class=\"__cf_email__\" data-cfemail=\"7a1b3a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+100) &lt; 0 THEN @(<a class=\"__cf_email__\" data-cfemail=\"f697b6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+100) = <a class=\"__cf_email__\" data-cfemail=\"f190b1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> - FUNC(_f(FUNC(_m(<a class=\"__cf_email__\" data-cfemail=\"e485a4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> - 1))))<br/>RETURN (@(<a class=\"__cf_email__\" data-cfemail=\"a6c7e6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+100))                     ' return array element</pre>"}, {"lang": "UNIX Shell", "loc": 32, "block": "<pre class=\"bash highlighted_source\">M<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw3\">local</span> n<br/>    <span class=\"re2\">n</span>=<span class=\"re4\">$1</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"re1\">$n</span> <span class=\"re5\">-eq</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span><span class=\"br0\">]</span>; <span class=\"kw1\">then</span><br/>\t<span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">else</span><br/>\t<span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> $<span class=\"br0\">(</span><span class=\"br0\">(</span> n - $<span class=\"br0\">(</span>F $<span class=\"br0\">(</span>M $<span class=\"br0\">(</span><span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">fi</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>F<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw3\">local</span> n<br/>    <span class=\"re2\">n</span>=<span class=\"re4\">$1</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"re1\">$n</span> <span class=\"re5\">-eq</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span><span class=\"br0\">]</span>; <span class=\"kw1\">then</span><br/>\t<span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">else</span><br/>\t<span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> $<span class=\"br0\">(</span><span class=\"br0\">(</span> n - $<span class=\"br0\">(</span>M $<span class=\"br0\">(</span>F $<span class=\"br0\">(</span><span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">fi</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re2\">i</span>=<span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span>; i++<span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">do</span><br/>    F <span class=\"re1\">$i</span><br/>    <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\" \"</span><br/><span class=\"kw1\">done</span><br/><span class=\"kw3\">echo</span><br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re2\">i</span>=<span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span>; i++<span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">do</span><br/>    M <span class=\"re1\">$i</span><br/>    <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\" \"</span><br/><span class=\"kw1\">done</span><br/><span class=\"kw3\">echo</span></pre>"}, {"lang": "Ursala", "loc": 8, "block": "<pre class=\"text highlighted_source\">#import std<br/>#import nat<br/>#import sol<br/>\u00a0<br/>#fix general_function_fixer 0<br/>\u00a0<br/>F = ~&amp;?\\1! difference^/~&amp; M+ F+ predecessor<br/>M = ~&amp;?\\0! difference^/~&amp; F+ M+ predecessor</pre>"}, {"lang": "x86 Assembly", "loc": 82, "block": "<pre class=\"asm highlighted_source\">\t<span class=\"kw5\">global</span>\tmain<br/>\t<span class=\"kw5\">extern</span>\tprintf<br/>\u00a0<br/>\t<span class=\"kw5\">section</span>\t<span class=\"kw5\">.text</span><br/>\u00a0<br/>func_f<br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"kw4\">esp</span><span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">cmp</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">jz</span>\tf_ret<br/>\t<span class=\"kw1\">dec</span>\t<span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">push</span>\t<span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">call</span>\tfunc_f<br/>\t<span class=\"kw1\">mov</span>\t<span class=\"br0\">[</span><span class=\"kw4\">esp</span><span class=\"sy1\">+</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">call</span>\tfunc_m<br/>\t<span class=\"kw1\">add</span>\t<span class=\"kw4\">esp</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"kw4\">esp</span><span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">sub</span>\t<span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"kw4\">ebx</span><br/>\t<span class=\"kw1\">ret</span><br/>f_ret<br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">ret</span><br/>\u00a0<br/>func_m<br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"kw4\">esp</span><span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">cmp</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">jz</span>\tm_ret<br/>\t<span class=\"kw1\">dec</span>\t<span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">push</span>\t<span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">call</span>\tfunc_m<br/>\t<span class=\"kw1\">mov</span>\t<span class=\"br0\">[</span><span class=\"kw4\">esp</span><span class=\"sy1\">+</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">call</span>\tfunc_f<br/>\t<span class=\"kw1\">add</span>\t<span class=\"kw4\">esp</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"kw4\">esp</span><span class=\"sy1\">+</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">sub</span>\t<span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"kw4\">ebx</span><br/>\t<span class=\"kw1\">ret</span><br/>m_ret<br/>\t<span class=\"kw1\">xor</span>\t<span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">ret</span><br/>\u00a0<br/>main<br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">edx</span><span class=\"sy1\">,</span> func_f<br/>\t<span class=\"kw1\">call</span>\toutput_res<br/>\t<span class=\"kw1\">mov</span>\t<span class=\"kw4\">edx</span><span class=\"sy1\">,</span> func_m<br/>\t<span class=\"kw1\">call</span>\toutput_res<br/>\t<span class=\"kw1\">ret</span><br/>\u00a0<br/>output_res<br/>\t<span class=\"kw1\">xor</span>\t<span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> <span class=\"kw4\">ecx</span><br/>loop0<br/>\t<span class=\"kw1\">push</span>\t<span class=\"kw4\">ecx</span><br/>\t<span class=\"kw1\">call</span>\t<span class=\"kw4\">edx</span><br/>\u00a0<br/>        <span class=\"kw1\">push</span>    <span class=\"kw4\">edx</span><br/>\u00a0<br/>\t<span class=\"kw1\">push</span>\t<span class=\"kw4\">eax</span><br/>\t<span class=\"kw1\">push</span>\tform<br/>\t<span class=\"kw1\">call</span>\tprintf<br/>\t<span class=\"kw1\">add</span>\t<span class=\"kw4\">esp</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><br/>\u00a0<br/>\t<span class=\"kw1\">pop</span>     <span class=\"kw4\">edx</span><br/>        <span class=\"kw1\">pop</span>     <span class=\"kw4\">ecx</span><br/>\u00a0<br/>\t<span class=\"kw1\">inc</span>\t<span class=\"kw4\">ecx</span><br/>\t<span class=\"kw1\">cmp</span>\t<span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><br/>\t<span class=\"kw1\">jnz</span>\tloop0<br/>\u00a0<br/>\t<span class=\"kw1\">push</span>\tnewline<br/>\t<span class=\"kw1\">call</span>\tprintf<br/>\t<span class=\"kw1\">add</span>\t<span class=\"kw4\">esp</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><br/>\u00a0<br/>\t<span class=\"kw1\">ret</span><br/>\u00a0<br/>\u00a0<br/>\t<span class=\"kw5\">section</span>\t<span class=\"kw5\">.rodata</span><br/>form<br/>\t<span class=\"kw5\">db</span>\t<span class=\"st0\">'%d '</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><br/>newline<br/>\t<span class=\"kw5\">db</span>\t<span class=\"nu0\">10</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><br/>\u00a0<br/>\tend</pre>"}, {"lang": "XPL0", "loc": 18, "block": "<pre class=\"text highlighted_source\">code    ChOut=8, CrLf=9, IntOut=11;<br/>\u00a0<br/>ffunc M; \\forward-referenced function declaration<br/>\u00a0<br/>func F(N);<br/>int N;<br/>return if N=0 then 1 else N - M(F(N-1));<br/>\u00a0<br/>func M(N);<br/>int N;<br/>return if N=0 then 0 else N - F(M(N-1));<br/>\u00a0<br/>int I;<br/>[for I:= 0 to 19 do [IntOut(0, F(I));  ChOut(0, ^ )];<br/>CrLf(0);<br/> for I:= 0 to 19 do [IntOut(0, M(I));  ChOut(0, ^ )];<br/>CrLf(0);<br/>]</pre>"}, {"lang": "zkl", "loc": 4, "block": "<pre class=\"text highlighted_source\">fcn f(n){ if(n==0)return(1); n-m(f(n-1,m),f) }<br/>fcn m(n){ if(n==0)return(0); n-f(m(n-1,f),m) }<br/>[0..19].apply(f).println();  // or foreach n in ([0..19]){ print(f(n),\" \") }<br/>[0..19].apply(m).println();  // or foreach n in ([0..19]){ print(m(n),\" \") }</pre>"}]}