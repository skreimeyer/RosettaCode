{"task": "Date_manipulation", "blocks": [{"lang": "Ada", "loc": 97, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Formatting</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Time_Zones</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Integer_Text_IO</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Date_Manipulation <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">type</span> Month_Name_T <span class=\"kw1\">is</span><br/>     <span class=\"br0\">(</span>January, February, March, April, May, June,<br/>      July, August, September, October, November, December<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Time_Zone_Name_T <span class=\"kw1\">is</span> <span class=\"br0\">(</span>EST, Lisbon<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Period_T <span class=\"kw1\">is</span> <span class=\"br0\">(</span>AM, PM<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> TZ <span class=\"kw3\">renames</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Time_Zones</span>;<br/>   <span class=\"kw3\">use</span> <span class=\"kw3\">type</span> TZ.<span class=\"me1\">Time_Offset</span>;<br/>\u00a0<br/>   Time_Zone_Offset\u00a0: <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Time_Zone_Name_T<span class=\"br0\">)</span> <span class=\"kw3\">of</span> TZ.<span class=\"me1\">Time_Offset</span>\u00a0:=<br/>     <span class=\"br0\">(</span>EST =&gt; -<span class=\"nu0\">5</span> * <span class=\"nu0\">60</span>,<br/>      Lisbon =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>   Period_Offset\u00a0: <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Period_T<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Natural\u00a0:=<br/>     <span class=\"br0\">(</span>AM =&gt; <span class=\"nu0\">0</span>,<br/>      PM =&gt; <span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> Month_Name_IO <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Enumeration_IO</span> <span class=\"br0\">(</span>Month_Name_T<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> Time_Zone_Name_IO <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Enumeration_IO</span> <span class=\"br0\">(</span>Time_Zone_Name_T<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> Period_IO <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Enumeration_IO</span> <span class=\"br0\">(</span>Period_T<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> Std <span class=\"kw3\">renames</span> Ada.<span class=\"me1\">Calendar</span>;<br/>   <span class=\"kw3\">use</span> <span class=\"kw3\">type</span> Std.<span class=\"me1\">Time</span>;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> Fmt <span class=\"kw3\">renames</span> Std.<span class=\"me1\">Formatting</span>;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> To_Number <span class=\"br0\">(</span>Name\u00a0: Month_Name_T<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Std.<span class=\"me1\">Month_Number</span> <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">return</span> Std.<span class=\"me1\">Month_Number</span> <span class=\"br0\">(</span>Month_Name_T'Pos <span class=\"br0\">(</span>Name<span class=\"br0\">)</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span>;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> To_Time <span class=\"br0\">(</span>S\u00a0: String<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Std.<span class=\"me1\">Time</span> <span class=\"kw1\">is</span><br/>      Month\u00a0: Month_Name_T;<br/>      Day\u00a0: Std.<span class=\"me1\">Day_Number</span>;<br/>      Year\u00a0: Std.<span class=\"me1\">Year_Number</span>;<br/>      Hour\u00a0: Fmt.<span class=\"me1\">Hour_Number</span>;<br/>      Minute\u00a0: Fmt.<span class=\"me1\">Minute_Number</span>;<br/>      Period\u00a0: Period_T;<br/>      Time_Zone\u00a0: Time_Zone_Name_T;<br/>      I\u00a0: Natural;<br/>   <span class=\"kw1\">begin</span><br/>      Month_Name_IO.<span class=\"me1\">Get</span><br/>        <span class=\"br0\">(</span>From =&gt; S, Item =&gt; Month, Last =&gt; I<span class=\"br0\">)</span>;<br/>      Ada.<span class=\"me1\">Integer_Text_IO</span>.<span class=\"me1\">Get</span><br/>        <span class=\"br0\">(</span>From =&gt; S <span class=\"br0\">(</span>I + <span class=\"nu0\">1</span> .. <span class=\"me1\">S</span>'Last<span class=\"br0\">)</span>, Item =&gt; Day, Last =&gt; I<span class=\"br0\">)</span>;<br/>      Ada.<span class=\"me1\">Integer_Text_IO</span>.<span class=\"me1\">Get</span><br/>        <span class=\"br0\">(</span>From =&gt; S <span class=\"br0\">(</span>I + <span class=\"nu0\">1</span> .. <span class=\"me1\">S</span>'Last<span class=\"br0\">)</span>, Item =&gt; Year, Last =&gt; I<span class=\"br0\">)</span>;<br/>      Ada.<span class=\"me1\">Integer_Text_IO</span>.<span class=\"me1\">Get</span><br/>        <span class=\"br0\">(</span>From =&gt; S <span class=\"br0\">(</span>I + <span class=\"nu0\">1</span> .. <span class=\"me1\">S</span>'Last<span class=\"br0\">)</span>, Item =&gt; Hour, Last =&gt; I<span class=\"br0\">)</span>;<br/>      Ada.<span class=\"me1\">Integer_Text_IO</span>.<span class=\"me1\">Get</span><br/>        <span class=\"br0\">(</span>From =&gt; S <span class=\"br0\">(</span>I + <span class=\"nu0\">2</span> .. <span class=\"me1\">S</span>'Last<span class=\"br0\">)</span>, Item =&gt; Minute, Last =&gt; I<span class=\"br0\">)</span>;<br/>         <span class=\"co1\">--  here we start 2 chars down to skip the ':'</span><br/>      Period_IO.<span class=\"me1\">Get</span><br/>        <span class=\"br0\">(</span>From =&gt; S <span class=\"br0\">(</span>I + <span class=\"nu0\">1</span> .. <span class=\"me1\">S</span>'Last<span class=\"br0\">)</span>, Item =&gt; Period, Last =&gt; I<span class=\"br0\">)</span>;<br/>      Time_Zone_Name_IO.<span class=\"me1\">Get</span><br/>        <span class=\"br0\">(</span>From =&gt; S <span class=\"br0\">(</span>I + <span class=\"nu0\">1</span> .. <span class=\"me1\">S</span>'Last<span class=\"br0\">)</span>, Item =&gt; Time_Zone, Last =&gt; I<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">return</span> Fmt.<span class=\"me1\">Time_Of</span><br/>        <span class=\"br0\">(</span>Year =&gt; Year,<br/>         Month =&gt; To_Number <span class=\"br0\">(</span>Month<span class=\"br0\">)</span>,<br/>         Day =&gt; Day,<br/>         Hour =&gt; Hour + Period_Offset <span class=\"br0\">(</span>Period<span class=\"br0\">)</span>,<br/>         Minute =&gt; Minute,<br/>         Second =&gt; <span class=\"nu0\">0</span>,<br/>         Time_Zone =&gt; Time_Zone_Offset <span class=\"br0\">(</span>Time_Zone<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span>;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Img<br/>     <span class=\"br0\">(</span>Date\u00a0: Std.<span class=\"me1\">Time</span>; Zone\u00a0: Time_Zone_Name_T<span class=\"br0\">)</span> <span class=\"kw1\">return</span> String <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">return</span><br/>         Fmt.<span class=\"me1\">Image</span> <span class=\"br0\">(</span>Date =&gt; Date, Time_Zone =&gt; Time_Zone_Offset <span class=\"br0\">(</span>Zone<span class=\"br0\">)</span><span class=\"br0\">)</span> &amp;<br/>         <span class=\"st0\">\" \"</span> &amp; Time_Zone_Name_T'Image <span class=\"br0\">(</span>Zone<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span>;<br/>\u00a0<br/>   T1, T2\u00a0: Std.<span class=\"me1\">Time</span>;<br/>   <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw1\">begin</span><br/>   T1\u00a0:= To_Time <span class=\"br0\">(</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"br0\">)</span>;<br/>   T2\u00a0:= T1 + <span class=\"nu0\">12.0</span> * <span class=\"nu0\">60.0</span> * <span class=\"nu0\">60.0</span>; <br/>   Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"T1 =&gt; \"</span> &amp; Img <span class=\"br0\">(</span>T1, EST<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" = \"</span> &amp; Img <span class=\"br0\">(</span>T1, Lisbon<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"T2 =&gt; \"</span> &amp; Img <span class=\"br0\">(</span>T2, EST<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" = \"</span> &amp; Img <span class=\"br0\">(</span>T2, Lisbon<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span>;</pre>"}, {"lang": "AppleScript", "loc": 2, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">set</span> x <span class=\"kw3\">to</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/><span class=\"kw3\">return</span> <span class=\"br0\">(</span>date x<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span> <span class=\"sy0\">*</span> <span class=\"kw1\">hours</span></pre>"}, {"lang": "AutoHotkey", "loc": 65, "block": "<pre class=\"autohotkey highlighted_source\">DateString <span class=\"sy0\">:=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>\u00a0<br/><span class=\"co1\">; split the given string with RegExMatch</span><br/>Needle <span class=\"sy0\">:=</span> <span class=\"st0\">\"^(?P&lt;mm&gt;\\S*) (?P&lt;d&gt;\\S*) (?P&lt;y&gt;\\S*) (?P&lt;t&gt;\\S*) (?P&lt;tz&gt;\\S*)$\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/RegExMatch.htm\"><span class=\"kw3\">RegExMatch</span></a><span class=\"br0\">(</span>DateString<span class=\"sy0\">,</span> Needle<span class=\"sy0\">,</span> $<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; split the time with RegExMatch</span><br/>Needle <span class=\"sy0\">:=</span> <span class=\"st0\">\"^(?P&lt;h&gt;\\d+):(?P&lt;min&gt;\\d+)(?P&lt;xm&gt;[amp]+)$\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/RegExMatch.htm\"><span class=\"kw3\">RegExMatch</span></a><span class=\"br0\">(</span>$t<span class=\"sy0\">,</span> Needle<span class=\"sy0\">,</span> $<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; convert am/pm to 24h format</span><br/>$h <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>$xm <span class=\"sy0\">=</span> <span class=\"st0\">\"am\"</span><span class=\"br0\">)</span>\u00a0? <span class=\"nu0\">0</span>\u00a0: <span class=\"nu0\">12</span><br/>\u00a0<br/><span class=\"co1\">; knitting YYYYMMDDHH24MI format</span><br/>_YYYY <span class=\"sy0\">:=</span> $y<br/>_MM   <span class=\"sy0\">:=</span> Get_MonthNr<span class=\"br0\">(</span>$mm<span class=\"br0\">)</span><br/>_DD   <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"00\"</span> $d<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"co1\">; last 2 chars</span><br/>_HH24 <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"00\"</span> $h<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"co1\">; last 2 chars</span><br/>_MI   <span class=\"sy0\">:=</span> $min<br/>YYYYMMDDHH24MI <span class=\"sy0\">:=</span> _YYYY _MM _DD _HH24 _MI<br/>\u00a0<br/><span class=\"co1\">; add 12 hours as requested</span><br/><a href=\"http://www.autohotkey.com/docs/commands/EnvAdd.htm\"><span class=\"kw3\">EnvAdd</span></a><span class=\"sy0\">,</span> YYYYMMDDHH24MI<span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> Hours<br/><a href=\"http://www.autohotkey.com/docs/commands/FormatTime.htm\"><span class=\"kw3\">FormatTime</span></a><span class=\"sy0\">,</span> HumanReadable<span class=\"sy0\">,</span> <span class=\"re0\">%YYYYMMDDHH24MI%</span><span class=\"sy0\">,</span> d<span class=\"sy0\">/</span>MMM<span class=\"sy0\">/</span>yyyy  HH:mm<br/>\u00a0<br/><span class=\"co1\">; add 5 hours to convert to different timezone (GMT)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/EnvAdd.htm\"><span class=\"kw3\">EnvAdd</span></a><span class=\"sy0\">,</span> YYYYMMDDHH24MI<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> Hours<br/><a href=\"http://www.autohotkey.com/docs/commands/FormatTime.htm\"><span class=\"kw3\">FormatTime</span></a><span class=\"sy0\">,</span> HumanReadable_GMT<span class=\"sy0\">,</span> <span class=\"re0\">%YYYYMMDDHH24MI%</span><span class=\"sy0\">,</span> d<span class=\"sy0\">/</span>MMM<span class=\"sy0\">/</span>yyyy  HH:mm<br/>\u00a0<br/><span class=\"co1\">; output</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span>\u00a0% <span class=\"st0\">\"Given: \"</span> DateString <span class=\"st0\">\"`n`n\"</span><br/>        <span class=\"sy0\">.</span> <span class=\"st0\">\"12 hours later:`n\"</span><br/>        <span class=\"sy0\">.</span> <span class=\"st0\">\"(\"</span> $tz <span class=\"st0\">\"):`t\"</span> HumanReadable <span class=\"st0\">\"h`n\"</span><br/>        <span class=\"sy0\">.</span> <span class=\"st0\">\"(GMT):`t\"</span> HumanReadable_GMT <span class=\"st0\">\"h`n\"</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">;---------------------------------------------------------------------------</span><br/>Get_MonthNr<span class=\"br0\">(</span>Month<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">; convert named month to 2-digit number</span><br/><span class=\"co1\">;---------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"January\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"01\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"February\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"02\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"March\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"03\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"April\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"04\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"May\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"05\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"June\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"06\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"July\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"07\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"August\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"08\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"September\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"09\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"October\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"10\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"November\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"11\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Month <span class=\"sy0\">=</span> <span class=\"st0\">\"December\"</span><span class=\"br0\">)</span><br/>        Result <span class=\"sy0\">:=</span> <span class=\"st0\">\"12\"</span><br/>    <span class=\"kw1\">Return</span><span class=\"sy0\">,</span> Result<br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 20, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f DATE_MANIPULATION.AWK</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    fmt = <span class=\"st0\">\"%a\u00a0%Y-%m-%d\u00a0%H:%M:%S\u00a0%Z\"</span> <span class=\"co1\"># DAY YYYY-MM-DD HH:MM:SS TZ</span><br/>    <span class=\"kw4\">split</span><span class=\"br0\">(</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span>,arr,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>    M = <span class=\"br0\">(</span><span class=\"kw4\">index</span><span class=\"br0\">(</span><span class=\"st0\">\"JanFebMarAprMayJunJulAugSepOctNovDec\"</span>,<span class=\"kw4\">substr</span><span class=\"br0\">(</span>arr<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy3\">/</span> <span class=\"nu0\">3</span><br/>    D = arr<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>    Y = arr<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><br/>    hhmm = arr<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>    hh = <span class=\"kw4\">substr</span><span class=\"br0\">(</span>hhmm,<span class=\"nu0\">1</span>,<span class=\"kw4\">index</span><span class=\"br0\">(</span>hhmm,<span class=\"st0\">\":\"</span><span class=\"br0\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">0</span><br/>    mm = <span class=\"kw4\">substr</span><span class=\"br0\">(</span>hhmm,<span class=\"kw4\">index</span><span class=\"br0\">(</span>hhmm,<span class=\"st0\">\":\"</span><span class=\"br0\">)</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>hh <span class=\"sy2\">==</span> <span class=\"nu0\">12</span> <span class=\"sy1\">&amp;&amp;</span> hhmm <span class=\"sy4\">~</span> <span class=\"sy3\">/</span>am<span class=\"sy3\">/</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> hh = <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>hh <span class=\"sy2\">&lt;</span> <span class=\"nu0\">12</span> <span class=\"sy1\">&amp;&amp;</span> hhmm <span class=\"sy4\">~</span> <span class=\"sy3\">/</span>pm<span class=\"sy3\">/</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> hh <span class=\"sy3\">+</span>= <span class=\"nu0\">12</span> <span class=\"br0\">}</span><br/>    time = mktime<span class=\"br0\">(</span><span class=\"kw4\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\u00a0%d\u00a0%d\u00a0%d\u00a0%d\u00a0%d\"</span>,Y,M,D,hh,mm,<span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"time:   \u00a0%s<span class=\"es0\">\\n</span>\"</span>,strftime<span class=\"br0\">(</span>fmt,time<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    time <span class=\"sy3\">+</span>= <span class=\"nu0\">12</span><span class=\"sy3\">*</span><span class=\"nu0\">60</span><span class=\"sy3\">*</span><span class=\"nu0\">60</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"+12 hrs:\u00a0%s<span class=\"es0\">\\n</span>\"</span>,strftime<span class=\"br0\">(</span>fmt,time<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Batch File", "loc": 83, "block": "<pre class=\"dos highlighted_source\">\u00a0<br/><span class=\"sy0\">@</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> off <br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>:Date_Manipulation \"March 7 2009 7:30pm EST\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>:Date_Manipulation \"February 28 2009 2:28pm EST\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>:Date_Manipulation \"February 29 2000 9:52pm EST\"<br/>pause<span class=\"sy0\">&gt;</span><a href=\"http://www.ss64.com/nt/nul.html\"><span class=\"kw4\">nul</span></a><br/><a href=\"http://www.ss64.com/nt/exit.html\"><span class=\"kw1\">exit</span></a> /b<br/>\u00a0<br/>:<span class=\"re0\">Date_Manipulation</span><br/><a href=\"http://www.ss64.com/nt/setlocal.html\"><span class=\"kw3\">setlocal</span></a> enabledelayedexpansion<br/><span class=\"co2\"><br/>:: These are the arrays we'll be using</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> daysinmonth=31 28 31 30 31 30 31 31 30 31 30 31<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> namesofmonths=January February March April May June July August September October November December<br/><span class=\"co2\"><br/>:: Separate the date given (\"%1\") into respective variables. Note: For now the \"am/pm\" is attached to\u00a0%minutes% </span><br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /f \"tokens=1,2,3,4,5,6 delims=: \" <span class=\"sy0\">%%</span><span class=\"re3\">i</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>\"<span class=\"sy0\">%</span><span class=\"re3\">~1</span>\"<span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> monthname=<span class=\"sy0\">%%</span><span class=\"re3\">i</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> day=<span class=\"sy0\">%%</span><span class=\"re3\">j</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> year=<span class=\"sy0\">%%</span><span class=\"re3\">k</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> hour=<span class=\"sy0\">%%</span><span class=\"re3\">l</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> minutes=<span class=\"sy0\">%%</span><span class=\"re3\">m</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> timezone=<span class=\"sy0\">%%</span><span class=\"re3\">n</span><br/><span class=\"sy0\">)</span><br/><span class=\"co2\"><br/>:: Separate the am/pm and the minutes value into different variables</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> ampm=<span class=\"sy0\">%</span><span class=\"re3\">minutes:~2,2</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> minutes=<span class=\"sy0\">%</span><span class=\"re3\">minutes:~0,2</span><span class=\"sy0\">%</span><br/><span class=\"co2\"><br/>:: Check if the day needs to be changed based on the status of \"am/pm\"</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">ampm</span><span class=\"sy0\">%</span>==pm <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a day+=1<br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> ampm=am<br/><span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/else.html\"><span class=\"kw1\">else</span></a> <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> ampm=pm<br/><span class=\"sy0\">)</span><br/><span class=\"co2\"><br/>:: Get the number corresponding to the month given</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> tempcount=0<br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> <span class=\"sy0\">%%</span><span class=\"re3\">i</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(%</span><span class=\"re3\">namesofmonths</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a tempcount+=1<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">monthname</span><span class=\"sy0\">%</span>==<span class=\"sy0\">%%</span><span class=\"re3\">i</span> <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> monthcount=<span class=\"sy0\">!</span><span class=\"re2\">tempcount</span><span class=\"sy0\">!</span><br/><span class=\"sy0\">)</span><br/><span class=\"co2\"><br/>:: As this step may may be needed to repeat if the month needs to be changed, we add a label here</span><br/>:<span class=\"re0\">getdaysinthemonth</span><br/><span class=\"co2\">:: Work out how many days are in the current month</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> tempcount=0<br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> <span class=\"sy0\">%%</span><span class=\"re3\">i</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(%</span><span class=\"re3\">daysinmonth</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a tempcount+=1<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">monthcount</span><span class=\"sy0\">%</span>==<span class=\"sy0\">!</span><span class=\"re2\">tempcount</span><span class=\"sy0\">!</span> <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> daysinthemonth=<span class=\"sy0\">%%</span><span class=\"re3\">i</span><br/><span class=\"sy0\">)</span><br/><span class=\"co2\"><br/>:: If the month is February, check if it is a leap year. If so, add 1 to the amount of days in the month</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">daysinthemonth</span><span class=\"sy0\">%</span>==28 <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a leapyearcheck=<span class=\"sy0\">%</span><span class=\"re3\">year</span><span class=\"sy0\">%</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 4<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">!</span><span class=\"re2\">leapyearcheck</span><span class=\"sy0\">!</span>==0 <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a daysinthemonth+=1<br/><span class=\"sy0\">)</span><br/><span class=\"co2\"><br/>:: Check if the month needs to be changed based on the current day and how many days there are in the current month</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">day</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/gtr.html\"><span class=\"kw2\">gtr</span></a> <span class=\"sy0\">%</span><span class=\"re3\">daysinthemonth</span><span class=\"sy0\">%</span> <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a monthcount+=1<br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> day=1<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">!</span><span class=\"re2\">monthcount</span><span class=\"sy0\">!</span> <a href=\"http://www.ss64.com/nt/gtr.html\"><span class=\"kw2\">gtr</span></a> 12 <span class=\"sy0\">(</span><br/>    <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> monthcount=1<br/>    <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a year+=1<br/>  <span class=\"sy0\">)</span><br/>  <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> getdaysinthemonth<br/><span class=\"sy0\">)</span><br/><span class=\"co2\">:: Everything from\u00a0:getdaysinthemonth will be repeated once if the month needs to be changed</span><br/><span class=\"co2\"><br/>:: This block is only required to change the name of the month for the output, however as you have\u00a0%monthcount%, this is optional</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> tempcount=0<br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> <span class=\"sy0\">%%</span><span class=\"re3\">i</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(%</span><span class=\"re3\">namesofmonths</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a tempcount+=1<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">monthcount</span><span class=\"sy0\">%</span>==<span class=\"sy0\">!</span><span class=\"re2\">tempcount</span><span class=\"sy0\">!</span> <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> monthname=<span class=\"sy0\">%%</span><span class=\"re3\">i</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Original    - <span class=\"sy0\">%</span><span class=\"re3\">~1</span><br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Manipulated - <span class=\"sy0\">%</span><span class=\"re3\">monthname</span><span class=\"sy0\">%</span> <span class=\"sy0\">%</span><span class=\"re3\">day</span><span class=\"sy0\">%</span> <span class=\"sy0\">%</span><span class=\"re3\">year</span><span class=\"sy0\">%</span> <span class=\"sy0\">%</span><span class=\"re3\">hour</span><span class=\"sy0\">%</span>:<span class=\"sy0\">%</span><span class=\"re3\">minutes</span><span class=\"sy0\">%%</span><span class=\"re3\">ampm</span><span class=\"sy0\">%</span> <span class=\"sy0\">%</span><span class=\"re3\">timezone</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/exit.html\"><span class=\"kw1\">exit</span></a> /b<br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 33, "block": "<pre class=\"text highlighted_source\">      INSTALL @lib$+\"DATELIB\"<br/>\u00a0<br/>      date$ = \"March 7 2009 7:30pm EST\"<br/>\u00a0<br/>      mjd% = FN_readdate(date$, \"mdy\", 0)<br/>      colon% = INSTR(date$, \":\")<br/>      hours% = VAL(MID$(date$, colon%-2))<br/>      IF INSTR(date$, \"am\") IF hours%=12  hours% -= 12<br/>      IF INSTR(date$, \"pm\") IF hours%&lt;&gt;12 hours% += 12<br/>      mins% = VAL(MID$(date$, colon%+1))<br/>\u00a0<br/>      now% = mjd% * 1440 + hours% * 60 + mins%<br/>      new% = now% + 12 * 60\u00a0: REM 12 hours later<br/>\u00a0<br/>      PRINT FNformat(new%, \"EST\")<br/>      PRINT FNformat(new% + 5 * 60, \"GMT\")<br/>      PRINT FNformat(new% - 3 * 60, \"PST\")<br/>      END<br/>\u00a0<br/>      DEF FNformat(datetime%, zone$)<br/>      LOCAL mjd%, hours%, mins%, ampm$<br/>      mjd% = datetime% DIV 1440<br/>      hours% = (datetime% DIV 60) MOD 24<br/>      mins% = datetime% MOD 60<br/>\u00a0<br/>      IF hours% &lt; 12 THEN ampm$ = \"am\" ELSE ampm$ = \"pm\"<br/>      IF hours% = 0 hours% += 12<br/>      IF hours% &gt; 12 hours% -= 12<br/>\u00a0<br/>      = FN_date$(mjd%, \"MMMM d yyyy\") + \" \" + STR$(hours%) + \\<br/>      \\ \":\" + RIGHT$(\"0\"+STR$(mins%), 2) + ampm$ + \" \" + zone$<br/>      ENDPROC<br/>\u00a0</pre>"}, {"lang": "C", "loc": 19, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">struct</span> tm ts<span class=\"sy0\">;</span><br/>  time_t t<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>d <span class=\"sy0\">=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  strptime<span class=\"br0\">(</span>d<span class=\"sy0\">,</span> <span class=\"st0\">\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%Z\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>ts<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"coMULTI\">/* ts.tm_hour += 12; instead of t += 12*60*60<br/>     works too. */</span><br/>  t <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/mktime.html\"><span class=\"kw3\">mktime</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>ts<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  t <span class=\"sy0\">+=</span> <span class=\"nu0\">12</span><span class=\"sy0\">*</span><span class=\"nu0\">60</span><span class=\"sy0\">*</span><span class=\"nu0\">60</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/ctime.html\"><span class=\"kw3\">ctime</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> EXIT_SUCCESS<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 14, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        CultureInfo ci<span class=\"sy0\">=</span>CultureInfo<span class=\"sy0\">.</span><span class=\"me1\">CreateSpecificCulture</span><span class=\"br0\">(</span><span class=\"st0\">\"en-US\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">string</span> dateString <span class=\"sy0\">=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">string</span> format <span class=\"sy0\">=</span> <span class=\"st0\">\"MMMM d yyyy h:mmtt z\"</span><span class=\"sy0\">;</span><br/>        DateTime myDateTime <span class=\"sy0\">=</span> DateTime<span class=\"sy0\">.</span><span class=\"me1\">ParseExact</span><span class=\"br0\">(</span>dateString<span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">\"EST\"</span>,<span class=\"st0\">\"+6\"</span><span class=\"br0\">)</span>,format,ci<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>        DateTime newDateTime <span class=\"sy0\">=</span> myDateTime<span class=\"sy0\">.</span><span class=\"me1\">AddHours</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">AddDays</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>newDateTime<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>format<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">\"-5\"</span>,<span class=\"st0\">\"EST\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">//probably not the best way to do this</span><br/>\u00a0<br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 68, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;boost/date_time/local_time/local_time.hpp&gt;</span><br/><span class=\"co2\">#include &lt;sstream&gt;</span><br/><span class=\"co2\">#include &lt;boost/date_time/gregorian/gregorian.hpp&gt;</span><br/><span class=\"co2\">#include &lt;vector&gt;</span><br/><span class=\"co2\">#include &lt;boost/algorithm/string.hpp&gt;</span><br/><span class=\"co2\">#include &lt;cstdlib&gt;</span><br/><span class=\"co2\">#include &lt;locale&gt;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> datestring <span class=\"br0\">(</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//we must first parse the date string into a date , a time and a time</span><br/>   <span class=\"co1\">//zone part , to take account of present restrictions in the input facets</span><br/>   <span class=\"co1\">//of the Boost::DateTime library used for this example</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy1\">&gt;</span> elements <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//parsing the date string</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">split</span><span class=\"br0\">(</span> elements , datestring , boost<span class=\"sy4\">::</span><span class=\"me2\">is_any_of</span><span class=\"br0\">(</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> datepart <span class=\"sy1\">=</span> elements<span class=\"br0\">[</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span> <span class=\"sy2\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy2\">+</span> <span class=\"st0\">\"0\"</span> <span class=\"sy2\">+</span> elements<span class=\"br0\">[</span> <span class=\"nu0\">1</span> <span class=\"br0\">]</span> <span class=\"sy2\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy2\">+</span><br/>      elements<span class=\"br0\">[</span> <span class=\"nu0\">2</span> <span class=\"br0\">]</span> <span class=\"sy4\">;</span> <span class=\"co1\">//we must add 0 to avoid trouble with the boost::date_input format strings</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> timepart <span class=\"sy1\">=</span> elements<span class=\"br0\">[</span> <span class=\"nu0\">3</span> <span class=\"br0\">]</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> timezone <span class=\"sy1\">=</span> elements<span class=\"br0\">[</span> <span class=\"nu0\">4</span> <span class=\"br0\">]</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> meridians<span class=\"br0\">[</span> <span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">'a'</span> , <span class=\"st0\">'p'</span> <span class=\"br0\">}</span> <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//we have to find out if the time is am or pm, to change the hours appropriately</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy4\">::</span><span class=\"me2\">size_type</span> found <span class=\"sy1\">=</span> timepart.<span class=\"me1\">find_first_of</span><span class=\"br0\">(</span> meridians, <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> twelve_hour <span class=\"br0\">(</span> timepart.<span class=\"me1\">substr</span><span class=\"br0\">(</span> found , <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   timepart <span class=\"sy1\">=</span> timepart.<span class=\"me1\">substr</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> , found <span class=\"br0\">)</span> <span class=\"sy4\">;</span> <span class=\"co1\">//we chop off am or pm</span><br/>   elements.<span class=\"me1\">clear</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">split</span><span class=\"br0\">(</span> elements , timepart , boost<span class=\"sy4\">::</span><span class=\"me2\">is_any_of</span> <span class=\"br0\">(</span> <span class=\"st0\">\":\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw4\">long</span> hour <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"kw3\">atol</span><span class=\"br0\">(</span> <span class=\"br0\">(</span>elements.<span class=\"me1\">begin</span><span class=\"br0\">(</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>c_str<span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><span class=\"co1\">// hours in the string</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> twelve_hour <span class=\"sy1\">==</span> <span class=\"st0\">\"p\"</span> <span class=\"br0\">)</span> <span class=\"co1\">//it's post meridian, we're converting to 24-hour-clock</span><br/>      hour <span class=\"sy2\">+</span><span class=\"sy1\">=</span> <span class=\"nu0\">12</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw4\">long</span> minute <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"kw3\">atol</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> elements.<span class=\"me1\">begin</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>c_str<span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span> <br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">local_time</span><span class=\"sy4\">::</span><span class=\"me2\">tz_database</span> tz_db <span class=\"sy4\">;</span><br/>   tz_db.<span class=\"me1\">load_from_file</span><span class=\"br0\">(</span> <span class=\"st0\">\"/home/ulrich/internetpages/date_time_zonespec.csv\"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//according to the time zone database, this corresponds to one possible EST time zone</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">local_time</span><span class=\"sy4\">::</span><span class=\"me2\">time_zone_ptr</span> dyc <span class=\"sy1\">=</span> tz_db.<span class=\"me1\">time_zone_from_region</span><span class=\"br0\">(</span> <span class=\"st0\">\"America/New_York\"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//this is the string input format to initialize the date field </span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">gregorian</span><span class=\"sy4\">::</span><span class=\"me2\">date_input_facet</span> <span class=\"sy2\">*</span>f <span class=\"sy1\">=</span><br/>      <span class=\"kw3\">new</span> boost<span class=\"sy4\">::</span><span class=\"me2\">gregorian</span><span class=\"sy4\">::</span><span class=\"me2\">date_input_facet</span><span class=\"br0\">(</span> <span class=\"st0\">\"%B\u00a0%d\u00a0%Y\"</span>  <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">stringstream</span> ss <span class=\"sy4\">;</span><br/>   ss <span class=\"sy1\">&lt;&lt;</span> datepart <span class=\"sy4\">;</span><br/>   ss.<span class=\"me1\">imbue</span><span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">locale</span><span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">locale</span><span class=\"sy4\">::</span><span class=\"me2\">classic</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> , f <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">gregorian</span><span class=\"sy4\">::</span><span class=\"me2\">date</span> d <span class=\"sy4\">;</span><br/>   ss <span class=\"sy1\">&gt;&gt;</span> d <span class=\"sy4\">;</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">posix_time</span><span class=\"sy4\">::</span><span class=\"me2\">time_duration</span> td <span class=\"br0\">(</span>  hour , minute , <span class=\"nu0\">0</span>  <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//that's how we initialize the New York local time , by using date and adding</span><br/>   <span class=\"co1\">//time duration with values coming from parsed date input string</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">local_time</span><span class=\"sy4\">::</span><span class=\"me2\">local_date_time</span> lt <span class=\"br0\">(</span> d , td ,  dyc ,<br/>\t boost<span class=\"sy4\">::</span><span class=\"me2\">local_time</span><span class=\"sy4\">::</span><span class=\"me2\">local_date_time</span><span class=\"sy4\">::</span><span class=\"me2\">NOT_DATE_TIME_ON_ERROR</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"local time: \"</span> <span class=\"sy1\">&lt;&lt;</span> lt <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span> <span class=\"sy4\">;</span><br/>   ss.<span class=\"me1\">str</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   ss <span class=\"sy1\">&lt;&lt;</span> lt <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//we have to add 12 hours, so a new time duration object is created</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">posix_time</span><span class=\"sy4\">::</span><span class=\"me2\">time_duration</span> td2 <span class=\"br0\">(</span><span class=\"nu0\">12</span> , <span class=\"nu0\">0</span> , <span class=\"nu0\">0</span> , <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">local_time</span><span class=\"sy4\">::</span><span class=\"me2\">local_date_time</span> ltlater <span class=\"sy1\">=</span> lt <span class=\"sy2\">+</span> td2 <span class=\"sy4\">;</span> <span class=\"co1\">//local time 12 hours later</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">gregorian</span><span class=\"sy4\">::</span><span class=\"me2\">date_facet</span> <span class=\"sy2\">*</span>f2 <span class=\"sy1\">=</span><br/>      <span class=\"kw3\">new</span> boost<span class=\"sy4\">::</span><span class=\"me2\">gregorian</span><span class=\"sy4\">::</span><span class=\"me2\">date_facet</span><span class=\"br0\">(</span> <span class=\"st0\">\"%B\u00a0%d\u00a0%Y ,\u00a0%R\u00a0%Z\"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>.<span class=\"me1\">imbue</span><span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">locale</span><span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">locale</span><span class=\"sy4\">::</span><span class=\"me2\">classic</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> , f2 <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"12 hours after \"</span> <span class=\"sy1\">&lt;&lt;</span> ss.<span class=\"me1\">str</span><span class=\"br0\">(</span> <span class=\"br0\">)</span>  <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" it is \"</span> <span class=\"sy1\">&lt;&lt;</span> ltlater <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"\u00a0!<span class=\"es1\">\\n</span>\"</span> <span class=\"sy4\">;</span><br/>   <span class=\"co1\">//what's New York time in the Berlin time zone\u00a0?</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">local_time</span><span class=\"sy4\">::</span><span class=\"me2\">time_zone_ptr</span> bt <span class=\"sy1\">=</span> tz_db.<span class=\"me1\">time_zone_from_region</span><span class=\"br0\">(</span> <span class=\"st0\">\"Europe/Berlin\"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>.<span class=\"me1\">imbue</span><span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">locale</span><span class=\"br0\">(</span> <span class=\"st0\">\"de_DE.UTF-8\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span> <span class=\"co1\">//choose the output forman appropriate for the time zone</span><br/>   std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"This corresponds to \"</span> <span class=\"sy1\">&lt;&lt;</span> ltlater.<span class=\"me1\">local_time_in</span><span class=\"br0\">(</span> bt <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" in Berlin!<span class=\"es1\">\\n</span>\"</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Clojure", "loc": 11, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">import</span> java<span class=\"sy0\">.</span>util<span class=\"sy0\">.</span>Date<br/>\tjava<span class=\"sy0\">.</span>text<span class=\"sy0\">.</span>SimpleDateFormat<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> <span class=\"kw1\">time</span><span class=\"sy0\">+</span><span class=\"nu0\">12</span> <span class=\"br0\">[</span>s<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>sdf <span class=\"br0\">(</span>SimpleDateFormat<span class=\"sy0\">.</span> <span class=\"st0\">\"MMMM d yyyy h:mma zzz\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span>parse sdf s<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">.</span>getTime ,<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">+</span> , <span class=\"nu0\">43200000</span><span class=\"br0\">)</span><br/>\tlong<br/>\t<span class=\"br0\">(</span>Date<span class=\"sy0\">.</span> ,<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> , <span class=\"br0\">(</span><span class=\"sy0\">.</span><span class=\"kw1\">format</span> sdf ,<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 122, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> date-manipulation<span class=\"sy0\">.</span><br/>\u00a0<br/>       environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">configuration</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       repository<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">function</span> <span class=\"kw3\">all</span> intrinsic<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> given-<span class=\"kw3\">date</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> <span class=\"kw3\">filler</span>            <span class=\"kw3\">value</span> z<span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> date-spec<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> <span class=\"kw3\">filler</span>            <span class=\"kw3\">value</span> z<span class=\"st0\">\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%Z\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> time-struct<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-sec            <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-<span class=\"kw4\">min</span>            <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-hour           <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-mday           <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-mon            <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-year           <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-wday           <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-yday           <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-isdst          <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-gmtoff         <span class=\"kw3\">usage</span> binary-c-long<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> tm-zone           <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> scan-<span class=\"kw3\">index</span>           <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> time-t               <span class=\"kw3\">usage</span> binary-c-long<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> time-tm              <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> reform-buffer        <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">64</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> reform-<span class=\"kw4\">length</span>        <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> current-locale       <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> iso-spec             constant as <span class=\"st0\">\"YYYY-MM-DDThh:mm:ss+hh:mm\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> iso-<span class=\"kw3\">date</span>             constant as <span class=\"st0\">\"2009-03-07T19:30:00-05:00\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> date-<span class=\"kw4\">integer</span>         <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> time-<span class=\"kw4\">integer</span>         <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"strptime\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">reference</span> given-<span class=\"kw3\">date</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">reference</span> date-spec<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">reference</span> time-struct<br/>           returning scan-<span class=\"kw3\">index</span><br/>           <span class=\"kw3\">on</span> <span class=\"kw3\">exception</span><br/>               <span class=\"kw2\">display</span> <span class=\"st0\">\"error calling strptime\"</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw2\">call</span><br/>       <span class=\"kw2\">display</span> <span class=\"st0\">\"Given: \"</span> given-<span class=\"kw3\">date</span><br/>\u00a0<br/>       <span class=\"kw1\">if</span> scan-<span class=\"kw3\">index</span> <span class=\"kw3\">not</span> <span class=\"kw3\">equal</span> <span class=\"kw3\">null</span> <span class=\"kw3\">then</span><br/>           *&gt; <span class=\"kw2\">add</span> <span class=\"nu0\">12</span> hours<span class=\"sy0\">,</span> <span class=\"kw3\">and</span> reform as local<br/>           <span class=\"kw2\">call</span> <span class=\"st0\">\"mktime\"</span> <span class=\"kw3\">using</span> time-struct returning time-t<br/>           <span class=\"kw2\">add</span> <span class=\"nu0\">43200</span> <span class=\"kw2\">to</span> time-t<br/>           <span class=\"kw2\">perform</span> form-datetime<br/>\u00a0<br/>           *&gt; reformat as Pacific <span class=\"kw3\">time</span><br/>           <span class=\"kw3\">set</span> environment <span class=\"st0\">\"TZ\"</span> <span class=\"kw2\">to</span> <span class=\"st0\">\"PST8PDT\"</span><br/>           <span class=\"kw2\">call</span> <span class=\"st0\">\"tzset\"</span> returning <span class=\"kw3\">omitted</span><br/>           <span class=\"kw2\">perform</span> form-datetime<br/>\u00a0<br/>           *&gt; reformat as Greenwich <span class=\"kw4\">mean</span><br/>           <span class=\"kw3\">set</span> environment <span class=\"st0\">\"TZ\"</span> <span class=\"kw2\">to</span> <span class=\"st0\">\"GMT\"</span><br/>           <span class=\"kw2\">call</span> <span class=\"st0\">\"tzset\"</span> returning <span class=\"kw3\">omitted</span><br/>           <span class=\"kw2\">perform</span> form-datetime<br/>\u00a0<br/>\u00a0<br/>           *&gt; reformat <span class=\"kw3\">for</span> Tokyo <span class=\"kw3\">time</span><span class=\"sy0\">,</span> as seen <span class=\"kw3\">in</span> Hong Kong<br/>           <span class=\"kw3\">set</span> environment <span class=\"st0\">\"TZ\"</span> <span class=\"kw2\">to</span> <span class=\"st0\">\"Japan\"</span><br/>           <span class=\"kw2\">call</span> <span class=\"st0\">\"tzset\"</span> returning <span class=\"kw3\">omitted</span><br/>           <span class=\"kw2\">call</span> <span class=\"st0\">\"setlocale\"</span> <span class=\"kw3\">using</span> <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> <span class=\"nu0\">6</span> <span class=\"kw3\">by</span> <span class=\"kw3\">content</span> z<span class=\"st0\">\"en_HK.utf8\"</span><br/>               returning current-locale<br/>               <span class=\"kw3\">on</span> <span class=\"kw3\">exception</span><br/>                   <span class=\"kw2\">display</span> <span class=\"st0\">\"error with setlocale\"</span> <span class=\"kw3\">upon</span> syserr<br/>           end-<span class=\"kw2\">call</span><br/>           <span class=\"kw2\">move</span> z<span class=\"st0\">\"%c\"</span> <span class=\"kw2\">to</span> date-spec<br/>           <span class=\"kw2\">perform</span> form-datetime<br/>       <span class=\"kw3\">else</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"date parse error\"</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw1\">if</span><br/>\u00a0<br/>      *&gt; A more <span class=\"kw3\">standard</span> <span class=\"kw2\">COBOL</span> approach<span class=\"sy0\">,</span> based <span class=\"kw3\">on</span> ISO8601<br/>       <span class=\"kw2\">display</span> <span class=\"st0\">\"Given: \"</span> iso-<span class=\"kw3\">date</span><br/>       <span class=\"kw2\">move</span> integer-of-formatted-<span class=\"kw3\">date</span><span class=\"br0\">(</span>iso-spec<span class=\"sy0\">,</span> iso-<span class=\"kw3\">date</span><span class=\"br0\">)</span><br/>         <span class=\"kw2\">to</span> date-<span class=\"kw4\">integer</span><br/>\u00a0<br/>       <span class=\"kw2\">move</span> seconds-from-formatted-<span class=\"kw3\">time</span><span class=\"br0\">(</span>iso-spec<span class=\"sy0\">,</span> iso-<span class=\"kw3\">date</span><span class=\"br0\">)</span><br/>         <span class=\"kw2\">to</span> time-<span class=\"kw4\">integer</span><br/>\u00a0<br/>       <span class=\"kw2\">add</span> <span class=\"nu0\">43200</span> <span class=\"kw2\">to</span> time-<span class=\"kw4\">integer</span><br/>       <span class=\"kw1\">if</span> time-<span class=\"kw4\">integer</span> <span class=\"kw3\">greater</span> <span class=\"kw3\">than</span> <span class=\"nu0\">86400</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw3\">subtract</span> <span class=\"nu0\">86400</span> <span class=\"kw3\">from</span> time-<span class=\"kw4\">integer</span><br/>           <span class=\"kw2\">add</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> date-<span class=\"kw4\">integer</span><br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"kw2\">display</span> <span class=\"st0\">\"       \"</span> substitute<span class=\"br0\">(</span>formatted-datetime<span class=\"br0\">(</span>iso-spec<br/>                   date-<span class=\"kw4\">integer</span><span class=\"sy0\">,</span> time-<span class=\"kw4\">integer</span><span class=\"sy0\">,</span> -<span class=\"nu0\">300</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"T\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"/\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>       goback<span class=\"sy0\">.</span><br/>\u00a0<br/>       form-datetime<span class=\"sy0\">.</span><br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"localtime\"</span> <span class=\"kw3\">using</span> time-t returning time-tm<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"strftime\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">reference</span> reform-buffer<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> <span class=\"kw4\">length</span><span class=\"br0\">(</span>reform-buffer<span class=\"br0\">)</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">reference</span> date-spec<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> time-tm<br/>           returning reform-<span class=\"kw4\">length</span><br/>           <span class=\"kw3\">on</span> <span class=\"kw3\">exception</span><br/>               <span class=\"kw2\">display</span> <span class=\"st0\">\"error calling strftime\"</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw2\">call</span><br/>       <span class=\"kw1\">if</span> reform-<span class=\"kw4\">length</span> &gt; <span class=\"nu0\">0</span> <span class=\"kw3\">and</span> &lt;<span class=\"sy0\">=</span> <span class=\"kw4\">length</span><span class=\"br0\">(</span>reform-buffer<span class=\"br0\">)</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"       \"</span> reform-buffer<span class=\"br0\">(</span><span class=\"nu0\">1</span>\u00a0: reform-<span class=\"kw4\">length</span><span class=\"br0\">)</span><br/>       <span class=\"kw3\">else</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"date format error\"</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> date-manipulation<span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 33, "block": "<pre class=\"d highlighted_source\">\u00a0<br/><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">format</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">datetime</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">enum</span> months <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">\"January\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"February\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"March\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"April\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"May\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"June\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"July\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"August\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"September\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"October\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"November\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"December\"</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"co1\">// input\t</span><br/>  <span class=\"kw4\">string</span> date <span class=\"sy0\">=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// parsing date string to integer values</span><br/>  <span class=\"kw4\">string</span> month<span class=\"sy0\">,</span> md<span class=\"sy0\">,</span> tz<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> day<span class=\"sy0\">,</span> year<span class=\"sy0\">,</span> hour<span class=\"sy0\">,</span> minute<span class=\"sy0\">;</span><br/>  date.<span class=\"me1\">formattedRead</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\u00a0%d\u00a0%d\u00a0%d:%d%s\u00a0%s\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>month<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>day<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>year<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>hour<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>minute<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>md<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>tz<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> mon <span class=\"sy0\">=</span> <span class=\"kw2\">cast</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> months.<span class=\"me1\">countUntil</span><span class=\"br0\">(</span>month<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// convert to 24-hour </span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>md <span class=\"sy0\">==</span> <span class=\"st0\">\"pm\"</span><span class=\"br0\">)</span><br/>    hour <span class=\"sy0\">+=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// create date from integer</span><br/>  DateTime dt <span class=\"sy0\">=</span> DateTime<span class=\"br0\">(</span>year<span class=\"sy0\">,</span> mon<span class=\"sy0\">,</span> day<span class=\"sy0\">,</span> hour<span class=\"sy0\">,</span> minute<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// output</span><br/>  writeln<span class=\"br0\">(</span>dt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  writeln<span class=\"br0\">(</span>dt <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>.<span class=\"me1\">hours</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Delphi", "loc": 83, "block": "<pre class=\"delphi highlighted_source\">\u00a0<br/><span class=\"kw1\">program</span> DateManipulation<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  SysUtils<span class=\"sy1\">,</span><br/>  DateUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> MonthNumber<span class=\"br0\">(</span>aMonth<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Word</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"co1\">//Convert a string value representing the month</span><br/>  <span class=\"co1\">//to its corresponding numerical value</span><br/>  <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'January'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'February'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">2</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'March'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">3</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'April'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">4</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'May'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">5</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'June'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">6</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'July'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">7</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'August'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">8</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'September'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">9</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'October'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">10</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'November'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">11</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> aMonth <span class=\"sy3\">=</span> <span class=\"st0\">'December'</span> <span class=\"kw1\">then</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">12</span><br/>  <span class=\"kw1\">else</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">12</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> ParseString<span class=\"br0\">(</span>aDateTime<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">TDateTime</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  strDay<span class=\"sy1\">,</span><br/>  strMonth<span class=\"sy1\">,</span><br/>  strYear<span class=\"sy1\">,</span><br/>  strTime<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/>  iDay<span class=\"sy1\">,</span><br/>  iMonth<span class=\"sy1\">,</span><br/>  iYear<span class=\"sy1\">:</span> <span class=\"kw4\">Word</span><span class=\"sy1\">;</span><br/>  TimePortion<span class=\"sy1\">:</span> <span class=\"kw4\">TDateTime</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"co1\">//Decode the month from the given string</span><br/>  strMonth<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Copy</span><span class=\"br0\">(</span>aDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Pos</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> aDateTime<span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Delete</span><span class=\"br0\">(</span>aDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Pos</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> aDateTime<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  iMonth<span class=\"sy1\">:</span><span class=\"sy3\">=</span> MonthNumber<span class=\"br0\">(</span>strMonth<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">//Decode the day from the given string</span><br/>  strDay<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Copy</span><span class=\"br0\">(</span>aDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Pos</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> aDateTime<span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Delete</span><span class=\"br0\">(</span>aDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Pos</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> aDateTime<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  iDay<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">StrToIntDef</span><span class=\"br0\">(</span>strDay<span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">//Decode the year from the given string</span><br/>  strYear<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Copy</span><span class=\"br0\">(</span>aDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Pos</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> aDateTime<span class=\"br0\">)</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Delete</span><span class=\"br0\">(</span>aDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Pos</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> aDateTime<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  iYear<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">StrToIntDef</span><span class=\"br0\">(</span>strYear<span class=\"sy1\">,</span> <span class=\"nu0\">1899</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">//Decode the time value from the given string</span><br/>  strTime<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Copy</span><span class=\"br0\">(</span>aDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">Pos</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> aDateTime<span class=\"br0\">)</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">//Encode the date value and assign it to result</span><br/>  Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">EncodeDate</span><span class=\"br0\">(</span>iYear<span class=\"sy1\">,</span> iMonth<span class=\"sy1\">,</span> iDay<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">//Encode the time value and add it to result</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw3\">TryStrToTime</span><span class=\"br0\">(</span>strTime<span class=\"sy1\">,</span> TimePortion<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> Result <span class=\"sy3\">+</span> TimePortion<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Add12Hours<span class=\"br0\">(</span>aDateTime<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  tmpDateTime<span class=\"sy1\">:</span> <span class=\"kw4\">TDateTime</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"co1\">//Adding 12 hours to the given</span><br/>  <span class=\"co1\">//date time string value</span><br/>  tmpDateTime<span class=\"sy1\">:</span><span class=\"sy3\">=</span> ParseString<span class=\"br0\">(</span>aDateTime<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  tmpDateTime<span class=\"sy1\">:</span><span class=\"sy3\">=</span> IncHour<span class=\"br0\">(</span>tmpDateTime<span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">//Formatting the output</span><br/>  Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">FormatDateTime</span><span class=\"br0\">(</span><span class=\"st0\">'mm/dd/yyyy hh:mm AM/PM'</span><span class=\"sy1\">,</span> tmpDateTime<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>Add12Hours<span class=\"br0\">(</span><span class=\"st0\">'March 7 2009 7:30pm EST'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  Readln<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "EchoLisp", "loc": 11, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> my<span class=\"sy0\">-</span>date <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span>date <span class=\"st0\">\"March 7 2009 7:30 pm EST\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    \u2192 Sun Mar 08 <span class=\"nu0\">2009</span> 01:<span class=\"nu0\">30</span>:00 GMT<span class=\"sy0\">+</span>0100 <span class=\"br0\">(</span>CET<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>date<span class=\"sy0\">-</span>add<span class=\"sy0\">!</span> my<span class=\"sy0\">-</span>date <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">12</span> <span class=\"nu0\">3600</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    \u2192 Sun Mar 08 <span class=\"nu0\">2009</span> <span class=\"nu0\">13</span>:<span class=\"nu0\">30</span>:00 GMT<span class=\"sy0\">+</span>0100 <span class=\"br0\">(</span>CET<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span>date my<span class=\"sy0\">-</span>date<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>date<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> my<span class=\"sy0\">-</span>date<span class=\"br0\">)</span><br/>    \u2192 <span class=\"st0\">\"8/3/2009 13:30:00\"</span> <span class=\"co1\">;; human localized, Paris time.</span><br/>\u00a0</pre>"}, {"lang": "Erlang", "loc": 42, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span> <span class=\"kw3\">date</span>_manipulation <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">Date_time</span><span class=\"sy1\">,</span> <span class=\"re5\">TZ</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <span class=\"kw3\">date</span>_<span class=\"re3\">time_tz_from_string</span><span class=\"br0\">(</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Seconds1</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/calendar.html\"><span class=\"kw5\">calendar</span></a>:<span class=\"kw3\">date</span><span class=\"re3\">time_to_gregorian_seconds</span><span class=\"br0\">(</span> <span class=\"re5\">Date_time</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Seconds2</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/calendar.html\"><span class=\"kw5\">calendar</span></a>:<span class=\"kw3\">date</span><span class=\"re3\">time_to_gregorian_seconds</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><a href=\"http://erlang.org/doc/man/calendar.html\"><span class=\"kw5\">calendar</span></a>:<span class=\"re3\">gregorian_days_to_date</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Date_time_later</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/calendar.html\"><span class=\"kw5\">calendar</span></a>:<span class=\"re3\">gregorian_seconds_to_datetime</span><span class=\"br0\">(</span> <span class=\"re5\">Seconds1</span> <span class=\"sy3\">+</span> <span class=\"re5\">Seconds2</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">Date_time_later</span><span class=\"sy1\">,</span> <span class=\"re5\">TZ</span><span class=\"br0\">}</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"kw3\">date</span>_<span class=\"re3\">time_tz_from_string</span><span class=\"br0\">(</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">[</span><span class=\"re5\">Month</span><span class=\"sy1\">,</span> <span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"re5\">Year</span><span class=\"sy1\">,</span> <span class=\"re5\">Time</span><span class=\"sy1\">,</span> <span class=\"re5\">TZ</span><span class=\"br0\">]</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span> <span class=\"re5\">String</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"re5\">Hour</span><span class=\"sy1\">,</span> <span class=\"re5\">Minute</span><span class=\"br0\">]</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span> <span class=\"re5\">Time</span><span class=\"sy1\">,</span> <span class=\"st0\">\":\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings</span><span class=\"br0\">(</span><span class=\"re5\">Year</span><span class=\"sy1\">,</span> <span class=\"re5\">Month</span><span class=\"sy1\">,</span> <span class=\"re5\">Date</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw3\">time</span>_<span class=\"re3\">from_strings</span><span class=\"br0\">(</span><span class=\"re5\">Hour</span><span class=\"sy1\">,</span> <span class=\"re5\">Minute</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"re5\">TZ</span><span class=\"br0\">}</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings</span><span class=\"br0\">(</span> <span class=\"re5\">Year</span><span class=\"sy1\">,</span> <span class=\"re5\">Month</span><span class=\"sy1\">,</span> <span class=\"re5\">Date</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span><a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">list_to_integer</span><span class=\"br0\">(</span><span class=\"re5\">Year</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span><span class=\"re5\">Month</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">list_to_integer</span><span class=\"br0\">(</span><span class=\"re5\">Date</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"January\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"February\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"March\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">3</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"April\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">4</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"May\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">5</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"June\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">6</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"July\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">7</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"August\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">8</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"September\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">9</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"October\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">10</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"November\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">11</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">from_strings_month</span><span class=\"br0\">(</span> <span class=\"st0\">\"December\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">12</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"kw3\">time</span>_<span class=\"re3\">from_strings</span><span class=\"br0\">(</span> <span class=\"re5\">Hour</span><span class=\"sy1\">,</span> <span class=\"re5\">Minute_12hours</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Minute</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"re5\">AM_PM</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/io_lib.html\"><span class=\"kw5\">io_lib</span></a>:<span class=\"re3\">fread</span><span class=\"br0\">(</span><span class=\"st0\">\"~d\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Minute_12hours</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"kw3\">time</span>_<span class=\"re3\">from_strings_hour</span><span class=\"br0\">(</span> <span class=\"re5\">Hour</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_lower</span><span class=\"br0\">(</span><span class=\"re5\">AM_PM</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Minute</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"kw3\">time</span>_<span class=\"re3\">from_strings_hour</span><span class=\"br0\">(</span> <span class=\"re5\">Hour</span><span class=\"sy1\">,</span> <span class=\"st0\">\"am\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">list_to_integer</span><span class=\"br0\">(</span> <span class=\"re5\">Hour</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">time</span>_<span class=\"re3\">from_strings_hour</span><span class=\"br0\">(</span> <span class=\"re5\">Hour</span><span class=\"sy1\">,</span> <span class=\"st0\">\"pm\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">list_to_integer</span><span class=\"br0\">(</span> <span class=\"re5\">Hour</span> <span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">12</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 12, "block": "<pre class=\"euphoria highlighted_source\">\u00a0<br/><span class=\"co1\">--Date Manipulation task from Rosetta Code wiki</span><br/><span class=\"co1\">--User:Lnettnay</span><br/>\u00a0<br/><span class=\"kw1\">include</span> std<span class=\"sy1\">/</span>datetime.e<br/>\u00a0<br/>datetime dt<br/>\u00a0<br/>dt <span class=\"sy1\">=</span> new<span class=\"br0\">(</span><span class=\"nu0\">2009</span><span class=\"sy2\">,</span> <span class=\"nu0\">3</span><span class=\"sy2\">,</span> <span class=\"nu0\">7</span><span class=\"sy2\">,</span> <span class=\"nu0\">19</span><span class=\"sy2\">,</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><br/>dt <span class=\"sy1\">=</span> add<span class=\"br0\">(</span>dt<span class=\"sy2\">,</span> <span class=\"nu0\">12</span><span class=\"sy2\">,</span> HOURS<span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"%s EST<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>format<span class=\"br0\">(</span>dt<span class=\"sy2\">,</span> <span class=\"st0\">\"%B\u00a0%d\u00a0%Y\u00a0%I:%M\u00a0%p\"</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "F#", "loc": 14, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/>\u00a0<br/><span class=\"kw1\">let</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> est <span class=\"sy0\">=</span> TimeZoneInfo.<span class=\"me1\">FindSystemTimeZoneById</span><span class=\"br0\">(</span><span class=\"st0\">\"Eastern Standard Time\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> date <span class=\"sy0\">=</span> DateTime.<span class=\"me1\">Parse</span><span class=\"br0\">(</span><span class=\"st0\">\"March 7 2009 7:30pm -5\"</span> <span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> date_est <span class=\"sy0\">=</span> TimeZoneInfo.<span class=\"me1\">ConvertTime</span><span class=\"br0\">(</span> date, est<span class=\"br0\">)</span> <br/>  <span class=\"kw1\">let</span> date2 <span class=\"sy0\">=</span> date.<span class=\"me1\">AddHours</span><span class=\"br0\">(</span><span class=\"nu0\">12.0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> date2_est <span class=\"sy0\">=</span> TimeZoneInfo.<span class=\"me1\">ConvertTime</span><span class=\"br0\">(</span> date2, est<span class=\"br0\">)</span> <br/>  Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> <span class=\"st0\">\"Original date in local time\u00a0: {0}\"</span>, date <span class=\"br0\">)</span><br/>  Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> <span class=\"st0\">\"Original date in EST       \u00a0: {0}\"</span>, date_est <span class=\"br0\">)</span><br/>  Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> <span class=\"st0\">\"12 hours later in local time: {0}\"</span>, date2 <span class=\"br0\">)</span><br/>  Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> <span class=\"st0\">\"12 hours later in EST      \u00a0: {0}\"</span>, date2_est <span class=\"br0\">)</span><br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Fantom", "loc": 9, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>fansh&gt; d\u00a0:= DateTime.fromLocale(\"March 7 2009 7:30pm EST\", \"MMMM D YYYY h:mmaa zzz\")<br/>fansh&gt; d<br/>2009-03-07T19:30:00-05:00 EST<br/>fansh&gt; d + 12hr<br/>2009-03-08T07:30:00-05:00 EST<br/>fansh&gt; (d+12hr).toTimeZone(TimeZone(\"London\")) // the extra credit!<br/>2009-03-08T12:30:00Z London<br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 86, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co2\">#include \"vbcompat.bi\"</span><br/>\u00a0<br/><span class=\"kw1\">Sub</span> split <span class=\"br0\">(</span>s <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, sepList <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, result<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, removeEmpty <span class=\"kw1\">As</span> Boolean = <span class=\"kw1\">False</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> s = <span class=\"st0\">\"\"</span> OrElse sepList = <span class=\"st0\">\"\"</span> <span class=\"kw1\">Then</span> <br/>     <span class=\"kw1\">Redim</span> result<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>     result<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> = s<br/>     <span class=\"kw1\">Return</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> i, j, count = <span class=\"nu0\">0</span>, empty = <span class=\"nu0\">0</span>, length<br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> position<span class=\"br0\">(</span><span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  position<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> = <span class=\"nu0\">0</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> i = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"kw1\">len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> j = <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>sepList<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">If</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = sepList<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"kw1\">Then</span> <br/>        count += <span class=\"nu0\">1</span><br/>        position<span class=\"br0\">(</span>count<span class=\"br0\">)</span> = i + <span class=\"nu0\">1</span>       <br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span> j<br/>  <span class=\"kw1\">Next</span> i<br/>\u00a0<br/>  <span class=\"kw1\">Redim</span> result<span class=\"br0\">(</span>count<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> count  = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>    result<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> = s<br/>    <span class=\"kw1\">Return</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/>  position<span class=\"br0\">(</span>count + <span class=\"nu0\">1</span><span class=\"br0\">)</span> = <span class=\"kw1\">len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> + <span class=\"nu0\">1</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> i = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> count + <span class=\"nu0\">1</span>  <br/>    length = position<span class=\"br0\">(</span>i<span class=\"br0\">)</span> - position<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span><span class=\"br0\">)</span> - <span class=\"nu0\">1</span> <br/>    result<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span> - empty<span class=\"br0\">)</span> = <span class=\"kw1\">Mid</span><span class=\"br0\">(</span>s, position<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span>, length<span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> removeEmpty Andalso CBool<span class=\"br0\">(</span>length = <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> empty += <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> empty &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Redim</span> <span class=\"kw1\">Preserve</span> result<span class=\"br0\">(</span>count - empty<span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> parseDate<span class=\"br0\">(</span>dt <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, zone <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span><br/>  <span class=\"kw1\">Dim</span> result<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/>  split dt, <span class=\"st0\">\" \"</span>, result<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"kw1\">True</span><br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span> m, d, y, h, mn<br/>  <span class=\"kw1\">Dim</span> am <span class=\"kw1\">As</span> Boolean<br/>  <span class=\"kw1\">Dim</span> index <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> <br/>  Select <span class=\"kw1\">Case</span> <span class=\"kw1\">Lcase</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"january\"</span>   \u00a0: m = <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"february\"</span>  \u00a0: m = <span class=\"nu0\">2</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"march\"</span>     \u00a0: m = <span class=\"nu0\">3</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"april\"</span>     \u00a0: m = <span class=\"nu0\">4</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"may\"</span>       \u00a0: m = <span class=\"nu0\">5</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"june\"</span>      \u00a0: m = <span class=\"nu0\">6</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"july\"</span>      \u00a0: m = <span class=\"nu0\">7</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"august\"</span>    \u00a0: m = <span class=\"nu0\">8</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"september\"</span> \u00a0: m = <span class=\"nu0\">9</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"october\"</span>   \u00a0: m = <span class=\"nu0\">10</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"november\"</span>  \u00a0: m = <span class=\"nu0\">11</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"december\"</span>  \u00a0: m = <span class=\"nu0\">12</span><br/>  <span class=\"kw1\">End</span> Select<br/>  d = <span class=\"kw1\">ValInt</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  y = <span class=\"kw1\">ValInt</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  result<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> = <span class=\"kw1\">LCase</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  am = <span class=\"br0\">(</span><span class=\"kw1\">Right</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span> = <span class=\"st0\">\"am\"</span><span class=\"br0\">)</span><br/>  index = <span class=\"kw1\">Instr</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>, <span class=\"st0\">\":\"</span><span class=\"br0\">)</span><br/>  h = <span class=\"kw1\">ValInt</span><span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>, index - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> am <span class=\"kw1\">Then</span> <br/>    h = h + <span class=\"nu0\">12</span><br/>    <span class=\"kw1\">If</span> h = <span class=\"nu0\">24</span> <span class=\"kw1\">Then</span> h = <span class=\"nu0\">12</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span> <br/>  mn = <span class=\"kw1\">ValInt</span><span class=\"br0\">(</span><span class=\"kw1\">Mid</span><span class=\"br0\">(</span>result<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>, index + <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  zone = result<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Return</span> DateSerial<span class=\"br0\">(</span>y, m, d<span class=\"br0\">)</span> + TimeSerial<span class=\"br0\">(</span>h, mn, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> zone <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw1\">Dim</span> ds <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> = parseDate<span class=\"br0\">(</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span>, zone<span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Original Date/Time \u00a0: \"</span>; Format<span class=\"br0\">(</span>ds, <span class=\"st0\">\"mmmm d yyyy h:nnam/pm \"</span><span class=\"br0\">)</span> + <span class=\"st0\">\"  \"</span> + zone <br/>ds = DateAdd<span class=\"br0\">(</span><span class=\"st0\">\"h\"</span>, <span class=\"nu0\">12</span>, ds<span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"12 hours later     \u00a0: \"</span>; Format<span class=\"br0\">(</span>ds, <span class=\"st0\">\"mmmm d yyyy h:nnam/pm \"</span><span class=\"br0\">)</span> + <span class=\"st0\">\"  \"</span> + zone<br/><span class=\"co1\">' add 5 hours to convert EST to UTC</span><br/>ds = DateAdd<span class=\"br0\">(</span><span class=\"st0\">\"h\"</span>, <span class=\"nu0\">5</span>, ds<span class=\"br0\">)</span> <br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Equiv to Date/Time \u00a0: \"</span>; Format<span class=\"br0\">(</span>ds, <span class=\"st0\">\"mmmm d yyyy h:nnam/pm \"</span><span class=\"br0\">)</span> + <span class=\"st0\">\" UTC\"</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Frink", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>### MMM dd yyyy h:mma ###<br/>d = parseDate[\"March 7 2009 7:30pm EST\"]<br/>println[d + 12 hours -&gt; Eastern]<br/>println[d + 12 hours -&gt; Switzerland]  // Extra credit<br/>\u00a0</pre>"}, {"lang": "FunL", "loc": 8, "block": "<pre class=\"text highlighted_source\">import time.{TimeZone, Date, SimpleDateFormat, Hour}<br/>\u00a0<br/>pattern = SimpleDateFormat( 'MMMM d yyyy h:mma zzz' )<br/>date = pattern.parse( 'March 7 2009 7:30pm EST' )<br/>later = Date( date.getTime() + 12 Hour )<br/>println( pattern.format(later) )    // Eastern Daylight Time<br/>pattern.setTimeZone( TimeZone.getTimeZone('America/Los_Angeles') )<br/>println( pattern.format(later) )    // U.S. Pacific Time</pre>"}, {"lang": "Go", "loc": 31, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">const</span> taskDate <span class=\"sy2\">=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/><span class=\"kw1\">const</span> taskFormat <span class=\"sy2\">=</span> <span class=\"st0\">\"January 2 2006 3:04pm MST\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> etz<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>LoadLocation<span class=\"sy1\">(</span><span class=\"st0\">\"US/Eastern\"</span><span class=\"sy1\">);</span> err <span class=\"sy3\">==</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        time<span class=\"sy3\">.</span>Local <span class=\"sy2\">=</span> etz<br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Input:             \"</span><span class=\"sy1\">,</span> taskDate<span class=\"sy1\">)</span><br/>    t<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>Parse<span class=\"sy1\">(</span>taskFormat<span class=\"sy1\">,</span> taskDate<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    t <span class=\"sy2\">=</span> t<span class=\"sy3\">.</span>Add<span class=\"sy1\">(</span><span class=\"nu0\">12</span> <span class=\"sy3\">*</span> time<span class=\"sy3\">.</span>Hour<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"+12 hrs:           \"</span><span class=\"sy1\">,</span> t<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> _<span class=\"sy1\">,</span> offset <span class=\"sy2\">:=</span> t<span class=\"sy3\">.</span>Zone<span class=\"sy1\">();</span> offset <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"No time zone info.\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    atz<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>LoadLocation<span class=\"sy1\">(</span><span class=\"st0\">\"US/Arizona\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy3\">==</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"+12 hrs in Arizona:\"</span><span class=\"sy1\">,</span> t<span class=\"sy3\">.</span><span class=\"me1\">In</span><span class=\"sy1\">(</span>atz<span class=\"sy1\">))</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 12, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20import\"><span class=\"kw2\">import</span></a> <span class=\"co2\">org.joda.time.*</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20import\"><span class=\"kw2\">import</span></a> <span class=\"co2\">java.text.*</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> dateString <span class=\"sy0\">=</span> <span class=\"st0\">'March 7 2009 7:30pm EST'</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> sdf <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=SimpleDateFormat&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">SimpleDateFormat</span></a><span class=\"br0\">(</span><span class=\"st0\">'MMMM d yyyy h:mma zzz'</span><span class=\"br0\">)</span><br/>\u00a0<br/>DateTime dt <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> DateTime<span class=\"br0\">(</span>sdf.<span class=\"me1\">parse</span><span class=\"br0\">(</span>dateString<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"br0\">(</span>dt<span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"br0\">(</span>dt.<span class=\"me1\">plusHours</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"br0\">(</span>dt.<span class=\"me1\">plusHours</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>.<span class=\"me1\">withZone</span><span class=\"br0\">(</span>DateTimeZone.<span class=\"me1\">UTC</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 9, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Time<span class=\"sy0\">.</span>Clock<span class=\"sy0\">.</span>POSIX<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Time<span class=\"sy0\">.</span>Format<br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Locale<br/>\u00a0<br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> t2<br/>  <span class=\"kw1\">where</span> t1 <span class=\"sy0\">=</span> readTime defaultTimeLocale<br/>            <span class=\"st0\">\"%B\u00a0%e\u00a0%Y\u00a0%l:%M%P\u00a0%Z\"</span><br/>            <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>        t2 <span class=\"sy0\">=</span> posixSecondsToUTCTime <span class=\"sy0\">$</span> <span class=\"nu0\">12</span><span class=\"sy0\">*</span><span class=\"nu0\">60</span><span class=\"sy0\">*</span><span class=\"nu0\">60</span> <span class=\"sy0\">+</span> utcTimeToPOSIXSeconds t1</pre>"}, {"lang": "HicEst", "loc": 12, "block": "<pre class=\"hicest highlighted_source\">\u00a0<br/>   <span class=\"kw1\">CHARACTER</span> date<span class=\"sy1\">=</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"sy1\">,</span> am_pm<span class=\"sy1\">,</span> result<span class=\"sy1\">*</span><span class=\"nu0\">20</span><br/>\u00a0<br/>   <span class=\"kw1\">EDIT</span><span class=\"br0\">(</span>Text<span class=\"sy1\">=</span>date<span class=\"sy1\">,</span> Parse<span class=\"sy1\">=</span>cMonth<span class=\"sy1\">,</span> GetPosition<span class=\"sy1\">=</span>next<span class=\"br0\">)</span><br/>   month <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">+</span> <span class=\"kw1\">EDIT</span><span class=\"br0\">(</span>Text<span class=\"sy1\">=</span><span class=\"st0\">'January,February,March,April,May,June,July,August,September,October,November,December'</span><span class=\"sy1\">,</span> Right<span class=\"sy1\">=</span>cMonth<span class=\"sy1\">,</span> Count<span class=\"sy1\">=</span><span class=\"st0\">','</span> <span class=\"br0\">)</span><br/>   <span class=\"kw1\">READ</span><span class=\"br0\">(</span>Text<span class=\"sy1\">=</span>date<span class=\"br0\">(</span>next<span class=\"sy1\">:</span><span class=\"br0\">)</span><span class=\"br0\">)</span> day<span class=\"sy1\">,</span> year<span class=\"sy1\">,</span> hour<span class=\"sy1\">,</span> minute<span class=\"sy1\">,</span> am_pm<br/>   hour <span class=\"sy1\">=</span> hour <span class=\"sy1\">+</span> <span class=\"nu0\">12</span><span class=\"sy1\">*</span><span class=\"br0\">(</span>am_pm <span class=\"sy1\">==</span> <span class=\"st0\">'p'</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">TIME</span><span class=\"br0\">(</span>MOnth<span class=\"sy1\">=</span>month<span class=\"sy1\">,</span> Day<span class=\"sy1\">=</span>day<span class=\"sy1\">,</span> Year<span class=\"sy1\">=</span>year<span class=\"sy1\">,</span> Hour<span class=\"sy1\">=</span>hour<span class=\"sy1\">,</span> MInute<span class=\"sy1\">=</span>minute<span class=\"sy1\">,</span> TO<span class=\"sy1\">,</span> Excel<span class=\"sy1\">=</span>xls_day<span class=\"br0\">)</span><br/>   <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Text<span class=\"sy1\">=</span>result<span class=\"sy1\">,</span> Format<span class=\"sy1\">=</span><span class=\"st0\">\"UWWW CCYY-MM-DD HH:mm\"</span><span class=\"br0\">)</span> xls_day <span class=\"sy1\">+</span> <span class=\"nu0\">0.5</span><br/>                   <span class=\"co1\">! result = \"Sun 2009-03-08 07:30\"</span><br/> <span class=\"kw1\">END</span><br/>\u00a0</pre>"}, {"lang": "Icon and Unicon", "loc": 66, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> datetime<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"input      = \"</span><span class=\"sy1\">,</span>s <span class=\"sy1\">:=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span> <span class=\"br0\">)</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"+12 hours  = \"</span><span class=\"sy1\">,</span>SecToTZDateLine<span class=\"br0\">(</span>s <span class=\"sy1\">:=</span> TZDateLineToSec<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"nu0\">12</span><span class=\"sy1\">*</span><span class=\"nu0\">3600</span><span class=\"sy1\">,</span><span class=\"st0\">\"EST\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"           = \"</span><span class=\"sy1\">,</span>SecToTZDateLine<span class=\"br0\">(</span>s<span class=\"sy1\">,</span><span class=\"st0\">\"UTC\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"           = \"</span><span class=\"sy1\">,</span>SecToTZDateLine<span class=\"br0\">(</span>s<span class=\"sy1\">,</span><span class=\"st0\">\"NST\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>    <br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> SecToTZDateLine<span class=\"br0\">(</span>s<span class=\"sy1\">,</span>tz<span class=\"br0\">)</span>   <span class=\"co1\">#: returns dateline + time zone given seconds</span><br/><span class=\"kw1\">return</span> NormalizedDate<span class=\"br0\">(</span>SecToDateLine<span class=\"br0\">(</span>s<span class=\"sy1\">+\\</span><span class=\"br0\">(</span>_TZdata<span class=\"br0\">(</span><span class=\"st0\">\"table\"</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"sy1\">\\</span>tz<span class=\"sy1\">|</span><span class=\"st0\">\"UTC\"</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">||</span><span class=\"st0\">\" \"</span><span class=\"sy1\">||</span> tz<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> TZDateLineToSec<span class=\"br0\">(</span>s<span class=\"br0\">)</span>  <span class=\"co1\">#: returns seconds given dateline (and time zone)</span><br/>   <span class=\"kw1\">return</span> <span class=\"br0\">(</span> <br/>      NormalizedDate<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy1\">?</span> <span class=\"br0\">(</span><br/>         d  <span class=\"sy1\">:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">find</span><span class=\"br0\">(</span><span class=\"st0\">\"am\"</span><span class=\"sy1\">|</span><span class=\"st0\">\"pm\"</span><span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span> ,'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>         tz <span class=\"sy1\">:=</span> <span class=\"sy1\">\\</span>_TZdata<span class=\"br0\">(</span><span class=\"st0\">\"table\"</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>         <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>      DateLineToSec<span class=\"br0\">(</span>d<span class=\"br0\">)</span> <span class=\"sy1\">-</span> tz<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> NormalizedDate<span class=\"br0\">(</span>s<span class=\"br0\">)</span>  <span class=\"co1\">#: returns a consistent dateline</span><br/><span class=\"kw2\">static</span> D<span class=\"sy1\">,</span>M<br/><span class=\"kw1\">initial</span> <span class=\"br0\">{</span><br/>   D <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"st0\">\"Saturday\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"Sunday\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"Monday\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"Tuesday\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"Wednesday\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"Thursday\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"Friday\"</span><span class=\"br0\">]</span><br/>   M <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"st0\">\"January\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"February\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"March\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"April\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"May\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"June\"</span><span class=\"sy1\">,</span><br/>         <span class=\"st0\">\"July\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"August\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"September\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"October\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"November\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"December\"</span><span class=\"br0\">]</span><br/>   <span class=\"br0\">}</span> <br/>\u00a0<br/><span class=\"kw4\">map</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy1\">?</span> <span class=\"br0\">{</span>                               <span class=\"co1\"># parse and build consistent dateline</span><br/>   ds <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span>x <span class=\"sy1\">:=</span> <span class=\"sy1\">!</span>D<span class=\"sy1\">,</span> <span class=\"sy1\">=</span><span class=\"kw4\">map</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"\"</span>                                    <span class=\"co1\"># Weekday </span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span> ,'</span><span class=\"br0\">)</span><span class=\"sy1\">|&amp;</span><span class=\"kw3\"><span class=\"kw4\">pos</span></span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span>x <span class=\"sy1\">:=</span> <span class=\"sy1\">!</span>M<span class=\"sy1\">,</span> <span class=\"sy1\">=</span><span class=\"kw4\">map</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>                 <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span>                <span class=\"co1\"># Month</span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span> ,'</span><span class=\"br0\">)</span><span class=\"sy1\">|&amp;</span><span class=\"kw3\"><span class=\"kw4\">pos</span></span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">digits</span><span class=\"br0\">)</span><span class=\"br0\">)</span>                  <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span>                <span class=\"co1\"># day</span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span> ,'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>          <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">digits</span><span class=\"br0\">)</span><span class=\"br0\">)</span>                  <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span>                <span class=\"co1\"># year  </span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span> ,'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>           <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">digits</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">||</span><span class=\"br0\">(</span><span class=\"sy1\">=</span><span class=\"st0\">\":\"</span><span class=\"sy1\">||</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">digits</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">|&amp;</span><span class=\"kw3\">null</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span> <span class=\"co1\"># time   </span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span> ,'</span><span class=\"br0\">)</span><span class=\"sy1\">|&amp;</span><span class=\"kw3\"><span class=\"kw4\">pos</span></span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"st0\">\"am\"</span><span class=\"sy1\">|</span><span class=\"st0\">\"pm\"</span><span class=\"br0\">)</span>                        <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span>                <span class=\"co1\"># halfday   </span><br/>   ds <span class=\"sy1\">||:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span> ,'</span><span class=\"br0\">)</span><span class=\"sy1\">|&amp;</span><span class=\"kw3\"><span class=\"kw4\">pos</span></span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   tz <span class=\"sy1\">:=</span> <span class=\"kw4\">map</span><span class=\"br0\">(</span><span class=\"sy1\">=!</span>_TZdata<span class=\"br0\">(</span><span class=\"st0\">\"list\"</span><span class=\"br0\">)</span><span class=\"sy1\">,&amp;</span><span class=\"kw3\">lcase</span><span class=\"sy1\">,&amp;</span><span class=\"kw3\">ucase</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">if</span> ds<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> <span class=\"st0\">\",\"</span> <span class=\"kw1\">then</span> <br/>   ds <span class=\"sy1\">:=</span> SecToDateLine<span class=\"br0\">(</span>DateLineToSec<span class=\"br0\">(</span><span class=\"st0\">\"Sunday\"</span><span class=\"sy1\">||</span>ds<span class=\"br0\">)</span><span class=\"br0\">)</span>   <span class=\"co1\"># get IPL to fix weekday</span><br/>\u00a0<br/><span class=\"kw1\">return</span> ds <span class=\"sy1\">||:=</span>  <span class=\"st0\">\" \"</span> <span class=\"sy1\">||</span> <span class=\"sy1\">\\</span>tz<span class=\"sy1\">|</span><span class=\"st0\">\"UTC\"</span>   <br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> _TZdata<span class=\"br0\">(</span>x<span class=\"br0\">)</span>    <span class=\"co1\">#: internal return TZ data (demo version incomplete)</span><br/><span class=\"kw2\">static</span> TZ<span class=\"sy1\">,</span>AZ<br/><span class=\"kw1\">initial</span> <span class=\"br0\">{</span><br/>   TZ <span class=\"sy1\">:=</span> <span class=\"kw4\">table</span><span class=\"br0\">(</span><span class=\"br0\">)</span>  <br/>   AZ <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>   <span class=\"st0\">\"UTC/0;ACDT/+10.5;CET/1;EST/-5;NPT/+5.75;NST/-3.5;PST/-8;\"</span> <span class=\"sy1\">?</span><br/>      <span class=\"kw1\">while</span> <span class=\"br0\">(</span>  a <span class=\"sy1\">:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">find</span><span class=\"br0\">(</span><span class=\"st0\">\"/\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw4\">move</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> o <span class=\"sy1\">:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">find</span><span class=\"br0\">(</span><span class=\"st0\">\";\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw4\">move</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>         TZ<span class=\"br0\">[</span><span class=\"kw4\">map</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> TZ<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"nu0\">3600</span><span class=\"sy1\">*</span>o<span class=\"br0\">)</span><br/>         <span class=\"kw4\">put</span><span class=\"br0\">(</span>AZ<span class=\"sy1\">,</span>a<span class=\"sy1\">,</span><span class=\"kw4\">map</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">}</span><br/>      <span class=\"kw1\">every</span> TZ<span class=\"br0\">[</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span><span class=\"sy1\">|</span><span class=\"st0\">\"\"</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> TZ<span class=\"br0\">[</span><span class=\"st0\">\"UTC\"</span><span class=\"br0\">]</span>     <br/>   <span class=\"br0\">}</span><br/><span class=\"kw1\">return</span> <span class=\"kw1\">case</span> x <span class=\"kw1\">of</span> <span class=\"br0\">{</span> <span class=\"st0\">\"list\"</span>  <span class=\"sy1\">:</span> AZ <span class=\"sy1\">;</span> <span class=\"st0\">\"table\"</span> <span class=\"sy1\">:</span> TZ <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 27, "block": "<pre class=\"j highlighted_source\">require<span class=\"st_h\">'dates'</span><br/>months=: &lt;;.<span class=\"nu0\">_2</span> tolower <span class=\"nu0\">0</span>\u00a0:<span class=\"nu0\">0</span><br/>January<br/>February<br/>March<br/>April<br/>May<br/>June<br/>July<br/>August<br/>September<br/>October<br/>November<br/>December<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>numbers=: <span class=\"nu0\">_</span>\".<span class=\"st_h\">' '</span>\"<span class=\"nu0\">_</span>`<span class=\"sy0\">(</span><span class=\"nu0\">1</span> <a class=\"__cf_email__\" data-cfemail=\"357c1b75\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:-e.&amp;<span class=\"sy0\">(</span>\":i.<span class=\"nu0\">10</span><span class=\"sy0\">)</span>@]<span class=\"sy0\">)</span>`]}~<br/>words=: [:;:@tolower<span class=\"st_h\">' '</span>\"<span class=\"nu0\">_</span>`<span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"f6bfd8b6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">(</span>tolower = toupper<span class=\"sy0\">)</span>@]<span class=\"sy0\">)</span>`]}~<br/>getyear=: &gt;./@numbers<br/>getmonth=: <span class=\"nu0\">1</span> + months &lt;./@i. words<br/>getday=: {<a class=\"__cf_email__\" data-cfemail=\"183658\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">(</span>numbers -. getyear<span class=\"sy0\">)</span><br/>gethour=: <span class=\"sy0\">(</span><span class=\"nu0\">2</span> { numbers<span class=\"sy0\">)</span> + <span class=\"nu0\">12</span> * <span class=\"sy0\">(</span>&lt;<span class=\"st_h\">'pm'</span><span class=\"sy0\">)</span> e. words<br/>getminsec=: <span class=\"nu0\">2</span> {. <span class=\"nu0\">3</span>}. numbers<br/>\u00a0<br/>getts=: getyear, getmonth, getday, gethour, getminsec<br/>timeadd=: <span class=\"nu0\">1</span>&amp;<a class=\"__cf_email__\" data-cfemail=\"40343332253000\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+&amp;tsrep<br/>deltaT=: <span class=\"sy0\">(</span><span class=\"nu0\">1</span> tsrep <span class=\"nu0\">0</span><span class=\"sy0\">)</span>&amp;<span class=\"sy0\">(</span>[ + <a class=\"__cf_email__\" data-cfemail=\"9ab7da\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>#@[ {. ]<span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 16, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Date</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.text.SimpleDateFormat</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> DateManip<span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a><span class=\"br0\">{</span><br/>\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> dateStr <span class=\"sy0\">=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asimpledateformat+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SimpleDateFormat</span></a> sdf <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asimpledateformat+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SimpleDateFormat</span></a><span class=\"br0\">(</span><span class=\"st0\">\"MMMM d yyyy h:mma zzz\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adate+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Date</span></a> date <span class=\"sy0\">=</span> sdf.<span class=\"me1\">parse</span><span class=\"br0\">(</span>dateStr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tdate.<span class=\"me1\">setTime</span><span class=\"br0\">(</span>date.<span class=\"me1\">getTime</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> 43200000l<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>sdf.<span class=\"me1\">format</span><span class=\"br0\">(</span>date<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 41, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> add12hours<span class=\"br0\">(</span>dateString<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"co1\">// Get the parts of the date string</span><br/>  <span class=\"kw1\">var</span> parts <span class=\"sy0\">=</span> dateString.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"co2\">/\\s+/</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      date  <span class=\"sy0\">=</span> parts<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>      month <span class=\"sy0\">=</span> parts<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>      year  <span class=\"sy0\">=</span> parts<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>      time  <span class=\"sy0\">=</span> parts<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">var</span> hr    <span class=\"sy0\">=</span> <span class=\"kw4\">Number</span><span class=\"br0\">(</span>time.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">':'</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      min   <span class=\"sy0\">=</span> <span class=\"kw4\">Number</span><span class=\"br0\">(</span>time.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">':'</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"co2\">/\\D/g</span><span class=\"sy0\">,</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      ampm  <span class=\"sy0\">=</span> time <span class=\"sy0\">&amp;&amp;</span> time.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"co2\">/[a-z]+$/i</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>      zone  <span class=\"sy0\">=</span> parts<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">var</span> months <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'January'</span><span class=\"sy0\">,</span><span class=\"st0\">'February'</span><span class=\"sy0\">,</span><span class=\"st0\">'March'</span><span class=\"sy0\">,</span><span class=\"st0\">'April'</span><span class=\"sy0\">,</span><span class=\"st0\">'May'</span><span class=\"sy0\">,</span><span class=\"st0\">'June'</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">'July'</span><span class=\"sy0\">,</span><span class=\"st0\">'August'</span><span class=\"sy0\">,</span><span class=\"st0\">'September'</span><span class=\"sy0\">,</span><span class=\"st0\">'October'</span><span class=\"sy0\">,</span><span class=\"st0\">'November'</span><span class=\"sy0\">,</span><span class=\"st0\">'December'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> zones  <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'EST'</span><span class=\"sy0\">:</span> <span class=\"nu0\">300</span><span class=\"sy0\">,</span> <span class=\"st0\">'AEST'</span><span class=\"sy0\">:</span> <span class=\"sy0\">-</span><span class=\"nu0\">600</span><span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\">// Minutes to add to zone time to get UTC</span><br/>\u00a0<br/>  <span class=\"co1\">// Convert month name to number, zero indexed. Return if invalid month</span><br/>  month <span class=\"sy0\">=</span> months.<span class=\"me1\">indexOf</span><span class=\"br0\">(</span>month<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>month <span class=\"sy0\">===</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">// Add 12 hours as specified. Add another 12 if pm for 24hr time</span><br/>  hr <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>ampm.<span class=\"me1\">toLowerCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">===</span> <span class=\"st0\">'pm'</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">24</span> <span class=\"sy0\">:</span> <span class=\"nu0\">12</span><br/>\u00a0<br/>  <span class=\"co1\">// Create a date object in local zone</span><br/>  <span class=\"kw1\">var</span> localTime <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">Date</span><span class=\"br0\">(</span>year<span class=\"sy0\">,</span> month<span class=\"sy0\">,</span> date<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  localTime.<span class=\"me1\">setHours</span><span class=\"br0\">(</span>hr<span class=\"sy0\">,</span> min<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Adjust localTime minutes for the time zones so it is now a local date</span><br/>  <span class=\"co1\">// representing the same moment as the source date plus 12 hours</span><br/>  localTime.<span class=\"me1\">setMinutes</span><span class=\"br0\">(</span>localTime.<span class=\"me1\">getMinutes</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> zones<span class=\"br0\">[</span>zone<span class=\"br0\">]</span> <span class=\"sy0\">-</span> localTime.<span class=\"me1\">getTimezoneOffset</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> localTime<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> inputDateString <span class=\"sy0\">=</span> <span class=\"st0\">'March 7 2009 7:30pm EST'</span><span class=\"sy0\">;</span><br/>\u00a0<br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><br/>  <span class=\"st0\">'Input: '</span> <span class=\"sy0\">+</span> inputDateString <span class=\"sy0\">+</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>'</span> <span class=\"sy0\">+</span><br/>  <span class=\"st0\">'+12hrs in local time: '</span> <span class=\"sy0\">+</span> add12hours<span class=\"br0\">(</span>inputDateString<span class=\"br0\">)</span><br/> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 4, "block": "<pre class=\"text highlighted_source\">\"March 7 2009 7:30pm EST\"<br/>| strptime(\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%Z\")<br/>| .[3] += 12<br/>| mktime | strftime(\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%Z\") </pre>"}, {"lang": "Julia", "loc": 12, "block": "<pre class=\"text highlighted_source\">using Base.Dates<br/>\u00a0<br/>function main()<br/>    dtstr = \"March 7 2009 7:30pm\" # Base.Dates doesn't handle \"EST\"<br/>    cleandtstr = replace(dtstr, r\"(am|pm)\"i, \"\")<br/>    dtformat = dateformat\"U dd yyyy HH:MM\"<br/>    dtime = parse(DateTime, cleandtstr, dtformat) +<br/>        Hour(12 * contains(dtstr, r\"pm\"i)) # add 12h for the pm<br/>    println(Dates.format(dtime + Hour(12), dtformat))<br/>end<br/>\u00a0<br/>main()</pre>"}, {"lang": "Kotlin", "loc": 19, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">text</span>.<span class=\"me1\">SimpleDateFormat</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"sy0\">*</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dts  <span class=\"sy0\">=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sdf  <span class=\"sy0\">=</span> SimpleDateFormat<span class=\"br0\">(</span><span class=\"st0\">\"MMMM d yyyy h:mma z\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dt   <span class=\"sy0\">=</span> sdf.<span class=\"me1\">parse</span><span class=\"br0\">(</span>dts<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cal  <span class=\"sy0\">=</span> GregorianCalendar<span class=\"br0\">(</span>TimeZone.<span class=\"me1\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">\"EST\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\">// stay with EST</span><br/>    cal.<span class=\"me1\">time</span> <span class=\"sy0\">=</span> dt<br/>    cal.<span class=\"me1\">add</span><span class=\"br0\">(</span>Calendar.<span class=\"me1\">HOUR_OF_DAY</span>, <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"co1\">// add 12 hours</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> fmt <span class=\"sy0\">=</span> <span class=\"st0\">\"%tB\u00a0%1<span class=\"es1\">\\$</span>td\u00a0%1<span class=\"es1\">\\$</span>tY\u00a0%1<span class=\"es1\">\\$</span>tl:%1<span class=\"es1\">\\$</span>tM%1<span class=\"es1\">\\$</span>tp\u00a0%1<span class=\"es1\">\\$</span>tZ\"</span><br/>    println<span class=\"br0\">(</span>fmt.<span class=\"me1\">format</span><span class=\"br0\">(</span>cal<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">// display new time</span><br/>\u00a0<br/>    <span class=\"co1\">// display time now in Mountain Standard Time which is 2 hours earlier than EST</span><br/>    cal.<span class=\"me1\">timeZone</span> <span class=\"sy0\">=</span> TimeZone.<span class=\"me1\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">\"MST\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span>fmt.<span class=\"me1\">format</span><span class=\"br0\">(</span>cal<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 3, "block": "<pre class=\"text highlighted_source\">local(date) = date('March 7 2009 7:30PM EST',-format='MMMM d yyyy h:mma z')<br/>#date-&gt;add(-hour = 24)<br/>#date-&gt;timezone = 'GMT'</pre>"}, {"lang": "Lingo", "loc": 35, "block": "<pre class=\"text highlighted_source\">----------------------------------------<br/>-- Returns string representation of given date object in YYYY-MM-DD hh:mm:ii format<br/>-- @param {date} dateObj<br/>-- @returns {string}<br/>----------------------------------------<br/>on dateToDateTimeString (dateObj)<br/>  str = \"\"<br/>  s = string(dateObj.year)<br/>  if s.length&lt;4 then put \"0000\".char[1..4-s.length] before s<br/>  put s after str<br/>  s = string(dateObj.month)<br/>  if s.length&lt;2 then s = \"0\"&amp;s<br/>  put s after str<br/>  s = string(dateObj.day)<br/>  if s.length&lt;2 then put \"0\" before s<br/>  put s after str<br/>  sec = dateObj.seconds  <br/>  s = string(sec / 3600)<br/>  sec = sec mod 3600<br/>  if s.length&lt;2 then put \"0\" before s<br/>  put s after str<br/>  s = string(sec / 60)<br/>  sec = sec mod 60<br/>  if s.length&lt;2 then put \"0\" before s<br/>  put s after str<br/>  s = string(sec)<br/>  if s.length&lt;2 then put \"0\" before s<br/>  put s after str<br/>  put \":\" after char 12 of str<br/>  put \":\" after char 10 of str<br/>  put \" \" after char 8 of str<br/>  put \"-\" after char 6 of str<br/>  put \"-\" after char 4 of str<br/>  return str<br/>end</pre>"}, {"lang": "Lua", "loc": 28, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/>str <span class=\"sy0\">=</span> <span class=\"kw3\">string.lower</span><span class=\"br0\">(</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span> <span class=\"br0\">)</span><br/>\u00a0<br/>month <span class=\"sy0\">=</span> <span class=\"kw3\">string</span><span class=\"sy0\">.</span>match<span class=\"br0\">(</span> str<span class=\"sy0\">,</span> <span class=\"st0\">\"%a+\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">if</span>     month <span class=\"sy0\">==</span> <span class=\"st0\">\"january\"</span>   <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"february\"</span>  <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"march\"</span>     <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"april\"</span>     <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"may\"</span>       <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"june\"</span>      <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"july\"</span>      <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"august\"</span>    <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"september\"</span> <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"october\"</span>   <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"november\"</span>  <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><br/><span class=\"kw1\">elseif</span> month <span class=\"sy0\">==</span> <span class=\"st0\">\"december\"</span>  <span class=\"kw1\">then</span> month <span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <br/><span class=\"kw1\">end</span><br/>\u00a0<br/>strproc <span class=\"sy0\">=</span> <span class=\"kw3\">string</span><span class=\"sy0\">.</span>gmatch<span class=\"br0\">(</span> str<span class=\"sy0\">,</span> <span class=\"st0\">\"%d+\"</span> <span class=\"br0\">)</span><br/>day  <span class=\"sy0\">=</span> strproc<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>year <span class=\"sy0\">=</span> strproc<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>hour <span class=\"sy0\">=</span> strproc<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw3\">min</span>  <span class=\"sy0\">=</span> strproc<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"kw3\">string.find</span><span class=\"br0\">(</span> str<span class=\"sy0\">,</span> <span class=\"st0\">\"pm\"</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span> hour <span class=\"sy0\">=</span> hour <span class=\"sy0\">+</span> <span class=\"nu0\">12</span> <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"kw3\">os.date</span><span class=\"br0\">(</span> <span class=\"st0\">\"%c\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">os.time</span><span class=\"br0\">{</span> year<span class=\"sy0\">=</span>year<span class=\"sy0\">,</span> month<span class=\"sy0\">=</span>month<span class=\"sy0\">,</span> day<span class=\"sy0\">=</span>day<span class=\"sy0\">,</span> hour<span class=\"sy0\">=</span>hour<span class=\"sy0\">,</span> <span class=\"kw3\">min</span><span class=\"sy0\">=</span><span class=\"kw3\">min</span><span class=\"sy0\">,</span> sec<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3600</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 16, "block": "<pre class=\"text highlighted_source\">twelve_hours\u00a0:= proc(str)<br/>\tlocal dt, zone;<br/>\tlocal months\u00a0:= [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];<br/>\tdt\u00a0:= StringTools:-ParseTime(\"%B\u00a0%d\u00a0%Y\u00a0%l:%M%p\", str);<br/>\tzone\u00a0:= StringTools:-RegSplit(\" \", str)[-1];<br/>\tdt\u00a0:= Date(dt:-year, dt:-month, dt:-monthDay, dt:-hour, dt:-minute, timezone = zone);<br/>\tdt\u00a0:= dt + 12 * Unit(hours);<br/>\tprintf(\"%s\u00a0%d\u00a0%d \", months[Month(dt)], DayOfMonth(dt), Year(dt));<br/>\tif (HourOfDay(dt) &gt;= 12) then<br/>\t\tprintf(\"%d:%dpm \", HourOfDay(dt)-12, Minute(dt));<br/>\telse<br/>\t\tprintf(\"%d:%dam \", HourOfDay(dt), Minute(dt));<br/>\tend if;<br/>\tprintf(TimeZone(dt));<br/>end proc;<br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 2, "block": "<pre class=\"text highlighted_source\">dstr = \"March 7 2009 7:30pm EST\";<br/>DateString[DatePlus[dstr, {12, \"Hour\"}], {\"DayName\", \" \", \"MonthName\", \" \", \"Day\", \" \", \"Year\", \" \", \"Hour24\", \":\", \"Minute\", \"AMPM\"}]</pre>"}, {"lang": "mIRC Scripting Language", "loc": 1, "block": "<pre class=\"mirc highlighted_source\"><a href=\"http://www.mirc.com/echo\"><span class=\"kw3\">echo</span></a> <span class=\"re4\">-ag</span> <span class=\"re0\">$asctime</span><span class=\"br0\">(</span><span class=\"re0\">$calc</span><span class=\"br0\">(</span><span class=\"re0\">$ctime</span><span class=\"br0\">(</span>March 7 2009 7:30pm EST<span class=\"br0\">)</span>+43200<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "NetRexx", "loc": 30, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref symbols <span class=\"kw2\">binary</span><br/>\u00a0<br/><span class=\"kw1\">import</span> java.<span class=\"me0\">text</span>.<span class=\"me0\">SimpleDateFormat</span><br/><span class=\"kw1\">import</span> java.<span class=\"me0\">text</span>.<span class=\"me0\">ParseException</span><br/>\u00a0<br/>runSample<span class=\"br0\">(</span>arg<span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method manipulateDate<span class=\"br0\">(</span>sampleDate, dateFmt, dHours = <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw2\">private</span> <span class=\"kw2\">static</span><br/>  formatter = SimpleDateFormat<span class=\"br0\">(</span>dateFmt<span class=\"br0\">)</span><br/>  msHours = dHours <span class=\"sy0\">*</span> <span class=\"nu0\">60</span> <span class=\"sy0\">*</span> <span class=\"nu0\">60</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span> <span class=\"co1\">-- hours in milliseconds</span><br/>  day = formatter.<span class=\"kw1\">parse</span><span class=\"br0\">(</span>sampleDate<span class=\"br0\">)</span><br/>  day.<span class=\"me0\">setTime</span><span class=\"br0\">(</span>day.<span class=\"me0\">getTime</span><span class=\"br0\">(</span><span class=\"br0\">)</span> + msHours<span class=\"br0\">)</span><br/>  formatted = formatter.<span class=\"me0\">format</span><span class=\"br0\">(</span>day<span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> formatted<br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method runSample<span class=\"br0\">(</span>arg<span class=\"br0\">)</span> <span class=\"kw2\">private</span> <span class=\"kw2\">static</span><br/>  <span class=\"kw1\">do</span><br/>    sampleDate = <span class=\"st0\">'March 7 2009 7:30pm EST'</span><br/>    dateFmt = <span class=\"st0\">\"MMMM d yyyy h:mma z\"</span><br/>    <span class=\"kw1\">say</span> sampleDate<br/>    <span class=\"kw1\">say</span> manipulateDate<span class=\"br0\">(</span>sampleDate, dateFmt, <span class=\"nu0\">12</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">catch</span> ex = Exception<br/>    ex.<span class=\"me0\">printStackTrace</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 6, "block": "<pre class=\"text highlighted_source\">import posix, times<br/>\u00a0<br/>var ts: Ttm<br/>discard \"March 7 2009 7:30pm EST\".strptime(\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%Z\", ts)<br/>ts.tmHour += 12<br/>echo ts.mktime</pre>"}, {"lang": "ooRexx", "loc": 128, "block": "<pre class=\"oorexx highlighted_source\">\u00a0<br/>  sampleDate = <span class=\"st0\">'March 7 2009 7:30pm EST'</span><br/>\u00a0<br/>  <span class=\"kw1\">Parse</span> <span class=\"kw2\">var</span> sampleDate month day year <span class=\"kw6\">time</span> zone<br/>  basedate = <span class=\"sy0\">.</span>DateTime~fromNormalDate<span class=\"br0\">(</span>day month~<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> year<span class=\"br0\">)</span><br/>  basetime = <span class=\"sy0\">.</span>DateTime~fromCivilTime<span class=\"br0\">(</span><span class=\"kw6\">time</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">-- this will give us this in a merged format...now we can add in the</span><br/>  <span class=\"co1\">-- timezone informat</span><br/>  mergedTime = <span class=\"br0\">(</span>basedate + basetime~timeofday<span class=\"br0\">)</span>~isoDate<br/>  zone = <span class=\"sy0\">.</span>TimeZoneDataBase~getTimeZone<span class=\"br0\">(</span>zone<span class=\"br0\">)</span><br/>\u00a0<br/>  finalTime = <span class=\"sy0\">.</span>DateTime~fromIsoDate<span class=\"br0\">(</span>mergedTime, zone~datetimeOffset<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'Original date:'</span> finalTime~utcIsoDate<br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'Result after adding 12 hours:'</span> finalTime~addHours<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>~utcIsoDate<br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'Result shifted to UTC:'</span> finalTime~toTimeZone<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>~utcIsoDate<br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'Result shifted to Pacific Standard Time:'</span> finalTime~toTimeZone<span class=\"br0\">(</span><span class=\"sy0\">.</span>TimeZoneDataBase~getTimeZone<span class=\"br0\">(</span><span class=\"st0\">'PST'</span><span class=\"br0\">)</span>~datetimeOffset<span class=\"br0\">)</span>~utcIsoDate<br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'Result shifted to NepalTime Time:'</span> finalTime~toTimeZone<span class=\"br0\">(</span><span class=\"sy0\">.</span>TimeZoneDataBase~getTimeZone<span class=\"br0\">(</span><span class=\"st0\">'NPT'</span><span class=\"br0\">)</span>~datetimeOffset<span class=\"br0\">)</span>~utcIsoDate<br/>\u00a0<br/><span class=\"co1\">-- a descriptor for timezone information</span><br/>::class timezone<br/>::method init<br/>  <span class=\"kw1\">expose</span> code <span class=\"kw2\">name</span> offset altname region<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> code, <span class=\"kw2\">name</span>, offset, altname, region<br/>  code~<span class=\"kw2\">upper</span><br/>\u00a0<br/>::<span class=\"kw1\">attribute</span> code GET<br/>::<span class=\"kw1\">attribute</span> <span class=\"kw2\">name</span> GET<br/>::<span class=\"kw1\">attribute</span> offset GET<br/>::<span class=\"kw1\">attribute</span> altname GET<br/>::<span class=\"kw1\">attribute</span> region GET<br/>::<span class=\"kw1\">attribute</span> datetimeOffset GET<br/>  <span class=\"kw1\">expose</span> offset<br/>  <span class=\"kw1\">return</span> offset <span class=\"sy0\">*</span> <span class=\"nu0\">60</span><br/>\u00a0<br/><span class=\"co1\">-- our database of timezones</span><br/>::class timezonedatabase<br/><span class=\"co1\">-- initialize the class object.  This occurs when the program is first loaded</span><br/>::method init class<br/>  <span class=\"kw1\">expose</span> timezones<br/>\u00a0<br/>  timezones = <span class=\"sy0\">.</span><span class=\"kw6\">directory</span>~new<br/>  <span class=\"co1\">-- extract the timezone data which is conveniently stored in a method</span><br/>  data = self~instanceMethod<span class=\"br0\">(</span><span class=\"st0\">'TIMEZONEDATA'</span><span class=\"br0\">)</span>~<span class=\"kw2\">source</span><br/>\u00a0<br/>  <span class=\"kw1\">loop</span> line <span class=\"kw2\">over</span> data<br/>    <span class=\"co1\">-- skip over the comment delimiters, blank lines, and the 'return'</span><br/>    <span class=\"co1\">-- lines that force the comments to be included in the source</span><br/>    <span class=\"kw1\">if</span> line = <span class=\"st0\">'/*'</span> <span class=\"sy0\">|</span> line = <span class=\"st0\">'*/'</span> <span class=\"sy0\">|</span> line = <span class=\"st0\">''</span> <span class=\"sy0\">|</span> line = <span class=\"st0\">'return'</span> <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span><br/>    <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> line <span class=\"st0\">'{'</span> region <span class=\"st0\">'}'</span><br/>    <span class=\"kw1\">if</span> region <span class=\"sy0\">\\</span>= <span class=\"st0\">''</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>       zregion = region<br/>       <span class=\"kw1\">iterate</span><br/>    <span class=\"kw3\">end</span><br/>    <span class=\"kw3\">else</span> <span class=\"kw1\">do</span><br/>       <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> line <span class=\"kw6\">abbrev</span> <span class=\"sy0\">.</span> <span class=\"st0\">'!'</span> fullname <span class=\"st0\">'!'</span> altname <span class=\"sy0\">.</span> <span class=\"st0\">'!'</span> offset <span class=\"sy0\">.</span><br/>       timezone = <span class=\"sy0\">.</span>timezone~new<span class=\"br0\">(</span><span class=\"kw6\">abbrev</span>, fullname, offset, altname, zregion<span class=\"br0\">)</span><br/>       timezones<span class=\"br0\">[</span>timezone~code<span class=\"br0\">]</span> = timezone<br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw3\">end</span><br/>\u00a0<br/>::method getTimezone class<br/>  <span class=\"kw1\">expose</span> timezones<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> code<br/>  <span class=\"kw1\">return</span> timezones<span class=\"br0\">[</span>code~<span class=\"kw2\">upper</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"co1\">-- this is a dummy method containing the timezone database data.</span><br/><span class=\"co1\">-- we'll access the source directly and extract the data held in comments</span><br/><span class=\"co1\">-- the two return statements force the comment lines to be included in the</span><br/><span class=\"co1\">-- source rather than processed as part of comments between directives</span><br/>::method timeZoneData class private<br/><span class=\"kw1\">return</span><br/><span class=\"coMULTI\">/*<br/>{Universal}<br/>UTC \u00a0! Coordinated Universal Time         \u00a0!       \u00a0!   0<br/>\u00a0<br/>{Europe}<br/>BST \u00a0! British Summer Time                \u00a0!       \u00a0!  +1<br/>CEST\u00a0! Central European Summer Time       \u00a0!       \u00a0!  +2<br/>CET \u00a0! Central European Time              \u00a0!       \u00a0!  +1<br/>EEST\u00a0! Eastern European Summer Time       \u00a0!       \u00a0!  +3<br/>EET \u00a0! Eastern European Time              \u00a0!       \u00a0!  +2<br/>GMT \u00a0! Greenwich Mean Time                \u00a0!       \u00a0!   0<br/>IST \u00a0! Irish Standard Time                \u00a0!       \u00a0!  +1<br/>KUYT\u00a0! Kuybyshev Time                     \u00a0!       \u00a0!  +4<br/>MSD \u00a0! Moscow Daylight Time               \u00a0!       \u00a0!  +4<br/>MSK \u00a0! Moscow Standard Time               \u00a0!       \u00a0!  +3<br/>SAMT\u00a0! Samara Time                        \u00a0!       \u00a0!  +4<br/>WEST\u00a0! Western European Summer Time       \u00a0!       \u00a0!  +1<br/>WET \u00a0! Western European Time              \u00a0!       \u00a0!   0<br/>\u00a0<br/>{North America}<br/>ADT \u00a0! Atlantic Daylight Time             \u00a0! HAA   \u00a0!  -3<br/>AKDT\u00a0! Alaska Daylight Time               \u00a0! HAY   \u00a0!  -8<br/>AKST\u00a0! Alaska Standard Time               \u00a0! HNY   \u00a0!  -9<br/>AST \u00a0! Atlantic Standard Time             \u00a0! HNA   \u00a0!  -4<br/>CDT \u00a0! Central Daylight Time              \u00a0! HAC   \u00a0!  -5<br/>CST \u00a0! Central Standard Time              \u00a0! HNC   \u00a0!  -6<br/>EDT \u00a0! Eastern Daylight Time              \u00a0! HAE   \u00a0!  -4<br/>EGST\u00a0! Eastern Greenland Summer Time      \u00a0!       \u00a0!   0<br/>EGT \u00a0! East Greenland Time                \u00a0!       \u00a0!  -1<br/>EST \u00a0! Eastern Standard Time              \u00a0! HNE,ET\u00a0!  -5<br/>HADT\u00a0! Hawaii-Aleutian Daylight Time      \u00a0!       \u00a0!  -9<br/>HAST\u00a0! Hawaii-Aleutian Standard Time      \u00a0!       \u00a0! -10<br/>MDT \u00a0! Mountain Daylight Time             \u00a0! HAR   \u00a0!  -6<br/>MST \u00a0! Mountain Standard Time             \u00a0! HNR   \u00a0!  -7<br/>NDT \u00a0! Newfoundland Daylight Time         \u00a0! HAT   \u00a0!  -2.5<br/>NST \u00a0! Newfoundland Standard Time         \u00a0! HNT   \u00a0!  -3.5<br/>PDT \u00a0! Pacific Daylight Time              \u00a0! HAP   \u00a0!  -7<br/>PMDT\u00a0! Pierre &amp; Miquelon Daylight Time    \u00a0!       \u00a0!  -2<br/>PMST\u00a0! Pierre &amp; Miquelon Standard Time    \u00a0!       \u00a0!  -3<br/>PST \u00a0! Pacific Standard Time              \u00a0! HNP,PT\u00a0!  -8<br/>WGST\u00a0! Western Greenland Summer Time      \u00a0!       \u00a0!  -2<br/>WGT \u00a0! West Greenland Time                \u00a0!       \u00a0!  -3<br/>\u00a0<br/>{India and Indian Ocean}<br/>IST \u00a0! India Standard Time                \u00a0!       \u00a0!  +5.5<br/>PKT \u00a0! Pakistan Standard Time             \u00a0!       \u00a0!  +5<br/>BST \u00a0! Bangladesh Standard Time           \u00a0!       \u00a0!  +6 -- Note: collision with British Summer Time<br/>NPT \u00a0! Nepal Time                         \u00a0!       \u00a0!  +5.75<br/>BTT \u00a0! Bhutan Time                        \u00a0!       \u00a0!  +6<br/>BIOT\u00a0! British Indian Ocean Territory Time\u00a0! IOT   \u00a0!  +6<br/>MVT \u00a0! Maldives Time                      \u00a0!       \u00a0!  +5<br/>CCT \u00a0! Cocos Islands Time                 \u00a0!       \u00a0!  +6.5<br/>TFT \u00a0! French Southern and Antarctic Time \u00a0!       \u00a0!  +5<br/>*/</span><br/><span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "Pascal", "loc": 11, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> DateTime<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> DateTime<span class=\"sy0\">::</span><span class=\"me2\">Format</span><span class=\"sy0\">::</span><span class=\"me2\">Strptime</span> <span class=\"st_h\">'strptime'</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> feature <span class=\"st_h\">'say'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=</span>  <span class=\"st_h\">'March 7 2009 7:30pm EST'</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$input</span>    <span class=\"sy0\">=~</span> <a href=\"http://perldoc.perl.org/functions/s.html\"><span class=\"kw3\">s</span></a><span class=\"br0\">{</span>EST<span class=\"br0\">}</span><span class=\"br0\">{</span>America<span class=\"sy0\">/</span>New_York<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>say strptime<span class=\"br0\">(</span><span class=\"st_h\">'%b\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%O'</span><span class=\"sy0\">,</span> <span class=\"re0\">$input</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">-&gt;</span><span class=\"me1\">add</span><span class=\"br0\">(</span>hours <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> <br/>        <span class=\"sy0\">-&gt;</span><span class=\"me1\">set_time_zone</span><span class=\"br0\">(</span><span class=\"st_h\">'America/Edmonton'</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">-&gt;</span><span class=\"me1\">format_cldr</span><span class=\"br0\">(</span><span class=\"st_h\">'MMMM d yyyy h:mma zzz'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 11, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> DateTime<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> DateTime<span class=\"sy0\">::</span><span class=\"me2\">Format</span><span class=\"sy0\">::</span><span class=\"me2\">Strptime</span> <span class=\"st_h\">'strptime'</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> feature <span class=\"st_h\">'say'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=</span>  <span class=\"st_h\">'March 7 2009 7:30pm EST'</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$input</span>    <span class=\"sy0\">=~</span> <a href=\"http://perldoc.perl.org/functions/s.html\"><span class=\"kw3\">s</span></a><span class=\"br0\">{</span>EST<span class=\"br0\">}</span><span class=\"br0\">{</span>America<span class=\"sy0\">/</span>New_York<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>say strptime<span class=\"br0\">(</span><span class=\"st_h\">'%b\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%O'</span><span class=\"sy0\">,</span> <span class=\"re0\">$input</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">-&gt;</span><span class=\"me1\">add</span><span class=\"br0\">(</span>hours <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> <br/>        <span class=\"sy0\">-&gt;</span><span class=\"me1\">set_time_zone</span><span class=\"br0\">(</span><span class=\"st_h\">'America/Edmonton'</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">-&gt;</span><span class=\"me1\">format_cldr</span><span class=\"br0\">(</span><span class=\"st_h\">'MMMM d yyyy h:mma zzz'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 52, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">@month</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&lt;</span>January February March April May June July August September October November December<span class=\"sy0\">&gt;;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">%month</span> <span class=\"sy0\">=</span> flat <span class=\"br0\">(</span><span class=\"re0\">@month</span> <span class=\"kw1\">Z</span><span class=\"sy0\">=&gt;</span> <span class=\"sy0\">^</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">@month</span>\u00bb<span class=\"sy0\">.</span><span class=\"kw3\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw1\">Z</span><span class=\"sy0\">=&gt;</span> <span class=\"sy0\">^</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Sept'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">grammar</span> US<span class=\"sy0\">-</span>DateTime <span class=\"br0\">{</span><br/>    <span class=\"kw2\">rule</span> TOP <span class=\"br0\">{</span> <span class=\"sy0\">&lt;</span>month<span class=\"sy0\">&gt;</span> <span class=\"sy0\">&lt;</span>day<span class=\"sy0\">&gt;</span><span class=\"st_h\">','</span><span class=\"sy0\">?</span> <span class=\"sy0\">&lt;</span>year<span class=\"sy0\">&gt;</span><span class=\"st_h\">','</span><span class=\"sy0\">?</span> <span class=\"sy0\">&lt;</span>time<span class=\"sy0\">&gt;</span> <span class=\"sy0\">&lt;</span>tz<span class=\"sy0\">&gt;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">token</span> month <span class=\"br0\">{</span><br/>\t<span class=\"br0\">(</span>\\w<span class=\"sy0\">+</span><span class=\"br0\">)</span><span class=\"st_h\">'.'</span><span class=\"sy0\">?</span>  <span class=\"br0\">{</span> make <span class=\"re0\">%month</span><span class=\"br0\">{</span><span class=\"co3\">$0</span><span class=\"br0\">}</span> <span class=\"sy0\">//</span> <span class=\"kw1\">die</span> <span class=\"st0\">\"Bad month name: $0\"</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">token</span> day <span class=\"br0\">{</span> <span class=\"br0\">(</span>\\d <span class=\"sy0\">**</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> make <span class=\"sy0\">+</span><span class=\"co3\">$0</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">token</span> year <span class=\"br0\">{</span> <span class=\"br0\">(</span>\\d <span class=\"sy0\">**</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> make <span class=\"sy0\">+</span><span class=\"co3\">$0</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">token</span> time <span class=\"br0\">{</span><br/>\t<span class=\"br0\">(</span>\\d <span class=\"sy0\">**</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"st_h\">':'</span> <span class=\"br0\">(</span>\\d <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> \\h<span class=\"sy0\">*</span> <span class=\"br0\">(</span> <span class=\"sy0\">:</span><span class=\"kw3\">i</span> <span class=\"sy0\">&lt;</span><span class=\"br0\">[</span>ap<span class=\"br0\">]</span><span class=\"sy0\">&gt;</span> \\<span class=\"sy0\">.?</span> m <span class=\"sy0\">|</span> <span class=\"st_h\">''</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">my</span> <span class=\"re0\">$h</span> <span class=\"sy0\">=</span> <span class=\"co3\">$0</span> <span class=\"sy0\">%</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span><br/>\t    <span class=\"kw1\">my</span> <span class=\"re0\">$m</span> <span class=\"sy0\">=</span> <span class=\"co3\">$1</span><span class=\"sy0\">;</span><br/>\t    <span class=\"re0\">$h</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">12</span> <span class=\"kw1\">if</span> <span class=\"co3\">$2</span> <span class=\"kw1\">and</span> <span class=\"co3\">$2</span><span class=\"sy0\">.</span><span class=\"kw3\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">lc</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'p'</span><span class=\"sy0\">;</span><br/>\t    make <span class=\"re0\">$h</span> <span class=\"sy0\">*</span> <span class=\"nu0\">60</span> <span class=\"sy0\">+</span> <span class=\"re0\">$m</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">token</span> tz <span class=\"br0\">{</span>  <span class=\"co1\"># quick and dirty for this task</span><br/>        <span class=\"br0\">[</span><br/>        <span class=\"sy0\">|</span>        EDT  <span class=\"br0\">{</span> make <span class=\"sy0\">-</span><span class=\"nu0\">4</span> <span class=\"br0\">}</span><br/>        <span class=\"sy0\">|</span> <span class=\"br0\">[</span> EST<span class=\"sy0\">|</span> CDT<span class=\"br0\">]</span> <span class=\"br0\">{</span> make <span class=\"sy0\">-</span><span class=\"nu0\">5</span> <span class=\"br0\">}</span><br/>        <span class=\"sy0\">|</span> <span class=\"br0\">[</span> CST<span class=\"sy0\">|</span> MDT<span class=\"br0\">]</span> <span class=\"br0\">{</span> make <span class=\"sy0\">-</span><span class=\"nu0\">6</span> <span class=\"br0\">}</span><br/>        <span class=\"sy0\">|</span> <span class=\"br0\">[</span> MST<span class=\"sy0\">|</span> PDT<span class=\"br0\">]</span> <span class=\"br0\">{</span> make <span class=\"sy0\">-</span><span class=\"nu0\">7</span> <span class=\"br0\">}</span><br/>        <span class=\"sy0\">|</span> <span class=\"br0\">[</span> PST<span class=\"sy0\">|</span>AKDT<span class=\"br0\">]</span> <span class=\"br0\">{</span> make <span class=\"sy0\">-</span><span class=\"nu0\">8</span> <span class=\"br0\">}</span><br/>        <span class=\"sy0\">|</span> <span class=\"br0\">[</span>AKST<span class=\"sy0\">|</span>HADT<span class=\"br0\">]</span> <span class=\"br0\">{</span> make <span class=\"sy0\">-</span><span class=\"nu0\">9</span> <span class=\"br0\">}</span><br/>        <span class=\"sy0\">|</span>  HAST<br/>        <span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>$<span class=\"sy0\">/</span> <span class=\"sy0\">=</span> US<span class=\"sy0\">-</span>DateTime<span class=\"sy0\">.</span><span class=\"me1\">parse</span><span class=\"br0\">(</span><span class=\"st_h\">'March 7 2009 7:30pm EST'</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"kw1\">die</span> <span class=\"st0\">\"Can't parse date\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$year</span>     <span class=\"sy0\">=</span> <span class=\"re0\">$&lt;year</span><span class=\"sy0\">&gt;.</span><span class=\"me1\">ast</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$month</span>    <span class=\"sy0\">=</span> <span class=\"re0\">$&lt;month</span><span class=\"sy0\">&gt;.</span><span class=\"me1\">ast</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$day</span>      <span class=\"sy0\">=</span> <span class=\"re0\">$&lt;day</span><span class=\"sy0\">&gt;.</span><span class=\"me1\">ast</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$hour</span>     <span class=\"sy0\">=</span> <span class=\"re0\">$&lt;time</span><span class=\"sy0\">&gt;.</span><span class=\"me1\">ast</span> <span class=\"kw1\">div</span> <span class=\"nu0\">60</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$minute</span>   <span class=\"sy0\">=</span> <span class=\"re0\">$&lt;time</span><span class=\"sy0\">&gt;.</span><span class=\"me1\">ast</span> mod <span class=\"nu0\">60</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$timezone</span> <span class=\"sy0\">=</span> <span class=\"re0\">$&lt;tz</span><span class=\"sy0\">&gt;.</span><span class=\"me1\">ast</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3600</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$dt</span> <span class=\"sy0\">=</span> DateTime<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"re0\">$year</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$month</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$day</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$hour</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$minute</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$timezone</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">in</span><span class=\"sy0\">-</span>timezone<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$dt</span> <span class=\"sy0\">=</span> <span class=\"re0\">$dt</span><span class=\"sy0\">.</span><span class=\"me1\">later</span><span class=\"br0\">(</span>hours <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st0\">\"12 hours later, GMT: $dt\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"12 hours later, PST: $dt.in-timezone(-8 * 3600)\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 10, "block": "<pre class=\"text highlighted_source\">include builtins\\timedate.e<br/>set_timedate_formats({\"Mmmm d yyyy h:mmpm tz\"})<br/>timedate td = parse_date_string(\"March 7 2009 7:30pm EST\")<br/>atom twelvehours = timedelta(hours:=12)<br/>td = adjust_timedate(td,twelvehours)<br/>?format_timedate(td)<br/>td = change_timezone(td,\"ACDT\")  -- extra credit<br/>?format_timedate(td)<br/>td = adjust_timedate(td,timedelta(days:=31*4))<br/>?format_timedate(td)</pre>"}, {"lang": "PHP", "loc": 5, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"re0\">$time</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> DateTime<span class=\"br0\">(</span><span class=\"st_h\">'March 7 2009 7:30pm EST'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$time</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">modify</span><span class=\"br0\">(</span><span class=\"st_h\">'+12 hours'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"re0\">$time</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st_h\">'c'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 19, "block": "<pre class=\"text highlighted_source\">(de timePlus12 (Str)<br/>   (use (@Mon @Day @Year @Time @Zone)<br/>      (and<br/>         (match<br/>            '(@Mon \" \" @Day \" \" @Year \" \" @Time \" \" @Zone)<br/>            (chop Str) )<br/>         (setq @Mon (index (pack @Mon) *MonFmt))<br/>         (setq @Day (format @Day))<br/>         (setq @Year (format @Year))<br/>         (setq @Time<br/>            (case (tail 2 @Time)<br/>               ((\"a\" \"m\") ($tim (head -2 @Time)))<br/>               ((\"p\" \"m\") (+ `(time 12 0) ($tim (head -2 @Time))))<br/>               (T ($tim @Time)) ) )<br/>         (let? Date (date @Year @Mon @Day)<br/>            (when (&gt;= (inc '@Time `(time 12 0)) 86400)<br/>               (dec '@Time 86400)<br/>               (inc 'Date) )<br/>            (pack (dat$ Date \"-\") \" \" (tim$ @Time T) \" \" @Zone) ) ) ) )</pre>"}, {"lang": "Pike", "loc": 2, "block": "<pre class=\"pike highlighted_source\">&gt; <span class=\"br0\">(</span>Calendar.<span class=\"me1\">dwim_time</span><span class=\"br0\">(</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>Calendar.<span class=\"me1\">Hour</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>&gt;set_timezone<span class=\"br0\">(</span><span class=\"st0\">\"CET\"</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>&gt;format_ext_time<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>Result: <span class=\"st0\">\"Saturday, 7 March 2009 12:30:00\"</span></pre>"}, {"lang": "PL/I", "loc": 8, "block": "<pre class=\"text highlighted_source\">/* The PL/I date functions handle dates and time in 49             */<br/>/* different formats, but not that particular one.  For any of the */<br/>/* standard formats, the following date manipulation will add */<br/>/* 12 hours to the current date/time. */<br/>\u00a0<br/>seconds = SECS(DATETIME());<br/>seconds = seconds + 12*60*60;<br/>put list (SECSTODATE(seconds));</pre>"}, {"lang": "PowerShell", "loc": 4, "block": "<pre class=\"powershell highlighted_source\"><span class=\"re0\">$date</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>DateTime<span class=\"br0\">]</span>::Parse<span class=\"br0\">(</span><span class=\"st0\">\"March 7 2009 7:30pm -5\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">write-host</span> <span class=\"re0\">$date</span><br/><span class=\"kw1\">write-host</span> <span class=\"re0\">$date</span>.AddHours<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><br/><span class=\"kw1\">write-host</span> <span class=\"br0\">[</span>TimeZoneInfo<span class=\"br0\">]</span>::ConvertTimeBySystemTimeZoneId<span class=\"br0\">(</span><span class=\"re0\">$date</span>.AddHours<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">\"Vladivostok Standard Time\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "PureBasic", "loc": 100, "block": "<pre class=\"purebasic highlighted_source\">\u00a0<br/><span class=\"kw1\">EnableExplicit</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.i ToPBDate<span class=\"br0\">(</span><span class=\"kw2\">Date</span>$, <span class=\"sy0\">*</span>zone.String<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">year</span>, <span class=\"kw2\">month</span>, <span class=\"kw2\">day</span>, <span class=\"kw2\">hour</span>, <span class=\"kw2\">minute</span> <br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">month</span>$, temp$, time$, pm$, zone$<br/>  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"kw2\">StringField</span><span class=\"br0\">(</span><span class=\"kw2\">date</span>$, <span class=\"nu0\">1</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">day</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span><span class=\"kw2\">date</span>$, <span class=\"nu0\">2</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">year</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span><span class=\"kw2\">date</span>$, <span class=\"nu0\">3</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  time$ <span class=\"sy0\">=</span> <span class=\"kw2\">StringField</span><span class=\"br0\">(</span><span class=\"kw2\">date</span>$, <span class=\"nu0\">4</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>  zone$ <span class=\"sy0\">=</span> <span class=\"kw2\">StringField</span><span class=\"br0\">(</span><span class=\"kw2\">date</span>$, <span class=\"nu0\">5</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">Select</span> <span class=\"kw2\">month</span>$<br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"January\"</span>  \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"February\"</span> \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"March\"</span>    \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"April\"</span>    \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"May\"</span>      \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"June\"</span>     \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"July\"</span>     \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"August\"</span>   \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"September\"</span>\u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"October\"</span>  \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"November\"</span> \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><br/>    <span class=\"kw1\">Case</span> <span class=\"st0\">\"December\"</span> \u00a0: <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><br/>  <span class=\"kw1\">EndSelect</span><br/>\u00a0<br/>  <span class=\"kw2\">hour</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>time$, <span class=\"nu0\">1</span>, <span class=\"st0\">\":\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  temp$ <span class=\"sy0\">=</span> <span class=\"kw2\">StringField</span><span class=\"br0\">(</span>time$, <span class=\"nu0\">2</span>, <span class=\"st0\">\":\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">minute</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">Left</span><span class=\"br0\">(</span>temp$, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  pm$ <span class=\"sy0\">=</span> <span class=\"kw2\">Right</span><span class=\"br0\">(</span>temp$, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> pm$ <span class=\"sy0\">=</span> <span class=\"st0\">\"am\"</span> <br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">hour</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span>\u00a0: <span class=\"kw2\">hour</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">Else</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">hour</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">12</span>\u00a0: <span class=\"kw2\">hour</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"sy0\">*</span>zone<span class=\"sy0\">\\</span>s <span class=\"sy0\">=</span> zone$<br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"kw2\">Date</span><span class=\"br0\">(</span><span class=\"kw2\">year</span>, <span class=\"kw2\">month</span>, <span class=\"kw2\">day</span>, <span class=\"kw2\">hour</span>, <span class=\"kw2\">minute</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.s FromPBDate<span class=\"br0\">(</span><span class=\"kw2\">Date</span>, zone$<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">year</span>$  <span class=\"sy0\">=</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"kw2\">Year</span><span class=\"br0\">(</span><span class=\"kw2\">Date</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">month</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Month</span><span class=\"br0\">(</span><span class=\"kw2\">Date</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">day</span>$ <span class=\"sy0\">=</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"kw2\">Day</span><span class=\"br0\">(</span><span class=\"kw2\">Date</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">hour</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Hour</span><span class=\"br0\">(</span><span class=\"kw2\">Date</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">minute</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Minute</span><span class=\"br0\">(</span><span class=\"kw2\">Date</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> <span class=\"kw2\">month</span>$, time$, pm$, result$ <br/>\u00a0<br/>  <span class=\"kw1\">Select</span> <span class=\"kw2\">month</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">1</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"January\"</span> <br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">2</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"February\"</span> <br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">3</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"March\"</span>  <br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">4</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"April\"</span> <br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">5</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"May\"</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">6</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"June\"</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">7</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"July\"</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">8</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"August\"</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">9</span> \u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"September\"</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">10</span>\u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"October\"</span> <br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">11</span>\u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"November\"</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">12</span>\u00a0:  <span class=\"kw2\">month</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"December\"</span><br/>  <span class=\"kw1\">EndSelect</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">hour</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">12</span><br/>    <span class=\"kw2\">hour</span> <span class=\"sy0\">-</span> <span class=\"nu0\">12</span><br/>    pm$ <span class=\"sy0\">=</span> <span class=\"st0\">\"pm\"</span><br/>  <span class=\"kw1\">ElseIf</span> <span class=\"kw2\">hour</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><br/>    pm$ <span class=\"sy0\">=</span> <span class=\"st0\">\"pm\"</span><br/>  <span class=\"kw1\">Else</span>    <br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">hour</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\u00a0: <span class=\"kw2\">hour</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>    pm$ <span class=\"sy0\">=</span> <span class=\"st0\">\"am\"</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  time$ <span class=\"sy0\">=</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"kw2\">hour</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\":\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"kw2\">minute</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span>, <span class=\"st0\">\"0\"</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> pm$ <br/>  result$ <span class=\"sy0\">=</span> <span class=\"kw2\">month</span>$ <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">day</span>$ <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">year</span>$ <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> time$ <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> zone$  <br/>  <span class=\"kw1\">ProcedureReturn</span> result$<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> <span class=\"kw2\">date</span><br/><span class=\"kw1\">Define</span> date1$, date2$<br/><span class=\"kw1\">Define</span> zone.String<br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  date1$ <span class=\"sy0\">=</span> <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Starting date/time\u00a0: \"</span> <span class=\"sy0\">+</span> date1$<span class=\"br0\">)</span><br/>  <span class=\"kw2\">date</span> <span class=\"sy0\">=</span> ToPBDate<span class=\"br0\">(</span>date1$, @zone<span class=\"br0\">)</span><br/>  <span class=\"kw2\">date</span> <span class=\"sy0\">=</span> <span class=\"kw2\">AddDate</span><span class=\"br0\">(</span><span class=\"kw2\">date</span>, #PB_Date_Hour, <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"co1\">; add 12 hours</span><br/>  date2$ <span class=\"sy0\">=</span> FromPBDate<span class=\"br0\">(</span><span class=\"kw2\">date</span>, zone<span class=\"sy0\">\\</span>s<span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"12 hours later    \u00a0: \"</span> <span class=\"sy0\">+</span> date2$<span class=\"br0\">)</span><br/>  <span class=\"kw2\">date</span> <span class=\"sy0\">=</span> <span class=\"kw2\">AddDate</span><span class=\"br0\">(</span><span class=\"kw2\">date</span>, #PB_Date_Hour, <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"co1\">; adjust to GMT</span><br/>  date2$ <span class=\"sy0\">=</span> FromPBDate<span class=\"br0\">(</span><span class=\"kw2\">date</span>, <span class=\"st0\">\"GMT\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Or in GMT timezone\u00a0: \"</span> <span class=\"sy0\">+</span> date2$<span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Press any key to close the console\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Repeat</span>: <span class=\"kw2\">Delay</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Until</span> <span class=\"kw2\">Inkey</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 12, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">datetime</span><br/>\u00a0<br/><span class=\"kw1\">def</span> mt<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>\tdatime1<span class=\"sy0\">=</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>\tformatting <span class=\"sy0\">=</span> <span class=\"st0\">\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p \"</span><br/>\tdatime2 <span class=\"sy0\">=</span> datime1<span class=\"br0\">[</span>:-<span class=\"nu0\">3</span><span class=\"br0\">]</span>  <span class=\"co1\"># format can't handle \"EST\" for some reason</span><br/>\ttdelta <span class=\"sy0\">=</span> <span class=\"kw3\">datetime</span>.<span class=\"me1\">timedelta</span><span class=\"br0\">(</span>hours<span class=\"sy0\">=</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>\t\t<span class=\"co1\"># twelve hours..</span><br/>\ts3 <span class=\"sy0\">=</span> <span class=\"kw3\">datetime</span>.<span class=\"kw3\">datetime</span>.<span class=\"me1\">strptime</span><span class=\"br0\">(</span>datime2<span class=\"sy0\">,</span> formatting<span class=\"br0\">)</span><br/>\tdatime2 <span class=\"sy0\">=</span> s3+tdelta<br/>\t<span class=\"kw1\">print</span> datime2.<span class=\"me1\">strftime</span><span class=\"br0\">(</span><span class=\"st0\">\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%Z\"</span><span class=\"br0\">)</span> + datime1<span class=\"br0\">[</span>-<span class=\"nu0\">3</span>:<span class=\"br0\">]</span><br/>\u00a0<br/>mt<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 5, "block": "<pre class=\"text highlighted_source\">time &lt;- strptime(\"March 7 2009 7:30pm EST\", \"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%Z\") # \"2009-03-07 19:30:00\"<br/>isotime &lt;- ISOdatetime(1900 + time$year, time$mon, time$mday, <br/>   time$hour, time$min, time$sec, \"EST\")                           # \"2009-02-07 19:30:00 EST\"<br/>twelvehourslater &lt;- isotime + 12 * 60 * 60                         # \"2009-02-08 07:30:00 EST\"<br/>timeincentraleurope &lt;- format(isotime, tz=\"CET\", usetz=TRUE)       #\"2009-02-08 01:30:00 CET\"</pre>"}, {"lang": "Racket", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require srfi/19)<br/>\u00a0<br/>(define 12hours (make-time time-duration 0 (* 12 60 60)))<br/>\u00a0<br/>(define (string-&gt;time s)<br/>  (define t (date-&gt;time-utc (string-&gt;date s \"~B~e~Y~H~M\")))<br/>  (if (regexp-match \"pm\" s)<br/>      (add-duration t 12hours)<br/>      t))<br/>\u00a0<br/>(date-&gt;string<br/> (time-utc-&gt;date<br/>  (add-duration<br/>   (string-&gt;time \"March 7 2009 7:30pm est\" )<br/>   12hours))<br/> \"~a ~d ~b ~Y ~H:~M\")<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 25, "block": "<pre class=\"rebol highlighted_source\"><span class=\"coMULTI\">rebol [<br/>\tTitle: \"Date Manipulation\"<br/>\tURL: http://rosettacode.org/wiki/Date_Manipulation<br/>]</span><br/>\u00a0<br/><span class=\"co1\">; Only North American zones here -- feel free to extend for your area.</span><br/>\u00a0<br/>zones: <span class=\"br0\">[</span><br/>\tNST -<span class=\"nu0\">3</span>:<span class=\"nu0\">30</span> NDT -<span class=\"nu0\">2</span>:<span class=\"nu0\">30</span> AST -<span class=\"nu0\">4</span>:00 ADT -<span class=\"nu0\">3</span>:00 EST -<span class=\"nu0\">5</span>:00 EDT -<span class=\"nu0\">4</span>:00<br/>\tCST -<span class=\"nu0\">6</span>:00 CDT -<span class=\"nu0\">5</span>:00 MST -<span class=\"nu0\">7</span>:00 MDT -<span class=\"nu0\">6</span>:00 PST -<span class=\"nu0\">8</span>:00 PDT -<span class=\"nu0\">7</span>:00 AKST -<span class=\"nu0\">9</span>:00<br/>\tAKDT -<span class=\"nu0\">8</span>:00 HAST -<span class=\"nu0\">10</span>:00 HADT -<span class=\"nu0\">9</span>:00<span class=\"br0\">]</span><br/>\u00a0<br/>read-time: <span class=\"kw2\">func</span> <span class=\"br0\">[</span><br/>\ttext<br/>\t<span class=\"sy0\">/</span>local m d y t z<br/><span class=\"br0\">]</span><span class=\"br0\">[</span><br/>\t<span class=\"kw3\">parse</span> <span class=\"kw3\">load</span> text <span class=\"br0\">[</span><br/>\t\t<span class=\"kw3\">set</span> m word<span class=\"sy0\">!</span> <span class=\"br0\">(</span>m: <span class=\"kw3\">index?</span> <span class=\"kw3\">find</span> system<span class=\"sy0\">/</span>locale<span class=\"sy0\">/</span>months <span class=\"kw3\">to-string</span> m<span class=\"br0\">)</span><br/>\t\t<span class=\"kw3\">set</span> d <span class=\"kw1\">integer!</span>  <span class=\"kw3\">set</span> y <span class=\"kw1\">integer!</span>  <br/>\t\t<span class=\"kw3\">set</span> t <span class=\"kw1\">time!</span>  <span class=\"kw3\">set</span> tz word<span class=\"sy0\">!</span><span class=\"br0\">]</span><br/>\t<span class=\"kw3\">to-date</span> <span class=\"kw2\">reduce</span> <span class=\"br0\">[</span>y m d t  zones<span class=\"sy0\">/</span>:tz<span class=\"br0\">]</span><br/><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw3\">print</span> <span class=\"nu0\">12</span>:00 + read-time <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>\u00a0</pre>"}, {"lang": "Red", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>d: 07-Mar-2009/19:30 + 12:00<br/>print d<br/>8-Mar-2009/7:30:00<br/>d/timezone: 1<br/>print d<br/>8-Mar-2009/8:30:00+01:00</pre>"}, {"lang": "REXX", "loc": 16, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program adds 12 hours to a  given date and time, displaying the before and after.*/</span><br/> aDate = <span class=\"st0\">'March 7 2009 7:30pm EST'</span>               <span class=\"coMULTI\">/*the original or base date to be used.*/</span><br/>\u00a0<br/><span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> aDate mon dd yyyy hhmm tz <span class=\"sy0\">.</span>            <span class=\"coMULTI\">/*obtain the various parts and pieces. */</span><br/>\u00a0<br/>  mins = <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'M'</span>, hhmm, <span class=\"st0\">\"C\"</span><span class=\"br0\">)</span>                    <span class=\"coMULTI\">/*get the number minutes past midnight.*/</span><br/>  mins = mins + <span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"sy0\">*</span><span class=\"nu0\">60</span><span class=\"br0\">)</span>                          <span class=\"coMULTI\">/*add  twelve hours  to the  timestamp.*/</span><br/> nMins = mins <span class=\"sy0\">//</span> <span class=\"nu0\">1440</span>                            <span class=\"coMULTI\">/*compute number min into same/next day*/</span><br/>  days = mins\u00a0%  <span class=\"nu0\">1440</span>                            <span class=\"coMULTI\">/*compute number of days added to dats.*/</span><br/>aBdays = <span class=\"kw6\">date</span><span class=\"br0\">(</span><span class=\"st0\">'B'</span>, dd <span class=\"kw6\">left</span><span class=\"br0\">(</span>mon,<span class=\"nu0\">3</span><span class=\"br0\">)</span> yyyy<span class=\"br0\">)</span>          <span class=\"coMULTI\">/*number of base days since REXX epoch.*/</span><br/>nBdays = aBdays + days                           <span class=\"coMULTI\">/*now,  add the number of days added.  */</span><br/> nDate = <span class=\"kw6\">date</span><span class=\"br0\">(</span>,nBdays, <span class=\"st0\">'B'</span><span class=\"br0\">)</span>                      <span class=\"coMULTI\">/*calculate the new  date  (maybe).    */</span><br/> nTime = <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'C'</span>, nMins, <span class=\"st0\">\"M\"</span><span class=\"br0\">)</span>                   <span class=\"coMULTI\">/*    \"      \"   \"   time     \"        */</span><br/>\u00a0<br/><span class=\"kw1\">say</span> aDate <span class=\"st0\">' +  12 hours  \u2500\u2500\u2500\u25ba '</span>  ndate ntime tz  <span class=\"coMULTI\">/*display the new timestamp to console.*/</span><br/>                                                 <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 28, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Date manipulation<br/>\u00a0<br/>load \"stdlib.ring\"<br/>dateorigin = \"March 7 2009 7:30pm EST\" <br/>monthname = \"January February March April May June July August September October November December\"<br/>for i = 1 to 12<br/>     if dateorigin[1] = monthname[i]<br/>        monthnum = i<br/>     ok\t<br/>next <br/>thedate = str2list(substr(dateorigin, \" \", nl))<br/>t = thedate[4]\t<br/>t1 = substr(t,\"pm\", \"\")<br/>t2 = substr(t1,\":\",\".\")<br/>t3 = number(t2)<br/>if right(t,2) = \"pm\"<br/>   t3 = t3+ 12<br/>ok<br/>ap = \"pm\"<br/>d = \"07/03/2009\"<br/>if t3 + 12 &gt; 24  <br/>  d = adddays(\"07/03/2009\",1)<br/>  ap = \"am\"<br/>ok<br/>see \"Original - \" + dateorigin + nl<br/>see \"Manipulated - \" + d + \" \" + t1 + ap + nl<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 18, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'time'</span><br/>d = <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>t = <span class=\"kw4\">Time</span>.<span class=\"me1\">parse</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><br/><span class=\"kw3\">puts</span> t.<span class=\"me1\">rfc2822</span><br/><span class=\"kw3\">puts</span> t.<span class=\"me1\">zone</span><br/>\u00a0<br/>new = t <span class=\"sy0\">+</span> <span class=\"nu0\">12</span><span class=\"sy0\">*</span><span class=\"nu0\">3600</span><br/><span class=\"kw3\">puts</span> new.<span class=\"me1\">rfc2822</span><br/><span class=\"kw3\">puts</span> new.<span class=\"me1\">zone</span><br/>\u00a0<br/><span class=\"co1\"># another timezone</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'rubygems'</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'active_support'</span><br/>zone = ActiveSupport::<span class=\"kw4\">TimeZone</span><span class=\"br0\">[</span><span class=\"st0\">'Beijing'</span><span class=\"br0\">]</span><br/>remote = zone.<span class=\"me1\">at</span><span class=\"br0\">(</span>new<span class=\"br0\">)</span><br/><span class=\"co1\"># or, remote = new.in_time_zone('Beijing')</span><br/><span class=\"kw3\">puts</span> remote.<span class=\"me1\">rfc2822</span><br/><span class=\"kw3\">puts</span> remote.<span class=\"me1\">zone</span></pre>"}, {"lang": "Run BASIC", "loc": 18, "block": "<pre class=\"text highlighted_source\">theDate$ = \"March 7 2009 7:30pm EST\"<br/>\u00a0<br/>monthName$ = \"January February March April May June July August September October November December\"<br/>for i = 1 to 12<br/>  if word$(theDate$,1) = word$(monthName$,i) then monthNum = i\t\t\t' turn month name to number<br/>next i<br/>d \t= val(date$(monthNum;\"/\";word$(theDate$,2);\"/\";word$(theDate$,3)))\t' days since Jan 1 1901<br/>t$\t= word$(theDate$,4)\t\t\t\t' get time from theDate$<br/>t1$\t= word$(t$,1,\"pm\")\t\t\t\t' strip pm<br/>t2$\t= word$(t1$,1,\":\") + \".\" + word$(t1$,2,\":\")\t' replace\u00a0: with .<br/>t\t= val(t2$)<br/>if right$(t$,2) = \"pm\" then t = t + 12<br/>ap$\t= \"pm\"<br/>if t + 12 &gt; 24 then <br/>  d\t= d + 1\t\t\t' if over 24 hours add 1 to days since 1/1/1901<br/>  ap$\t= \"am\"<br/>end if<br/>print date$(d);\" \";t1$;ap$</pre>"}, {"lang": "Scala", "loc": 17, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">text</span>.<span class=\"me1\">SimpleDateFormat</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"br0\">{</span>Calendar, Locale, TimeZone<span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> DateManipulation <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> input<span class=\"sy0\">=</span><span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> df<span class=\"sy0\">=</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> SimpleDateFormat<span class=\"br0\">(</span><span class=\"st0\">\"MMMM d yyyy h:mma z\"</span>, Locale.<span class=\"me1\">ENGLISH</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c<span class=\"sy0\">=</span>Calendar.<span class=\"me1\">getInstance</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    c.<span class=\"me1\">setTime</span><span class=\"br0\">(</span>df.<span class=\"me1\">parse</span><span class=\"br0\">(</span>input<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    c.<span class=\"me1\">add</span><span class=\"br0\">(</span>Calendar.<span class=\"me1\">HOUR_OF_DAY</span>, <span class=\"nu0\">12</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span>df.<span class=\"me1\">format</span><span class=\"br0\">(</span>c.<span class=\"me1\">getTime</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    df.<span class=\"me1\">setTimeZone</span><span class=\"br0\">(</span>TimeZone.<span class=\"me1\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">\"GMT\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span>df.<span class=\"me1\">format</span><span class=\"br0\">(</span>c.<span class=\"me1\">getTime</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 46, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"time.s7i\";<br/>  include \"duration.s7i\";<br/>\u00a0<br/>const func time: parseDate (in string: dateStri) is func<br/>  result<br/>    var time: aTime is time.value;<br/>  local<br/>    const array string: monthNames is [] (\"January\", \"February\", \"March\", \"April\",<br/>        \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\");<br/>    var array string: dateParts is 0 times \"\";<br/>    var integer: month is 0;<br/>    var string: timeStri is \"\";<br/>  begin<br/>    dateParts\u00a0:= split(dateStri, ' ');<br/>    aTime.year\u00a0:= integer parse (dateParts[3]);<br/>    aTime.month\u00a0:= 1;<br/>    while monthNames[aTime.month] &lt;&gt; dateParts[1] do<br/>      incr(aTime.month);<br/>    end while;<br/>    aTime.day\u00a0:= integer parse (dateParts[2]);<br/>    timeStri\u00a0:= dateParts[4];<br/>    if endsWith(timeStri, \"am\") then<br/>      aTime.hour\u00a0:= integer parse (timeStri[.. pred(pos(timeStri, ':'))]);<br/>    elsif endsWith(timeStri, \"pm\") then<br/>      aTime.hour\u00a0:= integer parse (timeStri[.. pred(pos(timeStri, ':'))]) + 12;<br/>    else<br/>      raise RANGE_ERROR;<br/>    end if;<br/>    aTime.minute\u00a0:= integer parse (timeStri[succ(pos(timeStri, ':')) .. length(timeStri) - 2]);<br/>    if dateParts[5] &lt;&gt; \"UTC\" then<br/>      aTime.timeZone\u00a0:= 60 * integer parse (dateParts[5][4 ..]);<br/>    end if;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var time: aTime is time.value;<br/>  begin<br/>    aTime\u00a0:= parseDate(\"March 7 2009 7:30pm UTC-05\");<br/>    writeln(\"Given:         \" &lt;&amp; aTime);<br/>    aTime +:= 1 . DAYS;<br/>    writeln(\"A day later:   \" &lt;&amp; aTime);<br/>    aTime\u00a0:= toUTC(aTime);<br/>    writeln(\"In UTC:        \" &lt;&amp; aTime);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 9, "block": "<pre class=\"ruby highlighted_source\">var dt = frequire<span class=\"br0\">(</span><span class=\"st0\">'DateTime::Format::Strptime'</span><span class=\"br0\">)</span><br/>\u00a0<br/>var input =  <span class=\"st0\">'March 7 2009 7:30pm EST'</span><br/>input.<span class=\"kw3\">sub!</span><span class=\"br0\">(</span><span class=\"st0\">'EST'</span>, <span class=\"st0\">'America/New_York'</span><span class=\"br0\">)</span><br/>\u00a0<br/>say dt.<span class=\"me1\">strptime</span><span class=\"br0\">(</span><span class=\"st0\">'%b\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%O'</span>, input<span class=\"br0\">)</span>   \\<br/>      .<span class=\"me1\">add</span><span class=\"br0\">(</span>hours <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span>                         \\<br/>      .<span class=\"me1\">set_time_zone</span><span class=\"br0\">(</span><span class=\"st0\">'America/Edmonton'</span><span class=\"br0\">)</span>        \\<br/>      .<span class=\"me1\">format_cldr</span><span class=\"br0\">(</span><span class=\"st0\">'MMMM d yyyy h:mma zzz'</span><span class=\"br0\">)</span></pre>"}, {"lang": "Smalltalk", "loc": 50, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">DateTime</span> extend <span class=\"br0\">[</span><br/>  <span class=\"re5\">setYear</span>: <span class=\"re5\">aNum</span> <span class=\"br0\">[</span> <span class=\"re5\">year</span> <span class=\"sy0\">:=</span> <span class=\"re5\">aNum</span> <span class=\"br0\">]</span><br/><span class=\"br0\">]</span>.<br/>\u00a0<br/><span class=\"re0\">Object</span> subclass: <span class=\"re0\">DateTimeTZ</span> <span class=\"br0\">[</span><br/>  |<span class=\"re3\">dateAndTime timeZoneDST timeZoneName timeZoneVar</span>|<br/>\u00a0<br/>  <span class=\"re0\">DateTimeTZ</span> class &gt;&gt; new <span class=\"br0\">[</span> ^<span class=\"br0\">(</span><span class=\"kw1\">super</span> basicNew<span class=\"br0\">)</span> <span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"re0\">DateTimeTZ</span> class &gt;&gt; readFromWithMeridian: <span class=\"re5\">aStream</span> andTimeZone: <span class=\"re5\">aDict</span> <span class=\"br0\">[</span><br/>    |<span class=\"re3\">me</span>|<br/>    <span class=\"re6\">me</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">self</span> new.<br/>    ^ me initWithMeridian: <span class=\"re5\">aStream</span> andTimeZone: <span class=\"re5\">aDict</span><br/>  <span class=\"br0\">]</span><br/>\u00a0<br/>  initWithMeridian: <span class=\"re5\">aStream</span> andTimeZone: <span class=\"re5\">aDict</span> <span class=\"br0\">[</span> |<span class=\"re3\">s</span>|<br/>    <span class=\"re6\">dateAndTime</span> <span class=\"sy0\">:=</span> <span class=\"re0\">DateTime</span> readFrom: <span class=\"re5\">aStream</span> copy.<br/>    <span class=\"re5\">s</span> <span class=\"sy0\">:=</span> <span class=\"re5\">aStream</span> collection asString.<br/>    <span class=\"re5\">s</span> <span class=\"sy0\">=</span>~ <span class=\"st0\">'[pP][mM]'</span><br/>      ifMatched: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">m</span> |<br/>        <span class=\"re6\">dateAndTime</span> <span class=\"sy0\">:=</span> <span class=\"re5\">dateAndTime</span> + <span class=\"br0\">(</span><span class=\"re0\">Duration</span> days: <span class=\"re5\">0</span> hours: <span class=\"re5\">12</span> minutes: <span class=\"re5\">0</span> seconds: <span class=\"re5\">0</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">]</span>.<br/>    <span class=\"re5\">aDict</span> keysAndValuesDo: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">k</span>\u00a0:<span class=\"re5\">v</span> |<br/>      s <span class=\"sy0\">=</span>~ k<br/>        ifMatched: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">x</span> |<br/>          <span class=\"re6\">dateAndTime</span> <span class=\"sy0\">:=</span> <span class=\"re5\">dateAndTime</span> setOffset: <span class=\"br0\">(</span><span class=\"re5\">v</span> at: <span class=\"re5\">1</span><span class=\"br0\">)</span>.<br/>\t  <span class=\"re5\">timeZoneDST</span> <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"re5\">v</span> at: <span class=\"re5\">2</span><span class=\"br0\">)</span> setOffset: <span class=\"br0\">(</span><span class=\"re5\">v</span> at: <span class=\"re5\">1</span><span class=\"br0\">)</span>.<br/>\t  <span class=\"re5\">timeZoneVar</span> <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"re5\">v</span> at: <span class=\"re5\">3</span><span class=\"br0\">)</span>.<br/>\t  <span class=\"re5\">timeZoneDST</span> setYear: <span class=\"br0\">(</span><span class=\"kw1\">self</span> year<span class=\"br0\">)</span>. <span class=\"coMULTI\">\"ignore the year\"</span><br/>          <span class=\"re6\">timeZoneName</span> <span class=\"sy0\">:=</span> <span class=\"re5\">k</span><br/>        <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span>.<br/>    ^ <span class=\"kw1\">self</span><br/>  <span class=\"br0\">]</span><br/>\u00a0<br/>  setYear: <span class=\"re5\">aNum</span> <span class=\"br0\">[</span> <span class=\"re5\">dateAndTime</span> setYear: <span class=\"re5\">aNum</span> <span class=\"br0\">]</span><br/>  year <span class=\"br0\">[</span> ^ dateAndTime year <span class=\"br0\">]</span><br/>\u00a0<br/>  timeZoneName <span class=\"br0\">[</span> ^timeZoneName <span class=\"br0\">]</span><br/>\u00a0<br/>  + <span class=\"re5\">aDuration</span> <span class=\"br0\">[</span> |<span class=\"re3\">n</span>|<br/>    <span class=\"re6\">n</span> <span class=\"sy0\">:=</span> <span class=\"re5\">dateAndTime</span> + <span class=\"re5\">aDuration</span>.<br/>    <span class=\"br0\">(</span><span class=\"re5\">n</span> &gt; timeZoneDST<span class=\"br0\">)</span> ifTrue: <span class=\"br0\">[</span> <span class=\"re5\">n</span> <span class=\"sy0\">:=</span> <span class=\"re5\">n</span> + <span class=\"re5\">timeZoneVar</span> <span class=\"br0\">]</span>.<br/>    ^ <span class=\"br0\">(</span><span class=\"kw1\">self</span> copy dateTime: <span class=\"re5\">n</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">]</span><br/>\u00a0<br/>  dateTime <span class=\"br0\">[</span> ^dateAndTime <span class=\"br0\">]</span><br/>  dateTime: <span class=\"re5\">aDT</span> <span class=\"br0\">[</span> <span class=\"re5\">dateAndTime</span> <span class=\"sy0\">:=</span> <span class=\"re5\">aDT</span> <span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"br0\">]</span>.</pre>"}, {"lang": "SQL", "loc": 34, "block": "<pre class=\"sql highlighted_source\">\u00a0<br/><span class=\"co1\">-- March 7 2009 7:30pm EST</span><br/>\u00a0<br/><span class=\"kw1\">SELECT</span> <br/>TO_TIMESTAMP_TZ<span class=\"br0\">(</span><br/><span class=\"st0\">'March 7 2009 7:30pm EST'</span><span class=\"sy0\">,</span><br/><span class=\"st0\">'MONTH DD YYYY HH:MIAM TZR'</span><br/><span class=\"br0\">)</span><br/>at <span class=\"kw1\">TIME</span> zone <span class=\"st0\">'US/Eastern'</span> orig_dt_time<br/><span class=\"kw1\">FROM</span> dual;<br/>\u00a0<br/><span class=\"co1\">-- 12 hours later DST change</span><br/>\u00a0<br/><span class=\"kw1\">SELECT</span> <br/><span class=\"br0\">(</span>TO_TIMESTAMP_TZ<span class=\"br0\">(</span><br/><span class=\"st0\">'March 7 2009 7:30pm EST'</span><span class=\"sy0\">,</span><br/><span class=\"st0\">'MONTH DD YYYY HH:MIAM TZR'</span><br/><span class=\"br0\">)</span><span class=\"sy0\">+</span><br/><span class=\"kw1\">INTERVAL</span> <span class=\"st0\">'12'</span> <span class=\"kw1\">HOUR</span><span class=\"br0\">)</span><br/>at <span class=\"kw1\">TIME</span> zone <span class=\"st0\">'US/Eastern'</span> plus_12_dst<br/><span class=\"kw1\">FROM</span> dual;<br/>\u00a0<br/><span class=\"co1\">-- 12 hours later no DST change</span><br/><span class=\"co1\">-- Arizona time, always MST</span><br/>\u00a0<br/><span class=\"kw1\">SELECT</span> <br/><span class=\"br0\">(</span>TO_TIMESTAMP_TZ<span class=\"br0\">(</span><br/><span class=\"st0\">'March 7 2009 7:30pm EST'</span><span class=\"sy0\">,</span><br/><span class=\"st0\">'MONTH DD YYYY HH:MIAM TZR'</span><br/><span class=\"br0\">)</span><span class=\"sy0\">+</span><br/><span class=\"kw1\">INTERVAL</span> <span class=\"st0\">'12'</span> <span class=\"kw1\">HOUR</span><span class=\"br0\">)</span><br/>at <span class=\"kw1\">TIME</span> zone <span class=\"st0\">'US/Arizona'</span> plus_12_nodst<br/><span class=\"kw1\">FROM</span> dual;<br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 5, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">set</span> date <span class=\"st0\">\"March 7 2009 7:30pm EST\"</span><br/><span class=\"kw1\">set</span> epoch <span class=\"br0\">[</span><span class=\"kw2\">clock</span> <span class=\"kw2\">scan</span> <span class=\"re0\">$date</span> -<span class=\"kw2\">format</span> <span class=\"st0\">\"%B\u00a0%d\u00a0%Y\u00a0%I:%M%p\u00a0%z\"</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> later <span class=\"br0\">[</span><span class=\"kw2\">clock</span> add <span class=\"re0\">$epoch</span> <span class=\"nu0\">12</span> hours<span class=\"br0\">]</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">clock</span> <span class=\"kw2\">format</span> <span class=\"re0\">$later</span><span class=\"br0\">]</span> <span class=\"sy0\">;</span><span class=\"co1\"># Sun Mar 08 08:30:00 EDT 2009</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">clock</span> <span class=\"kw2\">format</span> <span class=\"re0\">$later</span> -timezone\u00a0:Asia/Shanghai<span class=\"br0\">]</span> <span class=\"sy0\">;</span><span class=\"co1\"># Sun Mar 08 20:30:00 CST 2009</span></pre>"}, {"lang": "UNIX Shell", "loc": 3, "block": "<pre class=\"bash highlighted_source\"><span class=\"re2\">epoch</span>=$<span class=\"br0\">(</span><span class=\"kw2\">date</span> <span class=\"re5\">-d</span> <span class=\"st_h\">'March 7 2009 7:30pm EST +12 hours'</span> +<span class=\"sy0\">%</span>s<span class=\"br0\">)</span><br/><span class=\"kw2\">date</span> <span class=\"re5\">-d</span> <span class=\"sy0\">@</span><span class=\"re1\">$epoch</span><br/><span class=\"re2\">TZ</span>=Asia<span class=\"sy0\">/</span>Shanghai <span class=\"kw2\">date</span> <span class=\"re5\">-d</span> <span class=\"sy0\">@</span><span class=\"re1\">$epoch</span></pre>"}, {"lang": "zkl", "loc": 11, "block": "<pre class=\"text highlighted_source\">var Date=Time.Date;<br/>fcn add12h(dt){<br/>   re:=RegExp(0'|(\\w+)\\s+(\\d+)\\s+(\\d+)\\ +(.+)\\s|);<br/>   re.search(dt);<br/>   _,M,D,Y,hms:=re.matched;    //\"March\",\"7\",\"2009\",\"7:30pm\"<br/>   M=Date.monthNames.index(M); //3<br/>   h,m,s:=Date.parseTime(hms); //19,30,0<br/>   dti:=T(Y,M,D, h,m,s).apply(\"toInt\");<br/>   Y,M,D, h,m,s=Date.addHMS(dti,12);<br/>   \"%s\u00a0%d\u00a0%d\u00a0%s\".fmt(Date.monthNames[M],D,Y,Date.toAMPMString(h,m));<br/>}</pre>"}]}