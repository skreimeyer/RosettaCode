{"task": "Rock-paper-scissors", "blocks": [{"lang": "Ada", "loc": 107, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">with</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Float_Random</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Rock_Paper_Scissors <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">package</span> Rand <span class=\"kw3\">renames</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Float_Random</span>;<br/>   Gen: Rand.<span class=\"me1\">Generator</span>;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Choice <span class=\"kw1\">is</span> <span class=\"br0\">(</span>Rock, Paper, Scissors<span class=\"br0\">)</span>;<br/>\u00a0<br/>   Cnt: <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Choice<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Natural\u00a0:= <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>     <span class=\"co1\">-- for the initialization: pretend that each of Rock, Paper, </span><br/>     <span class=\"co1\">-- and Scissors, has been played once by the human</span><br/>     <span class=\"co1\">-- else the first computer choice would be deterministic</span><br/>\u00a0<br/>   <span class=\"kw3\">function</span> Computer_Choice <span class=\"kw1\">return</span> Choice <span class=\"kw1\">is</span><br/>      Random_Number: Natural\u00a0:=<br/>        Integer<span class=\"br0\">(</span>Rand.<span class=\"me1\">Random</span><span class=\"br0\">(</span>Gen<span class=\"br0\">)</span><br/>          * <span class=\"br0\">(</span>Float<span class=\"br0\">(</span>Cnt<span class=\"br0\">(</span>Rock<span class=\"br0\">)</span><span class=\"br0\">)</span> + Float<span class=\"br0\">(</span>Cnt<span class=\"br0\">(</span>Paper<span class=\"br0\">)</span><span class=\"br0\">)</span> + Float<span class=\"br0\">(</span>Cnt<span class=\"br0\">(</span>Scissors<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> Random_Number &lt; Cnt<span class=\"br0\">(</span>Rock<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"co1\">-- guess the human will choose Rock</span><br/>         <span class=\"kw1\">return</span> Paper;<br/>      <span class=\"kw1\">elsif</span> Random_Number - Cnt<span class=\"br0\">(</span>Rock<span class=\"br0\">)</span> &lt; Cnt<span class=\"br0\">(</span>Paper<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"co1\">-- guess the human will choose Paper</span><br/>         <span class=\"kw1\">return</span> Scissors;<br/>      <span class=\"kw1\">else</span> <span class=\"co1\">-- guess the human will choose Scissors</span><br/>         <span class=\"kw1\">return</span> Rock;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> Computer_Choice;<br/>\u00a0<br/>   Finish_The_Game: <span class=\"kw1\">exception</span>;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Human_Choice <span class=\"kw1\">return</span> Choice <span class=\"kw1\">is</span><br/>      Done: Boolean\u00a0:= False;<br/>      T: <span class=\"kw3\">constant</span> String<br/>       \u00a0:= <span class=\"st0\">\"enter \"</span><span class=\"st0\">\"r\"</span><span class=\"st0\">\" for Rock, \"</span><span class=\"st0\">\"p\"</span><span class=\"st0\">\" for Paper, or \"</span><span class=\"st0\">\"s\"</span><span class=\"st0\">\" for Scissors\"</span><span class=\"st0\">\"!\"</span>;<br/>      U: <span class=\"kw3\">constant</span> String<br/>       \u00a0:= <span class=\"st0\">\"or enter \"</span><span class=\"st0\">\"q\"</span><span class=\"st0\">\" to Quit the game\"</span>;<br/>      Result: Choice;<br/>   <span class=\"kw1\">begin</span><br/>      Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span><span class=\"br0\">(</span>T<span class=\"br0\">)</span>;<br/>      Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span><span class=\"br0\">(</span>U<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">while</span> <span class=\"kw2\">not</span> Done <span class=\"kw1\">loop</span><br/>         Done\u00a0:= True;<br/>         <span class=\"kw1\">declare</span><br/>            S: String\u00a0:= Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Get_Line</span>;<br/>         <span class=\"kw1\">begin</span><br/>            <span class=\"kw1\">if</span> S=<span class=\"st0\">\"r\"</span> <span class=\"kw2\">or</span> S=<span class=\"st0\">\"R\"</span> <span class=\"kw1\">then</span><br/>               Result\u00a0:= Rock;<br/>            <span class=\"kw1\">elsif</span> S=<span class=\"st0\">\"p\"</span> <span class=\"kw2\">or</span> S = <span class=\"st0\">\"P\"</span> <span class=\"kw1\">then</span><br/>               Result\u00a0:= Paper;<br/>            <span class=\"kw1\">elsif</span> S=<span class=\"st0\">\"s\"</span> <span class=\"kw2\">or</span> S=<span class=\"st0\">\"S\"</span> <span class=\"kw1\">then</span><br/>               Result\u00a0:= Scissors;<br/>            <span class=\"kw1\">elsif</span> S=<span class=\"st0\">\"q\"</span> <span class=\"kw2\">or</span> S=<span class=\"st0\">\"Q\"</span> <span class=\"kw1\">then</span><br/>               <span class=\"kw3\">raise</span> Finish_The_Game;<br/>            <span class=\"kw1\">else</span><br/>               Done\u00a0:= False;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Result;<br/>   <span class=\"kw1\">end</span> Human_Choice;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Result <span class=\"kw1\">is</span> <span class=\"br0\">(</span>Human_Wins, Draw, Computer_Wins<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"&lt;\"</span> <span class=\"br0\">(</span>X, Y: Choice<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Boolean <span class=\"kw1\">is</span><br/>      <span class=\"co1\">-- X &lt; Y if X looses against Y</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">case</span> X <span class=\"kw1\">is</span><br/>         <span class=\"kw3\">when</span> Rock =&gt; <span class=\"kw1\">return</span>  <span class=\"br0\">(</span>Y = Paper<span class=\"br0\">)</span>;<br/>         <span class=\"kw3\">when</span> Paper =&gt; <span class=\"kw1\">return</span> <span class=\"br0\">(</span>Y = Scissors<span class=\"br0\">)</span>;<br/>         <span class=\"kw3\">when</span> Scissors =&gt; <span class=\"kw1\">return</span> <span class=\"br0\">(</span>Y = Rock<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">case</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"st0\">\"&lt;\"</span>;<br/>\u00a0<br/>   Score: <span class=\"kw3\">array</span><span class=\"br0\">(</span>Result<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Natural\u00a0:= <span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>   C,H: Choice;<br/>\u00a0<br/>   Res: Result;<br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>   <span class=\"co1\">-- play the game</span><br/>   <span class=\"kw1\">loop</span><br/>      C\u00a0:= Computer_Choice;  <span class=\"co1\">-- the computer makes its choice first</span><br/>      H\u00a0:= Human_Choice;     <span class=\"co1\">-- now ask the player for his/her choice</span><br/>      Cnt<span class=\"br0\">(</span>H<span class=\"br0\">)</span>\u00a0:= Cnt<span class=\"br0\">(</span>H<span class=\"br0\">)</span> + <span class=\"nu0\">1</span>;  <span class=\"co1\">-- update the counts for the AI</span><br/>      <span class=\"kw1\">if</span> C &lt; H <span class=\"kw1\">then</span><br/>         Res\u00a0:= Human_Wins;<br/>      <span class=\"kw1\">elsif</span> H &lt; C <span class=\"kw1\">then</span><br/>         Res\u00a0:= Computer_Wins;<br/>      <span class=\"kw1\">else</span><br/>         Res\u00a0:= Draw;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span><span class=\"br0\">(</span><span class=\"st0\">\"COMPUTER'S CHOICE: \"</span> &amp; Choice'Image<span class=\"br0\">(</span>C<span class=\"br0\">)</span><br/>                             &amp; <span class=\"st0\">\"       RESULT: \"</span> &amp; Result'Image<span class=\"br0\">(</span>Res<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">New_Line</span>;<br/>      Score<span class=\"br0\">(</span>Res<span class=\"br0\">)</span>\u00a0:= Score<span class=\"br0\">(</span>Res<span class=\"br0\">)</span> + <span class=\"nu0\">1</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>\u00a0<br/><span class=\"kw1\">exception</span><br/>   <span class=\"kw3\">when</span> Finish_The_Game =&gt;<br/>      Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">New_Line</span>;<br/>      <span class=\"kw1\">for</span> R <span class=\"kw3\">in</span> Score'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span><span class=\"br0\">(</span>Result'Image<span class=\"br0\">(</span>R<span class=\"br0\">)</span> &amp; Natural'Image<span class=\"br0\">(</span>Score<span class=\"br0\">(</span>R<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/><span class=\"kw1\">end</span> Rock_Paper_Scissors;</pre>"}, {"lang": "Aime", "loc": 71, "block": "<pre class=\"text highlighted_source\">text<br/>computer_play(record plays, record beats)<br/>{<br/>    integer a, c, total;<br/>    text s;<br/>\u00a0<br/>    total = plays[\"rock\"] + plays[\"paper\"] + plays[\"scissors\"];<br/>    a = drand(total - 1);<br/>    for (s, c in plays) {<br/>        if (a &lt; c) {<br/>            break;<br/>        }<br/>        a -= c;<br/>    }<br/>\u00a0<br/>    beats[s];<br/>}<br/>\u00a0<br/>integer<br/>main(void)<br/>{<br/>    integer computer, human;<br/>    record beats, plays;<br/>    file f;<br/>    text s;<br/>\u00a0<br/>    computer = human = 0;<br/>\u00a0<br/>    f.stdin;<br/>\u00a0<br/>    beats[\"rock\"] = \"paper\";<br/>    beats[\"paper\"] = \"scissors\";<br/>    beats[\"scissors\"] = \"rock\";<br/>\u00a0<br/>    plays[\"rock\"] = 1;<br/>    plays[\"paper\"] = 1;<br/>    plays[\"scissors\"] = 1;<br/>\u00a0<br/>    while (1) {<br/>        o_text(\"Your choice [rock/paper/scissors]:\\n\");<br/>        if (f.line(s) == -1) {<br/>            break;<br/>        }<br/>\u00a0<br/>        if (!plays.key(s)) {<br/>            o_text(\"Invalid choice, try again\\n\");<br/>        } else {<br/>            text c;<br/>\u00a0<br/>            c = computer_play(plays, beats);<br/>\u00a0<br/>            o_form(\"Human: ~, Computer: ~\\n\", s, c);<br/>\u00a0<br/>            if (s == c) {<br/>                o_text(\"Draw\\n\");<br/>            } elif (c == beats[s]) {<br/>                computer += 1;<br/>                o_text(\"Computer wins\\n\");<br/>            } else {<br/>                human += 1;<br/>                o_text(\"Human wins\\n\");<br/>            }<br/>\u00a0<br/>            plays.up(s);<br/>\u00a0<br/>            o_form(\"Score: Human: ~, Computer: ~\\n\", human, computer);<br/>        }<br/>    }<br/>\u00a0<br/>    return 0;<br/>}</pre>"}, {"lang": "ALGOL 68", "loc": 89, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw2\">BEGIN</span><br/>    <span class=\"coMULTI\"># rock/paper/scissors game                                             #</span><br/>    <span class=\"coMULTI\"># counts of the number of times the player has chosen each move        #</span><br/>    <span class=\"coMULTI\"># we initialise each to 1 so that the total isn't zero when we are     #</span><br/>    <span class=\"coMULTI\"># choosing the computer's first move (as in the Ada version)           #</span><br/>    <span class=\"kw3\">INT</span>    r count <span class=\"sy1\">:=</span> 1<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">INT</span>    p count <span class=\"sy1\">:=</span> 1<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">INT</span>    s count <span class=\"sy1\">:=</span> 1<span class=\"sy1\">;</span><br/>    <span class=\"coMULTI\"># counts of how many games the player and computer have won            #</span><br/>    <span class=\"kw3\">INT</span>    player count   <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">INT</span>    computer count <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"rock/paper/scissors\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">WHILE</span><br/>        <span class=\"kw3\">CHAR</span> player move<span class=\"sy1\">;</span><br/>        <span class=\"coMULTI\"># get the players move - r =&gt; rock, p =&gt; paper, s =&gt; scissors      #</span><br/>        <span class=\"coMULTI\">#                        q =&gt; quit                                 #</span><br/>        <span class=\"kw2\">WHILE</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Please enter your move (r/p/s) or q to quit: \"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            read<span class=\"br0\">(</span> <span class=\"br0\">(</span> player move<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            <span class=\"br0\">(</span>   player move <span class=\"sy1\">/=</span> <span class=\"st0\">\"r\"</span><br/>            <span class=\"kw16\">AND</span> player move <span class=\"sy1\">/=</span> <span class=\"st0\">\"p\"</span><br/>            <span class=\"kw16\">AND</span> player move <span class=\"sy1\">/=</span> <span class=\"st0\">\"s\"</span><br/>            <span class=\"kw16\">AND</span> player move <span class=\"sy1\">/=</span> <span class=\"st0\">\"q\"</span><br/>            <span class=\"br0\">)</span><br/>        <span class=\"kw2\">DO</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Unrecognised move\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>        <span class=\"coMULTI\"># continue playing until the player chooses quit                   #</span><br/>        player move <span class=\"sy1\">/=</span> <span class=\"st0\">\"q\"</span><br/>    <span class=\"kw2\">DO</span><br/>        <span class=\"coMULTI\"># decide the computer's move based on the player's history         #</span><br/>        <span class=\"kw3\">CHAR</span>  computer move<span class=\"sy1\">;</span><br/>        <span class=\"kw3\">INT</span>   move count     <span class=\"sy1\">=</span> r count <span class=\"sy1\">+</span> p count <span class=\"sy1\">+</span> s count<span class=\"sy1\">;</span><br/>        <span class=\"coMULTI\"># predict player will play rock  if the random number              #</span><br/>        <span class=\"coMULTI\">#     is in the range 0 .. rock / total                            #</span><br/>        <span class=\"coMULTI\"># predict player will play paper if the random number              #</span><br/>        <span class=\"coMULTI\">#     is in the range rock / total .. ( rock + paper ) / total     #</span><br/>        <span class=\"coMULTI\"># predict player will play scissors otherwise                      #</span><br/>        <span class=\"kw3\">REAL</span>  r limit        <span class=\"sy1\">=</span> r count <span class=\"sy1\">/</span> move count<span class=\"sy1\">;</span><br/>        <span class=\"kw3\">REAL</span>  p limit        <span class=\"sy1\">=</span> r limit <span class=\"sy1\">+</span> <span class=\"br0\">(</span> p count <span class=\"sy1\">/</span> move count <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw3\">REAL</span>  random move    <span class=\"sy1\">=</span> <span class=\"kw25\">next random</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span>    random move <span class=\"sy1\">&lt;</span> r limit <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># we predict the player will choose rock - we choose paper     #</span><br/>            computer move <span class=\"sy1\">:=</span> <span class=\"st0\">\"p\"</span><br/>        <span class=\"kw2\">ELIF</span>  random move <span class=\"sy1\">&lt;</span> p limit <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># we predict the player will choose paper - we choose scissors #</span><br/>            computer move <span class=\"sy1\">:=</span> <span class=\"st0\">\"s\"</span><br/>        <span class=\"kw2\">ELSE</span><br/>            <span class=\"coMULTI\"># we predict the player will choose scissors - we choose rock  #</span><br/>            computer move <span class=\"sy1\">:=</span> <span class=\"st0\">\"r\"</span><br/>        <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"You chose: \"</span> <span class=\"sy1\">+</span> player   move<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"I   chose: \"</span> <span class=\"sy1\">+</span> computer move<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span>   player move <span class=\"sy1\">=</span> computer move <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># both players chose the same - draw                           #</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"We draw\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">ELSE</span><br/>            <span class=\"coMULTI\"># players chose different moves - there is a winner            #</span><br/>            <span class=\"kw2\">IF</span> <span class=\"br0\">(</span> player move <span class=\"sy1\">=</span> <span class=\"st0\">\"r\"</span> <span class=\"kw16\">AND</span> computer move <span class=\"sy1\">=</span> <span class=\"st0\">\"s\"</span> <span class=\"br0\">)</span><br/>            <span class=\"kw16\">OR</span> <span class=\"br0\">(</span> player move <span class=\"sy1\">=</span> <span class=\"st0\">\"p\"</span> <span class=\"kw16\">AND</span> computer move <span class=\"sy1\">=</span> <span class=\"st0\">\"r\"</span> <span class=\"br0\">)</span><br/>            <span class=\"kw16\">OR</span> <span class=\"br0\">(</span> player move <span class=\"sy1\">=</span> <span class=\"st0\">\"s\"</span> <span class=\"kw16\">AND</span> computer move <span class=\"sy1\">=</span> <span class=\"st0\">\"p\"</span> <span class=\"br0\">)</span><br/>            <span class=\"kw2\">THEN</span><br/>                player count <span class=\"sy1\">+:=</span> 1<span class=\"sy1\">;</span><br/>                <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"You win\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>            <span class=\"kw2\">ELSE</span><br/>                computer count <span class=\"sy1\">+:=</span> 1<span class=\"sy1\">;</span><br/>                <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"I win\"</span><span class=\"sy1\">,</span>   <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>            <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"You won: \"</span><br/>                   <span class=\"sy1\">,</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> player count  <span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span><br/>                   <span class=\"sy1\">,</span> <span class=\"st0\">\", I won: \"</span><br/>                   <span class=\"sy1\">,</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> computer count<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span><br/>                   <span class=\"sy1\">,</span> <span class=\"kw22\">newline</span><br/>                   <span class=\"br0\">)</span><br/>                 <span class=\"br0\">)</span><br/>        <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span>   player move <span class=\"sy1\">=</span> <span class=\"st0\">\"r\"</span> <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># player chose rock                                            #</span><br/>            r count <span class=\"sy1\">+:=</span> 1<br/>        <span class=\"kw2\">ELIF</span> player move <span class=\"sy1\">=</span> <span class=\"st0\">\"p\"</span> <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># player chose paper                                           #</span><br/>            p count <span class=\"sy1\">+:=</span> 1<br/>        <span class=\"kw2\">ELSE</span><br/>            <span class=\"coMULTI\"># player chose scissors                                        #</span><br/>            s count <span class=\"sy1\">+:=</span> 1<br/>        <span class=\"kw2\">FI</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Thanks for a most enjoyable game\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw2\">END</span></pre>"}, {"lang": "AutoHotkey", "loc": 45, "block": "<pre class=\"ahk highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/DllCall.htm\"><span class=\"kw3\">DllCall</span></a><span class=\"br0\">(</span><span class=\"st0\">\"AllocConsole\"</span><span class=\"br0\">)</span><br/>Write<span class=\"br0\">(</span><span class=\"st0\">\"Welcome to Rock-Paper-Scissors`nMake a choice: \"</span><span class=\"br0\">)</span><br/>\u00a0<br/>cR <span class=\"sy0\">:=</span> cP <span class=\"sy0\">:=</span> cS <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span> <span class=\"co1\">; user choice count</span><br/>userChoice <span class=\"sy0\">:=</span> Read<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>Write<span class=\"br0\">(</span><span class=\"st0\">\"My choice: \"</span> <span class=\"sy0\">.</span> cpuChoice <span class=\"sy0\">:=</span> MakeChoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><br/><span class=\"br0\">{</span><br/>\tWrite<span class=\"br0\">(</span>DecideWinner<span class=\"br0\">(</span>userChoice<span class=\"sy0\">,</span> cpuChoice<span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"`nMake A Choice: \"</span><span class=\"br0\">)</span><br/>\tcR <span class=\"sy0\">+=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>userChoice<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"r\"</span><span class=\"sy0\">,</span> cP <span class=\"sy0\">+=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span>userChoice<span class=\"sy0\">,</span> <span class=\"st0\">\"P\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> cS <span class=\"sy0\">+=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span>userChoice<span class=\"sy0\">,</span> <span class=\"st0\">\"S\"</span><span class=\"br0\">)</span><br/>\tuserChoice <span class=\"sy0\">:=</span> Read<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\tWrite<span class=\"br0\">(</span><span class=\"st0\">\"My Choice: \"</span> <span class=\"sy0\">.</span> cpuChoice <span class=\"sy0\">:=</span> MakeChoice<span class=\"br0\">(</span>cR<span class=\"sy0\">,</span> cP<span class=\"sy0\">,</span> cS<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>MakeChoice<span class=\"br0\">(</span>cR<span class=\"sy0\">,</span> cP<span class=\"sy0\">,</span> cS<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<span class=\"co1\">; parameters are number of times user has chosen each item</span><br/>\ttotal <span class=\"sy0\">:=</span> cR <span class=\"sy0\">+</span> cP <span class=\"sy0\">+</span> cS<br/>\u00a0<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> rand<span class=\"sy0\">,</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.0</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>rand <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">and</span> rand <span class=\"sy0\">&lt;=</span> cR <span class=\"sy0\">/</span> total<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"Paper\"</span><br/>\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>rand <span class=\"sy0\">&gt;</span> cR <span class=\"sy0\">/</span> total <span class=\"kw1\">and</span> rand <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span>cR <span class=\"sy0\">+</span> cP<span class=\"br0\">)</span> <span class=\"sy0\">/</span> total<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"Scissors\"</span><br/>\t<span class=\"kw1\">else</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"Rock\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>DecideWinner<span class=\"br0\">(</span>user<span class=\"sy0\">,</span> cpu<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\tuser <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>user<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> cpu <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>cpu<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>user <span class=\"sy0\">=</span> cpu<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"`nTie!\"</span><br/>\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>user <span class=\"sy0\">=</span> <span class=\"st0\">\"r\"</span> <span class=\"kw1\">and</span> cpu <span class=\"sy0\">=</span> <span class=\"st0\">\"s\"</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"br0\">(</span>user <span class=\"sy0\">=</span> <span class=\"st0\">\"p\"</span> <span class=\"kw1\">and</span> cpu <span class=\"sy0\">=</span> <span class=\"st0\">\"r\"</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"br0\">(</span>user <span class=\"sy0\">=</span> <span class=\"st0\">\"s\"</span> <span class=\"kw1\">and</span> cpu <span class=\"sy0\">=</span> <span class=\"st0\">\"p\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"`nYou Win!\"</span><br/>\t<span class=\"kw1\">else</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"st0\">\"`nI Win!\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Read<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/FileReadLine.htm\"><span class=\"kw3\">FileReadLine</span></a><span class=\"sy0\">,</span> a<span class=\"sy0\">,</span> CONIN$<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"br0\">}</span><br/>Write<span class=\"br0\">(</span>txt<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/FileAppend.htm\"><span class=\"kw3\">FileAppend</span></a><span class=\"sy0\">,</span>\u00a0% txt<span class=\"sy0\">,</span> CONOUT$<br/><span class=\"br0\">}</span></pre>"}, {"lang": "AutoIt", "loc": 95, "block": "<pre class=\"autoit highlighted_source\">\u00a0<br/>RPS<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Func</span></a> RPS<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Local</span></a> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\t<span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">For</span></a> <span class=\"re0\">$I</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">3</span><br/>\t\t<span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"re0\">$I</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/>\t<span class=\"re0\">$RPS</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICreate.htm\"><span class=\"kw3\">GUICreate</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Rock Paper Scissors\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">338</span><span class=\"sy0\">,</span> <span class=\"nu0\">108</span><span class=\"sy0\">,</span> <span class=\"nu0\">292</span><span class=\"sy0\">,</span> <span class=\"nu0\">248</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Rock</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateButton.htm\"><span class=\"kw3\">GUICtrlCreateButton</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Rock\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">113</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">131072</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Paper</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateButton.htm\"><span class=\"kw3\">GUICtrlCreateButton</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Paper\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">40</span><span class=\"sy0\">,</span> <span class=\"nu0\">113</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">131072</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Scissors</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateButton.htm\"><span class=\"kw3\">GUICtrlCreateButton</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Scissors\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">72</span><span class=\"sy0\">,</span> <span class=\"nu0\">113</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">131072</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Label1</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateLabel.htm\"><span class=\"kw3\">GUICtrlCreateLabel</span></a><span class=\"br0\">(</span><span class=\"st0\">\"W:\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">136</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Wins</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateLabel.htm\"><span class=\"kw3\">GUICtrlCreateLabel</span></a><span class=\"br0\">(</span><span class=\"st0\">\"0\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">160</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Label3</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateLabel.htm\"><span class=\"kw3\">GUICtrlCreateLabel</span></a><span class=\"br0\">(</span><span class=\"st0\">\"L:\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">208</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Looses</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateLabel.htm\"><span class=\"kw3\">GUICtrlCreateLabel</span></a><span class=\"br0\">(</span><span class=\"st0\">\"0\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">224</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Label5</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateLabel.htm\"><span class=\"kw3\">GUICtrlCreateLabel</span></a><span class=\"br0\">(</span><span class=\"st0\">\"D:\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">272</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Deuce</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateLabel.htm\"><span class=\"kw3\">GUICtrlCreateLabel</span></a><span class=\"br0\">(</span><span class=\"st0\">\"0\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">296</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$Displaybutton</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlCreateButton.htm\"><span class=\"kw3\">GUICtrlCreateButton</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">136</span><span class=\"sy0\">,</span> <span class=\"nu0\">48</span><span class=\"sy0\">,</span> <span class=\"nu0\">193</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"sy0\">,</span> <span class=\"nu0\">131072</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetState.htm\"><span class=\"kw3\">GUICtrlSetState</span></a><span class=\"br0\">(</span><span class=\"re0\">$ai_Played_games</span><span class=\"sy0\">,</span> <span class=\"nu0\">128</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUISetState.htm\"><span class=\"kw3\">GUISetState</span></a><span class=\"br0\">(</span><a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@SW_SHOW</span></span></a><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">While</span></a> <span class=\"nu0\">1</span><br/>\t\t<span class=\"re0\">$nMsg</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUIGetMsg.htm\"><span class=\"kw3\">GUIGetMsg</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Switch</span></a> <span class=\"re0\">$nMsg</span><br/>\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Case</span></a> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Exit</span></a><br/>\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Case</span></a> <span class=\"re0\">$Rock</span><br/>\t\t\t\t<span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> _RPS_Eval<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Displaybutton</span><span class=\"sy0\">,</span> <span class=\"re0\">$Ret</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Deuce\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Deuce</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Deuce</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Elseif</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"You Loose\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Looses</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Looses</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Elseif</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"You Win\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Wins</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Wins</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/>\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Case</span></a> <span class=\"re0\">$Paper</span><br/>\t\t\t\t<span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> _RPS_Eval<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Displaybutton</span><span class=\"sy0\">,</span> <span class=\"re0\">$Ret</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Deuce\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Deuce</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Deuce</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Elseif</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"You Loose\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Looses</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Looses</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Elseif</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"You Win\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Wins</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Wins</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/>\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Case</span></a> <span class=\"re0\">$Scissors</span><br/>\t\t\t\t<span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> _RPS_Eval<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Displaybutton</span><span class=\"sy0\">,</span> <span class=\"re0\">$Ret</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Deuce\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Deuce</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Deuce</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Elseif</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"You Loose\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Looses</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Looses</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Elseif</span></a> <span class=\"re0\">$Ret</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"You Win\"</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlSetData.htm\"><span class=\"kw3\">GUICtrlSetData</span></a><span class=\"br0\">(</span><span class=\"re0\">$Wins</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/GUICtrlRead.htm\"><span class=\"kw3\">Guictrlread</span></a><span class=\"br0\">(</span><span class=\"re0\">$Wins</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndSwitch</span></a><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">WEnd</span></a><br/>\u00a0<br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndFunc</span></a>   <span class=\"co0\">;==&gt;RPS</span><br/>\u00a0<br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Func</span></a> _RPS_Eval<span class=\"br0\">(</span><span class=\"re0\">$i_Player_Choose</span><span class=\"sy0\">,</span> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Local</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\t<span class=\"re0\">$i_rnd</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1000</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$i_choose_1</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$i_choose_2</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$i_choose_3</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_rnd</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$i_choose_1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">ElseIf</span></a> <span class=\"re0\">$i_rnd</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$i_choose_1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$i_choose_2</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">And</span></a> <span class=\"re0\">$i_rnd</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$i_choose_1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">ElseIf</span></a> <span class=\"re0\">$i_rnd</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$i_choose_1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$i_choose_2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$i_choose_3</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">And</span></a> <span class=\"re0\">$i_rnd</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$i_choose_1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$i_choose_2</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/>\t<span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_Player_Choose</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"Deuce\"</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"You Loose\"</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"You Win\"</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">ElseIf</span></a> <span class=\"re0\">$i_Player_Choose</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"Deuce\"</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"You Loose\"</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"You Win\"</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">ElseIf</span></a> <span class=\"re0\">$i_Player_Choose</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<span class=\"re0\">$ai_Played_games</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"Deuce\"</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"You Loose\"</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i_choice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"You Win\"</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndFunc</span></a>   <span class=\"co0\">;==&gt;_RPS_Eval</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "BASIC", "loc": 62, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> pCMchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> choices<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> playerwins<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> playerchoice <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> compchoice <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> playerwon <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> compwon <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> tie <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> tmp <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/><span class=\"co1\">' Do it this way for QBasic; FreeBASIC supports direct array assignment.</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdata.shtml\"><span class=\"kw3\">DATA</span></a> <span class=\"st0\">\"rock\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"paper\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"scissors\"</span><br/><span class=\"kw1\">FOR</span> tmp <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckread.shtml\"><span class=\"kw3\">READ</span></a> choices<span class=\"br0\">(</span>tmp<span class=\"br0\">)</span><br/><span class=\"kw1\">NEXT</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdata.shtml\"><span class=\"kw3\">DATA</span></a> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><br/><span class=\"kw1\">FOR</span> tmp <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckread.shtml\"><span class=\"kw3\">READ</span></a> playerwins<span class=\"br0\">(</span>tmp<span class=\"br0\">)</span><br/><span class=\"kw1\">NEXT</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckrandomize.shtml\"><span class=\"kw3\">RANDOMIZE</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcktimer.shtml\"><span class=\"kw3\">TIMER</span></a><br/>\u00a0<br/><span class=\"kw1\">DO</span><br/>    <span class=\"co1\">' Computer chooses first to ensure there's no \"cheating\".</span><br/>    compchoice <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckint.shtml\"><span class=\"kw3\">INT</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrnd.shtml\"><span class=\"kw3\">RND</span></a> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span> compchoice<br/>        <span class=\"kw1\">CASE</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> <span class=\"br0\">(</span>pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"co1\">' Player past choice: rock; choose paper.</span><br/>            compchoice <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>        <span class=\"kw1\">CASE</span> <span class=\"br0\">(</span>pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">TO</span> <span class=\"br0\">(</span>pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            <span class=\"co1\">' Player past choice: paper; choose scissors.</span><br/>            compchoice <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>        <span class=\"kw1\">CASE</span> <span class=\"br0\">(</span>pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">TO</span> <span class=\"br0\">(</span>pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            <span class=\"co1\">' Player past choice: scissors; choose rock.</span><br/>            compchoice <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SELECT</span><br/>\u00a0<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Rock, paper, or scissors \"</span>;<br/>    <span class=\"kw1\">DO</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"[1 = rock, 2 = paper, 3 = scissors, 0 to quit]\"</span>;<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> playerchoice<br/>    <span class=\"kw1\">LOOP</span> <span class=\"kw1\">WHILE</span> <span class=\"br0\">(</span>playerchoice <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> <span class=\"br0\">(</span>playerchoice <span class=\"sy0\">&gt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">IF</span> <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> playerchoice <span class=\"kw1\">THEN</span> <a href=\"http://www.qbasicnews.com/qboho/qckexit.shtml\"><span class=\"kw3\">EXIT</span></a> <span class=\"kw1\">DO</span><br/>\u00a0<br/>    pCMchoice<span class=\"br0\">(</span>compchoice<span class=\"br0\">)</span> <span class=\"sy0\">=</span> pCMchoice<span class=\"br0\">(</span>compchoice<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    pPLchoice<span class=\"br0\">(</span>playerchoice<span class=\"br0\">)</span> <span class=\"sy0\">=</span> pPLchoice<span class=\"br0\">(</span>playerchoice<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"You chose \"</span>; choices<span class=\"br0\">(</span>playerchoice<span class=\"br0\">)</span>; <span class=\"st0\">\" and I chose \"</span>; choices<span class=\"br0\">(</span>compchoice<span class=\"br0\">)</span>; <span class=\"st0\">\". \"</span>;<br/>    <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>playerchoice<span class=\"br0\">)</span> <span class=\"sy0\">=</span> compchoice <span class=\"kw1\">THEN</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Tie!\"</span><br/>        tie <span class=\"sy0\">=</span> tie <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">ELSEIF</span> <span class=\"br0\">(</span>compchoice<span class=\"br0\">)</span> <span class=\"sy0\">=</span> playerwins<span class=\"br0\">(</span>playerchoice<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"You won!\"</span><br/>        playerwon <span class=\"sy0\">=</span> playerwon <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">ELSE</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"I won!\"</span><br/>        compwon <span class=\"sy0\">=</span> compwon <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/><span class=\"kw1\">LOOP</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Some useless statistics:\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"You won \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckstr%24.shtml\"><span class=\"kw3\">STR$</span></a><span class=\"br0\">(</span>playerwon<span class=\"br0\">)</span>; <span class=\"st0\">\" times, and I won \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckstr%24.shtml\"><span class=\"kw3\">STR$</span></a><span class=\"br0\">(</span>compwon<span class=\"br0\">)</span>; <span class=\"st0\">\" times; \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckstr%24.shtml\"><span class=\"kw3\">STR$</span></a><span class=\"br0\">(</span>tie<span class=\"br0\">)</span>; <span class=\"st0\">\" ties.\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a>             <span class=\"sy0\">,</span>   choices<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>   choices<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>   choices<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"You chose:\"</span><span class=\"sy0\">,</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> pPLchoice<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"  I chose:\"</span><span class=\"sy0\">,</span> pCMchoice<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> pCMchoice<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> pCMchoice<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span></pre>"}, {"lang": "Bash", "loc": 25, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/bin/bash</span><br/><span class=\"kw3\">echo</span> <span class=\"st0\">\"What will you choose? [rock/paper/scissors]\"</span><br/><span class=\"kw2\">read</span> response<br/><span class=\"re2\">aiThought</span>=$<span class=\"br0\">(</span><span class=\"kw3\">echo</span> $<span class=\"br0\">[</span> <span class=\"nu0\">1</span> + $<span class=\"br0\">[</span> RANDOM <span class=\"sy0\">%</span> <span class=\"nu0\">3</span>  <span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"kw1\">case</span> <span class=\"re1\">$aiThought</span> <span class=\"kw1\">in</span><br/>\t<span class=\"nu0\">1</span><span class=\"br0\">)</span> \t <span class=\"re2\">aiResponse</span>=<span class=\"st0\">\"rock\"</span>   <span class=\"sy0\">;;</span><br/>\t<span class=\"nu0\">2</span><span class=\"br0\">)</span> \t <span class=\"re2\">aiResponse</span>=<span class=\"st0\">\"paper\"</span> <span class=\"sy0\">;;</span><br/>\t<span class=\"nu0\">3</span><span class=\"br0\">)</span>  \t <span class=\"re2\">aiResponse</span>=<span class=\"st0\">\"scissors\"</span>  <span class=\"sy0\">;;</span><br/><span class=\"kw1\">esac</span><br/><span class=\"kw3\">echo</span> <span class=\"st0\">\"AI - <span class=\"es2\">$aiResponse</span>\"</span><br/><span class=\"re2\">responses</span>=<span class=\"st0\">\"<span class=\"es2\">$response</span><span class=\"es2\">$aiResponse</span>\"</span><br/><span class=\"kw1\">case</span> <span class=\"re1\">$responses</span> <span class=\"kw1\">in</span><br/>\trockrock<span class=\"br0\">)</span>  <span class=\"re2\">isTie</span>=<span class=\"nu0\">1</span>  <span class=\"sy0\">;;</span><br/>\trockpaper<span class=\"br0\">)</span>  <span class=\"re2\">playerWon</span>=<span class=\"nu0\">0</span>  <span class=\"sy0\">;;</span><br/>\trockscissors<span class=\"br0\">)</span>  <span class=\"re2\">playerWon</span>=<span class=\"nu0\">1</span>  <span class=\"sy0\">;;</span><br/>\tpaperrock<span class=\"br0\">)</span>  <span class=\"re2\">playerWon</span>=<span class=\"nu0\">1</span>  <span class=\"sy0\">;;</span><br/>\tpaperpaper<span class=\"br0\">)</span>  <span class=\"re2\">isTie</span>=<span class=\"nu0\">1</span>  <span class=\"sy0\">;;</span><br/>\tpaperscissors<span class=\"br0\">)</span>  <span class=\"re2\">playerWon</span>=<span class=\"nu0\">0</span>  <span class=\"sy0\">;;</span><br/>\tscissorsrock<span class=\"br0\">)</span>  <span class=\"re2\">playerWon</span>=<span class=\"nu0\">0</span>  <span class=\"sy0\">;;</span><br/>\tscissorspaper<span class=\"br0\">)</span>  <span class=\"re2\">playerWon</span>=<span class=\"nu0\">1</span>  <span class=\"sy0\">;;</span><br/>\tscissorsscissors<span class=\"br0\">)</span>  <span class=\"re2\">isTie</span>=<span class=\"nu0\">1</span>  <span class=\"sy0\">;;</span><br/><span class=\"kw1\">esac</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"re1\">$isTie</span> == <span class=\"nu0\">1</span> <span class=\"br0\">]</span><span class=\"br0\">]</span>\u00a0; <span class=\"kw1\">then</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"It's a tie!\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">exit</span> <span class=\"nu0\">1</span>\u00a0; <span class=\"kw1\">fi</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"re1\">$playerWon</span> == <span class=\"nu0\">0</span> <span class=\"br0\">]</span><span class=\"br0\">]</span>\u00a0; <span class=\"kw1\">then</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"Sorry, <span class=\"es2\">$aiResponse</span> beats <span class=\"es2\">$response</span> , try again..\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">exit</span> <span class=\"nu0\">1</span>\u00a0; <span class=\"kw1\">fi</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"re1\">$playerWon</span> == <span class=\"nu0\">1</span> <span class=\"br0\">]</span><span class=\"br0\">]</span>\u00a0; <span class=\"kw1\">then</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"Good job, <span class=\"es2\">$response</span> beats <span class=\"es2\">$aiResponse</span>!\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">exit</span> <span class=\"nu0\">1</span>\u00a0; <span class=\"kw1\">fi</span></pre>"}, {"lang": "Batch File", "loc": 73, "block": "<pre class=\"dos highlighted_source\">\u00a0<br/><span class=\"sy0\">@</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> off<br/><a href=\"http://www.ss64.com/nt/setlocal.html\"><span class=\"kw3\">setlocal</span></a> enabledelayedexpansion<br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> choice1=rock<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> choice2=paper<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> choice3=scissors<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> freq1=0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> freq2=0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> freq3=0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> games=0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> won=0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> lost=0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> tie=0<br/>\u00a0<br/>:<span class=\"re0\">start</span><br/>\u00a0<br/>cls<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Games - <span class=\"sy0\">%</span><span class=\"re3\">games</span><span class=\"sy0\">%</span>\u00a0: <span class=\"re0\">Won</span> - <span class=\"sy0\">%</span><span class=\"re3\">won</span><span class=\"sy0\">%</span>\u00a0: <span class=\"re0\">Lost</span> - <span class=\"sy0\">%</span><span class=\"re3\">lost</span><span class=\"sy0\">%</span>\u00a0: <span class=\"re0\">Ties</span> - <span class=\"sy0\">%</span><span class=\"re3\">tie</span><span class=\"sy0\">%</span><br/>choice /c RPS /n /m \"[R]ock, [P]aper or [S]cissors? \"<br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a choicequant+=1<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> choice=<span class=\"sy0\">%</span><span class=\"re3\">errorlevel</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a rocklimit=100 / <span class=\"sy0\">%</span><span class=\"re3\">choicequant</span><span class=\"sy0\">%</span> * <span class=\"sy0\">%</span><span class=\"re3\">freq3</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a scissorslimit=100 - <span class=\"sy0\">(</span>100 / <span class=\"sy0\">%</span><span class=\"re3\">choicequant</span><span class=\"sy0\">%</span> * <span class=\"sy0\">%</span><span class=\"re3\">freq2</span><span class=\"sy0\">%)</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a randchoice=<span class=\"sy0\">%</span><span class=\"re3\">random</span><span class=\"sy0\">%</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 100 + 1<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> compchoice=2<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">randchoice</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/geq.html\"><span class=\"kw2\">geq</span></a> <span class=\"sy0\">%</span><span class=\"re3\">scissorslimit</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> compchoice=3<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">randchoice</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/leq.html\"><span class=\"kw2\">leq</span></a> <span class=\"sy0\">%</span><span class=\"re3\">rocklimit</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> compchoice=1<br/>\u00a0<br/>cls<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Player: <span class=\"sy0\">!</span><span class=\"re2\">choice%<span class=\"re3\">choice</span>%</span><span class=\"sy0\">!</span> <span class=\"co3\">^|</span>vs<span class=\"co3\">^|</span> Computer: <span class=\"sy0\">!</span><span class=\"re2\">choice%<span class=\"re3\">compchoice</span>%</span><span class=\"sy0\">!</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> <span class=\"sy0\">%</span><span class=\"re3\">compchoice</span><span class=\"sy0\">%</span><br/>\u00a0<br/>:<span class=\"re0\">1</span><br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==1 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> tie<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==2 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> win<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==3 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> loss<br/>\u00a0<br/>:<span class=\"re0\">2</span><br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==1 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> loss<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==2 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> tie<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==3 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> win<br/>\u00a0<br/>:<span class=\"re0\">3</span><br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==1 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> win<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==2 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> loss<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>==3 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> tie<br/>\u00a0<br/>:<span class=\"re0\">win</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a won+=1<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Player wins<span class=\"co3\">^!</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> end<br/>\u00a0<br/>:<span class=\"re0\">loss</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a lost+=1<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Computer Wins<span class=\"co3\">^!</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> end<br/>\u00a0<br/>:<span class=\"re0\">tie</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a tie+=1<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Tie<span class=\"co3\">^!</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> end<br/>\u00a0<br/>:<span class=\"re0\">end</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a games+=1<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a freq<span class=\"sy0\">%</span><span class=\"re3\">choice</span><span class=\"sy0\">%</span>+=1<br/><a href=\"http://www.ss64.com/nt/pause.html\"><span class=\"kw3\">pause</span></a><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> start<br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 46, "block": "<pre class=\"text highlighted_source\">PRINT\"Welcome to the game of rock-paper-scissors\"<br/>PRINT \"Each player guesses one of these three, and reveals it at the same time.\"<br/>PRINT \"Rock blunts scissors, which cut paper, which wraps stone.\"<br/>PRINT \"If both players choose the same, it is a draw!\"<br/>PRINT \"When you've had enough, choose Q.\"<br/>DIM rps%(2),g$(3)<br/>g$()=\"rock\",\"paper\",\"scissors\"<br/>total%=0<br/>draw%=0<br/>pwin%=0<br/>cwin%=0<br/>c%=RND(3)<br/>PRINT\"What is your move (press R, P, or S)?\"<br/>REPEAT<br/>  REPEAT q$=GET$ UNTIL INSTR(\"RPSrpsQq\",q$)&gt;0<br/>  g%=(INSTR(\"RrPpSsQq\",q$)-1) DIV 2<br/>  IF g%&gt;2 THEN PROCsummarise:END<br/>  total%+=1<br/>  rps%(g%)+=1<br/>  PRINT\"You chose \";g$(g%);\" and I chose \";g$(c%);<br/>  CASE g%-c% OF<br/>    WHEN 0:<br/>      PRINT \". It's a draw\"<br/>      draw%+=1<br/>    WHEN 1,-2:<br/>      PRINT \". You win!\"<br/>      pwin%+=1<br/>    WHEN -1,2:<br/>      PRINT \". I win!\"<br/>      cwin%+=1<br/>    ENDCASE<br/>  c%=FNmove(rps%(),total%)<br/>UNTIL FALSE<br/>END<br/>:<br/>DEFPROCsummarise<br/>PRINT \"You won \";pwin%;\", and I won \";cwin%;\". There were \";draw%;\" draws\"<br/>PRINT \"Thanks for playing!\"<br/>ENDPROC<br/>:<br/>DEFFNmove(p%(),t%)<br/>LOCAL r%<br/>r%=RND(total%)<br/>IF r%&lt;=p%(0) THEN =1<br/>IF r%&lt;=p%(0)+p%(1) THEN =2<br/>=0</pre>"}, {"lang": "C", "loc": 53, "block": "<pre class=\"c highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#define LEN 3 </span><br/>\u00a0<br/><span class=\"coMULTI\">/* pick a random index from 0 to n-1, according to probablities listed<br/>   in p[] which is assumed to have a sum of 1. The values in the probablity<br/>   list matters up to the point where the sum goes over 1 */</span><br/><span class=\"kw4\">int</span> rand_idx<span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span>p<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> s <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>RAND_MAX <span class=\"sy0\">+</span> <span class=\"nu16\">1.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>s <span class=\"sy0\">-=</span> p<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> i<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> user_action<span class=\"sy0\">,</span> my_action<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> user_rec<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>names<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Rock\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Paper\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Scissors\"</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">char</span> str<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>winner<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"We tied.\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Meself winned.\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"You win.\"</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span>  p<span class=\"br0\">[</span>LEN<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>.<span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>.<span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>.<span class=\"sy0\">/</span><span class=\"nu0\">3</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tmy_action <span class=\"sy0\">=</span> rand_idx<span class=\"br0\">(</span>p<span class=\"sy0\">,</span>LEN<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Your choice [1-3]:<span class=\"es1\">\\n</span>\"</span><br/>\t\t\t<span class=\"st0\">\"  1. Rock<span class=\"es1\">\\n</span>  2. Paper<span class=\"es1\">\\n</span>  3. Scissors<span class=\"es1\">\\n</span>&gt; \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"coMULTI\">/* scanf is a terrible way to do input.  should use stty and keystrokes */</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/scanf.html\"><span class=\"kw3\">scanf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>user_action<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/scanf.html\"><span class=\"kw3\">scanf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%1s\"</span><span class=\"sy0\">,</span> str<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>str <span class=\"sy0\">==</span> <span class=\"st0\">'q'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Your choices [rock\u00a0:\u00a0%d , paper\u00a0: \u00a0%d , scissors\u00a0%d] \"</span><span class=\"sy0\">,</span>user_rec<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>user_rec<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> user_rec<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <br/>\t\t\t\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\tuser_action <span class=\"sy0\">--;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>user_action <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span> user_action <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"invalid choice; again<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"You chose\u00a0%s; I chose\u00a0%s.\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>\t\t\tnames<span class=\"br0\">[</span>user_action<span class=\"br0\">]</span><span class=\"sy0\">,</span> names<span class=\"br0\">[</span>my_action<span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\twinner<span class=\"br0\">[</span><span class=\"br0\">(</span>my_action <span class=\"sy0\">-</span> user_action <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tuser_rec<span class=\"br0\">[</span>user_action<span class=\"br0\">]</span><span class=\"sy0\">++;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C++", "loc": 161, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;windows.h&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/>\u00a0<br/><span class=\"co1\">//-------------------------------------------------------------------------------</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"co1\">//-------------------------------------------------------------------------------</span><br/><span class=\"kw2\">enum</span> choices <span class=\"br0\">{</span> ROCK, SPOCK, PAPER, LIZARD, SCISSORS, MX_C <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw2\">enum</span> indexes <span class=\"br0\">{</span> PLAYER, COMPUTER, DRAW <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"co1\">//-------------------------------------------------------------------------------</span><br/><span class=\"kw2\">class</span> stats<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    stats<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> _draw<span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        ZeroMemory<span class=\"br0\">(</span> _moves, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> _moves <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tZeroMemory<span class=\"br0\">(</span> _win, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> _win <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> draw<span class=\"br0\">(</span><span class=\"br0\">)</span>\t\t        <span class=\"br0\">{</span> _draw<span class=\"sy2\">++</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> win<span class=\"br0\">(</span> <span class=\"kw4\">int</span> p <span class=\"br0\">)</span>\t        <span class=\"br0\">{</span> _win<span class=\"br0\">[</span>p<span class=\"br0\">]</span><span class=\"sy2\">++</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> move<span class=\"br0\">(</span> <span class=\"kw4\">int</span> p, <span class=\"kw4\">int</span> m <span class=\"br0\">)</span>   <span class=\"br0\">{</span> _moves<span class=\"br0\">[</span>p<span class=\"br0\">]</span><span class=\"br0\">[</span>m<span class=\"br0\">]</span><span class=\"sy2\">++</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> getMove<span class=\"br0\">(</span> <span class=\"kw4\">int</span> p, <span class=\"kw4\">int</span> m <span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> _moves<span class=\"br0\">[</span>p<span class=\"br0\">]</span><span class=\"br0\">[</span>m<span class=\"br0\">]</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    string format<span class=\"br0\">(</span> <span class=\"kw4\">int</span> a <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">char</span> t<span class=\"br0\">[</span><span class=\"nu0\">32</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\twsprintf<span class=\"br0\">(</span> t, <span class=\"st0\">\"%.3d\"</span>, a <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tstring d<span class=\"br0\">(</span> t <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">return</span> d<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> print<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        string  d <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _draw <span class=\"br0\">)</span>,<br/>\t       pw <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _win<span class=\"br0\">[</span>PLAYER<span class=\"br0\">]</span> <span class=\"br0\">)</span>,\t\tcw <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _win<span class=\"br0\">[</span>COMPUTER<span class=\"br0\">]</span> <span class=\"br0\">)</span>,<br/>\t       pr <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>PLAYER<span class=\"br0\">]</span><span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span> <span class=\"br0\">)</span>,\tcr <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>COMPUTER<span class=\"br0\">]</span><span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span> <span class=\"br0\">)</span>,<br/>               pp <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>PLAYER<span class=\"br0\">]</span><span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span> <span class=\"br0\">)</span>,\tcp <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>COMPUTER<span class=\"br0\">]</span><span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span> <span class=\"br0\">)</span>,<br/>\t       ps <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>PLAYER<span class=\"br0\">]</span><span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span> <span class=\"br0\">)</span>, cs <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>COMPUTER<span class=\"br0\">]</span><span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span> <span class=\"br0\">)</span>,<br/>\t       pl <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>PLAYER<span class=\"br0\">]</span><span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span> <span class=\"br0\">)</span>,\tcl <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>COMPUTER<span class=\"br0\">]</span><span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span> <span class=\"br0\">)</span>,<br/>\t       pk <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>PLAYER<span class=\"br0\">]</span><span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span> <span class=\"br0\">)</span>,\tck <span class=\"sy1\">=</span> format<span class=\"br0\">(</span> _moves<span class=\"br0\">[</span>COMPUTER<span class=\"br0\">]</span><span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw3\">system</span><span class=\"br0\">(</span> <span class=\"st0\">\"cls\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+----------+-------+--------+--------+---------+----------+--------+---------+\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"|          |  WON  |  DRAW  |  ROCK  |  PAPER  | SCISSORS | LIZARD |  SPOCK  |\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+----------+-------+--------+--------+---------+----------+--------+---------+\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"|  PLAYER  |  \"</span>  <span class=\"sy1\">&lt;&lt;</span> pw <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  |        |   \"</span> <span class=\"sy1\">&lt;&lt;</span> pr <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  |   \"</span> <span class=\"sy1\">&lt;&lt;</span> pp <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"   |   \"</span> <span class=\"sy1\">&lt;&lt;</span> ps <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"    |  \"</span> <span class=\"sy1\">&lt;&lt;</span> pl <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"   |   \"</span> <span class=\"sy1\">&lt;&lt;</span> pk <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"   |\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+----------+-------+   \"</span> <span class=\"sy1\">&lt;&lt;</span> d <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  +--------+---------+----------+--------+---------+\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"| COMPUTER |  \"</span>  <span class=\"sy1\">&lt;&lt;</span> cw <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  |        |   \"</span> <span class=\"sy1\">&lt;&lt;</span> cr <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  |   \"</span> <span class=\"sy1\">&lt;&lt;</span> cp <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"   |   \"</span> <span class=\"sy1\">&lt;&lt;</span> cs <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"    |  \"</span> <span class=\"sy1\">&lt;&lt;</span> cl <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"   |   \"</span> <span class=\"sy1\">&lt;&lt;</span> ck <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"   |\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+----------+-------+--------+--------+---------+----------+--------+---------+\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw3\">system</span><span class=\"br0\">(</span> <span class=\"st0\">\"pause\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int</span> _moves<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span>MX_C<span class=\"br0\">]</span>, _win<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, _draw<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"co1\">//-------------------------------------------------------------------------------</span><br/><span class=\"kw2\">class</span> rps<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int</span> makeMove<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> total <span class=\"sy1\">=</span> <span class=\"nu0\">0</span>, r, s<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> MX_C<span class=\"sy4\">;</span> total <span class=\"sy2\">+</span><span class=\"sy1\">=</span> statistics.<span class=\"me1\">getMove</span><span class=\"br0\">(</span> PLAYER, i<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tr <span class=\"sy1\">=</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> total<span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> ROCK<span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> SCISSORS<span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    s <span class=\"sy1\">=</span> statistics.<span class=\"me1\">getMove</span><span class=\"br0\">(</span> PLAYER, i <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">if</span><span class=\"br0\">(</span> r <span class=\"sy1\">&lt;</span> s <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span> i <span class=\"sy2\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    r <span class=\"sy2\">-</span><span class=\"sy1\">=</span> s<span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> ROCK<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> printMove<span class=\"br0\">(</span> <span class=\"kw4\">int</span> p, <span class=\"kw4\">int</span> m <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> p <span class=\"sy1\">==</span> COMPUTER <span class=\"br0\">)</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"My move: \"</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">else</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Your move: \"</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">switch</span><span class=\"br0\">(</span> m <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">case</span> ROCK<span class=\"sy4\">:</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"ROCK<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">case</span> PAPER<span class=\"sy4\">:</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"PAPER<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">case</span> SCISSORS<span class=\"sy4\">:</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"SCISSORS<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">case</span> LIZARD<span class=\"sy4\">:</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"LIZARD<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">case</span> SPOCK<span class=\"sy4\">:</span> <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"SPOCK<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    rps<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tchecker<span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span><span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span><span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span><span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span><span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span><span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>\tchecker<span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span><span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span><span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span><span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span><span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span><span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>\tchecker<span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span><span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span><span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span><span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span><span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span><span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>\tchecker<span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span><span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span><span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span><span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span><span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span><span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>\tchecker<span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span><span class=\"br0\">[</span>ROCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span><span class=\"br0\">[</span>PAPER<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span><span class=\"br0\">[</span>SCISSORS<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span><span class=\"br0\">[</span>LIZARD<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> checker<span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span><span class=\"br0\">[</span>SPOCK<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">2</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> play<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> p, r, m<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"kw2\">true</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"What is your move (1)ROCK (2)SPOCK (3)PAPER (4)LIZARD (5)SCISSORS (0)Quit\u00a0? \"</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw3\">cin</span> <span class=\"sy1\">&gt;&gt;</span> p<span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>p <span class=\"sy3\">||</span> p <span class=\"sy1\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">if</span><span class=\"br0\">(</span> p <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy3\">&amp;&amp;</span> p <span class=\"sy1\">&lt;</span> <span class=\"nu0\">6</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\tp<span class=\"sy2\">--</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t\tprintMove<span class=\"br0\">(</span> PLAYER, p <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\tstatistics.<span class=\"me1\">move</span><span class=\"br0\">(</span> PLAYER, p <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t\tm <span class=\"sy1\">=</span> makeMove<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\tstatistics.<span class=\"me1\">move</span><span class=\"br0\">(</span> COMPUTER, m <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\tprintMove<span class=\"br0\">(</span> COMPUTER, m <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t\tr <span class=\"sy1\">=</span> checker<span class=\"br0\">[</span>p<span class=\"br0\">]</span><span class=\"br0\">[</span>m<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">switch</span><span class=\"br0\">(</span> r <span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">case</span> DRAW<span class=\"sy4\">:</span> <br/>\t\t        <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"DRAW!\"</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span> <br/>\t\t        statistics.<span class=\"me1\">draw</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\t    <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t\t    <span class=\"kw1\">case</span> COMPUTER<span class=\"sy4\">:</span> <br/>\t\t\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"I WIN!\"</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span>  <br/>\t\t\tstatistics.<span class=\"me1\">win</span><span class=\"br0\">(</span> COMPUTER <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\t    <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t\t    <span class=\"kw1\">case</span> PLAYER<span class=\"sy4\">:</span> <br/>\t\t\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"YOU WIN!\"</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span> <br/>\t\t\tstatistics.<span class=\"me1\">win</span><span class=\"br0\">(</span> PLAYER <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw3\">system</span><span class=\"br0\">(</span> <span class=\"st0\">\"pause\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"kw3\">system</span><span class=\"br0\">(</span> <span class=\"st0\">\"cls\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\tstatistics.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    stats statistics<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> checker<span class=\"br0\">[</span>MX_C<span class=\"br0\">]</span><span class=\"br0\">[</span>MX_C<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"co1\">//-------------------------------------------------------------------------------</span><br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"kw4\">int</span> argc, <span class=\"kw4\">char</span><span class=\"sy2\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw3\">srand</span><span class=\"br0\">(</span> GetTickCount<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    rps game<span class=\"sy4\">;</span><br/>    game.<span class=\"me1\">play</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">//-------------------------------------------------------------------------------</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 174, "block": "<pre class=\"c highlighted_source\">using System<span class=\"sy0\">;</span><br/>using System.<span class=\"me1\">Collections</span>.<span class=\"me1\">Generic</span><span class=\"sy0\">;</span><br/>using System.<span class=\"me1\">Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/>namespace RockPaperScissors<br/><span class=\"br0\">{</span><br/>    class Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"co1\">// There is no limit on the amount of weapons supported by RPSGame. Matchups are calculated depending on the order.</span><br/>            var rps <span class=\"sy0\">=</span> new RPSGame<span class=\"br0\">(</span><span class=\"st0\">\"scissors\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"paper\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"rock\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"lizard\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"spock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw4\">int</span> wins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> losses <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> draws <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Make your move: \"</span> <span class=\"sy0\">+</span> string.<span class=\"me1\">Join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"sy0\">,</span> rps.<span class=\"me1\">Weapons</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\", quit\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                string weapon <span class=\"sy0\">=</span> Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">Trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">ToLower</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>weapon <span class=\"sy0\">==</span> <span class=\"st0\">\"quit\"</span><span class=\"br0\">)</span><br/>                    <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>rps.<span class=\"me1\">Weapons</span>.<span class=\"me1\">Contains</span><span class=\"br0\">(</span>weapon<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid weapon!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>                <span class=\"kw4\">int</span> result <span class=\"sy0\">=</span> rps.<span class=\"me1\">Next</span><span class=\"br0\">(</span>weapon<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"You chose {0} and your opponent chose {1}!\"</span><span class=\"sy0\">,</span> weapon<span class=\"sy0\">,</span> rps.<span class=\"me1\">LastAIWeapon</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>result<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0} pwns {1}. You're a winner!\"</span><span class=\"sy0\">,</span> weapon<span class=\"sy0\">,</span> rps.<span class=\"me1\">LastAIWeapon</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        wins<span class=\"sy0\">++;</span><br/>                        <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span> Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Draw!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        draws<span class=\"sy0\">++;</span><br/>                        <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span> Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0} pwns {1}. You're a loser!\"</span><span class=\"sy0\">,</span> rps.<span class=\"me1\">LastAIWeapon</span><span class=\"sy0\">,</span> weapon<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        losses<span class=\"sy0\">++;</span><br/>                        <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>                Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Player Statistics<span class=\"es1\">\\n</span>Wins: {0}<span class=\"es1\">\\n</span>Losses: {1}<span class=\"es1\">\\n</span>Draws: {2}\"</span><span class=\"sy0\">,</span> wins<span class=\"sy0\">,</span> losses<span class=\"sy0\">,</span> draws<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        class RPSGame<br/>        <span class=\"br0\">{</span><br/>            public RPSGame<span class=\"br0\">(</span>params string<span class=\"br0\">[</span><span class=\"br0\">]</span> weapons<span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                Weapons <span class=\"sy0\">=</span> weapons<span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"co1\">// Creates a new AI opponent, and gives it the list of weapons.</span><br/>                _rpsAI <span class=\"sy0\">=</span> new RPSAI<span class=\"br0\">(</span>weapons<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"co1\">// Play next turn.</span><br/>            public <span class=\"kw4\">int</span> Next<span class=\"br0\">(</span>string weapon<span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                string aiWeapon <span class=\"sy0\">=</span> _rpsAI.<span class=\"me1\">NextMove</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// Gets the AI opponent's next move.</span><br/>                LastAIWeapon <span class=\"sy0\">=</span> aiWeapon<span class=\"sy0\">;</span> <span class=\"co1\">// Saves the AI opponent's move in a property so the player can see it.</span><br/>\u00a0<br/>                _rpsAI.<span class=\"me1\">AddPlayerMove</span><span class=\"br0\">(</span>weapon<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// Let the AI know which weapon the player chose, for future predictions.</span><br/>                <span class=\"kw1\">return</span> GetWinner<span class=\"br0\">(</span>Weapons<span class=\"sy0\">,</span> weapon<span class=\"sy0\">,</span> aiWeapon<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// Returns -1 if AI win, 0 if draw, and 1 if player win.</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"co1\">// Returns matchup winner.</span><br/>            public <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> GetWinner<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> weapons<span class=\"sy0\">,</span> string weapon1<span class=\"sy0\">,</span> string weapon2<span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>weapon1 <span class=\"sy0\">==</span> weapon2<span class=\"br0\">)</span><br/>                    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"co1\">// If weapons are the same, return 0 for draw.</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>GetVictories<span class=\"br0\">(</span>weapons<span class=\"sy0\">,</span> weapon1<span class=\"br0\">)</span>.<span class=\"me1\">Contains</span><span class=\"br0\">(</span>weapon2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"co1\">// Returns 1 for weapon1 win.</span><br/>                <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>GetVictories<span class=\"br0\">(</span>weapons<span class=\"sy0\">,</span> weapon2<span class=\"br0\">)</span>.<span class=\"me1\">Contains</span><span class=\"br0\">(</span>weapon1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"co1\">// Returns -1 for weapon2 win.</span><br/>\u00a0<br/>                throw new Exception<span class=\"br0\">(</span><span class=\"st0\">\"No winner found.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"coMULTI\">/* <br/>             * Return weapons that the provided weapon beats.<br/>             * The are calculated in the following way:<br/>             * If the index of the weapon is even, then all even indices less than it,<br/>             * and all odd indices greater than it, are victories.<br/>             * One exception is if it is an odd index, and also the last index in the set,<br/>             * then the first index in the set is a victory.<br/>             */</span><br/>            public <span class=\"kw4\">static</span> IEnumerable<span class=\"sy0\">&lt;</span>string<span class=\"sy0\">&gt;</span> GetVictories<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> weapons<span class=\"sy0\">,</span> string weapon<span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"co1\">// Gets index of weapon.</span><br/>                <span class=\"kw4\">int</span> index <span class=\"sy0\">=</span> Array.<span class=\"me1\">IndexOf</span><span class=\"br0\">(</span>weapons<span class=\"sy0\">,</span> weapon<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"co1\">// If weapon is odd and the final index in the set, then return the first item in the set as a victory.</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>index <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> index <span class=\"sy0\">==</span> weapons.<span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                    yield <span class=\"kw1\">return</span> weapons<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> index <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">-=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>                    yield <span class=\"kw1\">return</span> weapons<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> index <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> weapons.<span class=\"me1\">Length</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>                    yield <span class=\"kw1\">return</span> weapons<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            public string LastAIWeapon<br/>            <span class=\"br0\">{</span><br/>                private set<span class=\"sy0\">;</span><br/>                get<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            public readonly string<span class=\"br0\">[</span><span class=\"br0\">]</span> Weapons<span class=\"sy0\">;</span><br/>            private RPSAI _rpsAI<span class=\"sy0\">;</span><br/>\u00a0<br/>            class RPSAI<br/>            <span class=\"br0\">{</span><br/>                public RPSAI<span class=\"br0\">(</span>params string<span class=\"br0\">[</span><span class=\"br0\">]</span> weapons<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    _weapons <span class=\"sy0\">=</span> weapons<span class=\"sy0\">;</span><br/>                    _weaponProbability <span class=\"sy0\">=</span> new Dictionary<span class=\"sy0\">&lt;</span>string<span class=\"sy0\">,</span> int<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"co1\">// The AI sets the probability for each weapon to be chosen as 1.</span><br/>                    foreach <span class=\"br0\">(</span>string weapon in weapons<span class=\"br0\">)</span><br/>                        _weaponProbability.<span class=\"me1\">Add</span><span class=\"br0\">(</span>weapon<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    _random <span class=\"sy0\">=</span> new Random<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>                <span class=\"co1\">// Increases probability of selecting each weapon that beats the provided move.</span><br/>                public <span class=\"kw4\">void</span> AddPlayerMove<span class=\"br0\">(</span>string weapon<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">int</span> index <span class=\"sy0\">=</span> Array.<span class=\"me1\">IndexOf</span><span class=\"br0\">(</span>_weapons<span class=\"sy0\">,</span> weapon<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    foreach <span class=\"br0\">(</span>string winWeapon in _weapons.<span class=\"me1\">Except</span><span class=\"br0\">(</span>GetVictories<span class=\"br0\">(</span>_weapons<span class=\"sy0\">,</span> weapon<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>winWeapon <span class=\"sy0\">!=</span> weapon<span class=\"br0\">)</span><br/>                            _weaponProbability<span class=\"br0\">[</span>winWeapon<span class=\"br0\">]</span><span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>                <span class=\"co1\">// Gets the AI's next move.</span><br/>                public string NextMove<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">double</span> r <span class=\"sy0\">=</span> _random.<span class=\"me1\">NextDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"kw4\">double</span> divisor <span class=\"sy0\">=</span> _weaponProbability.<span class=\"me1\">Values</span>.<span class=\"me1\">Sum</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    var weightedWeaponRanges <span class=\"sy0\">=</span> new Dictionary<span class=\"sy0\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy0\">,</span> string<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"kw4\">double</span> currentPos <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"co1\">// Maps probabilities to ranges between 0.0 and 1.0. Returns weighted random weapon.</span><br/>                    foreach <span class=\"br0\">(</span>var weapon in _weaponProbability<span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        <span class=\"kw4\">double</span> weightedRange <span class=\"sy0\">=</span> weapon.<span class=\"me1\">Value</span> <span class=\"sy0\">/</span> divisor<span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">&lt;=</span> currentPos <span class=\"sy0\">+</span> <span class=\"br0\">(</span>weapon.<span class=\"me1\">Value</span> <span class=\"sy0\">/</span> divisor<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                            <span class=\"kw1\">return</span> weapon.<span class=\"me1\">Key</span><span class=\"sy0\">;</span><br/>                        currentPos <span class=\"sy0\">+=</span> weightedRange<span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>\u00a0<br/>                    throw new Exception<span class=\"br0\">(</span><span class=\"st0\">\"Error calculating move.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>                Random _random<span class=\"sy0\">;</span><br/>                private readonly string<span class=\"br0\">[</span><span class=\"br0\">]</span> _weapons<span class=\"sy0\">;</span><br/>                private Dictionary<span class=\"sy0\">&lt;</span>string<span class=\"sy0\">,</span> int<span class=\"sy0\">&gt;</span> _weaponProbability<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 1, "block": "<pre>$ lein trampoline run</pre>"}, {"lang": "D", "loc": 57, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">random</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">conv</span><span class=\"sy0\">,</span> std.<span class=\"me1\">array</span><span class=\"sy0\">,</span> std.<span class=\"me1\">typecons</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">enum</span> Choice <span class=\"br0\">{</span> rock<span class=\"sy0\">,</span> paper<span class=\"sy0\">,</span> scissors <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">bool</span> beats<span class=\"br0\">(</span><span class=\"kw2\">in</span> Choice c1<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> Choice c2<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"kw2\">with</span> <span class=\"br0\">(</span>Choice<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span>c1 <span class=\"sy0\">==</span> paper    <span class=\"sy0\">&amp;&amp;</span> c2 <span class=\"sy0\">==</span> rock<span class=\"br0\">)</span> <span class=\"sy0\">||</span><br/>                         <span class=\"br0\">(</span>c1 <span class=\"sy0\">==</span> scissors <span class=\"sy0\">&amp;&amp;</span> c2 <span class=\"sy0\">==</span> paper<span class=\"br0\">)</span> <span class=\"sy0\">||</span><br/>                         <span class=\"br0\">(</span>c1 <span class=\"sy0\">==</span> rock     <span class=\"sy0\">&amp;&amp;</span> c2 <span class=\"sy0\">==</span> scissors<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Choice genMove<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span> r<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">int</span> p<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">int</span> s<span class=\"br0\">)</span> @<span class=\"kw4\">safe</span> <span class=\"coMULTI\">/*@nogc*/</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> x <span class=\"sy0\">=</span> uniform<span class=\"sy0\">!</span><span class=\"st0\">\"[]\"</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> r <span class=\"sy0\">+</span> p <span class=\"sy0\">+</span> s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span> s<span class=\"br0\">)</span>      <span class=\"kw1\">return</span> Choice.<span class=\"me1\">rock</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;=</span> s <span class=\"sy0\">+</span> r<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Choice.<span class=\"me1\">paper</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span>            <span class=\"kw1\">return</span> Choice.<span class=\"me1\">scissors</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Nullable<span class=\"sy0\">!</span>To maybeTo<span class=\"br0\">(</span>To<span class=\"sy0\">,</span> From<span class=\"br0\">)</span><span class=\"br0\">(</span>From x<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">try</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span><span class=\"br0\">(</span>x.<span class=\"me1\">to</span><span class=\"sy0\">!</span>To<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw2\">catch</span> <span class=\"br0\">(</span>ConvException<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw2\">catch</span> <span class=\"br0\">(</span><span class=\"kw3\">Exception</span> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">static</span> <span class=\"kw4\">immutable</span> err <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> <span class=\"kw3\">Error</span><span class=\"br0\">(</span><span class=\"st0\">\"std.conv.to failure\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">throw</span> err<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/*@safe*/</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> s <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        write<span class=\"br0\">(</span><span class=\"st0\">\"rock, paper or scissors? \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">immutable</span> hs <span class=\"sy0\">=</span> readln.<span class=\"me1\">strip</span>.<span class=\"me1\">toLower</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>hs.<span class=\"me1\">empty</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">immutable</span> h <span class=\"sy0\">=</span> hs.<span class=\"me1\">maybeTo</span><span class=\"sy0\">!</span>Choice<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>h.<span class=\"me1\">isNull</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            writeln<span class=\"br0\">(</span><span class=\"st0\">\"Wrong input: \"</span><span class=\"sy0\">,</span> hs<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw4\">immutable</span> c <span class=\"sy0\">=</span> genMove<span class=\"br0\">(</span>r<span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        writeln<span class=\"br0\">(</span><span class=\"st0\">\"Player: \"</span><span class=\"sy0\">,</span> h.<span class=\"me1\">get</span><span class=\"sy0\">,</span> <span class=\"st0\">\" Computer: \"</span><span class=\"sy0\">,</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>             <span class=\"kw1\">if</span> <span class=\"br0\">(</span>beats<span class=\"br0\">(</span>h<span class=\"sy0\">,</span> c<span class=\"br0\">)</span><span class=\"br0\">)</span> writeln<span class=\"br0\">(</span><span class=\"st0\">\"Player wins<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>beats<span class=\"br0\">(</span>c<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"br0\">)</span> writeln<span class=\"br0\">(</span><span class=\"st0\">\"Player loses<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span>                  writeln<span class=\"br0\">(</span><span class=\"st0\">\"Draw<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">final</span> <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>h.<span class=\"me1\">get</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> Choice.<span class=\"me1\">rock</span><span class=\"sy0\">:</span>     r<span class=\"sy0\">++;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> Choice.<span class=\"me1\">paper</span><span class=\"sy0\">:</span>    p<span class=\"sy0\">++;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> Choice.<span class=\"me1\">scissors</span><span class=\"sy0\">:</span> s<span class=\"sy0\">++;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Elixir", "loc": 48, "block": "<pre class=\"text highlighted_source\">defmodule Rock_paper_scissors do<br/>  def play, do: loop([1,1,1])<br/>\u00a0<br/>  defp loop([r,p,s]=odds) do<br/>    IO.gets(\"What is your move? (R,P,S,Q) \") |&gt; String.upcase |&gt; String.first<br/>    |&gt; case do<br/>           \"Q\" -&gt; IO.puts \"Good bye!\"<br/>           human when human in [\"R\",\"P\",\"S\"] -&gt;<br/>              IO.puts \"Your move is #{play_to_string(human)}.\"<br/>              computer = select_play(odds)<br/>              IO.puts \"My move is #{play_to_string(computer)}\"<br/>              case beats(human,computer) do<br/>                  true  -&gt; IO.puts \"You win!\"<br/>                  false -&gt; IO.puts \"I win!\"<br/>                  _     -&gt; IO.puts \"Draw\"<br/>              end<br/>              case human do<br/>                  \"R\" -&gt; loop([r+1,p,s])<br/>                  \"P\" -&gt; loop([r,p+1,s])<br/>                  \"S\" -&gt; loop([r,p,s+1])<br/>              end<br/>           _ -&gt;<br/>              IO.puts \"Invalid play\"<br/>              loop(odds)<br/>       end<br/>  end<br/>\u00a0<br/>  defp beats(\"R\",\"S\"), do: true<br/>  defp beats(\"P\",\"R\"), do: true<br/>  defp beats(\"S\",\"P\"), do: true<br/>  defp beats(x,x), do:\u00a0:draw<br/>  defp beats(_,_), do: false<br/>\u00a0<br/>  defp play_to_string(\"R\"), do: \"Rock\"<br/>  defp play_to_string(\"P\"), do: \"Paper\"<br/>  defp play_to_string(\"S\"), do: \"Scissors\"<br/>\u00a0<br/>  defp select_play([r,p,s]) do<br/>    n =\u00a0:rand.uniform(r+p+s)<br/>    cond do<br/>        n &lt;= r   -&gt; \"P\"<br/>        n &lt;= r+p -&gt; \"S\"<br/>        true     -&gt; \"R\"<br/>    end<br/>  end<br/>end<br/>\u00a0<br/>Rock_paper_scissors.play</pre>"}, {"lang": "Erlang", "loc": 48, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>rps<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">compile</span><span class=\"br0\">(</span>export_all<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">play</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"re3\">loop</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">loop</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">R</span><span class=\"sy1\">,</span><span class=\"re5\">P</span><span class=\"sy1\">,</span><span class=\"re5\">S</span><span class=\"br0\">]</span><span class=\"sy3\">=</span><span class=\"re5\">Odds</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"kw1\">case</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fread</span><span class=\"br0\">(</span><span class=\"st0\">\"What is your move? (R,P,S,Q) \"</span><span class=\"sy1\">,</span><span class=\"st0\">\"~c\"</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span><br/>        <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span><span class=\"br0\">[</span><span class=\"st0\">\"Q\"</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Good bye!~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"re5\">Human</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">when</span> <span class=\"re5\">Human</span> <span class=\"sy3\">==</span> <span class=\"re6\">$R</span><span class=\"sy1\">;</span> <span class=\"re5\">Human</span> <span class=\"sy3\">==</span> <span class=\"re6\">$P</span><span class=\"sy1\">;</span> <span class=\"re5\">Human</span> <span class=\"sy3\">==</span> <span class=\"re6\">$S</span> <span class=\"sy1\">-&gt;</span><br/>            <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Your move is ~s.~n\"</span><span class=\"sy1\">,</span><br/>                      <span class=\"br0\">[</span><span class=\"re3\">play_to_string</span><span class=\"br0\">(</span><span class=\"re5\">Human</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"re5\">Computer</span> <span class=\"sy3\">=</span> <span class=\"re3\">select_play</span><span class=\"br0\">(</span><span class=\"re5\">Odds</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"My move is ~s~n\"</span><span class=\"sy1\">,</span><br/>                      <span class=\"br0\">[</span><span class=\"re3\">play_to_string</span><span class=\"br0\">(</span><span class=\"re5\">Computer</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"kw1\">case</span> <span class=\"br0\">{</span><span class=\"re3\">beats</span><span class=\"br0\">(</span><span class=\"re5\">Human</span><span class=\"sy1\">,</span><span class=\"re5\">Computer</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"re3\">beats</span><span class=\"br0\">(</span><span class=\"re5\">Computer</span><span class=\"sy1\">,</span><span class=\"re5\">Human</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"kw1\">of</span><br/>                <span class=\"br0\">{</span>true<span class=\"sy1\">,</span><span class=\"re5\">_</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"You win!~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                <span class=\"br0\">{</span><span class=\"re5\">_</span><span class=\"sy1\">,</span>true<span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"I win!~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                <span class=\"re5\">_</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Draw~n\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">end</span><span class=\"sy1\">,</span><br/>            <span class=\"kw1\">case</span> <span class=\"re5\">Human</span> <span class=\"kw1\">of</span><br/>                <span class=\"re6\">$R</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">loop</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">R</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"re5\">P</span><span class=\"sy1\">,</span><span class=\"re5\">S</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                <span class=\"re6\">$P</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">loop</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">R</span><span class=\"sy1\">,</span><span class=\"re5\">P</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"re5\">S</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                <span class=\"re6\">$S</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">loop</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">R</span><span class=\"sy1\">,</span><span class=\"re5\">P</span><span class=\"sy1\">,</span><span class=\"re5\">S</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>        <span class=\"re5\">_</span> <span class=\"sy1\">-&gt;</span><br/>            <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid play~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"re3\">loop</span><span class=\"br0\">(</span><span class=\"re5\">Odds</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">beats</span><span class=\"br0\">(</span><span class=\"re6\">$R</span><span class=\"sy1\">,</span><span class=\"re6\">$S</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">true</span><span class=\"sy1\">;</span><br/><span class=\"re3\">beats</span><span class=\"br0\">(</span><span class=\"re6\">$P</span><span class=\"sy1\">,</span><span class=\"re6\">$R</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">true</span><span class=\"sy1\">;</span><br/><span class=\"re3\">beats</span><span class=\"br0\">(</span><span class=\"re6\">$S</span><span class=\"sy1\">,</span><span class=\"re6\">$P</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">true</span><span class=\"sy1\">;</span><br/><span class=\"re3\">beats</span><span class=\"br0\">(</span><span class=\"re5\">_</span><span class=\"sy1\">,</span><span class=\"re5\">_</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">false</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">play_to_string</span><span class=\"br0\">(</span><span class=\"re6\">$R</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"Rock\"</span><span class=\"sy1\">;</span><br/><span class=\"re3\">play_to_string</span><span class=\"br0\">(</span><span class=\"re6\">$P</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"Paper\"</span><span class=\"sy1\">;</span><br/><span class=\"re3\">play_to_string</span><span class=\"br0\">(</span><span class=\"re6\">$S</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"Scissors\"</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">select_play</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">R</span><span class=\"sy1\">,</span><span class=\"re5\">P</span><span class=\"sy1\">,</span><span class=\"re5\">S</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"re5\">N</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/random.html\"><span class=\"kw5\">random</span></a>:<span class=\"re3\">uniform</span><span class=\"br0\">(</span><span class=\"re5\">R</span><span class=\"sy3\">+</span><span class=\"re5\">P</span><span class=\"sy3\">+</span><span class=\"re5\">S</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"kw1\">if</span><br/>        <span class=\"re5\">N</span> <span class=\"sy3\">=&lt;</span> <span class=\"re5\">R</span> <span class=\"sy1\">-&gt;</span> <span class=\"re6\">$P</span><span class=\"sy1\">;</span><br/>        <span class=\"re5\">N</span> <span class=\"sy3\">=&lt;</span> <span class=\"re5\">R</span><span class=\"sy3\">+</span><span class=\"re5\">P</span> <span class=\"sy1\">-&gt;</span> <span class=\"re6\">$S</span><span class=\"sy1\">;</span><br/>        true <span class=\"sy1\">-&gt;</span> <span class=\"re6\">$R</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 50, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">function</span> weighted_rand<span class=\"br0\">(</span><span class=\"kw2\">sequence</span> table<span class=\"br0\">)</span><br/>    <span class=\"kw2\">integer</span> sum<span class=\"sy2\">,</span>r<br/>    sum <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>table<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>        sum <span class=\"sy1\">+=</span> table<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/>    r <span class=\"sy1\">=</span> <span class=\"kw2\">rand</span><span class=\"br0\">(</span>sum<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>table<span class=\"br0\">)</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>        r <span class=\"sy1\">-=</span> table<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>        <span class=\"kw1\">if</span> r &lt;<span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">return</span> i<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>table<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> names <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Rock\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Paper\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Scissors\"</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">constant</span> winner <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"We tied.\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Meself winned.\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"You win.\"</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">integer</span> user_action<span class=\"sy2\">,</span> my_action<span class=\"sy2\">,</span> key<span class=\"sy2\">,</span> win<br/><span class=\"kw2\">sequence</span> user_rec<span class=\"sy2\">,</span> score<br/>user_rec <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>score <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>    my_action <span class=\"sy1\">=</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span>weighted_rand<span class=\"br0\">(</span>user_rec<span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"nu0\">1</span><br/>    <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"Your choice [1-3]:<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"  1. Rock<span class=\"es0\">\\n</span>  2. Paper<span class=\"es0\">\\n</span>  3. Scissors<span class=\"es0\">\\n</span>&gt; \"</span><span class=\"br0\">)</span><br/>    key <span class=\"sy1\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>key &lt; <span class=\"st0\">'1'</span> <span class=\"kw1\">or</span> key &gt; <span class=\"st0\">'3'</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> key\u00a0!<span class=\"sy1\">=</span> <span class=\"st0\">'q'</span> <span class=\"kw1\">do</span><br/>        key <span class=\"sy1\">=</span> <span class=\"kw2\">get_key</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">while</span><br/>    <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span>key<span class=\"br0\">)</span><br/>    <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> key <span class=\"sy1\">=</span> <span class=\"st0\">'q'</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">exit</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    user_action <span class=\"sy1\">=</span> key<span class=\"sy1\">-</span><span class=\"st0\">'0'</span><br/>    win <span class=\"sy1\">=</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span>my_action<span class=\"sy1\">-</span>user_action<span class=\"sy1\">+</span><span class=\"nu0\">3</span><span class=\"sy2\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"You chose\u00a0%s; I chose\u00a0%s.\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span><br/>        <span class=\"br0\">{</span> names<span class=\"br0\">[</span>user_action<span class=\"br0\">]</span><span class=\"sy2\">,</span><br/>          names<span class=\"br0\">[</span>my_action<span class=\"br0\">]</span><span class=\"sy2\">,</span><br/>          winner<span class=\"br0\">[</span>win<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> win <span class=\"kw1\">then</span><br/>        score<span class=\"br0\">[</span>win<span class=\"br0\">]</span> <span class=\"sy1\">+=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Score\u00a0%d:%d<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span>score<span class=\"br0\">)</span><br/>    user_rec<span class=\"br0\">[</span>user_action<span class=\"br0\">]</span> <span class=\"sy1\">+=</span> <span class=\"nu0\">1</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">while</span></pre>"}, {"lang": "F#", "loc": 62, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/>\u00a0<br/><span class=\"kw1\">let</span> random <span class=\"sy0\">=</span> Random <span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">let</span> rand <span class=\"sy0\">=</span> random.<span class=\"me1\">NextDouble</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">//Gets a random number in the range (0.0, 1.0)</span><br/>\u00a0<br/><span class=\"co1\">/// Union of possible choices for a round of rock-paper-scissors</span><br/><span class=\"kw1\">type</span> Choice <span class=\"sy0\">=</span><br/>| Rock<br/>| Paper<br/>| Scissors<br/>\u00a0<br/><span class=\"co1\">/// Gets the string representation of a Choice</span><br/><span class=\"kw1\">let</span> getString <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>    | Rock <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"Rock\"</span><br/>    | Paper <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"Paper\"</span><br/>    | Scissors <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"Scissors\"</span><br/>\u00a0<br/><span class=\"co1\">/// Defines rules for winning and losing</span><br/><span class=\"kw1\">let</span> beats <span class=\"br0\">(</span>a\u00a0: Choice, b\u00a0: Choice<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> a, b <span class=\"kw1\">with</span><br/>    | Rock, Scissors <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">true</span>    <span class=\"co1\">// Rock beats Scissors</span><br/>    | Paper, Rock <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">true</span>       <span class=\"co1\">// Paper beats Rock</span><br/>    | Scissors, Paper <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">true</span>   <span class=\"co1\">// Scissors beat Paper</span><br/>    | _, _ <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">false</span><br/>\u00a0<br/><span class=\"co1\">/// Generates the next move for the computer based on probability derived from previous player moves.</span><br/><span class=\"kw1\">let</span> genMove r p s <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> tot <span class=\"sy0\">=</span> r <span class=\"sy0\">+</span> p <span class=\"sy0\">+</span> s<br/>    <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> rand<br/>    <span class=\"kw1\">if</span> n <span class=\"sy0\">&lt;=</span> s <span class=\"sy0\">/</span> tot <span class=\"kw1\">then</span> Rock<br/>    <span class=\"kw1\">elif</span> n <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span>s <span class=\"sy0\">+</span> r<span class=\"br0\">)</span> <span class=\"sy0\">/</span> tot <span class=\"kw1\">then</span> Paper<br/>    <span class=\"kw1\">else</span> Scissors<br/>\u00a0<br/><span class=\"co1\">/// Gets the move chosen by the player</span><br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> getMove <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    printf <span class=\"st0\">\"[R]ock, [P]aper, or [S]cissors?: \"</span><br/>    <span class=\"kw1\">let</span> choice <span class=\"sy0\">=</span> Console.<span class=\"me1\">ReadLine</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">match</span> choice <span class=\"kw1\">with</span><br/>    | <span class=\"st0\">\"r\"</span> | <span class=\"st0\">\"R\"</span> <span class=\"sy0\">-&gt;</span> Rock<br/>    | <span class=\"st0\">\"p\"</span> | <span class=\"st0\">\"P\"</span> <span class=\"sy0\">-&gt;</span> Paper<br/>    | <span class=\"st0\">\"s\"</span> | <span class=\"st0\">\"S\"</span> <span class=\"sy0\">-&gt;</span> Scissors<br/>    | _ <span class=\"sy0\">-&gt;</span><br/>        printf <span class=\"st0\">\"Invalid choice.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span><br/>        getMove <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">/// Place where all the game logic takes place.</span><br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> game <span class=\"br0\">(</span>r\u00a0: <span class=\"kw4\">float</span>, p\u00a0: <span class=\"kw4\">float</span>, s\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> comp <span class=\"sy0\">=</span> genMove r p s<br/>    <span class=\"kw1\">let</span> player <span class=\"sy0\">=</span> getMove <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    Console.<span class=\"me1\">WriteLine</span> <span class=\"br0\">(</span><span class=\"st0\">\"Player: {0} vs Computer: {1}\"</span>, getString player, getString comp<span class=\"br0\">)</span><br/>    Console.<span class=\"me1\">WriteLine</span> <span class=\"br0\">(</span><br/>        <span class=\"kw1\">if</span> beats<span class=\"br0\">(</span>player, comp<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"Player Wins!<span class=\"es0\">\\n</span>\"</span><br/>        <span class=\"kw1\">elif</span> beats<span class=\"br0\">(</span>comp, player<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"Computer Wins!<span class=\"es0\">\\n</span>\"</span><br/>        <span class=\"kw1\">else</span> <span class=\"st0\">\"Draw!<span class=\"es0\">\\n</span>\"</span><br/>    <span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> nextR <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> player <span class=\"sy0\">=</span> Rock <span class=\"kw1\">then</span> r <span class=\"sy0\">+</span> <span class=\"nu0\">1.0</span> <span class=\"kw1\">else</span> r<br/>    <span class=\"kw1\">let</span> nextP <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> player <span class=\"sy0\">=</span> Paper <span class=\"kw1\">then</span> p <span class=\"sy0\">+</span> <span class=\"nu0\">1.0</span> <span class=\"kw1\">else</span> p<br/>    <span class=\"kw1\">let</span> nextS <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> player <span class=\"sy0\">=</span> Scissors <span class=\"kw1\">then</span> s <span class=\"sy0\">+</span> <span class=\"nu0\">1.0</span> <span class=\"kw1\">else</span> s<br/>    game <span class=\"br0\">(</span>nextR, nextP, nextS<span class=\"br0\">)</span><br/>\u00a0<br/>game<span class=\"br0\">(</span><span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.0</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 64, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/><span class=\"co1\">! compilation</span><br/><span class=\"co1\">! gfortran -std=f2008 -Wall -ffree-form -fall-intrinsics -fimplicit-none f.f08 -o f</span><br/><span class=\"co1\">!</span><br/><span class=\"co1\">! EXAMPLE</span><br/><span class=\"co1\">!</span><br/><span class=\"co1\">!$ ./f</span><br/><span class=\"co1\">!rock, paper, scissors?  papier</span><br/><span class=\"co1\">!scoring computer choice (r) and your choice (p)</span><br/><span class=\"co1\">!rock, paper, scissors?  sizzerz</span><br/><span class=\"co1\">!scoring computer choice (s) and your choice (s)</span><br/><span class=\"co1\">!rock, paper, scissors?  quit</span><br/><span class=\"co1\">!scoring computer choice (r) and your choice (q)</span><br/><span class=\"co1\">! Who's keeping score anyway???</span><br/><span class=\"co1\">!  0.5  1.5</span><br/><span class=\"co1\">! you won!</span><br/><span class=\"co1\">!$ </span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">program</span> rpsgame<br/>\u00a0<br/>  <span class=\"kw3\">integer</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">COMPUTER</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span>, HAPLESSUSER<span class=\"sy0\">=</span><span class=\"nu0\">2</span><br/>  <span class=\"kw3\">integer</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">rps</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">real</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">p</span><br/>  <span class=\"kw3\">character</span> <span class=\"sy0\">::</span> <span class=\"me2\">answer</span>, cc <span class=\"co1\">! computer choice</span><br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">exhaustion</span>, i<br/>  <span class=\"kw3\">real</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">score</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=</span><span class=\"nu0\">8</span><span class=\"br0\">)</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">choices</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"st0\">'rock    '</span>,<span class=\"st0\">'paper   '</span>,<span class=\"st0\">'scissors'</span><span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">harvest</span><br/>  <span class=\"kw1\">do</span> exhaustion <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">30</span><br/>    p <span class=\"sy0\">=</span> rps<span class=\"sy0\">/</span><span class=\"kw3\">real</span><span class=\"br0\">(</span>sum<span class=\"br0\">(</span>rps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    p<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> p<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    p<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> p<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> p<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">call</span> <span class=\"kw4\">random_number</span><span class=\"br0\">(</span>harvest<span class=\"br0\">)</span><br/>    i <span class=\"sy0\">=</span> sum<span class=\"br0\">(</span><span class=\"kw4\">merge</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">0</span>,harvest.<span class=\"me1\">le</span>.<span class=\"me1\">p</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">! In memory of Ken Iverson, logical is more useful as integer.</span><br/>    cc <span class=\"sy0\">=</span> <span class=\"st0\">'rsp'</span><span class=\"br0\">(</span>i<span class=\"sy0\">:</span>i<span class=\"br0\">)</span><br/>    write<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"st0\">\"(2(A,', '),A,'?  ')\"</span>, <span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">trim</span><span class=\"br0\">(</span>choices<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span>,i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,<span class=\"kw4\">size</span><span class=\"br0\">(</span>choices<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    read<span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"sy0\">*</span><span class=\"br0\">)</span> answer<br/>    write<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"st0\">\"('scoring computer choice (',A,') and your choice (',A,')')\"</span><span class=\"br0\">)</span>cc,answer<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>answer.<span class=\"me1\">eq</span>.<span class=\"me1\">cc</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      score <span class=\"sy0\">=</span> score <span class=\"sy0\">+</span> <span class=\"nu0\">0.5</span><br/>    <span class=\"kw1\">else</span><br/>      i <span class=\"sy0\">=</span> HAPLESSUSER<br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>answer.<span class=\"me1\">eq</span>.<span class=\"st0\">'r'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>cc.<span class=\"me1\">eq</span>.<span class=\"st0\">'p'</span><span class=\"br0\">)</span> i <span class=\"sy0\">=</span> COMPUTER<br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>answer.<span class=\"me1\">eq</span>.<span class=\"st0\">'p'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>cc.<span class=\"me1\">eq</span>.<span class=\"st0\">'s'</span><span class=\"br0\">)</span> i <span class=\"sy0\">=</span> COMPUTER<br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>answer.<span class=\"me1\">eq</span>.<span class=\"st0\">'s'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>cc.<span class=\"me1\">eq</span>.<span class=\"st0\">'r'</span><span class=\"br0\">)</span> i <span class=\"sy0\">=</span> COMPUTER<br/>      <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">exit</span><br/>      <span class=\"kw1\">endif</span><br/>      score<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> score<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    i <span class=\"sy0\">=</span> <span class=\"kw4\">scan</span><span class=\"br0\">(</span><span class=\"st0\">'rps'</span>,answer<span class=\"br0\">)</span><br/>    rps<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> rps<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">25</span> <span class=\"kw2\">.<span class=\"me1\">lt</span>.</span> exhaustion<span class=\"br0\">)</span> write<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"I'm bored out of my skull\"</span><br/>  write<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"st0\">\"Who's keeping score anyway???\"</span><br/>  write<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"st0\">'(2f5.1)'</span><span class=\"br0\">)</span> score<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>score<span class=\"br0\">(</span>COMPUTER<span class=\"br0\">)</span> <span class=\"kw2\">.<span class=\"me1\">lt</span>.</span> score<span class=\"br0\">(</span>HAPLESSUSER<span class=\"br0\">)</span><span class=\"br0\">)</span> print<span class=\"sy0\">*</span>,<span class=\"st0\">'you won!'</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> rpsgame<br/>\u00a0</pre>"}, {"lang": "GlovePIE", "loc": 41, "block": "<pre class=\"text highlighted_source\">if var.end=0 then<br/>var.end=0<br/>var.computerchoice=random(3) // 1 is rock, 2 is paper, and 3 is scissors.<br/>debug=\"Press the R key for rock, the P key for paper, or the S key for scissors:\"<br/>endif<br/>if pressed(Key.R)and var.end=0 then<br/>   var.end=1<br/>   if var.computerchoice=1 then<br/>      debug=\"You chose rock, which the computer also chose, so it's a tie!\"<br/>   else<br/>      if var.computerchoice=2 then<br/>         debug=\"The computer chose paper, covering your choice of rock, so you lose!\"<br/>      else<br/>         debug=\"You chose rock, smashing the computer's choice of scissors, so you win!\"<br/>      endif<br/>   endif<br/>endif<br/>if pressed(Key.P)and var.end=0 then<br/>   var.end=1<br/>   if var.computerchoice=1 then<br/>      debug=\"You chose paper, covering the computer's choice of rock, so you win!\"<br/>   else<br/>      if var.computerchoice=2 then<br/>         debug=\"You chose paper, which the computer also chose, so it's a tie!\"<br/>      else<br/>         debug=\"The computer chose scissors, cutting your choice of paper, so you lose!\"<br/>      endif<br/>   endif<br/>endif<br/>if pressed(Key.S)and var.end=0 then<br/>   var.end=1<br/>   if var.computerchoice=1 then<br/>      debug=\"The computer chose rock, smashing your choice of scissors, so you lose!\"<br/>   else<br/>      if var.computerchoice=2 then<br/>         debug=\"You chose scissors, cutting the computer's choice of paper, so you win!\"<br/>      else<br/>         debug=\"You chose scissors, which the computer also chose, so it's a tie!\"<br/>      endif<br/>   endif<br/>endif</pre>"}, {"lang": "Go", "loc": 69, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math/rand\"</span><br/>    <span class=\"st0\">\"strings\"</span><br/>    <span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">const</span> rps <span class=\"sy2\">=</span> <span class=\"st0\">\"rps\"</span><br/>\u00a0<br/><span class=\"kw1\">var</span> msg <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span><br/>    <span class=\"st0\">\"Rock breaks scissors\"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"Paper covers rock\"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"Scissors cut paper\"</span><span class=\"sy1\">,</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    rand<span class=\"sy3\">.</span>Seed<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>UnixNano<span class=\"sy1\">())</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Rock Paper Scissors\"</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Enter r, p, or s as your play.  Anything else ends the game.\"</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Running score shown as &lt;your wins&gt;:&lt;my wins&gt;\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">var</span> pi <span class=\"kw4\">string</span> <span class=\"co1\">// player input</span><br/>    <span class=\"kw1\">var</span> aScore<span class=\"sy1\">,</span> pScore <span class=\"kw4\">int</span><br/>    sl <span class=\"sy2\">:=</span> <span class=\"nu0\">3</span>               <span class=\"co1\">// for output alignment</span><br/>    pcf <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">)</span> <span class=\"co1\">// pcf = player choice frequency</span><br/>    <span class=\"kw1\">var</span> plays <span class=\"kw4\">int</span><br/>    aChoice <span class=\"sy2\">:=</span> rand<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span><span class=\"nu0\">3</span><span class=\"sy1\">)</span> <span class=\"co1\">// ai choice for first play is completely random</span><br/>    <span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// get player choice</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Print</span><span class=\"sy1\">(</span><span class=\"st0\">\"Play: \"</span><span class=\"sy1\">)</span><br/>        _<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> fmt<span class=\"sy3\">.</span><span class=\"me1\">Scanln</span><span class=\"sy1\">(</span><span class=\"sy3\">&amp;</span>pi<span class=\"sy1\">)</span>  <span class=\"co1\">// lazy</span><br/>        <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy3\">||</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>pi<span class=\"sy1\">)</span> <span class=\"sy2\">!=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">break</span><br/>        <span class=\"sy1\">}</span><br/>        pChoice <span class=\"sy2\">:=</span> strings<span class=\"sy3\">.</span>Index<span class=\"sy1\">(</span>rps<span class=\"sy1\">,</span> pi<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> pChoice &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">break</span><br/>        <span class=\"sy1\">}</span><br/>        pcf<span class=\"sy1\">[</span>pChoice<span class=\"sy1\">]</span><span class=\"sy2\">++</span><br/>        plays<span class=\"sy2\">++</span><br/>\u00a0<br/>        <span class=\"co1\">// show result of play</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"My play:%s%c.  \"</span><span class=\"sy1\">,</span> strings<span class=\"sy3\">.</span><span class=\"me1\">Repeat</span><span class=\"sy1\">(</span><span class=\"st0\">\" \"</span><span class=\"sy1\">,</span> sl<span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">),</span> rps<span class=\"sy1\">[</span>aChoice<span class=\"sy1\">])</span><br/>        <span class=\"kw1\">switch</span> <span class=\"sy1\">(</span>aChoice <span class=\"sy3\">-</span> pChoice <span class=\"sy3\">+</span> <span class=\"nu0\">3</span><span class=\"sy1\">)</span> <span class=\"sy3\">%</span> <span class=\"nu0\">3</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy1\">:</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Tie.\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy1\">:</span><br/>            fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%s.  My point.<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> msg<span class=\"sy1\">[</span>aChoice<span class=\"sy1\">])</span><br/>            aScore<span class=\"sy2\">++</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy1\">:</span><br/>            fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%s.  Your point.<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> msg<span class=\"sy1\">[</span>pChoice<span class=\"sy1\">])</span><br/>            pScore<span class=\"sy2\">++</span><br/>        <span class=\"sy1\">}</span><br/>\u00a0<br/>        <span class=\"co1\">// show score</span><br/>        sl<span class=\"sy1\">,</span> _ <span class=\"sy2\">=</span> fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"%d:%d  \"</span><span class=\"sy1\">,</span> pScore<span class=\"sy1\">,</span> aScore<span class=\"sy1\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// compute ai choice for next play</span><br/>        <span class=\"kw1\">switch</span> rn <span class=\"sy2\">:=</span> rand<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span>plays<span class=\"sy1\">);</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">case</span> rn &lt; pcf<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]:</span><br/>            aChoice <span class=\"sy2\">=</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">case</span> rn &lt; pcf<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">+</span>pcf<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]:</span><br/>            aChoice <span class=\"sy2\">=</span> <span class=\"nu0\">2</span><br/>        <span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>            aChoice <span class=\"sy2\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 59, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Random <span class=\"br0\">(</span>randomRIO<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">data</span> Choice<br/>  <span class=\"sy0\">=</span> Rock<br/>  <span class=\"sy0\">|</span> Paper<br/>  <span class=\"sy0\">|</span> Scissors<br/>  <span class=\"kw1\">deriving</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Show\"><span class=\"kw4\">Show</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Eq\"><span class=\"kw4\">Eq</span></a><span class=\"br0\">)</span><br/>\u00a0<br/>beats <span class=\"sy0\">::</span> Choice <span class=\"sy0\">-&gt;</span> Choice <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/>beats Paper Rock <span class=\"sy0\">=</span> True<br/>beats Scissors Paper <span class=\"sy0\">=</span> True<br/>beats Rock Scissors <span class=\"sy0\">=</span> True<br/>beats <span class=\"sy0\">_</span> <span class=\"sy0\">_</span> <span class=\"sy0\">=</span> False<br/>\u00a0<br/>genrps <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> Choice<br/>genrps <span class=\"br0\">(</span>r<span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> s<span class=\"br0\">)</span> <span class=\"sy0\">=</span> rps <span class=\"sy0\">&lt;$&gt;</span> rand<br/>  <span class=\"kw1\">where</span><br/>    rps x<br/>      <span class=\"sy0\">|</span> x <span class=\"sy0\">&lt;=</span> s <span class=\"sy0\">=</span> Rock<br/>      <span class=\"sy0\">|</span> x <span class=\"sy0\">&lt;=</span> s <span class=\"sy0\">+</span> r <span class=\"sy0\">=</span> Paper<br/>      <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> Scissors<br/>    rand <span class=\"sy0\">=</span> randomRIO <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> r <span class=\"sy0\">+</span> p <span class=\"sy0\">+</span> s<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>\u00a0<br/>getrps <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> Choice<br/>getrps <span class=\"sy0\">=</span> rps <span class=\"sy0\">&lt;$&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:getLine\"><span class=\"kw3\">getLine</span></a><br/>  <span class=\"kw1\">where</span><br/>    rps <span class=\"st0\">\"scissors\"</span> <span class=\"sy0\">=</span> Scissors<br/>    rps <span class=\"st0\">\"rock\"</span> <span class=\"sy0\">=</span> Rock<br/>    rps <span class=\"st0\">\"paper\"</span> <span class=\"sy0\">=</span> Paper<br/>    rps <span class=\"sy0\">_</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:error\"><span class=\"kw3\">error</span></a> <span class=\"st0\">\"invalid input\"</span><br/>\u00a0<br/>game <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> a<br/>game <span class=\"br0\">(</span>r<span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> s<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"rock, paper or scissors?\"</span><br/>  h <span class=\"sy0\">&lt;-</span> getrps<br/>  c <span class=\"sy0\">&lt;-</span> genrps <span class=\"br0\">(</span>r<span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> s<span class=\"br0\">)</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"br0\">(</span><span class=\"st0\">\"Player: \"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> h <span class=\"sy0\">++</span> <span class=\"st0\">\" Computer: \"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> c<span class=\"br0\">)</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> beats h c<br/>       <span class=\"kw1\">then</span> <span class=\"st0\">\"player wins<span class=\"es0\">\\n</span>\"</span><br/>       <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> beats c h<br/>              <span class=\"kw1\">then</span> <span class=\"st0\">\"player loses<span class=\"es0\">\\n</span>\"</span><br/>              <span class=\"kw1\">else</span> <span class=\"st0\">\"draw<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> rr <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">if</span> h <span class=\"sy0\">==</span> Rock<br/>          <span class=\"kw1\">then</span> r <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>          <span class=\"kw1\">else</span> r<br/>      pp <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">if</span> h <span class=\"sy0\">==</span> Paper<br/>          <span class=\"kw1\">then</span> p <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>          <span class=\"kw1\">else</span> p<br/>      ss <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">if</span> h <span class=\"sy0\">==</span> Scissors<br/>          <span class=\"kw1\">then</span> s <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>          <span class=\"kw1\">else</span> s<br/>  game <span class=\"br0\">(</span>rr<span class=\"sy0\">,</span> pp<span class=\"sy0\">,</span> ss<span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> a<br/>main <span class=\"sy0\">=</span> game <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 41, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> printf<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>printf<span class=\"br0\">(</span><span class=\"st0\">\"Welcome to Rock, Paper, Scissors.<span class=\"es0\">\\n</span>_<br/>        Rock beats scissors, Scissors beat paper, and Paper beats rock.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>historyP <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"st0\">\"rock\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"paper\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"scissors\"</span><span class=\"br0\">]</span>      <span class=\"co1\"># seed player history  </span><br/>winP <span class=\"sy1\">:=</span> winC <span class=\"sy1\">:=</span> draws <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span>                   <span class=\"co1\"># totals</span><br/>\u00a0<br/>beats <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"st0\">\"rock\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"scissors\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"paper\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"rock\"</span><span class=\"br0\">]</span>  <span class=\"co1\"># what beats what 1 apart</span><br/>\u00a0<br/><span class=\"kw1\">repeat</span> <span class=\"br0\">{</span><br/>   printf<span class=\"br0\">(</span><span class=\"st0\">\"Enter your choice or rock(r), paper(p), scissors(s) or quit(q):\"</span><span class=\"br0\">)</span><br/>   turnP <span class=\"sy1\">:=</span> <span class=\"kw1\">case</span> <span class=\"kw4\">map</span><span class=\"br0\">(</span><span class=\"kw4\">read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span> <span class=\"br0\">{</span><br/>      <span class=\"st0\">\"q\"</span><span class=\"sy1\">|</span><span class=\"st0\">\"quit\"</span><span class=\"sy1\">:</span> <span class=\"kw1\">break</span><br/>      <span class=\"st0\">\"r\"</span><span class=\"sy1\">|</span><span class=\"st0\">\"rock\"</span><span class=\"sy1\">:</span> <span class=\"st0\">\"rock\"</span><br/>      <span class=\"st0\">\"p\"</span><span class=\"sy1\">|</span><span class=\"st0\">\"paper\"</span><span class=\"sy1\">:</span> <span class=\"st0\">\"paper\"</span><br/>      <span class=\"st0\">\"s\"</span><span class=\"sy1\">|</span><span class=\"st0\">\"scissors\"</span><span class=\"sy1\">:</span> <span class=\"st0\">\"scissors\"</span><br/>      <span class=\"kw1\">default</span><span class=\"sy1\">:</span>  printf<span class=\"br0\">(</span><span class=\"st0\">\" - invalid choice.<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"kw1\">next</span><br/>      <span class=\"br0\">}</span><br/>\u00a0<br/>   turnC <span class=\"sy1\">:=</span> beats<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy1\">?</span>historyP <span class=\"sy1\">==</span> beats<span class=\"br0\">[</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">2</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>beats<span class=\"br0\">]</span><span class=\"sy1\">,</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span>  <span class=\"co1\"># choose move</span><br/>\u00a0<br/>   <span class=\"kw4\">put</span><span class=\"br0\">(</span>historyP<span class=\"sy1\">,</span>turnP<span class=\"br0\">)</span>                       <span class=\"co1\"># record history</span><br/>   printf<span class=\"br0\">(</span><span class=\"st0\">\"You chose\u00a0%s, computer chose\u00a0%s\"</span><span class=\"sy1\">,</span>turnP<span class=\"sy1\">,</span>turnC<span class=\"br0\">)</span>   <br/>\u00a0<br/>   <span class=\"br0\">(</span>beats<span class=\"br0\">[</span>p <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>beats<span class=\"br0\">]</span> <span class=\"sy1\">==</span> turnP<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <br/>      <span class=\"br0\">(</span>beats<span class=\"br0\">[</span>c <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>beats<span class=\"br0\">]</span> <span class=\"sy1\">==</span> turnC<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span><span class=\"kw4\">abs</span><span class=\"br0\">(</span>p<span class=\"sy1\">-</span>c<span class=\"br0\">)</span> <span class=\"sy1\">&lt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"co1\"># rank play</span><br/>\u00a0<br/>   <span class=\"kw1\">if</span> p <span class=\"sy1\">=</span> c <span class=\"kw1\">then</span><br/>      printf<span class=\"br0\">(</span><span class=\"st0\">\" - draw (#%d)<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span>draws <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><br/>   <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> p <span class=\"sy1\">&gt;</span> c <span class=\"kw1\">then</span>   <br/>      printf<span class=\"br0\">(</span><span class=\"st0\">\" - player win(#%d)<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span>winP <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>        <br/>   <span class=\"kw1\">else</span> <br/>      printf<span class=\"br0\">(</span><span class=\"st0\">\" - computer win(#%d)<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span>winC <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>    <br/>   <span class=\"br0\">}</span><br/>\u00a0<br/>printf<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Results:<span class=\"es0\">\\n</span>\u00a0%d rounds<span class=\"es0\">\\n</span>\u00a0%d Draws<span class=\"es0\">\\n</span>\u00a0%d Computer wins<span class=\"es0\">\\n</span>\u00a0%d Player wins<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/>   winP<span class=\"sy1\">+</span>winC<span class=\"sy1\">+</span>draws<span class=\"sy1\">,</span>draws<span class=\"sy1\">,</span>winC<span class=\"sy1\">,</span>winP<span class=\"br0\">)</span>   <br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 19, "block": "<pre class=\"j highlighted_source\">require<span class=\"st_h\">'general/misc/prompt strings'</span> <span class=\"co1\">NB. was 'misc strings' in older versions of J</span><br/>game=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  outcomes=. rps=. <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><br/>  choice=. <span class=\"nu0\">1</span>+?<span class=\"nu0\">3</span><br/>  <span class=\"kw1\">while.</span>#response=. prompt<span class=\"st_h\">'  Choose Rock, Paper or Scissors: '</span> <span class=\"kw1\">do.</span><br/>    playerchoice=. <span class=\"nu0\">1</span>+<span class=\"st_h\">'rps'</span> i. tolower {.deb response<br/>    if.<span class=\"nu0\">4</span> = playerchoice <span class=\"kw1\">do.</span><br/>      smoutput <span class=\"st_h\">'Unknown response.'</span><br/>      smoutput <span class=\"st_h\">'Enter an empty line to quit'</span><br/>      <span class=\"kw1\">continue.</span><br/>    <span class=\"kw1\">end.</span><br/>    smoutput <span class=\"st_h\">'    I choose '</span>,choice {::;:<span class=\"st_h\">'. Rock Paper Scissors'</span><br/>    smoutput <span class=\"sy0\">(</span>wintype=. <span class=\"nu0\">3</span> | choice-playerchoice<span class=\"sy0\">)</span> {:: <span class=\"st_h\">'Draw'</span>;<span class=\"st_h\">'I win'</span>;<span class=\"st_h\">'You win'</span><br/>    outcomes=. outcomes+<span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> = wintype<br/>    rps=. rps+<span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span>=playerchoice<br/>    choice=. <span class=\"nu0\">1</span>+<span class=\"nu0\">3</span>|<span class=\"sy0\">(</span>?<span class=\"nu0\">0</span><span class=\"sy0\">)</span> I.~ <span class=\"sy0\">(</span>}:%{:<span class=\"sy0\">)</span>+/\\ <span class=\"nu0\">0</span>, rps<br/>  <span class=\"kw1\">end.</span><br/>  <span class=\"sy0\">(</span><span class=\"st_h\">'Draws:'</span>,<span class=\"st_h\">'My wins:'</span>,:<span class=\"st_h\">'Your wins: '</span><span class=\"sy0\">)</span>,.\":,.outcomes<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 79, "block": "<pre class=\"java5 highlighted_source\"><span class=\"kw2\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.util.EnumMap</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.util.List</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.util.Map</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.util.Scanner</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">public</span> <span class=\"kw2\">class</span> RPS <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">enum</span> Item<span class=\"br0\">{</span><br/>\t\tROCK, PAPER, SCISSORS, <span class=\"coMULTI\">/*LIZARD, SPOCK*/</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw2\">public</span> <a href=\"http://www.google.com/search?sitesearch=java.sun.com&amp;q=allinurl%3Aj2se%2F1+5+0%2Fdocs%2Fapi+List\"><span class=\"kw166\">List</span></a><span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> losesToList<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw2\">public</span> <span class=\"kw3\">boolean</span> losesTo<span class=\"br0\">(</span>Item other<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw2\">return</span> losesToList.<span class=\"me1\">contains</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw2\">static</span> <span class=\"br0\">{</span><br/>\t\t\tSCISSORS.<span class=\"me1\">losesToList</span> = <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Arrays.html\"><span class=\"kw46\">Arrays</span></a>.<span class=\"me1\">asList</span><span class=\"br0\">(</span>ROCK<span class=\"coMULTI\">/*, SPOCK*/</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tROCK.<span class=\"me1\">losesToList</span> = <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Arrays.html\"><span class=\"kw46\">Arrays</span></a>.<span class=\"me1\">asList</span><span class=\"br0\">(</span>PAPER<span class=\"coMULTI\">/*, SPOCK*/</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tPAPER.<span class=\"me1\">losesToList</span> = <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Arrays.html\"><span class=\"kw46\">Arrays</span></a>.<span class=\"me1\">asList</span><span class=\"br0\">(</span>SCISSORS<span class=\"coMULTI\">/*, LIZARD*/</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"coMULTI\">/*<br/>\t\t\tSPOCK.losesToList = Arrays.asList(PAPER, LIZARD);<br/>\t\t\tLIZARD.losesToList = Arrays.asList(SCISSORS, ROCK);<br/>\t\t\t*/</span><br/>                <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"co1\">//EnumMap uses a simple array under the hood</span><br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">final</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Map.html\"><span class=\"kw46\">Map</span></a><span class=\"sy0\">&lt;</span>Item, <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Integer.html\"><span class=\"kw21\">Integer</span></a><span class=\"sy0\">&gt;</span> counts = <span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/EnumMap.html\"><span class=\"kw46\">EnumMap</span></a><span class=\"sy0\">&lt;</span>Item, <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Integer.html\"><span class=\"kw21\">Integer</span></a><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>Item.<span class=\"kw2\">class</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>Item item:Item.<span class=\"me1\">values</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\tput<span class=\"br0\">(</span>item, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw2\">private</span> <span class=\"kw3\">int</span> totalThrows = Item.<span class=\"me1\">values</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">void</span> main<span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\tRPS rps = <span class=\"kw2\">new</span> RPS<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\trps.<span class=\"me1\">run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw2\">public</span> <span class=\"kw3\">void</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Scanner.html\"><span class=\"kw46\">Scanner</span></a> in = <span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Scanner.html\"><span class=\"kw46\">Scanner</span></a><span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Make your choice: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span>in.<span class=\"me1\">hasNextLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\tItem aiChoice = getAIChoice<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a> input = in.<span class=\"me1\">nextLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tItem choice<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw2\">try</span><span class=\"br0\">{</span><br/>\t\t\t\tchoice = Item.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span>input.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw2\">catch</span> <span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/IllegalArgumentException.html\"><span class=\"kw21\">IllegalArgumentException</span></a> ex<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid choice\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw2\">continue</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\tcounts.<span class=\"me1\">put</span><span class=\"br0\">(</span>choice, counts.<span class=\"me1\">get</span><span class=\"br0\">(</span>choice<span class=\"br0\">)</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\ttotalThrows++<span class=\"sy0\">;</span><br/>\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Computer chose: \"</span> + aiChoice<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>aiChoice == choice<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Tie!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>aiChoice.<span class=\"me1\">losesTo</span><span class=\"br0\">(</span>choice<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"You chose...wisely. You win!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"You chose...poorly. You lose!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Make your choice: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw2\">private</span> <span class=\"kw2\">static</span> <span class=\"kw2\">final</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Random.html\"><span class=\"kw46\">Random</span></a> rng = <span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Random.html\"><span class=\"kw46\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw2\">private</span> Item getAIChoice<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw3\">int</span> rand = rng.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span>totalThrows<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Map.Entry.html\"><span class=\"kw46\">Map.<span class=\"me1\">Entry</span></span></a><span class=\"sy0\">&lt;</span>Item, <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Integer.html\"><span class=\"kw21\">Integer</span></a><span class=\"sy0\">&gt;</span> entry:counts.<span class=\"me1\">entrySet</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\tItem item = entry.<span class=\"me1\">getKey</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw3\">int</span> count = entry.<span class=\"me1\">getValue</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>rand <span class=\"sy0\">&lt;</span> count<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://www.google.com/search?sitesearch=java.sun.com&amp;q=allinurl%3Aj2se%2F1+5+0%2Fdocs%2Fapi+List\"><span class=\"kw166\">List</span></a><span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> losesTo = item.<span class=\"me1\">losesToList</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw2\">return</span> losesTo.<span class=\"me1\">get</span><span class=\"br0\">(</span>rng.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span>losesTo.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\trand -= count<span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw2\">return</span> <span class=\"kw4\">null</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 23, "block": "<pre class=\"text highlighted_source\">function rps()<br/>\tprint(\"Welcome to Rock, paper, scissors! Go ahead and type your pick.\\n<br/>\t\tr(ock), p(aper), or s(cissors)\\n<br/>\t\tEnter 'q' to quit.\\n&gt;\")<br/>\tcomp_score = 0<br/>\tuser_score = 0<br/>\toptions = [\"r\",\"p\",\"s\"]<br/>\tnew_pick() = options[rand(1:3)]<br/>\ti_win(m,y) = ((m == \"r\" &amp;&amp; y == \"s\")|(m == \"s\" &amp;&amp; y == \"p\")|(m == \"p\" &amp;&amp; y == \"r\"))<br/>\twhile true<br/>\t\tinput = string(readline(STDIN)[1])<br/>\t\tinput == \"q\" &amp;&amp; break<br/>\t\t!ismatch(r\"^[rps]\",input) &amp;&amp; begin print(\"Invalid guess: Please enter 'r', 'p', or 's'\\n\"); continue end<br/>\t\tanswer = new_pick()<br/>\t\tif input == answer <br/>\t\t\tprint(\"\\nTie!\\nScore still: \\nyou $user_score\\nme  $comp_score\\n&gt;\")<br/>\t\t\tcontinue<br/>\t\telse<br/>\t\t\ti_win(answer,input)\u00a0? (comp_score += 1)\u00a0: (user_score += 1)<br/>\t\t\tprint(i_win(answer,input)\u00a0? \"\\nSorry you lose!\\n\"\u00a0: \"\\nYou win!\",\"Score: \\nyou $user_score\\nme  $comp_score\\n&gt;\")<br/>\t\tend<br/>\tend<br/>end</pre>"}, {"lang": "Kotlin", "loc": 79, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.2.10</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/>\u00a0<br/>const <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> choices <span class=\"sy0\">=</span> <span class=\"st0\">\"rpsq\"</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rand <span class=\"sy0\">=</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> pWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>                  <span class=\"co1\">// player wins</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> cWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>                  <span class=\"co1\">// computer wins</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> draws <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>                  <span class=\"co1\">// neither wins</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> games <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>                  <span class=\"co1\">// games played</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pFreqs <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>  <span class=\"co1\">// player frequencies for each choice (rps)</span><br/>\u00a0<br/>fun printScore<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> println<span class=\"br0\">(</span><span class=\"st0\">\"Wins: You $pWins, Computer $cWins, Neither $draws<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>fun getComputerChoice<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Char <span class=\"br0\">{</span><br/>    <span class=\"co1\">// make a completely random choice until 3 games have been played</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>games <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> choices<span class=\"br0\">[</span>rand.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> num <span class=\"sy0\">=</span> rand.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span>games<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> when <span class=\"br0\">{</span><br/>        num <span class=\"sy0\">&lt;</span> pFreqs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> -<span class=\"sy0\">&gt;</span> <span class=\"st0\">'p'</span><br/>        num <span class=\"sy0\">&lt;</span> pFreqs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> + pFreqs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> -<span class=\"sy0\">&gt;</span> <span class=\"st0\">'s'</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> -<span class=\"sy0\">&gt;</span> <span class=\"st0\">'r'</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Enter: (r)ock, (p)aper, (s)cissors or (q)uit<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        printScore<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> pChoice<span class=\"sy0\">:</span> Char<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            print<span class=\"br0\">(</span><span class=\"st0\">\"Your choice r/p/s/q\u00a0: \"</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> input <span class=\"sy0\">=</span> readLine<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">!!</span>.<span class=\"me1\">toLowerCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>input.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                pChoice <span class=\"sy0\">=</span> input<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice in choices<span class=\"br0\">)</span> break<br/>            <span class=\"br0\">}</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Invalid choice, try again\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice <span class=\"sy0\">==</span> <span class=\"st0\">'q'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"OK, quitting\"</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cChoice <span class=\"sy0\">=</span> getComputerChoice<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"Computer's choice  \u00a0: $cChoice\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice <span class=\"sy0\">==</span> <span class=\"st0\">'r'</span> <span class=\"sy0\">&amp;&amp;</span> cChoice <span class=\"sy0\">==</span> <span class=\"st0\">'s'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Rock breaks scissors - You win!\"</span><span class=\"br0\">)</span><br/>            pWins++<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice <span class=\"sy0\">==</span> <span class=\"st0\">'p'</span> <span class=\"sy0\">&amp;&amp;</span> cChoice <span class=\"sy0\">==</span> <span class=\"st0\">'r'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Paper covers rock - You win!\"</span><span class=\"br0\">)</span><br/>            pWins++<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice <span class=\"sy0\">==</span> <span class=\"st0\">'s'</span> <span class=\"sy0\">&amp;&amp;</span> cChoice <span class=\"sy0\">==</span> <span class=\"st0\">'p'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Scissors cut paper - You win!\"</span><span class=\"br0\">)</span><br/>            pWins++<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice <span class=\"sy0\">==</span> <span class=\"st0\">'s'</span> <span class=\"sy0\">&amp;&amp;</span> cChoice <span class=\"sy0\">==</span> <span class=\"st0\">'r'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Rock breaks scissors - Computer wins!\"</span><span class=\"br0\">)</span><br/>            cWins++<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice <span class=\"sy0\">==</span> <span class=\"st0\">'r'</span> <span class=\"sy0\">&amp;&amp;</span> cChoice <span class=\"sy0\">==</span> <span class=\"st0\">'p'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Paper covers rock - Computer wins!\"</span><span class=\"br0\">)</span><br/>            cWins++<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>pChoice <span class=\"sy0\">==</span> <span class=\"st0\">'p'</span> <span class=\"sy0\">&amp;&amp;</span> cChoice <span class=\"sy0\">==</span> <span class=\"st0\">'s'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Scissors cut paper - Computer wins!\"</span><span class=\"br0\">)</span><br/>            cWins++<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"It's a draw!\"</span><span class=\"br0\">)</span><br/>            draws++<br/>        <span class=\"br0\">}</span><br/>        pFreqs<span class=\"br0\">[</span>choices.<span class=\"me1\">indexOf</span><span class=\"br0\">(</span>pChoice<span class=\"br0\">)</span><span class=\"br0\">]</span>++<br/>        games++<br/>        println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 69, "block": "<pre class=\"text highlighted_source\">session_start('user')<br/>session_addvar('user', 'historic_choices')<br/>session_addvar('user', 'win_record')<br/>session_addvar('user', 'plays')<br/>var(historic_choices)-&gt;isNotA(::map)\u00a0? var(historic_choices = map('rock'=0, 'paper'=0, 'scissors'=0))<br/>var(plays)-&gt;isNotA(::integer)\u00a0? var(plays = 0)<br/>var(win_record)-&gt;isNotA(::array)\u00a0? var(win_record = array)<br/>\u00a0<br/>define br =&gt; '&lt;br&gt;'<br/>define winner(c::string,p::string) =&gt; {<br/>\tif(#c == $superior-&gt;find(#p)) =&gt; {<br/>\t\t$win_record-&gt;insert('lasso')<br/>\t\treturn 'Lasso'<br/>\telse(#p == $superior-&gt;find(#c))<br/>\t\t$win_record-&gt;insert('user')<br/>\t\treturn 'User'<br/>\telse<br/>\t\t$win_record-&gt;insert('tie')<br/>\t\treturn 'Nobody'<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\tvar(<br/>\t\tchoice \t\t\t\t= web_request-&gt;param('choice')-&gt;asString,<br/>\tlookup \t\t\t\t= array('rock', 'paper', 'scissors'),<br/>\tcomputer_choice \t= $lookup-&gt;get(math_random(3,1)),<br/>\tsuperior\t\t\t= map('rock'='paper', 'paper'='scissors', 'scissors'='rock'),<br/>\tcontrols\t\t\t= '&lt;a href=?choice=rock&gt;Rock&lt;/a&gt; &lt;a href=?choice=paper&gt;Paper&lt;/a&gt; &lt;a href=?choice=scissors&gt;Scissors&lt;/a&gt; &lt;a href=?choice=quit&gt;Quit&lt;/a&gt;&lt;br/&gt;'<br/>)<br/>if($choice == 'quit') =&gt; {^<br/>\t'See ya. &lt;a href=?&gt;Start over&lt;/a&gt;'<br/>\tsession_end('user')<br/>\t$historic_choices = map('rock'=0, 'paper'=0, 'scissors'=0)<br/>\t$plays = 0<br/>\t$win_record = array<br/>\u00a0<br/>else(array('rock','paper','scissors') &gt;&gt; $choice)<br/>\t\t$controls<br/>\u00a0<br/>\t\tif($plays\u00a0!= 0) =&gt; {<br/>\t\t\tlocal('possibilities') = array<br/>\t\t\twith i in $lookup do =&gt; {<br/>\t\t\t\tloop($historic_choices-&gt;find(#i)) =&gt; { #possibilities-&gt;insert(#i) }<br/>\t\t\t}<br/>\u00a0<br/>\t\t\t$computer_choice = $superior-&gt;find(#possibilities-&gt;get(math_random($plays,1)))<br/>\t\t}<br/>\u00a0<br/>\t\t'User chose ' + $choice + br<br/>\t'Lasso chose ' + $computer_choice + br<br/>\twinner($computer_choice-&gt;asString, $choice) + ' wins!'<br/>\u00a0<br/>\t\t$historic_choices-&gt;find($choice) = $historic_choices-&gt;find($choice)+1<br/>\t\t$plays += 1<br/>\u00a0<br/>\telse($choice-&gt;size == 0)<br/>\t\t$controls<br/>\u00a0<br/>\telse<br/>\t\t'Invalid Choice.'+ br + $controls<br/>^}<br/>if($win_record-&gt;size) =&gt; {^<br/>\tbr<br/>\tbr<br/>\t'Win record: '+br<br/>\t'Lasso: '+($win_record-&gt;find('lasso')-&gt;size)+br<br/>\t'User: '+($win_record-&gt;find('user')-&gt;size)+br<br/>\t'Tie: '+($win_record-&gt;find('tie')-&gt;size)+br<br/>^}</pre>"}, {"lang": "Liberty BASIC", "loc": 90, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw1\">dim</span> rps<span class=\"br0\">(</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> g$<span class=\"br0\">(</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\u00a0<br/>g$<span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"st0\">\"rock\"</span><span class=\"sy0\">:</span> g$<span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"st0\">\"paper\"</span><span class=\"sy0\">:</span> g$<span class=\"br0\">(</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"st0\">\"scissors\"</span><br/><span class=\"kw1\">global</span> total<br/>\u00a0<br/>total <span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">:</span> draw  <span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">:</span> pwin  <span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">:</span> cwin  <span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>\u00a0<br/>rps<span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span> rps<span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span> rps<span class=\"br0\">(</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">1</span>          <span class=\"co1\">'   at first computer will play all three with equal probability</span><br/>\u00a0<br/>c <span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"nu0\">3</span> <span class=\"sy0\">*</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>                         <span class=\"co1\">'   first time, computer response is random</span><br/>\u00a0<br/><span class=\"co1\">'   In the following code we set three integer\u00a0%ages for the &lt;human&gt;'s biassed throws.</span><br/>                                            <span class=\"co1\">'   set up the &lt;human&gt; player's key frequencies as\u00a0%ages.</span><br/>                                            <span class=\"co1\">'   Done like this it's easy to mimic the &lt;human&gt; input of q$</span><br/>                                            <span class=\"co1\">'   It allows only integer\u00a0%age frequency- not an important thing.</span><br/>rockP <span class=\"sy0\">=</span><span class=\"nu0\">45</span>                                   <span class=\"co1\">'   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Set here the &lt;human&gt;'s\u00a0%age of 'rock' choices.</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> rockP<span class=\"sy0\">:</span> qF$ <span class=\"sy0\">=</span>qF$ <span class=\"sy0\">+</span><span class=\"st0\">\"R\"</span><span class=\"sy0\">:</span> <span class=\"kw1\">next</span> i<br/>\u00a0<br/>paprP <span class=\"sy0\">=</span><span class=\"nu0\">24</span>                                    <span class=\"co1\">'   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Set here the\u00a0%age of 'paper' choices.</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> paprP<span class=\"sy0\">:</span> qF$ <span class=\"sy0\">=</span>qF$ <span class=\"sy0\">+</span><span class=\"st0\">\"P\"</span><span class=\"sy0\">:</span> <span class=\"kw1\">next</span> i<br/>\u00a0<br/>scisP <span class=\"sy0\">=</span><span class=\"nu0\">100</span> <span class=\"sy0\">-</span>rockP <span class=\"sy0\">-</span>paprP                    <span class=\"co1\">'   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\u00a0%age 'scissors' calculated to make 100%</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> scisP<span class=\"sy0\">:</span> qF$ <span class=\"sy0\">=</span>qF$ <span class=\"sy0\">+</span><span class=\"st0\">\"S\"</span><span class=\"sy0\">:</span> <span class=\"kw1\">next</span> i<br/><span class=\"co1\">'print qF$</span><br/>\u00a0<br/><span class=\"kw1\">do</span><br/>  <span class=\"co1\">'do: input q$:loop until instr( \"RPSrpsQq\", q$)   '   for actual human input... possibly biassed.         &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; REM one or the other line...</span><br/>  q$ <span class=\"sy0\">=</span><span class=\"kw2\">mid$</span><span class=\"br0\">(</span> qF$<span class=\"sy0\">,</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>              <span class=\"co1\">'   simulated &lt;human&gt; input with controlled bias.      &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> total <span class=\"sy0\">&gt;</span><span class=\"nu0\">10000</span> <span class=\"kw1\">then</span> q$ <span class=\"sy0\">=</span><span class=\"st0\">\"Q\"</span><br/>\u00a0<br/>  g <span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw2\">instr</span><span class=\"br0\">(</span> <span class=\"st0\">\"RrPpSsQq\"</span><span class=\"sy0\">,</span> q$<span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> g <span class=\"sy0\">&gt;</span><span class=\"nu0\">2</span> <span class=\"kw1\">then</span> <span class=\"br0\">[</span>endGame<span class=\"br0\">]</span><br/>\u00a0<br/>  total    <span class=\"sy0\">=</span>total   <span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>  rps<span class=\"br0\">(</span> g<span class=\"br0\">)</span>  <span class=\"sy0\">=</span>rps<span class=\"br0\">(</span> g<span class=\"br0\">)</span> <span class=\"sy0\">+</span><span class=\"nu0\">1</span>  <span class=\"co1\">'   accumulate plays the &lt;human&gt; has chosen. ( &amp; hence their (biassed?) frequencies.)</span><br/>  <span class=\"co1\">'print \"  You chose \"; g$( g); \" and I chose \"; g$( c); \". \"</span><br/>\u00a0<br/>  <span class=\"kw1\">select</span> <span class=\"kw1\">case</span> g <span class=\"sy0\">-</span>c<br/>    <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><br/>      draw <span class=\"sy0\">=</span>draw <span class=\"sy0\">+</span><span class=\"nu0\">1</span>  <span class=\"co1\">':print \"It's a draw\"</span><br/>    <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><br/>      pwin <span class=\"sy0\">=</span>pwin <span class=\"sy0\">+</span><span class=\"nu0\">1</span>  <span class=\"co1\">':print \"You win!\"</span><br/>    <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><br/>      cwin <span class=\"sy0\">=</span>cwin <span class=\"sy0\">+</span><span class=\"nu0\">1</span>  <span class=\"co1\">':print \"I win!\"</span><br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">select</span><br/>\u00a0<br/>   r <span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span> total <span class=\"sy0\">*</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>      <span class=\"co1\">'   Now select computer's choice for next confrontation.</span><br/>   <span class=\"kw1\">select</span> <span class=\"kw1\">case</span>                  <span class=\"co1\">'   Using the accumulating data about &lt;human&gt;'s frequencies so far.</span><br/>        <span class=\"kw1\">case</span> r <span class=\"sy0\">&lt;=</span>rps<span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            c <span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>        <span class=\"kw1\">case</span> r <span class=\"sy0\">&lt;=</span><span class=\"br0\">(</span> rps<span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span>rps<span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            c <span class=\"sy0\">=</span><span class=\"nu0\">2</span><br/>        <span class=\"kw1\">case</span> <span class=\"kw1\">else</span><br/>            c <span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">select</span><br/>\u00a0<br/>   <span class=\"kw1\">scan</span><br/><span class=\"kw1\">loop</span> <span class=\"kw1\">until</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"br0\">[</span>endGame<span class=\"br0\">]</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  You won \"</span>; pwin; <span class=\"st0\">\", and I won \"</span>; cwin; <span class=\"st0\">\". There were \"</span>; draw; <span class=\"st0\">\" draws.\"</span><br/>    <span class=\"kw1\">if</span> cwin <span class=\"sy0\">&gt;</span>pwin <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"      I AM THE CHAMPION!!\"</span> <span class=\"kw1\">else</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"        You won this time.\"</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  At first I assumed you'd throw each equally often.\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  This means I'd win 1 time in 3; draw 1 in 3; lose 1 in 3.\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  However if I detect a bias in your throws,....\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  ....this allows me to anticipate your most likely throw &amp; on average beat it.\"</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  In fact, keyboard layout &amp; human frailty mean even if you TRY to be even &amp; random...\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  ... you may be typing replies with large bias. In 100 tries I gave 48 'P's, 29 'R' &amp; 23 'S'!\"</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"    This time I played..\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"      Rock \"</span>; <span class=\"kw2\">using</span><span class=\"br0\">(</span> <span class=\"st0\">\"##.##\"</span><span class=\"sy0\">,</span> rps<span class=\"br0\">(</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">/</span>total<span class=\"br0\">)</span>; <span class=\"st0\">\"%    Paper \"</span>; <span class=\"kw2\">using</span><span class=\"br0\">(</span> <span class=\"st0\">\"##.##\"</span><span class=\"sy0\">,</span> rps<span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><span class=\"nu0\">100</span> <span class=\"sy0\">/</span>total<span class=\"br0\">)</span>; <span class=\"st0\">\"%    Scissors \"</span>; <span class=\"kw2\">using</span><span class=\"br0\">(</span> <span class=\"st0\">\"##.##\"</span><span class=\"sy0\">,</span> rps<span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><span class=\"nu0\">100</span> <span class=\"sy0\">/</span>total<span class=\"br0\">)</span>; <span class=\"st0\">\"%.\"</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  ( PS. I have since learned your actual bias had been..\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"      Rock \"</span>; <span class=\"kw2\">using</span><span class=\"br0\">(</span> <span class=\"st0\">\"##.##\"</span><span class=\"sy0\">,</span> rockP<span class=\"br0\">)</span>; <span class=\"st0\">\"%    Paper \"</span>; <span class=\"kw2\">using</span><span class=\"br0\">(</span> <span class=\"st0\">\"##.##\"</span><span class=\"sy0\">,</span> paprP <span class=\"br0\">)</span>; <span class=\"st0\">\"%    Scissors \"</span>; <span class=\"kw2\">using</span><span class=\"br0\">(</span> <span class=\"st0\">\"##.##\"</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span>rockP <span class=\"sy0\">-</span>paprP<span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"st0\">\"%.)\"</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  The advantage I can gain gets bigger the further the 'human' entries are biassed.\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  The results statistically smooth out better with large runs.\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  Try 10,000,000, &amp; have a cuppa while you wait.\"</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  Can you see what will happen if, say, the 'human' is set to give 'Rock' EVERY time?\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  Try different\u00a0%ages by altering the marked code lines.\"</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"  Thanks for playing!\"</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Locomotive Basic", "loc": 23, "block": "<pre class=\"locobasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">mode</span> <span class=\"nu0\">1</span>:<span class=\"kw1\">defint</span> a-z:<span class=\"kw1\">randomize</span> <span class=\"kw1\">time</span><br/><span class=\"nu0\">20</span> rps$=<span class=\"st0\">\"rps\"</span><br/><span class=\"nu0\">30</span> msg$<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>=<span class=\"st0\">\"Rock breaks scissors\"</span><br/><span class=\"nu0\">40</span> msg$<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>=<span class=\"st0\">\"Paper covers rock\"</span><br/><span class=\"nu0\">50</span> msg$<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>=<span class=\"st0\">\"Scissors cut paper\"</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Rock Paper Scissors\"</span>:<span class=\"kw1\">print</span><br/><span class=\"nu0\">70</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Enter r, p, or s as your play.\"</span><br/><span class=\"nu0\">80</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Running score shown as &lt;your wins&gt;:&lt;my wins&gt;\"</span><br/><span class=\"nu0\">90</span> achoice=<span class=\"kw2\">rnd</span>*<span class=\"nu0\">2.99</span>+.5 <span class=\"co1\">' get integer between 1 and 3 from real between .5 and &lt;3.5</span><br/><span class=\"nu0\">100</span> <span class=\"co1\">' get key</span><br/><span class=\"nu0\">110</span> pin$=<span class=\"kw2\">inkey</span>$<br/><span class=\"nu0\">120</span> <span class=\"kw1\">if</span> pin$=<span class=\"st0\">\"\"</span> <span class=\"kw1\">then</span> <span class=\"nu0\">110</span><br/><span class=\"nu0\">130</span> pchoice=<span class=\"kw2\">instr</span><span class=\"br0\">(</span>rps$,pin$<span class=\"br0\">)</span><br/><span class=\"nu0\">140</span> <span class=\"kw1\">if</span> pchoice=<span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Sorry?\"</span>:<span class=\"kw1\">goto</span> <span class=\"nu0\">110</span><br/><span class=\"nu0\">150</span> pcf<span class=\"br0\">(</span>pchoice<span class=\"br0\">)</span>=pcf<span class=\"br0\">(</span>pchoice<span class=\"br0\">)</span>+<span class=\"nu0\">1</span><br/><span class=\"nu0\">160</span> plays=plays+<span class=\"nu0\">1</span><br/><span class=\"nu0\">170</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"My play: \"</span><span class=\"kw2\">mid</span>$<span class=\"br0\">(</span>rps$,achoice,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"nu0\">180</span> sw=<span class=\"br0\">(</span>achoice-pchoice+<span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw2\">mod</span> <span class=\"nu0\">3</span><br/><span class=\"nu0\">190</span> <span class=\"kw1\">if</span> sw=<span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Tie.\"</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> sw=<span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> msg$<span class=\"br0\">(</span>achoice<span class=\"br0\">)</span>;<span class=\"st0\">\". My point.\"</span>:ascore=ascore+<span class=\"nu0\">1</span> <span class=\"kw1\">else</span> <span class=\"kw1\">print</span> msg$<span class=\"br0\">(</span>pchoice<span class=\"br0\">)</span>;<span class=\"st0\">\". Your point.\"</span>:pscore=pscore+<span class=\"nu0\">1</span><br/><span class=\"nu0\">200</span> <span class=\"kw1\">print</span> pscore<span class=\"st0\">\":\"</span>ascore<br/><span class=\"nu0\">210</span> rn=<span class=\"kw2\">rnd</span>*plays<br/><span class=\"nu0\">220</span> <span class=\"kw1\">if</span> rn&lt;pcf<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> achoice=<span class=\"nu0\">2</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> rn&lt;pcf<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>+pcf<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> achoice=<span class=\"nu0\">3</span> <span class=\"kw1\">else</span> achoice=<span class=\"nu0\">1</span><br/><span class=\"nu0\">230</span> <span class=\"kw1\">goto</span> <span class=\"nu0\">110</span></pre>"}, {"lang": "Lua", "loc": 60, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> cpuMove<span class=\"br0\">(</span><span class=\"br0\">)</span>  <br/>  <span class=\"kw1\">local</span> totalChance <span class=\"sy0\">=</span> record<span class=\"sy0\">.</span>R <span class=\"sy0\">+</span> record<span class=\"sy0\">.</span>P <span class=\"sy0\">+</span> record<span class=\"sy0\">.</span>S<br/>  <span class=\"kw1\">if</span> totalChance <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span>  <span class=\"co1\">-- First game, unweighted random</span><br/>    <span class=\"kw1\">local</span> choice <span class=\"sy0\">=</span> <span class=\"kw3\">math.random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> choice <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"R\"</span> <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">if</span> choice <span class=\"sy0\">==</span> <span class=\"nu0\">2</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"P\"</span> <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">if</span> choice <span class=\"sy0\">==</span> <span class=\"nu0\">3</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"S\"</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">local</span> choice <span class=\"sy0\">=</span> <span class=\"kw3\">math.random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> totalChance<span class=\"br0\">)</span>  <span class=\"co1\">-- Weighted random bit</span><br/>  <span class=\"kw1\">if</span> choice <span class=\"sy0\">&lt;=</span> record<span class=\"sy0\">.</span>R <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"P\"</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">if</span> choice <span class=\"sy0\">&lt;=</span> record<span class=\"sy0\">.</span>R <span class=\"sy0\">+</span> record<span class=\"sy0\">.</span>P <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"S\"</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> <span class=\"st0\">\"R\"</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> playerMove<span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"co1\">-- Get user input for choice of 'weapon'</span><br/>  <span class=\"kw1\">local</span> choice<br/>  <span class=\"kw1\">repeat</span><br/>    <span class=\"kw3\">os.execute</span><span class=\"br0\">(</span><span class=\"st0\">\"cls\"</span><span class=\"br0\">)</span>  <span class=\"co1\">-- Windows specific command, change per OS</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Rock, Paper, Scissors\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"=====================<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Scores -<span class=\"es1\">\\t</span>Player:\"</span><span class=\"sy0\">,</span> score<span class=\"sy0\">.</span>player<span class=\"br0\">)</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>CPU:\"</span><span class=\"sy0\">,</span> score<span class=\"sy0\">.</span>cpu <span class=\"sy0\">..</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span><span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>Draws:\"</span><span class=\"sy0\">,</span> score<span class=\"sy0\">.</span>draws<span class=\"br0\">)</span><br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Choose [R]ock [P]aper or [S]cissors: \"</span><span class=\"br0\">)</span><br/>    choice <span class=\"sy0\">=</span> <span class=\"kw3\">io.read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>upper<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>sub<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">until</span> choice <span class=\"sy0\">==</span> <span class=\"st0\">\"R\"</span> <span class=\"kw2\">or</span> choice <span class=\"sy0\">==</span> <span class=\"st0\">\"P\"</span> <span class=\"kw2\">or</span> choice <span class=\"sy0\">==</span> <span class=\"st0\">\"S\"</span><br/>  <span class=\"kw1\">return</span> choice<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-- Decide who won, increment scores</span><br/><span class=\"kw1\">function</span> checkWinner <span class=\"br0\">(</span>c<span class=\"sy0\">,</span> p<span class=\"br0\">)</span><br/>  <span class=\"kw3\">io.write</span><span class=\"br0\">(</span><span class=\"st0\">\"I chose \"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> c <span class=\"sy0\">==</span> <span class=\"st0\">\"R\"</span> <span class=\"kw1\">then</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"rock...\"</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">if</span> c <span class=\"sy0\">==</span> <span class=\"st0\">\"P\"</span> <span class=\"kw1\">then</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"paper...\"</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">if</span> c <span class=\"sy0\">==</span> <span class=\"st0\">\"S\"</span> <span class=\"kw1\">then</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"scissors...\"</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">if</span> c <span class=\"sy0\">==</span> p <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Draw!\"</span><span class=\"br0\">)</span><br/>    score<span class=\"sy0\">.</span>draws <span class=\"sy0\">=</span> score<span class=\"sy0\">.</span>draws <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">elseif</span>  <span class=\"br0\">(</span>c <span class=\"sy0\">==</span> <span class=\"st0\">\"R\"</span> <span class=\"kw2\">and</span> p <span class=\"sy0\">==</span> <span class=\"st0\">\"P\"</span><span class=\"br0\">)</span> <span class=\"kw2\">or</span><br/>      <span class=\"br0\">(</span>c <span class=\"sy0\">==</span> <span class=\"st0\">\"P\"</span> <span class=\"kw2\">and</span> p <span class=\"sy0\">==</span> <span class=\"st0\">\"S\"</span><span class=\"br0\">)</span> <span class=\"kw2\">or</span><br/>      <span class=\"br0\">(</span>c <span class=\"sy0\">==</span> <span class=\"st0\">\"S\"</span> <span class=\"kw2\">and</span> p <span class=\"sy0\">==</span> <span class=\"st0\">\"R\"</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>You win!\"</span><span class=\"br0\">)</span><br/>        score<span class=\"sy0\">.</span>player <span class=\"sy0\">=</span> score<span class=\"sy0\">.</span>player <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>You lose!\"</span><span class=\"br0\">)</span><br/>    score<span class=\"sy0\">.</span>cpu <span class=\"sy0\">=</span> score<span class=\"sy0\">.</span>cpu <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-- Main procedure</span><br/><span class=\"kw3\">math.randomseed</span><span class=\"br0\">(</span><span class=\"kw3\">os.time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>score <span class=\"sy0\">=</span> <span class=\"br0\">{</span>player <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> cpu <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> draws <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>record <span class=\"sy0\">=</span> <span class=\"br0\">{</span>R <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> P <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> S <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/><span class=\"kw1\">local</span> playerChoice<span class=\"sy0\">,</span> cpuChoice<br/><span class=\"kw1\">repeat</span><br/>  cpuChoice <span class=\"sy0\">=</span> cpuMove<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  playerChoice <span class=\"sy0\">=</span> playerMove<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  record<span class=\"br0\">[</span>playerChoice<span class=\"br0\">]</span> <span class=\"sy0\">=</span> record<span class=\"br0\">[</span>playerChoice<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  checkWinner<span class=\"br0\">(</span>cpuChoice<span class=\"sy0\">,</span> playerChoice<span class=\"br0\">)</span><br/>  <span class=\"kw3\">io.write</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Press ENTER to continue or enter 'Q' to quit . . . \"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">until</span> <span class=\"kw3\">io.read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>upper<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>sub<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Q\"</span></pre>"}, {"lang": "Mathematica", "loc": 12, "block": "<pre class=\"text highlighted_source\">DynamicModule[{record, play, text = \"\\nRock-paper-scissors\\n\", <br/>  choices = {\"Rock\", \"Paper\", \"Scissors\"}}, <br/> Evaluate[record /@ choices] = {1, 1, 1}; <br/> play[x_]\u00a0:= <br/>  Module[{y = RandomChoice[record /@ choices -&gt; <a class=\"__cf_email__\" data-cfemail=\"e5b78a91849180a9808391a5868d8a8c868096\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>]}, <br/>   record[x]++; <br/>   text = \"Your Choice:\" &lt;&gt; x &lt;&gt; \"\\nComputer's Choice:\" &lt;&gt; y &lt;&gt; \"\\n\" &lt;&gt;<br/>      Switch[{x, y}, Alternatives @@ Partition[choices, 2, 1, 1], <br/>      \"You lost.\", <br/>      Alternatives @@ Reverse /@ Partition[choices, 2, 1, 1], <br/>      \"You win.\", _, \"Draw.\"]]; <br/> <a class=\"__cf_email__\" data-cfemail=\"d497bbb8a1b9ba94\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{Dynamic[text], ButtonBar[#\u00a0:&gt; play[#] &amp; /@ choices]}]</pre>"}, {"lang": "OCaml", "loc": 55, "block": "<pre class=\"ocaml highlighted_source\">\u00a0<br/><span class=\"kw1\">let</span> pf <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> looses a b <span class=\"sy0\">=</span> <span class=\"kw1\">match</span> a, b <span class=\"kw1\">with</span><br/>     `R, `P <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">true</span><br/>   <span class=\"sy0\">|</span> `P, `S <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">true</span><br/>   <span class=\"sy0\">|</span> `S, `R <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">true</span><br/>   <span class=\"sy0\">|</span>  _,  _ <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">false</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> get_move <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>   pf <span class=\"st0\">\"[R]ock, [P]aper, [S]cisors [Q]uit? \"</span> <span class=\"sy0\">;</span><br/>   <span class=\"kw1\">match</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>uppercase <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALread_line\"><span class=\"kw3\">read_line</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>        <span class=\"st0\">\"P\"</span> <span class=\"sy0\">-&gt;</span> `P<br/>      <span class=\"sy0\">|</span> <span class=\"st0\">\"S\"</span> <span class=\"sy0\">-&gt;</span> `S<br/>      <span class=\"sy0\">|</span> <span class=\"st0\">\"R\"</span> <span class=\"sy0\">-&gt;</span> `R<br/>      <span class=\"sy0\">|</span> <span class=\"st0\">\"Q\"</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexit\"><span class=\"kw3\">exit</span></a> <span class=\"nu0\">0</span><br/>      <span class=\"sy0\">|</span> _   <span class=\"sy0\">-&gt;</span> get_move <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> str_of_move <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>        `P <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"paper\"</span><br/>      <span class=\"sy0\">|</span> `R <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"rock\"</span><br/>      <span class=\"sy0\">|</span> `S <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"scisors\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> comp_move r p s <span class=\"sy0\">=</span><br/>   <span class=\"kw1\">let</span> tot <span class=\"sy0\">=</span> r <span class=\"sy0\">+.</span> p <span class=\"sy0\">+.</span> s <span class=\"kw1\">in</span><br/>   <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"nu0\">1.0</span> <span class=\"kw1\">in</span><br/>   <span class=\"kw1\">if</span> n <span class=\"sy0\">&lt;</span> r <span class=\"sy0\">/.</span> tot <span class=\"kw1\">then</span><br/>      `R<br/>   <span class=\"kw1\">else</span><br/>      <span class=\"kw1\">if</span> n <span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span>r <span class=\"sy0\">+.</span> p<span class=\"br0\">)</span> <span class=\"sy0\">/.</span> tot <span class=\"kw1\">then</span><br/>         `P<br/>      <span class=\"kw1\">else</span><br/>         `S <span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> make_moves r p s <span class=\"sy0\">=</span><br/>   <span class=\"kw1\">let</span> cm <span class=\"sy0\">=</span> comp_move r p s <span class=\"kw1\">in</span>   <span class=\"co1\">(* Computer move is based on game history. *)</span><br/>   <span class=\"kw1\">let</span> hm <span class=\"sy0\">=</span> get_move <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span>       <span class=\"co1\">(* Human move is requested. *)</span><br/>   pf <span class=\"st0\">\"Me:\u00a0%s. You:\u00a0%s. \"</span> <span class=\"br0\">(</span>str_of_move cm<span class=\"br0\">)</span> <span class=\"br0\">(</span>str_of_move hm<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">let</span> outcome <span class=\"sy0\">=</span> <br/>      <span class=\"kw1\">if</span> looses hm cm <span class=\"kw1\">then</span><br/>         <span class=\"st0\">\"I win. You loose.\\n\"</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> cm <span class=\"sy0\">=</span> hm <span class=\"kw1\">then</span><br/>         <span class=\"st0\">\"We draw.\\n\"</span><br/>      <span class=\"kw1\">else</span> <br/>         <span class=\"st0\">\"You win. I loose.\\n\"</span><br/>   <span class=\"kw1\">in</span> pf <span class=\"st0\">\"%s\"</span> outcome<span class=\"sy0\">;</span><br/>   <span class=\"kw1\">match</span> hm <span class=\"kw1\">with</span> <span class=\"co1\">(* Play on with adapted strategy. *)</span><br/>        `S <span class=\"sy0\">-&gt;</span> make_moves <span class=\"br0\">(</span>r <span class=\"sy0\">+.</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><span class=\"br0\">)</span> p s<br/>      <span class=\"sy0\">|</span> `R <span class=\"sy0\">-&gt;</span> make_moves r <span class=\"br0\">(</span>p <span class=\"sy0\">+.</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><span class=\"br0\">)</span> s<br/>      <span class=\"sy0\">|</span> `P <span class=\"sy0\">-&gt;</span> make_moves r p <span class=\"br0\">(</span>s <span class=\"sy0\">+.</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><span class=\"br0\">)</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"co1\">(* Main loop. *)</span><br/>make_moves <span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "PARI/GP", "loc": 35, "block": "<pre class=\"parigp highlighted_source\">contest<span class=\"br0\">(</span>rounds<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  my<span class=\"br0\">(</span>v<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>wins<span class=\"sy0\">,</span>losses<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">\\\\ Laplace rule</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>rounds<span class=\"sy0\">,</span><br/>    my<span class=\"br0\">(</span>computer<span class=\"sy0\">,</span>player<span class=\"sy0\">,</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    t<span class=\"sy0\">=</span><span class=\"kw1\">random</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>v<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>v<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>t<span class=\"sy0\">&lt;</span>v<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> computer <span class=\"sy0\">=</span> <span class=\"st0\">\"R\"</span><span class=\"sy0\">,</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>t<span class=\"sy0\">&lt;</span>v<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>v<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> computer <span class=\"sy0\">=</span> <span class=\"st0\">\"P\"</span><span class=\"sy0\">,</span> computer <span class=\"sy0\">=</span> <span class=\"st0\">\"S\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Rock, paper, or scissors?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    t <span class=\"sy0\">=</span> <span class=\"kw1\">Str</span><span class=\"br0\">(</span><span class=\"kw1\">input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>#t<span class=\"sy0\">,</span><br/>      player<span class=\"sy0\">=</span><span class=\"kw1\">Vec</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>player <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"R\"</span> <span class=\"sy0\">&amp;&amp;</span> player <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"P\"</span><span class=\"sy0\">,</span> player <span class=\"sy0\">=</span> <span class=\"st0\">\"S\"</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">,</span><br/>      player <span class=\"sy0\">=</span> <span class=\"st0\">\"S\"</span><br/>    <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>player <span class=\"sy0\">==</span> <span class=\"st0\">\"R\"</span><span class=\"sy0\">,</span> v<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>player <span class=\"sy0\">==</span> <span class=\"st0\">\"P\"</span><span class=\"sy0\">,</span> v<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>player <span class=\"sy0\">==</span> <span class=\"st0\">\"S\"</span><span class=\"sy0\">,</span> v<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print1</span><span class=\"br0\">(</span>player<span class=\"st0\">\" vs. \"</span>computer<span class=\"st0\">\": \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>computer <span class=\"sy0\">&lt;&gt;</span> player<span class=\"sy0\">,</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>computer <span class=\"sy0\">==</span> <span class=\"st0\">\"R\"</span> <span class=\"sy0\">&amp;&amp;</span> player <span class=\"sy0\">=</span> <span class=\"st0\">\"P\"</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>computer <span class=\"sy0\">==</span> <span class=\"st0\">\"P\"</span> <span class=\"sy0\">&amp;&amp;</span> player <span class=\"sy0\">=</span> <span class=\"st0\">\"S\"</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>computer <span class=\"sy0\">==</span> <span class=\"st0\">\"S\"</span> <span class=\"sy0\">&amp;&amp;</span> player <span class=\"sy0\">==</span> <span class=\"st0\">\"R\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"You win\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        losses<span class=\"sy0\">++</span><br/>      <span class=\"sy0\">,</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"I win\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        wins<span class=\"sy0\">++</span><br/>      <span class=\"br0\">)</span><br/>    <span class=\"sy0\">,</span><br/>      <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Tie\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">[</span>wins<span class=\"sy0\">,</span>losses<span class=\"br0\">]</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>contest<span class=\"br0\">(</span><span class=\"nu1\">10</span><span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 123, "block": "<pre class=\"perl highlighted_source\">\u00a0<br/><span class=\"kw2\">use</span> <span class=\"nu0\">5.012</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> utf8<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> <a href=\"http://perldoc.perl.org/functions/open.html\"><span class=\"kw3\">open</span></a> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span><span class=\"sy0\">:</span>encoding<span class=\"br0\">(</span>utf<span class=\"sy0\">-</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span>std<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> Getopt<span class=\"sy0\">::</span><span class=\"me2\">Long</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> Game <span class=\"br0\">{</span><br/>    <span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">Util</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>shuffle first<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$turns</span>        <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">%human_choice</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> rock <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> paper <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> scissors <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">%comp_choice</span>  <span class=\"sy0\">=</span> <span class=\"br0\">(</span> rock <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> paper <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> scissors <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">%what_beats</span> <span class=\"sy0\">=</span><br/>      <span class=\"br0\">(</span> rock <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'paper'</span><span class=\"sy0\">,</span> paper <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'scissors'</span><span class=\"sy0\">,</span> scissors <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'rock'</span><span class=\"sy0\">,</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$comp_wins</span>  <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$human_wins</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$draws</span>      <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> save_human_choice <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$ch</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/lc.html\"><span class=\"kw3\">lc</span></a> <a href=\"http://perldoc.perl.org/functions/pop.html\"><span class=\"kw3\">pop</span></a><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <a href=\"http://perldoc.perl.org/functions/exists.html\"><span class=\"kw3\">exists</span></a> <span class=\"re0\">$human_choice</span><span class=\"br0\">{</span> <span class=\"re0\">$ch</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"sy0\">++</span><span class=\"re0\">$human_choice</span><span class=\"br0\">{</span> <span class=\"re0\">$ch</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> __PACKAGE__ <span class=\"sy0\">.</span> <span class=\"st0\">\":: wrong choice: '$ch'\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> get_comp_choice <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"sy0\">@</span><a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"sy0\">=</span> shuffle <a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"re0\">%human_choice</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$ch</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span> <span class=\"re0\">$prob</span><span class=\"sy0\">,</span> <span class=\"re0\">$rand</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$ch</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> first <span class=\"br0\">{</span> <span class=\"re0\">$rand</span> <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span> <span class=\"re0\">$prob</span> <span class=\"sy0\">+=</span> <span class=\"br0\">(</span> <span class=\"re0\">$human_choice</span><span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"br0\">}</span> <span class=\"sy0\">/</span> <span class=\"re0\">$turns</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"sy0\">@</span><a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"re0\">$turns</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$ch</span> <span class=\"sy0\">//=</span> <span class=\"re0\">$keys</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$ch</span> <span class=\"sy0\">=</span> <span class=\"re0\">$what_beats</span><span class=\"br0\">{</span> <span class=\"re0\">$ch</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"sy0\">++</span><span class=\"re0\">$comp_choice</span><span class=\"br0\">{</span> <span class=\"re0\">$ch</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$ch</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> make_turn <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span> <span class=\"re0\">$comp_ch</span><span class=\"sy0\">,</span> <span class=\"re0\">$human_ch</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <a href=\"http://perldoc.perl.org/functions/pop.html\"><span class=\"kw3\">pop</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/pop.html\"><span class=\"kw3\">pop</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"sy0\">++</span><span class=\"re0\">$turns</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$what_beats</span><span class=\"br0\">{</span> <span class=\"re0\">$human_ch</span> <span class=\"br0\">}</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$comp_ch</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"sy0\">++</span><span class=\"re0\">$comp_wins</span><span class=\"sy0\">;</span><br/>            <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'I win!'</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span> <span class=\"re0\">$what_beats</span><span class=\"br0\">{</span> <span class=\"re0\">$comp_ch</span> <span class=\"br0\">}</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$human_ch</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"sy0\">++</span><span class=\"re0\">$human_wins</span><span class=\"sy0\">;</span><br/>            <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'You win!'</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <span class=\"sy0\">++</span><span class=\"re0\">$draws</span><span class=\"sy0\">;</span><br/>            <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'Draw!'</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> get_final_report <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$report</span> <span class=\"sy0\">=</span><br/>            <span class=\"st0\">\"You chose:<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"  rock     = $human_choice{rock} times,<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"  paper    = $human_choice{paper} times,<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"  scissors = $human_choice{scissors} times,<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"I chose:<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"  rock     = $comp_choice{rock} times,<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"  paper    = $comp_choice{paper} times,<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"  scissors = $comp_choice{scissors} times,<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"Turns: $turns<span class=\"es0\">\\n</span>\"</span><br/>          <span class=\"sy0\">.</span> <span class=\"st0\">\"I won: $comp_wins, you won: $human_wins, draws: $draws<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$report</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> main <span class=\"br0\">{</span><br/>    GetOptions<span class=\"br0\">(</span> <span class=\"st_h\">'quiet'</span> <span class=\"sy0\">=&gt;</span> \\<span class=\"kw1\">my</span> <span class=\"re0\">$quiet</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    greet<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">$quiet</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        print_next_line<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">$quiet</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=</span> get_input<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">last</span> <span class=\"kw1\">unless</span> <span class=\"re0\">$input</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$input</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'error'</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"I don't understand!<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">$quiet</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">redo</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$comp_choice</span> <span class=\"sy0\">=</span> Game<span class=\"sy0\">::</span><span class=\"me2\">get_comp_choice</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Game<span class=\"sy0\">::</span><span class=\"me2\">save_human_choice</span><span class=\"br0\">(</span><span class=\"re0\">$input</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$result</span> <span class=\"sy0\">=</span> Game<span class=\"sy0\">::</span><span class=\"me2\">make_turn</span><span class=\"br0\">(</span> <span class=\"re0\">$input</span><span class=\"sy0\">,</span> <span class=\"re0\">$comp_choice</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        describe_turn_result<span class=\"br0\">(</span> <span class=\"re0\">$input</span><span class=\"sy0\">,</span> <span class=\"re0\">$comp_choice</span><span class=\"sy0\">,</span> <span class=\"re0\">$result</span> <span class=\"br0\">)</span><br/>          <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">$quiet</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> Game<span class=\"sy0\">::</span><span class=\"me2\">get_final_report</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> greet <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Welcome to the Rock-Paper-Scissors game!<span class=\"es0\">\\n</span>\"</span><br/>      <span class=\"sy0\">.</span> <span class=\"st0\">\"Choose 'rock', 'paper' or 'scissors'<span class=\"es0\">\\n</span>\"</span><br/>      <span class=\"sy0\">.</span> <span class=\"st0\">\"Enter empty line or 'quit' to quit<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> print_next_line <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st_h\">'Your choice: '</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> get_input <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&lt;&gt;;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">and</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">$input</span><span class=\"sy0\">;</span>    <span class=\"co1\"># EOF</span><br/>    <a href=\"http://perldoc.perl.org/functions/chomp.html\"><span class=\"kw3\">chomp</span></a> <span class=\"re0\">$input</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">$input</span> <span class=\"kw1\">or</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=~</span> <span class=\"co2\">m/\\A \\s* q/xi</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <br/>        <span class=\"br0\">(</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=~</span> <span class=\"co2\">m/\\A \\s* r/xi</span> <span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'rock'</span><br/>      <span class=\"sy0\">:</span> <span class=\"br0\">(</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=~</span> <span class=\"co2\">m/\\A \\s* p/xi</span> <span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'paper'</span><br/>      <span class=\"sy0\">:</span> <span class=\"br0\">(</span> <span class=\"re0\">$input</span> <span class=\"sy0\">=~</span> <span class=\"co2\">m/\\A \\s* s/xi</span> <span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'scissors'</span><br/>      <span class=\"sy0\">:</span>                               <span class=\"st_h\">'error'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> describe_turn_result <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span> <span class=\"re0\">$human_ch</span><span class=\"sy0\">,</span> <span class=\"re0\">$comp_ch</span><span class=\"sy0\">,</span> <span class=\"re0\">$result</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"You chose <span class=\"es0\">\\u</span>$human_ch, I chose <span class=\"es0\">\\u</span>$comp_ch. $result<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 40, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">%vs</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><br/>    options <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>Rock Paper Scissors<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    ro <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>        ro <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span>                        <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        pa <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Paper covers Rock: '</span>     <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        sc <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Rock smashes Scissors: '</span> <span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    pa <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>        ro <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Paper covers Rock: '</span>    <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        pa <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span>                       <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        sc <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Scissors cut Paper: '</span>   <span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    sc <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>        ro <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Rock smashes Scissors: '</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        pa <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Scissors cut Paper: '</span>   <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        sc <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span>                       <span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">%choices</span> <span class=\"sy0\">=</span> <span class=\"re0\">%vs</span><span class=\"sy0\">&lt;</span>options<span class=\"sy0\">&gt;.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"sy0\">;</span> <span class=\"re0\">$_</span><span class=\"sy0\">.</span><span class=\"kw3\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">lc</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$_</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$keys</span>    <span class=\"sy0\">=</span> <span class=\"re0\">%choices</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">join</span><span class=\"br0\">(</span><span class=\"st_h\">'|'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$prompt</span>  <span class=\"sy0\">=</span> <span class=\"re0\">%vs</span><span class=\"sy0\">&lt;</span>options<span class=\"sy0\">&gt;.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"re0\">$_</span><span class=\"sy0\">.</span><span class=\"kw3\">subst</span><span class=\"br0\">(</span><span class=\"co2\">/(\\w\\w)/</span><span class=\"sy0\">,</span> <span class=\"sy0\">-&gt;</span> $<span class=\"sy0\">/</span> <span class=\"br0\">{</span><span class=\"st0\">\"[$0]\"</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">join</span><span class=\"br0\">(</span><span class=\"st_h\">' '</span><span class=\"br0\">)</span><span class=\"sy0\">~</span><span class=\"st0\">\"? \"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">%weight</span>  <span class=\"sy0\">=</span> <span class=\"re0\">%choices</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span>\u00a0\u00bb<span class=\"sy0\">=&gt;</span>\u00bb <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@stats</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$round</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"kw1\">my</span> <span class=\"re0\">$player</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>prompt <span class=\"st0\">\"Round {++$round}: \"</span> <span class=\"sy0\">~</span> <span class=\"re0\">$prompt</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">lc</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$player</span><span class=\"sy0\">.=</span><span class=\"kw3\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st_h\">'Invalid choice, try again.'</span> <span class=\"kw1\">and</span> <span class=\"re0\">$round</span><span class=\"sy0\">--</span> <span class=\"kw1\">and</span> <span class=\"kw1\">next</span><br/>      <span class=\"kw1\">unless</span> <span class=\"re0\">$player</span><span class=\"sy0\">.</span><span class=\"kw3\">chars</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span> <span class=\"kw1\">and</span> <span class=\"re0\">$player</span> <span class=\"sy0\">~~</span> <span class=\"co2\">/&lt;$keys&gt;/</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$computer</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>flat <span class=\"re0\">%weight</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span> <span class=\"br0\">{</span> <span class=\"re0\">$_</span> <span class=\"kw1\">xx</span> <span class=\"re0\">%weight</span><span class=\"br0\">{</span><span class=\"re0\">$_</span><span class=\"br0\">}</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">pick</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">%weight</span><span class=\"br0\">{</span><span class=\"re0\">$_</span><span class=\"sy0\">.</span><span class=\"me1\">key</span><span class=\"br0\">}</span><span class=\"sy0\">++</span> <span class=\"kw1\">for</span> <span class=\"re0\">%vs</span><span class=\"br0\">{</span><span class=\"re0\">$player</span><span class=\"br0\">}</span><span class=\"sy0\">.</span><span class=\"kw3\">grep</span><span class=\"br0\">(</span> <span class=\"br0\">{</span> <span class=\"re0\">$_</span><span class=\"sy0\">.</span><span class=\"me1\">value</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$result</span> <span class=\"sy0\">=</span> <span class=\"re0\">%vs</span><span class=\"br0\">{</span><span class=\"re0\">$player</span><span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$computer</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@stats</span><span class=\"br0\">[</span><span class=\"re0\">$result</span><span class=\"br0\">]</span><span class=\"sy0\">++;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"You chose\u00a0%choices{$player},  Computer chose\u00a0%choices{$computer}.\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">print</span> <span class=\"re0\">%vs</span><span class=\"br0\">{</span><span class=\"re0\">$player</span><span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$computer</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">print</span> <span class=\"br0\">(</span> <span class=\"st_h\">'You win!'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'You Lose!'</span><span class=\"sy0\">,</span><span class=\"st_h\">'Tie.'</span> <span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"re0\">$result</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\" - (W:{@stats[0]} L:{@stats[1]} T:{@stats[2]})<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 102, "block": "<pre class=\"text highlighted_source\">--standard game<br/>constant rule3 = {\"rock blunts scissors\",<br/>                  \"paper wraps rock\",<br/>                  \"scissors cut paper\"}<br/>--extended version<br/>constant rule5 = {\"rock blunts scissors\",<br/>                  \"rock crushes lizard\",<br/>                  \"paper wraps rock\",<br/>                  \"paper disproves spock\",<br/>                  \"scissors cut paper\",<br/>                  \"scissors decapitate lizard\",<br/>                  \"lizard eats paper\",<br/>                  \"lizard poisons spock\",<br/>                  \"spock smashes scissors\",<br/>                  \"spock vaporizes rock\"}<br/>\u00a0<br/>constant rules = iff(rand(2)=1?rule3:rule5)<br/>\u00a0<br/>sequence what = {}<br/>sequence beats = {}<br/>string wkeys = \"\"<br/>string question = \"What is your move \"<br/>integer choices, hsum<br/>sequence history, cplays, pplays<br/>\u00a0<br/>object x, verb, y<br/>\u00a0<br/>    for i=1 to length(rules) do<br/>        {x} = split(rules[i])<br/>        if not find(x,what) then<br/>            what = append(what,x)<br/>            if find(x[1],wkeys) then<br/>                wkeys = append(wkeys,x[$])<br/>                question &amp;= x[1..-2]&amp;\"(\"&amp;x[$]&amp;\"), \"<br/>            else<br/>                wkeys = append(wkeys,x[1])<br/>                question &amp;= \"(\"&amp;x[1]&amp;\")\"&amp;x[2..$]&amp;\", \"<br/>            end if<br/>        end if<br/>    end for<br/>    choices = length(wkeys)<br/>    history = repeat(1,choices)<br/>    hsum = 3<br/>    cplays = repeat(0,choices)<br/>    pplays = repeat(0,choices)<br/>    beats = repeat(repeat(0,choices),choices)<br/>    question[-2] = '?'<br/>    for i=1 to length(rules) do<br/>        {x,verb,y} = split(rules[i])<br/>        beats[find(x,what)][find(y,what)] = verb<br/>    end for<br/>\u00a0<br/>integer cmove, pmove, draws = 0, pwins = 0, cwins = 0<br/>    while 1 do<br/>        cmove = rand(hsum)<br/>        for i=1 to choices do<br/>            cmove -= history[i]<br/>            if cmove&lt;=0 then<br/>                -- predicted user choice of i, find whatever beats it<br/>                for j=1 to choices do<br/>                    if string(beats[j][i]) then<br/>                        cmove = j<br/>                        exit<br/>                    end if<br/>                end for<br/>                exit<br/>            end if<br/>        end for<br/>        puts(1,question)<br/>        while 1 do<br/>            pmove = lower(wait_key())<br/>            if pmove='q' then exit end if<br/>            pmove = find(pmove,wkeys)<br/>            if pmove!=0 then exit end if<br/>        end while<br/>        if pmove='q' then exit end if<br/>\u00a0<br/>        printf(1,\"you:\u00a0%s, me:\u00a0%s, \",{what[pmove],what[cmove]})<br/>        cplays[cmove] += 1<br/>        pplays[pmove] += 1<br/>        if cmove=pmove then<br/>            printf(1,\"a draw.\\n\")<br/>            draws += 1<br/>        else<br/>            if string(beats[cmove][pmove]) then<br/>                printf(1,\"%s\u00a0%s\u00a0%s. I win.\\n\",{what[cmove],beats[cmove][pmove],what[pmove]})<br/>                cwins += 1<br/>            elsif string(beats[pmove][cmove]) then<br/>                printf(1,\"%s\u00a0%s\u00a0%s. You win.\\n\",{what[pmove],beats[pmove][cmove],what[cmove]})<br/>                pwins += 1<br/>            else<br/>               \u00a0?9/0    -- sanity check<br/>            end if<br/>        end if<br/>        history[pmove] += 1<br/>        hsum += 1<br/>    end while<br/>    printf(1,\"\\n\\nYour wins:%d, My wins:%d, Draws:%d\\n\",{pwins,cwins,draws})<br/>    printf(1,\"\\n\\nYour wins:%d, My wins:%d, Draws:%d\\n\",{pwins,cwins,draws})<br/>    printf(1,\"       \") for i=1 to choices do   printf(1,\"%9s\",what[i])     end for<br/>    printf(1,\"\\nyou: \") for i=1 to choices do   printf(1,\"%9d\",pplays[i])   end for<br/>    printf(1,\"\\n me: \") for i=1 to choices do   printf(1,\"%9d\",cplays[i])   end for</pre>"}, {"lang": "PHP", "loc": 31, "block": "<pre class=\"php highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;h1&gt;\"</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"Choose: ROCK - PAPER - SCISSORS\"</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"&lt;/h1&gt;\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;h2&gt;\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$player</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/strtoupper\"><span class=\"kw3\">strtoupper</span></a><span class=\"br0\">(</span> <span class=\"re0\">$_GET</span><span class=\"br0\">[</span><span class=\"st0\">\"moves\"</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$wins</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>    <span class=\"st_h\">'ROCK'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'SCISSORS'</span><span class=\"sy0\">,</span><br/>    <span class=\"st_h\">'PAPER'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'ROCK'</span><span class=\"sy0\">,</span><br/>    <span class=\"st_h\">'SCISSORS'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'PAPER'</span><br/>  <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$a_i</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array_rand\"><span class=\"kw3\">array_rand</span></a><span class=\"br0\">(</span><span class=\"re0\">$wins</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;br&gt;\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"Player chooses \"</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"&lt;i style=<span class=\"es1\">\\\"</span>color:blue<span class=\"es1\">\\\"</span>&gt;\"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$player</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"&lt;/i&gt;\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;br&gt;\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;br&gt;\"</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"A.I chooses \"</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"&lt;i style=<span class=\"es1\">\\\"</span>color:red<span class=\"es1\">\\\"</span>&gt;\"</span>  <span class=\"sy0\">.</span> <span class=\"re0\">$a_i</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"&lt;/i&gt;\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$results</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$player</span> <span class=\"sy0\">==</span> <span class=\"re0\">$a_i</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"re0\">$results</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Draw\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"re0\">$wins</span><span class=\"br0\">[</span><span class=\"re0\">$a_i</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"re0\">$player</span> <span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"re0\">$results</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"A.I wins\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>  <span class=\"re0\">$results</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Player wins\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;br&gt;\"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$results</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span><br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 20, "block": "<pre class=\"text highlighted_source\">(use (C Mine Your)<br/>   (let (Rock 0  Paper 0  Scissors 0)<br/>      (loop<br/>         (setq Mine<br/>            (let N (if (gt0 (+ Rock Paper Scissors)) (rand 1 @) 0)<br/>               (seek<br/>                  '((L) (le0 (dec 'N (caar L))))<br/>                  '(Rock Paper Scissors .) ) ) )<br/>         (prin \"Enter R, P or S to play, or Q to quit: \")<br/>         (loop<br/>            (and (= \"Q\" (prinl (setq C (uppc (key))))) (bye))<br/>            (T (setq Your (find '((S) (pre? C S)) '(Rock Paper Scissors))))<br/>            (prinl \"Bad input - try again\") )<br/>         (prinl<br/>            \"I say \" (cadr Mine) \", You say \" Your \": \"<br/>            (cond<br/>               ((== Your (cadr Mine)) \"Draw\")<br/>               ((== Your (car Mine)) \"I win\")<br/>               (T \"You win\") ) )<br/>         (inc Your) ) ) )</pre>"}, {"lang": "PL/I", "loc": 33, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>rock: procedure options (main);   /* 30 October 2013 */<br/>   declare move character (1), cm fixed binary;<br/>\u00a0<br/>   put ('The Rock-Paper-Scissors game');<br/>   put skip list (\"please type 'r' for rock, 'p' for paper, 's' for scissors.\");<br/>   put skip list (\"Anything else finishes:\");<br/>   do forever;<br/>      get edit (move) (a(1));<br/>      move = lowercase(move);<br/>      if index('rpsq', move) = 0 then iterate;<br/>      if move = 'q' then stop;<br/>      cm = random()*3; /* computer moves: 0 = rock, 1 = paper, 2 = scissors */<br/>      select (cm);<br/>         when (0) select (move);<br/>                     when ('r') put list ('rock and rock: A draw');<br/>                     when ('p') put list ('paper beats rock: You win');<br/>                     when ('s') put list ('rock breaks scissors: I win');<br/>                  end;<br/>         when (1) select (move);<br/>                     when ('r') put list ('paper beats rock: I win');<br/>                     when ('p') put list ('paper and paper: A draw');<br/>                     when ('s') put list ('scissors cut paper: You win');<br/>                  end;<br/>         when (2) select (move);<br/>                     when ('r') put list ('rock breaks scissors: You win');<br/>                     when ('p') put list ('scissors cuts paper: I win');<br/>                     when ('s') put list ('Scissors and Scissors: A draw');<br/>                  end;<br/>      end;<br/>   end;<br/>end rock;<br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 84, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Enumeration</span><br/>  <span class=\"co1\">;choices are in listed according to their cycle, weaker followed by stronger</span><br/>  #rock<br/>  #paper<br/>  #scissors<br/>  #numChoices <span class=\"co1\">;this comes after all possible choices</span><br/><span class=\"kw1\">EndEnumeration</span><br/>\u00a0<br/><span class=\"co1\">;give names to each of the choices</span><br/><span class=\"kw1\">Dim</span> choices.s<span class=\"br0\">(</span>#numChoices <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>choices<span class=\"br0\">(</span>#rock<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"rock\"</span><br/>choices<span class=\"br0\">(</span>#paper<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"paper\"</span><br/>choices<span class=\"br0\">(</span>#scissors<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"scissors\"</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> gameCount<br/><span class=\"kw1\">Dim</span> playerChoiceHistory<span class=\"br0\">(</span>#numChoices <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> weightedRandomChoice<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Shared</span> gameCount, playerChoiceHistory<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> x <span class=\"sy0\">=</span> <span class=\"kw2\">Random</span><span class=\"br0\">(</span>gameCount <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>, t, c<br/>\u00a0<br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> #numChoices <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>    t <span class=\"sy0\">+</span> playerChoiceHistory<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> t <span class=\"sy0\">&gt;=</span> x<br/>      c <span class=\"sy0\">=</span> i<br/>      <span class=\"kw1\">Break</span><br/>    <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"br0\">(</span>c <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> #numChoices<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Welcome to the game of rock-paper-scissors\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Each player guesses one of these three, and reveals it at the same time.\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Rock blunts scissors, which cut paper, which wraps stone.\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"If both players choose the same, it is a draw!\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"When you've had enough, choose Q.\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">Define</span> computerChoice, playerChoice, response.s<br/>  <span class=\"kw1\">Define</span> playerWins, computerWins, draw, quit<br/>\u00a0<br/>  computerChoice <span class=\"sy0\">=</span> <span class=\"kw2\">Random</span><span class=\"br0\">(</span>#numChoices <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Repeat</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"What is your move (press R, P, or S)?\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Repeat</span><br/>      response <span class=\"sy0\">=</span> <span class=\"kw2\">LCase</span><span class=\"br0\">(</span><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Until</span> <span class=\"kw2\">FindString</span><span class=\"br0\">(</span><span class=\"st0\">\"rpsq\"</span>, response<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">If</span> response <span class=\"sy0\">=</span> <span class=\"st0\">\"q\"</span>:<br/>      quit <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">Else</span><br/>      gameCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>      playerChoice <span class=\"sy0\">=</span> <span class=\"kw2\">FindString</span><span class=\"br0\">(</span><span class=\"st0\">\"rps\"</span>, response<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>      result <span class=\"sy0\">=</span> <span class=\"br0\">(</span>playerChoice <span class=\"sy0\">-</span> computerChoice <span class=\"sy0\">+</span> #numChoices<span class=\"br0\">)</span> <span class=\"sy0\">%</span> #numChoices<br/>      <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"You chose \"</span> <span class=\"sy0\">+</span> choices<span class=\"br0\">(</span>playerChoice<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" and I chose \"</span> <span class=\"sy0\">+</span> choices<span class=\"br0\">(</span>computerChoice<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Select</span> result<br/>        <span class=\"kw1\">Case</span> <span class=\"nu0\">0</span><br/>          <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\". It's a draw.\"</span><span class=\"br0\">)</span><br/>          draw <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">Case</span> <span class=\"nu0\">1</span><br/>          <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\". You win!\"</span><span class=\"br0\">)</span><br/>          playerWins <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">Case</span> <span class=\"nu0\">2</span><br/>          <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\". I win!\"</span><span class=\"br0\">)</span><br/>          computerWins <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">EndSelect</span><br/>      playerChoiceHistory<span class=\"br0\">(</span>playerChoice<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>      computerChoice <span class=\"sy0\">=</span> weightedRandomChoice<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">EndIf</span> <br/>  <span class=\"kw1\">Until</span> quit<br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"You chose: \"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> #numChoices <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span>choices<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">StrF</span><span class=\"br0\">(</span>playerChoiceHistory<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">/</span> gameCount, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"%; \"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"You won \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>playerWins<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\", and I won \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>computerWins<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\". There were \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>draw<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" draws.\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Thanks for playing!\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 22, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">random</span> <span class=\"kw1\">import</span> choice<br/>\u00a0<br/>rules <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'rock'</span>: <span class=\"st0\">'paper'</span><span class=\"sy0\">,</span> <span class=\"st0\">'scissors'</span>: <span class=\"st0\">'rock'</span><span class=\"sy0\">,</span> <span class=\"st0\">'paper'</span>: <span class=\"st0\">'scissors'</span><span class=\"br0\">}</span><br/>previous <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'rock'</span><span class=\"sy0\">,</span> <span class=\"st0\">'paper'</span><span class=\"sy0\">,</span> <span class=\"st0\">'scissors'</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>    human <span class=\"sy0\">=</span> <span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>choose your weapon: '</span><span class=\"br0\">)</span><br/>    computer <span class=\"sy0\">=</span> rules<span class=\"br0\">[</span>choice<span class=\"br0\">(</span>previous<span class=\"br0\">)</span><span class=\"br0\">]</span>  <span class=\"co1\"># choose the weapon which beats a randomly chosen weapon from \"previous\"</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> human <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"st0\">'quit'</span><span class=\"sy0\">,</span> <span class=\"st0\">'exit'</span><span class=\"br0\">)</span>: <span class=\"kw1\">break</span><br/>\u00a0<br/>    <span class=\"kw1\">elif</span> human <span class=\"kw1\">in</span> rules:<br/>        previous.<span class=\"me1\">append</span><span class=\"br0\">(</span>human<span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'the computer played'</span><span class=\"sy0\">,</span> computer<span class=\"sy0\">,</span> end<span class=\"sy0\">=</span><span class=\"st0\">'; '</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> rules<span class=\"br0\">[</span>computer<span class=\"br0\">]</span> <span class=\"sy0\">==</span> human:  <span class=\"co1\"># if what beats the computer's choice is the human's choice...</span><br/>            <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'yay you win!'</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">elif</span> rules<span class=\"br0\">[</span>human<span class=\"br0\">]</span> <span class=\"sy0\">==</span> computer:  <span class=\"co1\"># if what beats the human's choice is the computer's choice...</span><br/>            <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'the computer beat you...\u00a0:('</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span>: <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"it's a tie!\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">else</span>: <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"that's not a valid choice\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Rascal", "loc": 20, "block": "<pre class=\"text highlighted_source\">import Prelude;<br/>\u00a0<br/>rel[str, str] whatbeats = {&lt;\"Rock\", \"Scissors\"&gt;, &lt;\"Scissors\", \"Paper\"&gt;, &lt;\"Paper\", \"Rock\"&gt;};<br/>\u00a0<br/>list[str] ComputerChoices = [\"Rock\", \"Paper\", \"Scissors\"];<br/>\u00a0<br/>str CheckWinner(a, b){<br/>\tif(b == getOneFrom(whatbeats[a]))<br/>\t\treturn a;<br/>\telseif(a == getOneFrom(whatbeats[b]))<br/>\t\treturn b;<br/>\telse return \"Nobody\"; <br/>}<br/>\u00a0<br/>public str RPS(human){<br/>\tcomputer = getOneFrom(ComputerChoices);<br/>\tx = if(human == \"Rock\") \"Paper\"; elseif(human == \"Paper\") \"Scissors\"; else \"Rock\";<br/>\tComputerChoices += x;<br/>\treturn \"Computer played &lt;computer&gt;. &lt;CheckWinner(human, computer)&gt; wins!\";<br/>}</pre>"}, {"lang": "Racket", "loc": 36, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require math)<br/>\u00a0<br/>(define history (make-hash '((paper . 1) (scissors . 1) (rock . 1))))<br/>(define total 3)<br/>\u00a0<br/>(define (update-history! human-choice)<br/>  (set! total (+ total 1))<br/>  (hash-update! history human-choice add1 0))<br/>\u00a0<br/>(define (pick-one)<br/>  (sample<br/>   (discrete-dist '(paper scissors rock)<br/>                  (map (\u03bb (x) (hash-ref history x))<br/>                       '(scissors paper rock)))))<br/>\u00a0<br/>(define (find-winner computer human)<br/>  (define order '(scissors paper rock scissors))<br/>  (cond <br/>    [(eq? computer human)                         'none]<br/>    [(eq? (second (member computer order)) human) 'computer]<br/>    [                                             'human]))<br/>\u00a0<br/>(define (game-loop)<br/>  (define computer-choice (pick-one))<br/>  (define human-choice (read))<br/>  (define winner (find-winner computer-choice human-choice))<br/>  (update-history! human-choice)<br/>  (displayln (~a \"Computer picked \" computer-choice \", \"<br/>                 \"human picked \" human-choice \", \"<br/>                 winner \" wins.\"))<br/>  (game-loop))<br/>\u00a0<br/>(game-loop)<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 34, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program plays rock\u2500paper\u2500scissors with a human;  tracks what human tends to use. */</span><br/>!= <span class=\"st0\">'\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500'</span>;   err=! <span class=\"st0\">'***error***'</span>;    @<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span>    <span class=\"coMULTI\">/*some constants for this program.     */</span><br/>prompt=\u00a0!  <span class=\"st0\">'Please enter one of:     Rock   Paper   Scissors      (or Quit)'</span><br/>$<span class=\"sy0\">.</span>p=<span class=\"st0\">'paper'</span>\u00a0;    $<span class=\"sy0\">.</span>s=<span class=\"st0\">'scissors'</span>;   $<span class=\"sy0\">.</span>r=<span class=\"st0\">'rock'</span>    <span class=\"coMULTI\">/*list of the choices in this program. */</span><br/>t<span class=\"sy0\">.</span>p=$<span class=\"sy0\">.</span>r    \u00a0;    t<span class=\"sy0\">.</span>s=$<span class=\"sy0\">.</span>p      \u00a0;   t<span class=\"sy0\">.</span>r=$<span class=\"sy0\">.</span>s       <span class=\"coMULTI\">/*thingys that beats  stuff.           */</span><br/>w<span class=\"sy0\">.</span>p=$<span class=\"sy0\">.</span>s    \u00a0;    w<span class=\"sy0\">.</span>s=$<span class=\"sy0\">.</span>r      \u00a0;   w<span class=\"sy0\">.</span>r=$<span class=\"sy0\">.</span>p       <span class=\"coMULTI\">/*stuff     \"    \"   thingys.          */</span><br/>b<span class=\"sy0\">.</span>p=<span class=\"st0\">'covers'</span>;    b<span class=\"sy0\">.</span>s=<span class=\"st0\">'cuts'</span>   \u00a0;   b<span class=\"sy0\">.</span>r=<span class=\"st0\">'breaks'</span>  <span class=\"coMULTI\">/*verbs:   how the choice wins.        */</span><br/>\u00a0<br/>  <span class=\"kw1\">do</span> <span class=\"kw2\">forever</span>;   <span class=\"kw1\">say</span>;   <span class=\"kw1\">say</span> prompt;   <span class=\"kw1\">say</span>         <span class=\"coMULTI\">/*prompt the CBLF; then get a response.*/</span><br/>  c=<span class=\"kw6\">word</span><span class=\"br0\">(</span>$<span class=\"sy0\">.</span>p $<span class=\"sy0\">.</span>s $<span class=\"sy0\">.</span>r,   <span class=\"kw6\">random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>           <span class=\"coMULTI\">/*choose the computer's first pick.    */</span><br/>  m=<span class=\"kw6\">max</span><span class=\"br0\">(</span>@<span class=\"sy0\">.</span>r, @<span class=\"sy0\">.</span>p, @<span class=\"sy0\">.</span>s<span class=\"br0\">)</span>;    c=w<span class=\"sy0\">.</span>r                 <span class=\"coMULTI\">/*prepare to examine the choice history*/</span><br/>  <span class=\"kw1\">if</span> @<span class=\"sy0\">.</span>p==m  <span class=\"kw3\">then</span> c=w<span class=\"sy0\">.</span>p                          <span class=\"coMULTI\">/*emulate JC's:  The Amazing Karnac.   */</span><br/>  <span class=\"kw1\">if</span> @<span class=\"sy0\">.</span>s==m  <span class=\"kw3\">then</span> c=w<span class=\"sy0\">.</span>s                          <span class=\"coMULTI\">/*   \"     \"      \"     \"       \"      */</span><br/>  c1=<span class=\"kw6\">left</span><span class=\"br0\">(</span>c, <span class=\"nu0\">1</span><span class=\"br0\">)</span>                                  <span class=\"coMULTI\">/*C1  is used for faster comparing.    */</span><br/>  <span class=\"kw1\">parse</span> <span class=\"kw1\">pull</span> u;            a=<span class=\"kw6\">strip</span><span class=\"br0\">(</span>u<span class=\"br0\">)</span>            <span class=\"coMULTI\">/*get the CBLF's choice/pick (answer). */</span><br/>  <span class=\"kw2\">upper</span> a c1 \u00a0;           a1=<span class=\"kw6\">left</span><span class=\"br0\">(</span>a, <span class=\"nu0\">1</span><span class=\"br0\">)</span>          <span class=\"coMULTI\">/*uppercase choices, get 1st character.*/</span><br/>  ok=<span class=\"nu0\">0</span>                                           <span class=\"coMULTI\">/*indicate answer isn't OK  (so far).  */</span><br/>       <span class=\"kw1\">select</span>                                    <span class=\"coMULTI\">/*process/verify the  CBLF's  choice.  */</span><br/>       <span class=\"kw3\">when</span> <span class=\"kw6\">words</span><span class=\"br0\">(</span>u<span class=\"br0\">)</span>==<span class=\"nu0\">0</span>           <span class=\"kw3\">then</span>           <span class=\"kw1\">say</span>  err   <span class=\"st0\">'nothing entered'</span><br/>       <span class=\"kw3\">when</span> <span class=\"kw6\">words</span><span class=\"br0\">(</span>u<span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">1</span>            <span class=\"kw3\">then</span> <span class=\"kw1\">say</span>  err   <span class=\"st0\">'too many choices: '</span>  u<br/>       <span class=\"kw3\">when</span> <span class=\"kw6\">abbrev</span><span class=\"br0\">(</span><span class=\"st0\">'QUIT'</span>,    a<span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">say</span>\u00a0! <span class=\"st0\">'quitting.'</span>;      <span class=\"kw1\">exit</span>;    <span class=\"kw3\">end</span><br/>       <span class=\"kw3\">when</span> <span class=\"kw6\">abbrev</span><span class=\"br0\">(</span><span class=\"st0\">'ROCK'</span>,    a<span class=\"br0\">)</span> <span class=\"sy0\">|</span>,<br/>            <span class=\"kw6\">abbrev</span><span class=\"br0\">(</span><span class=\"st0\">'PAPER'</span>,   a<span class=\"br0\">)</span> <span class=\"sy0\">|</span>,<br/>            <span class=\"kw6\">abbrev</span><span class=\"br0\">(</span><span class=\"st0\">'SCISSORS'</span>,a<span class=\"br0\">)</span>  <span class=\"kw3\">then</span> ok=<span class=\"nu0\">1</span>      <span class=\"coMULTI\">/*Yes?  This is a valid answer by CBLF.*/</span><br/>       <span class=\"kw3\">otherwise</span>                  <span class=\"kw1\">say</span> err  <span class=\"st0\">'you entered a bad choice: '</span>    u<br/>       <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*select*/</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"sy0\">\\</span>ok          <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>                   <span class=\"coMULTI\">/*answer \u00acOK?  Then get another choice.*/</span><br/>  @<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"e283d3dfa2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>a1+<span class=\"nu0\">1</span>                                    <span class=\"coMULTI\">/*keep a history of the CBLF's choices.*/</span><br/>  <span class=\"kw1\">say</span>\u00a0!  <span class=\"st0\">'computer chose: '</span>    c<br/>  <span class=\"kw1\">if</span>   a1==  c1  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">say</span>\u00a0!  <span class=\"st0\">'draw.'</span>;   <span class=\"kw1\">iterate</span>;  <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">if</span> $<span class=\"sy0\">.</span>a1==t<span class=\"sy0\">.</span>c1  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> \u00a0!  <span class=\"st0\">'the computer wins. '</span>   \u00a0!  $<span class=\"sy0\">.</span>c1  b<span class=\"sy0\">.</span>c1  $<span class=\"sy0\">.</span>a1<br/>                 <span class=\"kw3\">else</span> <span class=\"kw1\">say</span> \u00a0!  <span class=\"st0\">'you win! '</span>             \u00a0!  $<span class=\"sy0\">.</span>a1  b<span class=\"sy0\">.</span>a1  $<span class=\"sy0\">.</span>c1<br/>  <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*forever*/</span>                              <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 39, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Rock-paper-scissors<br/>\u00a0<br/>see \"<br/>welcome to the game of rock-paper-scissors. <br/>each player guesses one of these three, and reveals it at the same time.<br/>rock blunts scissors, which cut paper, which wraps stone.<br/>if both players choose the same, it is a draw!<br/>when you've had enough, choose q.<br/>\"<br/>g = [\"rock\",\"paper\",\"scissors\"]<br/>total=0 draw=0<br/>pwin=0 cwin=0<br/>see \"what is your move (press r, p, or s)?\"<br/>while true<br/>        c=random(2)+1<br/>        give q  <br/>        gs = floor((substr(\"rpsq\",lower(q))))<br/>        if gs&gt;3 or gs&lt;1<br/>           summarise()<br/>           exit<br/>        ok<br/>        total = total + 1<br/>        see\"you chose \" + g[gs] + \" and i chose \" + g[c] + nl<br/>        temp = gs-c<br/>        if temp = 0<br/>           see \". it's a draw\"<br/>           draw = draw + 1<br/>        ok<br/>        if temp = 1 or temp = -2<br/>           see \". you win!\"<br/>           pwin = pwin + 1<br/>        ok<br/>        if temp = (-1) or temp = 2<br/>            see \". i win!\"<br/>            cwin = cwin + 1<br/>        ok<br/>end<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 68, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> RockPaperScissorsGame<br/>  CHOICES = <span class=\"sy0\">%</span>w<span class=\"br0\">[</span>rock paper scissors quit<span class=\"br0\">]</span><br/>  BEATS = <span class=\"br0\">{</span><br/>    <span class=\"st0\">'rock'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'paper'</span>,<br/>    <span class=\"st0\">'paper'</span>    <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'scissors'</span>,<br/>    <span class=\"st0\">'scissors'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'rock'</span>,<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> initialize<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"re1\">@plays</span> = <span class=\"br0\">{</span><br/>      <span class=\"st0\">'rock'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span>,<br/>      <span class=\"st0\">'paper'</span>    <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span>,<br/>      <span class=\"st0\">'scissors'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span>,<br/>    <span class=\"br0\">}</span><br/>    <span class=\"re1\">@score</span> = <span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">]</span>          <span class=\"co1\"># [0]:Human wins, [1]:Computer wins, [2]:draw</span><br/>\u00a0<br/>    play<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> humanPlay<br/>    <span class=\"kw3\">loop</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Your choice: #{CHOICES}? \"</span><br/>      answer = STDIN.<span class=\"kw3\">gets</span>.<span class=\"me1\">strip</span>.<span class=\"me1\">downcase</span><br/>      <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> answer.<span class=\"me1\">empty</span>?<br/>      idx = CHOICES.<span class=\"me1\">find_index</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>choice<span class=\"sy0\">|</span> choice.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>^<span class=\"co1\">#{answer}/)}</span><br/>      <span class=\"kw2\">return</span> CHOICES<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"kw1\">if</span> idx<br/>      <span class=\"kw3\">puts</span> <span class=\"st0\">\"invalid answer, try again\"</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> computerPlay<br/>    total = <span class=\"re1\">@plays</span>.<span class=\"me1\">values</span>.<span class=\"me1\">reduce</span><span class=\"br0\">(</span>:<span class=\"sy0\">+</span><span class=\"br0\">)</span><br/>    r = <span class=\"kw3\">rand</span><span class=\"br0\">(</span>total<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    sum = <span class=\"nu0\">0</span><br/>    CHOICES.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>choice<span class=\"sy0\">|</span><br/>      sum <span class=\"sy0\">+</span>= <span class=\"re1\">@plays</span><span class=\"br0\">[</span>choice<span class=\"br0\">]</span><br/>      <span class=\"kw2\">return</span> BEATS<span class=\"br0\">[</span>choice<span class=\"br0\">]</span> <span class=\"kw1\">if</span> r <span class=\"sy0\">&lt;</span>= sum<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> play<br/>    <span class=\"kw3\">loop</span> <span class=\"kw1\">do</span><br/>      h = humanPlay<br/>      <span class=\"kw1\">break</span> <span class=\"kw1\">if</span> h == <span class=\"st0\">\"quit\"</span><br/>      c = computerPlay<br/>      <span class=\"kw3\">print</span> <span class=\"st0\">\"H: #{h}, C: #{c} =&gt; \"</span><br/>\u00a0<br/>      <span class=\"co1\"># only update the human player's history after the computer has chosen</span><br/>      <span class=\"re1\">@plays</span><span class=\"br0\">[</span>h<span class=\"br0\">]</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>\u00a0<br/>      <span class=\"kw1\">if</span> h == c<br/>        <span class=\"kw3\">puts</span> <span class=\"st0\">\"draw\"</span><br/>        <span class=\"re1\">@score</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">elsif</span> h == BEATS<span class=\"br0\">[</span>c<span class=\"br0\">]</span><br/>        <span class=\"kw3\">puts</span> <span class=\"st0\">\"Human wins\"</span><br/>        <span class=\"re1\">@score</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">else</span><br/>        <span class=\"kw3\">puts</span> <span class=\"st0\">\"Computer wins\"</span><br/>        <span class=\"re1\">@score</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">end</span><br/>      <span class=\"kw3\">puts</span> <span class=\"st0\">\"score: human=%d, computer=%d, draw=%d\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span>@score<span class=\"br0\">]</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"re1\">@plays</span>.<span class=\"me1\">each_key</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>k<span class=\"sy0\">|</span> <span class=\"re1\">@plays</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">-</span>= <span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>humans chose #{@plays}\"</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>RockPaperScissorsGame.<span class=\"me1\">new</span></pre>"}, {"lang": "Run BASIC", "loc": 31, "block": "<pre class=\"text highlighted_source\">pri$ = \"RSPR\" <br/>rps$ = \"Rock,Paper,Sissors\"<br/>[loop]<br/>button #r, \"Rock\",    [r]<br/>button #p, \"Paper\",   [p]<br/>button #s, \"Scissors\",[s]<br/>button #q, \"Quit\",    [q]<br/>wait<br/>[r] y = 1\u00a0:goto [me]<br/>[p] y = 2\u00a0:goto [me]<br/>[s] y = 3<br/>[me]<br/>cls<br/>y$ = word$(rps$,y,\",\")<br/>m  = int((rnd(0) * 2) + 1)<br/>m$ = word$(rps$,m,\",\")<br/>print chr$(10);\"You Chose:\";y$;\" I chose:\";m$<br/>yp = instr(pri$,left$(y$,1))<br/>mp = instr(pri$,left$(m$,1))<br/>if yp = 1 and mp = 3 then mp = 0<br/>if mp = 1 and yp = 3 then yp = 0<br/>if yp &lt; mp then print \"You win\"<br/>if yp = mp then print \"Tie\"<br/>if yp &gt; mp then print \"I win\"<br/>goto [loop]<br/>wait<br/>\u00a0<br/>[q] cls<br/>print \"Good Bye! I enjoyed the game\"<br/>end<br/>\u00a0</pre>"}, {"lang": "Rust", "loc": 83, "block": "<pre class=\"text highlighted_source\">extern crate rand;<br/>#[macro_use]<br/>extern crate rand_derive;<br/>\u00a0<br/>use std::io;<br/>use rand::Rng;<br/>use Choice::*;<br/>\u00a0<br/>#[derive(PartialEq, Clone, Copy, Rand, Debug)]<br/>enum Choice {<br/>    Rock,<br/>    Paper,<br/>    Scissors,<br/>}<br/>\u00a0<br/>fn beats(c1: Choice, c2: Choice) -&gt; bool {<br/>    (c1 == Rock &amp;&amp; c2 == Scissors) || (c1 == Scissors &amp;&amp; c2 == Paper) || (c1 == Paper &amp;&amp; c2 == Rock)<br/>}<br/>\u00a0<br/>fn ai_move&lt;R: Rng&gt;(rng: &amp;mut R, v: [usize; 3]) -&gt; Choice {<br/>    // weighted random choice, a dynamic version of `rand::distributions::WeightedChoice`<br/>    let rand = rng.gen_range(0, v[0] + v[1] + v[2]);<br/>    if rand &lt; v[0] {<br/>        Paper<br/>    } else if rand &lt; v[0] + v[1] {<br/>        Scissors<br/>    } else {<br/>        Rock<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    let mut rng = rand::thread_rng();<br/>\u00a0<br/>    println!(\"Rock, paper, scissors!\");<br/>    let mut ai_choice: Choice = rng.gen();<br/>    let mut ucf = [0, 0, 0]; // user choice frequency<br/>    let mut score = [0, 0];<br/>\u00a0<br/>    loop {<br/>        println!(\"Please input your move: 'r', 'p' or 's'. Type 'q' to quit\");<br/>\u00a0<br/>        let mut input = String::new();<br/>        io::stdin()<br/>            .read_line(&amp;mut input)<br/>            .expect(\"failed to read line\");<br/>        let u_choice = match input.to_lowercase().trim() {<br/>            s if s.starts_with('r') =&gt; {<br/>                ucf[0] += 1;<br/>                Rock<br/>            }<br/>            s if s.starts_with('p') =&gt; {<br/>                ucf[1] += 1;<br/>                Paper<br/>            }<br/>            s if s.starts_with('s') =&gt; {<br/>                ucf[2] += 1;<br/>                Scissors<br/>            }<br/>            s if s.starts_with('q') =&gt; break,<br/>            _ =&gt; {<br/>                println!(\"Please enter a correct choice!\");<br/>                continue;<br/>            }<br/>        };<br/>        println!(\"You chose {:?}, I chose {:?}.\", u_choice, ai_choice);<br/>        if beats(u_choice, ai_choice) {<br/>            score[0] += 1;<br/>            println!(\"You win!\");<br/>        } else if u_choice == ai_choice {<br/>            println!(\"It's a tie!\");<br/>        } else {<br/>            score[1] += 1;<br/>            println!(\"I win!\");<br/>        }<br/>        println!(\"-Score: You {}, Me {}\", score[0], score[1]);<br/>\u00a0<br/>        // only after the 1st iteration the AI knows the stats and can make<br/>        // its weighted random move<br/>        ai_choice = ai_move(&amp;mut rng, ucf);<br/>    }<br/>    println!(\"Thank you for the game!\");<br/>}</pre>"}, {"lang": "Scala", "loc": 43, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> RockPaperScissors <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">collection</span>.<span class=\"me1\">mutable</span>.<span class=\"me1\">LinkedHashMap</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> play<span class=\"br0\">(</span>beats<span class=\"sy0\">:</span> LinkedHashMap<span class=\"br0\">[</span>Symbol,Set<span class=\"br0\">[</span>Symbol<span class=\"br0\">]</span><span class=\"br0\">]</span>, played<span class=\"sy0\">:</span> scala.<span class=\"me1\">collection</span>.<span class=\"me1\">Map</span><span class=\"br0\">[</span>Symbol,Int<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> h <span class=\"sy0\">=</span> readLine<span class=\"br0\">(</span>s<span class=\"st0\">\"\"</span><span class=\"st0\">\"Your move (${beats.keys mkString \"</span>, <span class=\"st0\">\"}): \"</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a> <span class=\"sy0\">=&gt;</span> println<span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"st0\">\"\"</span> <span class=\"sy0\">=&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> s <span class=\"sy0\">=&gt;</span> Symbol<span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    beats get h <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Some<span class=\"br0\">(</span>losers<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> weighted<span class=\"br0\">(</span>todo<span class=\"sy0\">:</span> Iterator<span class=\"br0\">[</span><span class=\"br0\">(</span>Symbol,Int<span class=\"br0\">)</span><span class=\"br0\">]</span>, rand<span class=\"sy0\">:</span> Int, accum<span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Symbol <span class=\"sy0\">=</span> todo.<span class=\"me1\">next</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>s, i<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> rand <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span>accum + i<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> s<br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span><span class=\"sy0\">_</span>, i<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> weighted<span class=\"br0\">(</span>todo, rand, accum + i<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c <span class=\"sy0\">=</span> weighted<span class=\"br0\">(</span>played.<span class=\"me1\">toIterator</span>, <span class=\"nu0\">1</span> + scala.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span>.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span>played.<span class=\"me1\">values</span>.<span class=\"me1\">sum</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>          <span class=\"co1\">// choose an opponent that would beat the player's anticipated move</span><br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> h <span class=\"sy0\">=&gt;</span> beats.<span class=\"me1\">find</span><span class=\"br0\">{</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>s, l<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> l contains h<span class=\"br0\">}</span>.<span class=\"me1\">getOrElse</span><span class=\"br0\">(</span>beats.<span class=\"me1\">head</span><span class=\"br0\">)</span>.<span class=\"sy0\">_</span>1<br/>        <span class=\"br0\">}</span><br/>        print<span class=\"br0\">(</span>s<span class=\"st0\">\"  My move: $c<span class=\"es1\">\\n</span>  \"</span><span class=\"br0\">)</span><br/>        c <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> c <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> losers contains c <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"You won\"</span><span class=\"br0\">)</span><br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> c <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> beats<span class=\"br0\">(</span>c<span class=\"br0\">)</span> contains h <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"You lost\"</span><span class=\"br0\">)</span><br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"We drew\"</span><span class=\"br0\">)</span> <span class=\"co1\">// or underspecified</span><br/>        <span class=\"br0\">}</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> x <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"  Unknown weapon, try again.\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    play<span class=\"br0\">(</span>beats, played get h <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> None <span class=\"sy0\">=&gt;</span> played<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Some<span class=\"br0\">(</span>count<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> played.<span class=\"me1\">updated</span><span class=\"br0\">(</span>h, count + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> play<span class=\"br0\">(</span>beats<span class=\"sy0\">:</span> LinkedHashMap<span class=\"br0\">[</span>Symbol,Set<span class=\"br0\">[</span>Symbol<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span><br/>      play<span class=\"br0\">(</span>beats, beats.<span class=\"me1\">mapValues</span><span class=\"br0\">(</span><span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">// init with uniform probabilities</span><br/>\u00a0<br/>  play<span class=\"br0\">(</span>LinkedHashMap<span class=\"br0\">(</span><br/>    <span class=\"co2\">'rock</span> -<span class=\"sy0\">&gt;</span> Set<span class=\"br0\">(</span><span class=\"st0\">'lizard, '</span>scissors<span class=\"br0\">)</span>,<br/>    <span class=\"co2\">'paper</span> -<span class=\"sy0\">&gt;</span> Set<span class=\"br0\">(</span><span class=\"st0\">'rock, '</span>spock<span class=\"br0\">)</span>,<br/>    <span class=\"co2\">'scissors</span> -<span class=\"sy0\">&gt;</span> Set<span class=\"br0\">(</span><span class=\"st0\">'paper, '</span>lizard<span class=\"br0\">)</span>,<br/>    <span class=\"co2\">'lizard</span> -<span class=\"sy0\">&gt;</span> Set<span class=\"br0\">(</span><span class=\"st0\">'spock, '</span>paper<span class=\"br0\">)</span>,<br/>    <span class=\"co2\">'spock</span> -<span class=\"sy0\">&gt;</span> Set<span class=\"br0\">(</span><span class=\"st0\">'scissors, '</span>rock<span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 35, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>$ include \"keybd.s7i\";<br/>\u00a0<br/>const array string: rockPaperScissors is [] (\"Rock\", \"Paper\", \"Scissors\");<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var char: command is ' ';<br/>    var integer: user is 0;<br/>    var integer: comp is 0;<br/>  begin<br/>    writeln(\"Hello, Welcome to rock-paper-scissors\");<br/>    repeat<br/>      write(\"Please type in 1 for Rock, 2 for Paper, 3 for Scissors, q to quit \");<br/>      flush(OUT);<br/>      repeat<br/>        command\u00a0:= lower(getc(KEYBOARD));<br/>      until command in {'1', '2', '3', 'q'};<br/>      writeln(command);<br/>      if command &lt;&gt; 'q' then<br/>        user\u00a0:= integer parse str(command);<br/>        comp\u00a0:= rand(1, 3);<br/>        writeln(\"You Played: \" &lt;&amp; rockPaperScissors[user]);<br/>        writeln(\"Computer Played: \" &lt;&amp; rockPaperScissors[comp]);<br/>        if comp = user then<br/>          writeln(\"You Tied\");<br/>        elsif succ(comp) = user or user + 2 = comp then<br/>          writeln(\"Yay, You Won!\");<br/>        else<br/>          writeln(\"Sorry, You Lost!\");<br/>        end if;<br/>      end if;<br/>    until command = 'q';<br/>    writeln(\"Goodbye! Thanks for playing!\");<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 54, "block": "<pre class=\"ruby highlighted_source\">const rps = <span class=\"sy0\">%</span>w<span class=\"br0\">(</span>r <span class=\"kw3\">p</span> s<span class=\"br0\">)</span><br/>\u00a0<br/>const msg = <span class=\"br0\">[</span><br/>    <span class=\"st0\">\"Rock breaks scissors\"</span>,<br/>    <span class=\"st0\">\"Paper covers rock\"</span>,<br/>    <span class=\"st0\">\"Scissors cut paper\"</span>,<br/><span class=\"br0\">]</span><br/>\u00a0<br/>say <span class=\"sy0\">&lt;&lt;</span><span class=\"st0\">\"EOT\"</span><br/>\\n<span class=\"sy0\">&gt;&gt;</span> Rock Paper Scissors <span class=\"sy0\">&lt;&lt;</span>\\n<br/><span class=\"sy0\">**</span> Enter <span class=\"st0\">'r'</span>, <span class=\"st0\">'p'</span>, <span class=\"kw1\">or</span> <span class=\"st0\">'s'</span> as your play.<br/><span class=\"sy0\">**</span> Enter <span class=\"st0\">'q'</span> to <span class=\"kw3\">exit</span> the game.<br/><span class=\"sy0\">**</span> Running score shown as <span class=\"sy0\">&lt;</span>your wins<span class=\"sy0\">&gt;</span>:<span class=\"sy0\">&lt;</span>my wins<span class=\"sy0\">&gt;</span><br/>EOT<br/>\u00a0<br/>var plays   = <span class=\"nu0\">0</span><br/>var aScore  = <span class=\"nu0\">0</span><br/>var pScore  = <span class=\"nu0\">0</span><br/>var pcf     = <span class=\"br0\">[</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">]</span>      <span class=\"co1\"># pcf = player choice frequency</span><br/>var aChoice = pick<span class=\"br0\">(</span><span class=\"nu0\">0</span>..<span class=\"nu0\">2</span><span class=\"br0\">)</span>   <span class=\"co1\"># ai choice for first play is completely random</span><br/>\u00a0<br/><span class=\"kw3\">loop</span> <span class=\"br0\">{</span><br/>    var pi = Sys.<span class=\"me1\">scanln</span><span class=\"br0\">(</span><span class=\"st0\">\"Play: \"</span><span class=\"br0\">)</span><br/>    pi == <span class=\"st0\">'q'</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw1\">break</span><br/>\u00a0<br/>    var pChoice = rps.<span class=\"me1\">index</span><span class=\"br0\">(</span>pi<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pChoice == <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        STDERR.<span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid input!<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">next</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"sy0\">++</span>pcf<span class=\"br0\">[</span>pChoice<span class=\"br0\">]</span><br/>    <span class=\"sy0\">++</span>plays<br/>\u00a0<br/>    <span class=\"co1\"># show result of play</span><br/>    <span class=\"st0\">\"&gt;&gt; My play:\u00a0%-8s\"</span>.<span class=\"kw3\">printf</span><span class=\"br0\">(</span>rps<span class=\"br0\">[</span>aChoice<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>    given <span class=\"br0\">(</span><span class=\"br0\">(</span>aChoice <span class=\"sy0\">-</span> pChoice <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> say <span class=\"st0\">\"Tie.\"</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"st0\">\"%-*s\u00a0%s\"</span>.<span class=\"me1\">printlnf</span><span class=\"br0\">(</span><span class=\"nu0\">30</span>, msg<span class=\"br0\">[</span>aChoice<span class=\"br0\">]</span>, <span class=\"st0\">'My point'</span><span class=\"br0\">)</span>;   aScore<span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"st0\">\"%-*s\u00a0%s\"</span>.<span class=\"me1\">printlnf</span><span class=\"br0\">(</span><span class=\"nu0\">30</span>, msg<span class=\"br0\">[</span>pChoice<span class=\"br0\">]</span>, <span class=\"st0\">'Your point'</span><span class=\"br0\">)</span>; pScore<span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># show score</span><br/>    <span class=\"st0\">\"%-6s\"</span>.<span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d:%d\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span>pScore, aScore<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># compute ai choice for next play</span><br/>    given <span class=\"br0\">(</span>plays.<span class=\"kw3\">rand</span>.<span class=\"me1\">int</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>rn<span class=\"sy0\">|</span><br/>        <span class=\"kw1\">case</span> <span class=\"br0\">(</span>rn <span class=\"sy0\">&lt;</span> pcf<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span>        <span class=\"br0\">{</span> aChoice = <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">case</span> <span class=\"br0\">(</span>pcf<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>pcf<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> rn<span class=\"br0\">)</span> <span class=\"br0\">{</span> aChoice = <span class=\"nu0\">2</span> <span class=\"br0\">}</span><br/>        default                   <span class=\"br0\">{</span> aChoice = <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "SuperCollider", "loc": 1, "block": "<pre>// play it in the REPL, evaluating line by line\n\na = RockPaperScissors.new;\na.next(Scissors);\na.next(Scissors);\na.next(Scissors);\na.next(Paper);\n</pre>"}, {"lang": "Tcl", "loc": 64, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/>\u00a0<br/><span class=\"co1\">### Choices are represented by integers, which are indices into this list:</span><br/><span class=\"co1\">###    Rock, Paper, Scissors</span><br/><span class=\"co1\">### Normally, idiomatic Tcl code uses names for these sorts of things, but it</span><br/><span class=\"co1\">### turns out that using integers simplifies the move-comparison logic.</span><br/>\u00a0<br/><span class=\"co1\"># How to ask for a move from the human player</span><br/><span class=\"kw1\">proc</span> getHumanMove <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"Your move? <span class=\"es0\">\\[</span>R<span class=\"es0\">\\]</span>ock, <span class=\"es0\">\\[</span>P<span class=\"es0\">\\]</span>aper, <span class=\"es0\">\\[</span>S<span class=\"es0\">\\]</span>cissors: \"</span><br/>\t<span class=\"kw2\">flush</span> stdout<br/>\t<span class=\"kw2\">gets</span> stdin line<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">eof</span> stdin<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Bye!\"</span><br/>\t    <span class=\"kw1\">exit</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">set</span> len <span class=\"br0\">[</span><span class=\"kw2\">string</span> length <span class=\"re0\">$line</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">foreach</span> play <span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span> name <span class=\"br0\">{</span><span class=\"st0\">\"rock\"</span> <span class=\"st0\">\"paper\"</span> <span class=\"st0\">\"scissors\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"co1\"># Do a prefix comparison</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$len</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">[</span><span class=\"kw2\">string</span> equal -nocase -length <span class=\"re0\">$len</span> <span class=\"re0\">$line</span> <span class=\"re0\">$name</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"re0\">$play</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"st0\">\"Sorry, I don't understand that. Try again please.\"</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># How to ask for a move from the machine player</span><br/><span class=\"kw1\">proc</span> getMachineMove <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> states<br/>    <span class=\"kw1\">set</span> choice <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">[</span>::<span class=\"me1\">tcl</span>::<span class=\"me1\">mathop</span>::+ <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$states</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">foreach</span> play <span class=\"br0\">{</span><span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> count <span class=\"re0\">$states</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">incr</span> sum <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$count</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$choice</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"I play <span class=\"es0\">\\\"</span>[lindex {Rock Paper Scissors} $play]<span class=\"es0\">\\\"</span>\"</span><br/>\t    <span class=\"kw1\">return</span> <span class=\"re0\">$play</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Initialize some state variables</span><br/><span class=\"kw1\">set</span> states <span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/><span class=\"kw1\">set</span> humanWins <span class=\"nu0\">0</span><br/><span class=\"kw1\">set</span> machineWins <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co1\"># The main game loop</span><br/><span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\"># Get the moves for this round</span><br/>    <span class=\"kw1\">set</span> machineMove <span class=\"br0\">[</span>getMachineMove<span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> humanMove <span class=\"br0\">[</span>getHumanMove<span class=\"br0\">]</span><br/>    <span class=\"co1\"># Report on what happened</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$humanMove</span> == <span class=\"re0\">$machineMove</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"st0\">\"A draw!\"</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$humanMove</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>3 == <span class=\"re0\">$machineMove</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"st0\">\"I win!\"</span><br/>\t<span class=\"kw2\">incr</span> machineWins<br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"st0\">\"You win!\"</span><br/>\t<span class=\"kw2\">incr</span> humanWins<br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"Cumulative scores: $humanWins to you, $machineWins to me\"</span><br/>    <span class=\"co1\"># Update the state of how the human has played in the past</span><br/>    <span class=\"kw2\">lset</span> states <span class=\"re0\">$humanMove</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$states</span> <span class=\"re0\">$humanMove</span><span class=\"br0\">]</span> + <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "TorqueScript", "loc": 142, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>while(isobject(RockPaperScissors))<br/>\tRockPaperScissors.delete();<br/>\u00a0<br/>new scriptObject(RockPaperScissors);<br/>\u00a0<br/>function RockPaperScissors::startGame(%this)<br/>{<br/>\t%this.idle = true;<br/>\techo(\"Starting rock paper scissors, please type choose(\\\"choice\\\"); to proceed!\");<br/>}<br/>\u00a0<br/>function RockPaperScissors::endGame(%this)<br/>{<br/>\t%this.idle = true;<br/>}<br/>\u00a0<br/>function RockPaperScissors::main(%this)<br/>{<br/>\t%this.idle = 0;<br/>\u00a0<br/>\tif(getRandom(1,2) == 1)<br/>\t{<br/>\t\t%result =\u00a0%this.getChoiceByUserFrequency();<br/>\t}<br/>\telse<br/>\t{<br/>\t\t%c[0] = \"rock\";<br/>\t\t%c[1] = \"paper\";<br/>\t\t%c[2] = \"scissors\";<br/>\u00a0<br/>\t\t%result =\u00a0%c[getRandom(0,2)]; <br/>\t}<br/>\u00a0<br/>\t%userChoice =\u00a0%this.current;<br/>\u00a0<br/>\t%winner = thisVSthat(%userChoice,%result);<br/>\u00a0<br/>\tif(%winner == 0)<br/>\t{<br/>\t\techo(\"You both chose \"@%<a class=\"__cf_email__\" data-cfemail=\"106563756253787f79737550\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\", tie!\");<br/>\t}<br/>\telse<br/>\tif(%winner == 1)<br/>\t{<br/>\t\techo(\"You chose \"@%<a class=\"__cf_email__\" data-cfemail=\"d6a3a5b3a495beb9bfb5b396\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\" computer chose \"@%<a class=\"__cf_email__\" data-cfemail=\"f1839482849d85b1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\", you win!\");<br/>\t}<br/>\telse<br/>\tif(%winner == 2)<br/>\t{<br/>\t\techo(\"You chose \"@%<a class=\"__cf_email__\" data-cfemail=\"2d585e485f6e4542444e486d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\" computer chose \"@%<a class=\"__cf_email__\" data-cfemail=\"d0a2b5a3a5bca490\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\", you lose!\");<br/>\t}<br/>\u00a0<br/>\t%this.idle = true;<br/>}<br/>\u00a0<br/>function RockPaperScissors::getChoiceByUserFrequency(%this)<br/>{<br/>\t%weakness[\"rock\"] = \"paper\";<br/>\t%weakness[\"paper\"] = \"Scissors\";<br/>\t%weakness[\"scissors\"] = \"rock\";<br/>\u00a0<br/>\t%a[0] =\u00a0%this.choice[\"rock\"];<br/>\t%a[1] =\u00a0%this.choice[\"paper\"];<br/>\t%a[2] =\u00a0%this.choice[\"Scissors\"];<br/>\u00a0<br/>\t%b[0] = \"rock\";<br/>\t%b[1] = \"paper\";<br/>\t%b[2] = \"scissors\";<br/>\u00a0<br/>\tfor(%i=0;%i&lt;3;%i++)<br/>\t{<br/>\t\t%curr =\u00a0%a[%i];<br/>\u00a0<br/>\t\tif(%temp $= \"\")<br/>\t\t{<br/>\t\t\t%temp =\u00a0%curr;<br/>\t\t\t%tempi =\u00a0%i;<br/>\t\t}<br/>\t\telse<br/>\t\tif(%curr &gt;\u00a0%temp)<br/>\t\t{<br/>\t\t\t%temp =\u00a0%curr;<br/>\t\t\t%tempi =\u00a0%i;<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\treturn\u00a0%weakness[%b[%tempi]];<br/>}<br/>\u00a0<br/>function choose(%this)<br/>{<br/>\t%rps = rockPaperScissors;<br/>\u00a0<br/>\tif(!%rps.idle)<br/>\t{<br/>\t\treturn 0;<br/>\t}<br/>\telse<br/>\tif(%this\u00a0!$= \"rock\" &amp;&amp;\u00a0%this\u00a0!$= \"paper\" &amp;&amp;\u00a0%this\u00a0!$= \"scissors\")<br/>\t{<br/>\t\treturn 0;<br/>\t}<br/>\u00a0<br/>\t%rps.choice[%this]++;<br/>\t%rps.current =\u00a0%this;<br/>\t%rps.main();<br/>\u00a0<br/>\treturn\u00a0%this;<br/>}<br/>\u00a0<br/>function thisVSthat(%this,%that)<br/>{<br/>\tif(%this\u00a0!$= \"rock\" &amp;&amp;\u00a0%this\u00a0!$= \"paper\" &amp;&amp;\u00a0%this\u00a0!$= \"scissors\")<br/>\t{<br/>\t\treturn 0;<br/>\t}<br/>\telse<br/>\tif(%that\u00a0!$= \"rock\" &amp;&amp;\u00a0%that\u00a0!$= \"paper\" &amp;&amp;\u00a0%that\u00a0!$= \"scissors\")<br/>\t{<br/>\t\treturn 0;<br/>\t}<br/>\u00a0<br/>\t%weakness[\"rock\"] = \"paper\";<br/>\t%weakness[\"paper\"] = \"Scissors\";<br/>\t%weakness[\"scissors\"] = \"rock\";<br/>\u00a0<br/>\tif(%weakness[%this] $=\u00a0%that)<br/>\t{<br/>\t\t%result = 2;<br/>\t}<br/>\telse<br/>\tif(%weakness[%that] $=\u00a0%this)<br/>\t{<br/>\t\t%result = 1;<br/>\t}<br/>\telse<br/>\t\t%result = 0;<br/>\u00a0<br/>\treturn\u00a0%result;<br/>}<br/>\u00a0</pre>"}, {"lang": "TI-83 BASIC", "loc": 65, "block": "<pre class=\"text highlighted_source\">PROGRAM:RPS<br/>:{0,0,0}\u2192L1<br/>:{0,0,0}\u2192L2<br/>:Lbl ST<br/>:Disp \"R/P/S\"<br/>:Disp \"1/2/3\"<br/>:Lbl EC<br/>:Input A<br/>:If A&gt;3 or A&lt;1<br/>:Then<br/>:Goto NO<br/>:End<br/>:randInt(1,3+L1(1)+L1(2)+L1(3)\u2192C<br/>:If C\u22641+L1(1)<br/>:Then<br/>:2\u2192B<br/>:Goto NS<br/>:End<br/>:If C&gt;2+L1(2)<br/>:Then<br/>:1\u2192B<br/>:Else<br/>:3\u2192B<br/>:End<br/>:Lbl NS<br/>:L1(A)+1\u2192L1(A)<br/>:If A=B<br/>:Then<br/>:Disp \"TIE GAME\"<br/>:L2(3)+1\u2192L2(3)<br/>:Goto TG<br/>:End<br/>:If (A=1 and B=2) or (A=2 and B=3) or (A=3 and B=1)<br/>:Then<br/>:Disp \"I WIN\"<br/>:L2(1)+1\u2192L2(1)<br/>:Else<br/>:Disp \"YOU WIN\"<br/>:L2(2)+1\u2192L2(2)<br/>:End<br/>:Lbl TG<br/>:Disp \"PLAY AGAIN?\"<br/>:Input Str1<br/>:If Str1=\"YES\"<br/>:Then<br/>:ClrHome<br/>:Goto ST<br/>:Else<br/>:Goto EN<br/>:End<br/>:Lbl NO<br/>:ClrHome<br/>:Pause \"PICK 1,2, or 3\"<br/>:ClrHome<br/>:Goto EC<br/>:Lbl EN<br/>:ClrHome<br/>:Disp \"I WON:\"<br/>:Disp L2(1)<br/>:Disp \"YOU WON:\"<br/>:Disp L2(2)<br/>:Disp \"WE TIED:\"<br/>:Disp L2(3)<br/>:Disp \"BYE\"<br/>\u00a0</pre>"}, {"lang": "uBasic/4tH", "loc": 16, "block": "<pre class=\"text highlighted_source\"> 20 LET P=0: LET Q=0: LET Z=0<br/> 30 INPUT \"Rock, paper, or scissors (1 = rock, 2 = paper, 3 = scissors)? \", A<br/> 40 IF A&gt;3 THEN GOTO 400<br/> 50 IF A=3 THEN LET A=4<br/> 60 IF A&lt;1 THEN GOTO 400<br/> 70 C=RND(3)\u00a0: LET D=4: FOR B=1 TO C+1\u00a0: LET D = D+D\u00a0: NEXT\u00a0: GOTO (A+D)*10<br/> 90 Z=Z+1\u00a0: PRINT \"We both chose 'rock'. It's a draw.\"\u00a0: GOTO 30<br/>100 P=P+1\u00a0: PRINT \"You chose 'paper', I chose 'rock'. You win..\"\u00a0: GOTO 30<br/>120 Q=Q+1\u00a0: PRINT \"You chose 'scissors', I chose 'rock'. I win!\"\u00a0: GOTO 30<br/>170 Q=Q+1\u00a0: PRINT \"You chose 'rock', I chose 'paper'. I win!\"\u00a0: GOTO 30<br/>180 Z=Z+1\u00a0: PRINT \"We both chose 'paper'. It's a draw.\"\u00a0: GOTO 30<br/>200 P=P+1\u00a0: PRINT \"You chose 'scissors', I chose 'paper'. You win..\"\u00a0: GOTO 30<br/>330 P=P+1\u00a0: PRINT \"You chose 'rock', I chose 'scissors'. You win..\"\u00a0: GOTO 30<br/>340 Q=Q+1\u00a0: PRINT \"You chose 'paper', I chose 'scissors'. I win!\"\u00a0: GOTO 30<br/>360 Z=Z+1\u00a0: PRINT \"We both chose 'scissors'. It's a draw.\"\u00a0: GOTO 30<br/>400 PRINT \"There were \";Z;\" draws. I lost \";P;\" times, you lost \";Q;\" times.\"\u00a0: END</pre>"}, {"lang": "UNIX Shell", "loc": 63, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/bin/bash</span><br/><span class=\"re2\">choices</span>=<span class=\"br0\">(</span>rock paper scissors<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co0\"># comparison function, works like Perl </span><br/><span class=\"co0\"># winner x y =  2 if y beats x, 1 if x beats 1, 0 if it's a tie</span><br/>winner<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">left</span>=<span class=\"st0\">\"$1\"</span> <span class=\"re2\">right</span>=<span class=\"st0\">\"$2\"</span><br/>  <span class=\"kw3\">echo</span> $<span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> + left - right<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"re2\">human_counts</span>=<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"re2\">human_count</span>=<span class=\"nu0\">3</span><br/><span class=\"re2\">computer_counts</span>=<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"re2\">games</span>=<span class=\"nu0\">0</span> <span class=\"re2\">human</span>=<span class=\"nu0\">0</span> <span class=\"re2\">computer</span>=<span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"re2\">PS3</span>=<span class=\"st0\">\"What do you throw? \"</span><br/><span class=\"kw1\">while</span> <span class=\"kw2\">true</span>; <span class=\"kw1\">do</span> <br/>  <span class=\"kw1\">select</span> choice <span class=\"kw1\">in</span> rock paper scissors quit; <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">[</span> <span class=\"re5\">-z</span> <span class=\"st0\">\"<span class=\"es2\">$choice</span>\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">then</span> <span class=\"re2\">choice</span>=<span class=\"st0\">\"<span class=\"es2\">$REPLY</span>\"</span>; <span class=\"kw1\">fi</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$choice</span>\"</span> = <span class=\"st0\">\"quit\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">break</span> <span class=\"nu0\">2</span><br/>    <span class=\"kw1\">fi</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"re2\">h</span>=<span class=\"nu0\">0</span>; h<span class=\"sy0\">&lt;</span><span class=\"co1\">${#choices[@]}</span>; ++h <span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es3\">${choices[h]}</span>\"</span> = <span class=\"st0\">\"<span class=\"es2\">$choice</span>\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">then</span><br/>        <span class=\"kw3\">break</span><br/>      <span class=\"kw1\">fi</span><br/>    <span class=\"kw1\">done</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> h <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">break</span><br/>    <span class=\"kw1\">fi</span><br/>    <span class=\"kw3\">echo</span> <span class=\"st0\">\"Unrecognized choice.  Try again!\"</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw3\">let</span> <span class=\"re2\">n</span>=RANDOM<span class=\"sy0\">%</span>human_count<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"re2\">c</span>=<span class=\"nu0\">0</span>; c<span class=\"sy0\">&lt;</span><span class=\"co1\">${#human_counts[@]}</span>; ++c <span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">let</span> n-=<span class=\"co1\">${human_counts[c]}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">then</span><br/>       <span class=\"kw3\">break</span><br/>    <span class=\"kw1\">fi</span><br/>  <span class=\"kw1\">done</span><br/>  <span class=\"kw3\">let</span> computer_counts<span class=\"br0\">[</span>c<span class=\"br0\">]</span>+=<span class=\"nu0\">1</span><br/>  <span class=\"kw3\">echo</span> <br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"You chose <span class=\"es3\">${choices[h]^^}</span>\"</span><br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"I chose <span class=\"es3\">${choices[c]^^}</span>\"</span><br/>  <span class=\"re2\">w</span>=<span class=\"st0\">\"<span class=\"es4\">$(winner \"$c\" \"$h\")</span>\"</span><br/>  <span class=\"kw1\">case</span> <span class=\"st0\">\"<span class=\"es2\">$w</span>\"</span> <span class=\"kw1\">in</span><br/>     <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"YOU WIN!\"</span>; <span class=\"kw3\">let</span> human+=<span class=\"nu0\">1</span><span class=\"sy0\">;;</span><br/>     <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"TIE!\"</span><span class=\"sy0\">;;</span><br/>     <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"I WIN!\"</span>; <span class=\"kw3\">let</span> computer+=<span class=\"nu0\">1</span><span class=\"sy0\">;;</span><br/>     <span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"winner returned weird result '<span class=\"es2\">$w</span>'\"</span><span class=\"sy0\">;;</span><br/>  <span class=\"kw1\">esac</span><br/>  <span class=\"kw3\">echo</span><br/>  <span class=\"kw3\">let</span> games+=<span class=\"nu0\">1</span><br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span> human_counts<span class=\"br0\">[</span><span class=\"br0\">(</span>h+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>3<span class=\"br0\">]</span>+=<span class=\"nu0\">1</span>, human_count+=<span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">done</span><br/>\u00a0<br/><span class=\"kw3\">echo</span> <br/><span class=\"kw3\">echo</span> <span class=\"st0\">\"We played <span class=\"es2\">$games</span> games.  You won <span class=\"es2\">$human</span>, and I won <span class=\"es2\">$computer</span>.\"</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"re2\">i</span>=<span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span class=\"nu0\">3</span>; ++i <span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">do</span><br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"You picked <span class=\"es3\">${choices[i]}</span> <span class=\"es4\">$(( human_counts[ (i+1)</span>%3 ] - 1 )) times.\"</span><br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"I picked <span class=\"es3\">${choices[i]}</span> <span class=\"es4\">$(( computer_counts[i] )</span>) times.\"</span><br/><span class=\"kw1\">done</span></pre>"}, {"lang": "Yabasic", "loc": 78, "block": "<pre class=\"text highlighted_source\">REM Yabasic 2.763 version<br/>\u00a0<br/>WINNER = 1\u00a0: ACTION = 2\u00a0: LOSSER = 3<br/>dim word$(10, 3)<br/>\u00a0<br/>for n = 0 to 9<br/>    read word$(n, WINNER), word$(n, ACTION), word$(n, LOSSER)<br/>next n<br/>\u00a0<br/>repeat<br/>    clear screen<br/>    computerChoice$ = word$(ran(10), WINNER)<br/>    print \"'Rock, Paper, Scissors, Lizard, Spock!' rules are:\\n\"<br/>    for n = 0 to 9<br/>        SimonSay(n)<br/>    next n<br/>    print \"\\nType your choice letter:\"<br/>    print \"(R)ock, (P)aper, (S)cissors, (L)izard, Spoc(K), (Q)uit\\n\"<br/>    k$ = upper$(inkey$)<br/>    if k$ = \"Q\" break<br/>    switch k$<br/>        case \"R\": humanChoice$ = \"Rock\"\u00a0: break<br/>        case \"P\": humanChoice$ = \"Paper\"\u00a0: break<br/>        case \"S\": humanChoice$ = \"Scissors\"\u00a0: break<br/>        case \"L\": humanChoice$ = \"Lizard\"\u00a0: break<br/>        case \"K\": humanChoice$ = \"Spock\"\u00a0: break    <br/>    end switch<br/>    print \"Player chose \", humanChoice$, \" and Computer chose \", computerChoice$<br/>    for n = 0 to 9<br/>        if word$(n, WINNER) = humanChoice$ and word$(n, LOSSER) = computerChoice$ then<br/>            SimonSay(n)<br/>            print \"Winner was Player\"<br/>            wp = wp + 1<br/>            break<br/>        elseif word$(n, WINNER) = computerChoice$ and word$(n, LOSSER) = humanChoice$ then<br/>            SimonSay(n)<br/>            print \"Winner was Computer\"<br/>            wc = wc + 1<br/>            break<br/>        end if    <br/>    next n<br/>    if n = 10 then<br/>        print \"Ouch!\"<br/>    end if<br/>    punctuation()<br/>    print \"\\nPress any key to continue\"<br/>    inkey$<br/>until(k$ = \"Q\")<br/>\u00a0<br/>punctuation()<br/>if wp &gt; wc then<br/>    print \"Player win\"<br/>elseif wc &gt; wp then<br/>    print \"Computer win\"<br/>else<br/>    print \"Tie\"<br/>end if<br/>\u00a0<br/>end<br/>\u00a0<br/>sub SimonSay(n)<br/>    print word$(n, WINNER), \" \", word$(n, ACTION), \" \", word$(n, LOSSER)<br/>end sub<br/>\u00a0<br/>sub punctuation()<br/>    print \"\\nPlayer = \", wp, \"\\tComputer = \", wc, \"\\n\"<br/>end sub<br/>\u00a0<br/>data \"Scissors\",\"cuts\",\"Paper\"<br/>data \"Paper\",\"covers\",\"Rock\"<br/>data \"Rock\",\"crushes\",\"Lizard\"<br/>data \"Lizard\",\"poisons\",\"Spock\"<br/>data \"Spock\",\"smashes\",\"Scissors\"<br/>data \"Scissors\",\"decapites\",\"Lizard\"<br/>data \"Lizard\",\"eats\",\"Paper\"<br/>data \"Paper\",\"disproves\",\"Spock\"<br/>data \"Spock\",\"vaporizes\",\"Rock\"<br/>data \"Rock\",\"blunts\",\"Scissors\"</pre>"}]}