{"task": "Farey_sequence", "blocks": [{"lang": "AWK", "loc": 29, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f FAREY_SEQUENCE.AWK</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>; i<span class=\"sy2\">&lt;=</span><span class=\"nu0\">11</span>; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      farey<span class=\"br0\">(</span>i<span class=\"br0\">)</span>; <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i=<span class=\"nu0\">100</span>; i<span class=\"sy2\">&lt;=</span><span class=\"nu0\">1000</span>; i<span class=\"sy3\">+</span>=<span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%d items<span class=\"es0\">\\n</span>\"</span>,farey<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> farey<span class=\"br0\">(</span>n,  a,aa,b,bb,c,cc,d,dd,items,k<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    a = <span class=\"nu0\">0</span>; b = <span class=\"nu0\">1</span>; c = <span class=\"nu0\">1</span>; d = n<br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d:\"</span>,n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy2\">&lt;=</span> <span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%d/%d\"</span>,a,b<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>c <span class=\"sy2\">&lt;=</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      k = <span class=\"kw4\">int</span><span class=\"br0\">(</span><span class=\"br0\">(</span>n<span class=\"sy3\">+</span>b<span class=\"br0\">)</span><span class=\"sy3\">/</span>d<span class=\"br0\">)</span><br/>      aa = c; bb = d; cc = k<span class=\"sy3\">*</span>c<span class=\"sy3\">-</span>a; dd = k<span class=\"sy3\">*</span>d<span class=\"sy3\">-</span>b<br/>      a = aa; b = bb; c = cc; d = dd<br/>      items<span class=\"sy3\">++</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy2\">&lt;=</span> <span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%d/%d\"</span>,a,b<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw6\">return</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">+</span>items<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "APL", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>farey\u2190{{\u2375[\u234b\u2375]}\u222a\u220a{(0,\u2373\u2375)\u00f7\u2375}\u00a8\u2373\u2375}<br/>fract\u2190{1\u2227(0(\u2375=0)+\u2282\u2375)*1 \u00af1}<br/>print\u2190{{(\u2355\u237a),'/',(\u2355\u2375),' '}\u233f\u2191fract farey \u2375}<br/>\u00a0</pre>"}, {"lang": "C", "loc": 61, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> farey<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> <span class=\"kw4\">int</span> d<span class=\"sy0\">,</span> n<span class=\"sy0\">;</span> <span class=\"br0\">}</span> frac<span class=\"sy0\">;</span><br/>\tfrac f1 <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> f2 <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> n<span class=\"br0\">}</span><span class=\"sy0\">,</span> t<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> k<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d/%d\u00a0%d/%d\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span>f2.<span class=\"me1\">n</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tk <span class=\"sy0\">=</span> <span class=\"br0\">(</span>n <span class=\"sy0\">+</span> f1.<span class=\"me1\">n</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> f2.<span class=\"me1\">n</span><span class=\"sy0\">;</span><br/>\t\tt <span class=\"sy0\">=</span> f1<span class=\"sy0\">,</span> f1 <span class=\"sy0\">=</span> f2<span class=\"sy0\">,</span> f2 <span class=\"sy0\">=</span> <span class=\"br0\">(</span>frac<span class=\"br0\">)</span> <span class=\"br0\">{</span> f2.<span class=\"me1\">d</span> <span class=\"sy0\">*</span> k <span class=\"sy0\">-</span> t.<span class=\"me1\">d</span><span class=\"sy0\">,</span> f2.<span class=\"me1\">n</span> <span class=\"sy0\">*</span> k <span class=\"sy0\">-</span> t.<span class=\"me1\">n</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%d/%d\"</span><span class=\"sy0\">,</span> f2.<span class=\"me1\">d</span><span class=\"sy0\">,</span> f2.<span class=\"me1\">n</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span> <span class=\"kw4\">long</span> ull<span class=\"sy0\">;</span><br/>ull <span class=\"sy0\">*</span>cache<span class=\"sy0\">;</span><br/><span class=\"kw4\">size_t</span> ccap<span class=\"sy0\">;</span><br/>\u00a0<br/>ull farey_len<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;=</span> ccap<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw4\">size_t</span> old <span class=\"sy0\">=</span> ccap<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>ccap<span class=\"br0\">)</span> ccap <span class=\"sy0\">=</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span>ccap <span class=\"sy0\">&lt;=</span> n<span class=\"br0\">)</span> ccap <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\tcache <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/realloc.html\"><span class=\"kw3\">realloc</span></a><span class=\"br0\">(</span>cache<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>ull<span class=\"br0\">)</span> <span class=\"sy0\">*</span> ccap<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/memset.html\"><span class=\"kw3\">memset</span></a><span class=\"br0\">(</span>cache <span class=\"sy0\">+</span> old<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>ull<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>ccap <span class=\"sy0\">-</span> old<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>cache<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">return</span> cache<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tull len <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ull<span class=\"br0\">)</span>n<span class=\"sy0\">*</span><span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> p<span class=\"sy0\">,</span> q <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>p <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> p <span class=\"sy0\">&lt;=</span> n<span class=\"sy0\">;</span> p <span class=\"sy0\">=</span> q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tq <span class=\"sy0\">=</span> n<span class=\"sy0\">/</span><span class=\"br0\">(</span>n<span class=\"sy0\">/</span>p<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\tlen <span class=\"sy0\">-=</span> farey_len<span class=\"br0\">(</span>n<span class=\"sy0\">/</span>p<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>q <span class=\"sy0\">-</span> p<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\tcache<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">=</span> len<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> len<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> n<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>n <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> n <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span> n<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d: \"</span><span class=\"sy0\">,</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tfarey<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>n <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> n <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span> n <span class=\"sy0\">+=</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d:\u00a0%llu items<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> farey_len<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tn <span class=\"sy0\">=</span> <span class=\"nu0\">10000000</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>%d:\u00a0%llu items<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> farey_len<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 26, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">class</span> FareySequence<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>$<span class=\"st0\">\"F{i}: \"</span> <span class=\"sy0\">+</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"kw1\">Join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span>, Generate<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw1\">Select</span><span class=\"br0\">(</span>f <span class=\"sy0\">=&gt;</span> $<span class=\"st0\">\"{f.num}/{f.den}\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span> i<span class=\"sy0\">+=</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>$<span class=\"st0\">\"F{i} has {Generate(i).Count()} terms.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> IEnumerable<span class=\"sy0\">&lt;</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> num, <span class=\"kw4\">int</span> den<span class=\"br0\">)</span><span class=\"sy0\">&gt;</span> Generate<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> comparer <span class=\"sy0\">=</span> Comparer<span class=\"sy0\">&lt;</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> n, <span class=\"kw4\">int</span> d<span class=\"br0\">)</span><span class=\"sy0\">&gt;.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"br0\">(</span>a, b<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">n</span> <span class=\"sy0\">*</span> b<span class=\"sy0\">.</span><span class=\"me1\">d</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">d</span> <span class=\"sy0\">*</span> b<span class=\"sy0\">.</span><span class=\"me1\">n</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> seq <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> SortedSet<span class=\"sy0\">&lt;</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> n, <span class=\"kw4\">int</span> d<span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>comparer<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> d <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> d <span class=\"sy0\">&lt;=</span> i<span class=\"sy0\">;</span> d<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> n <span class=\"sy0\">&lt;=</span> d<span class=\"sy0\">;</span> n<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                seq<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><span class=\"br0\">(</span>n, d<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> seq<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Common Lisp", "loc": 17, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> farey <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>labels <span class=\"br0\">(</span><span class=\"br0\">(</span>helper <span class=\"br0\">(</span>begin end<span class=\"br0\">)</span><br/>\t     <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>med <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>numerator begin<span class=\"br0\">)</span> <span class=\"br0\">(</span>numerator end<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t   <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>denominator begin<span class=\"br0\">)</span> <span class=\"br0\">(</span>denominator end<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t       <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span>denominator med<span class=\"br0\">)</span> n<span class=\"br0\">)</span><br/>\t\t   <span class=\"br0\">(</span><span class=\"kw1\">append</span> <span class=\"br0\">(</span>helper begin med<span class=\"br0\">)</span><br/>\t\t\t   <span class=\"br0\">(</span><span class=\"kw1\">list</span> med<span class=\"br0\">)</span><br/>\t\t\t   <span class=\"br0\">(</span>helper med end<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">append</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>helper <span class=\"nu0\">0</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"br0\">(</span>loop for i from <span class=\"nu0\">1</span> to <span class=\"nu0\">11</span> <span class=\"kw1\">do</span><br/>     <span class=\"br0\">(</span>format t <span class=\"st0\">\"~a: ~{~a ~}~%\"</span> i <span class=\"br0\">(</span>farey i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>loop for i from <span class=\"nu0\">100</span> to <span class=\"nu0\">1001</span> by <span class=\"nu0\">100</span> <span class=\"kw1\">do</span><br/>     <span class=\"br0\">(</span>format t <span class=\"st0\">\"Farey sequence of order ~a has ~a terms.~%\"</span> i <span class=\"br0\">(</span><span class=\"kw1\">length</span> <span class=\"br0\">(</span>farey i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 15, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> arithmetic_rational<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">auto</span> farey<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> rational<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">only</span>.<span class=\"me1\">chain</span><span class=\"br0\">(</span><br/>            iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            .<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>k <span class=\"sy0\">=&gt;</span> iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> k <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>m <span class=\"sy0\">=&gt;</span> rational<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            .<span class=\"me1\">join</span>.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">uniq</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"Farey sequence for order 1 through 11:<span class=\"es1\">\\n</span>%(%s<span class=\"es1\">\\n</span>%)\"</span><span class=\"sy0\">,</span><br/>             iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span>farey<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Farey sequence fractions, 100 to 1000 by hundreds:<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>            iota<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>_001<span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">=&gt;</span> i.<span class=\"me1\">farey</span>.<span class=\"me1\">walkLength</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 22, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> distinct<span class=\"sy0\">-</span>divisors <br/>\t<span class=\"br0\">(</span>compose make<span class=\"sy0\">-</span>set prime<span class=\"sy0\">-</span>factors<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; euler totient\u00a0:  \u03a6\u00a0:  n / product(p_i) * product (p_i - 1)</span><br/><span class=\"co1\">;; # of divisors &lt;= n</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>\u03a6 n<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>pdiv <span class=\"br0\">(</span>distinct<span class=\"sy0\">-</span>divisors n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> n  <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>product <span class=\"br0\">(</span><span class=\"br0\">(</span>p pdiv<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span> p<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>product <span class=\"br0\">(</span><span class=\"br0\">(</span>p pdiv<span class=\"br0\">)</span><span class=\"br0\">)</span> p<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; farey-sequence length |Fn|  = 1 + sigma (m=1..) \u03a6(m)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span> F<span class=\"sy0\">-</span><span class=\"kw1\">length</span> n<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>sum <span class=\"br0\">(</span><span class=\"br0\">(</span>m <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">+</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>\u03a6 m<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; farey sequence</span><br/><span class=\"co1\">;; apply the definition\u00a0:  O(n^2)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>Farey N<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> N <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">+</span> N<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>make<span class=\"sy0\">-</span>set <span class=\"br0\">(</span>for<span class=\"sy0\">*/</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>n N<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">d</span> <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range n N<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">rational</span> n <span class=\"kw1\">d</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 31, "block": "<pre class=\"text highlighted_source\">USING: formatting io kernel math math.primes.factors math.ranges<br/>locals prettyprint sequences sequences.extras sets tools.time\u00a0;<br/>IN: rosetta-code.farey-sequence<br/>\u00a0<br/>! Given the order n and a farey pair, calculate the next member<br/>! of the sequence.<br/>:: p/q ( n a/b c/d -- p/q )<br/>    a/b c/d [ &gt;fraction ] <a class=\"__cf_email__\" data-cfemail=\"0d6f644d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0:&gt; ( a b c d )<br/>    n b + d / &gt;integer [ c * a - ] [ d * b - ] bi /\u00a0;<br/>\u00a0<br/>: print-farey ( order -- )<br/>    [ \"F(%-2d): \" printf ] [ 0 1 pick / ] bi \"0/1 \" write<br/>    [ dup 1 = ] [ dup pprint bl 3dup p/q [ nip ] dip ] until<br/>    3drop \"1/1\" print\u00a0;<br/>\u00a0<br/>: \u03c6 ( n -- m )\u00a0! Euler's totient function<br/>    [ factors members [ 1 swap recip - ] map-product ] [ * ] bi\u00a0;<br/>\u00a0<br/>: farey-length ( order -- length )<br/>   dup 1 = [ drop 2 ]<br/>   [ [ 1 - farey-length ] [ \u03c6 ] bi + ] if\u00a0;<br/>\u00a0<br/>: part1 ( -- ) 11 [1,b] [ print-farey ] each nl\u00a0;<br/>\u00a0<br/>: part2 ( -- )<br/>    100 1,000 100 &lt;range&gt;<br/>    [ dup farey-length \"F(%-4d):\u00a0%-6d members.\\n\" printf ] each\u00a0;<br/>\u00a0<br/>: main ( -- ) [ part1 part2 nl ] time\u00a0;<br/>\u00a0<br/>MAIN: main</pre>"}, {"lang": "FreeBASIC", "loc": 54, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 05-04-2017</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/>\u00a0<br/><span class=\"co1\">' TRUE/FALSE are built-in constants since FreeBASIC 1.04</span><br/><span class=\"co1\">' But we have to define them for older versions.</span><br/><span class=\"co2\">#Ifndef TRUE</span><br/>    <span class=\"co2\">#Define FALSE 0</span><br/>    <span class=\"co2\">#Define TRUE Not FALSE</span><br/><span class=\"co2\">#EndIf</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> farey<span class=\"br0\">(</span>n <span class=\"kw1\">As</span> ULong, descending <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> ULong<br/>\u00a0<br/>    <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span> a, b = <span class=\"nu0\">1</span>, c = <span class=\"nu0\">1</span>, d = n, k<br/>    <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span> aa, bb, cc, dd, count<br/>\u00a0<br/>    <span class=\"kw1\">If</span> descending = <span class=\"kw1\">TRUE</span> <span class=\"kw1\">Then</span><br/>        a = <span class=\"nu0\">1</span>\u00a0: c = n -<span class=\"nu0\">1</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/>    count += <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">If</span> n &lt; <span class=\"nu0\">12</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span>; <span class=\"st0\">\"/\"</span>; <span class=\"kw1\">Str</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span>; <span class=\"st0\">\" \"</span>;<br/>\u00a0<br/>    <span class=\"kw1\">While</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c &lt;= n<span class=\"br0\">)</span> And <span class=\"kw1\">Not</span> descending<span class=\"br0\">)</span> <span class=\"kw1\">Or</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>a &gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span> And descending<span class=\"br0\">)</span><br/>        aa = a\u00a0: bb = b\u00a0: cc = c\u00a0: dd = d<br/>        k = <span class=\"br0\">(</span>n + b<span class=\"br0\">)</span> \\ d<br/>        a = cc\u00a0: b = dd\u00a0: c = k * cc - aa\u00a0: d = k * dd - bb<br/>        count += <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">If</span> n &lt; <span class=\"nu0\">12</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span>; <span class=\"st0\">\"/\"</span>; <span class=\"kw1\">Str</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span>; <span class=\"st0\">\" \"</span>;<br/>    <span class=\"kw1\">Wend</span><br/>\u00a0<br/>    <span class=\"kw1\">If</span> n &lt; <span class=\"nu0\">12</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span><br/>\u00a0<br/>    <span class=\"kw1\">Return</span> count<br/>\u00a0<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"co1\">' ------=&lt; MAIN &gt;=------</span><br/>\u00a0<br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span> = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">11</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"F\"</span>; <span class=\"kw1\">Str</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>; <span class=\"st0\">\" = \"</span>;<br/>    farey<span class=\"br0\">(</span>i, <span class=\"kw1\">FALSE</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span>= <span class=\"nu0\">100</span> <span class=\"kw1\">To</span> <span class=\"nu0\">1000</span> <span class=\"kw1\">Step</span> <span class=\"nu0\">100</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"F\"</span>;<span class=\"kw1\">Str</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">Print</span> <span class=\"kw1\">iif</span><span class=\"br0\">(</span>i &lt;&gt; <span class=\"nu0\">1000</span>, <span class=\"st0\">\" \"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span>; <span class=\"st0\">\" = \"</span>;<br/>    <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"######\"</span>; farey<span class=\"br0\">(</span>i, <span class=\"kw1\">FALSE</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">Inkey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"hit any key to end program\"</span><br/><span class=\"kw1\">Sleep</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "FunL", "loc": 15, "block": "<pre class=\"text highlighted_source\">def farey( n ) =<br/>  res = seq()<br/>  a, b, c, d = 0, 1, 1, n<br/>  res += \"$a/$b\"<br/>\u00a0<br/>  while c &lt;= n<br/>    k = (n + b)\\d<br/>    a, b, c, d = c, d, k*c - a, k*d - b<br/>    res += \"$a/$b\"<br/>\u00a0<br/>for i &lt;- 1..11<br/>  println( \"$i: ${farey(i).mkString(', ')}\" )<br/>\u00a0<br/>for i &lt;- 100..1000 by 100<br/>  println( \"$i: ${farey(i).length()}\" )</pre>"}, {"lang": "Go", "loc": 61, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw1\">type</span> frac <span class=\"kw4\">struct</span><span class=\"sy1\">{</span> num<span class=\"sy1\">,</span> den <span class=\"kw4\">int</span> <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>f frac<span class=\"sy1\">)</span> String<span class=\"sy1\">()</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> fmt<span class=\"sy3\">.</span>Sprintf<span class=\"sy1\">(</span><span class=\"st0\">\"%d/%d\"</span><span class=\"sy1\">,</span> f<span class=\"sy3\">.</span>num<span class=\"sy1\">,</span> f<span class=\"sy3\">.</span>den<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> f<span class=\"sy1\">(</span>l<span class=\"sy1\">,</span> r frac<span class=\"sy1\">,</span> n <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    m <span class=\"sy2\">:=</span> frac<span class=\"sy1\">{</span>l<span class=\"sy3\">.</span>num <span class=\"sy3\">+</span> r<span class=\"sy3\">.</span>num<span class=\"sy1\">,</span> l<span class=\"sy3\">.</span>den <span class=\"sy3\">+</span> r<span class=\"sy3\">.</span>den<span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> m<span class=\"sy3\">.</span>den &lt;<span class=\"sy2\">=</span> n <span class=\"sy1\">{</span><br/>        f<span class=\"sy1\">(</span>l<span class=\"sy1\">,</span> m<span class=\"sy1\">,</span> n<span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span>Print<span class=\"sy1\">(</span>m<span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">)</span><br/>        f<span class=\"sy1\">(</span>m<span class=\"sy1\">,</span> r<span class=\"sy1\">,</span> n<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"co1\">// task 1.  solution by recursive generation of mediants</span><br/>    <span class=\"kw1\">for</span> n <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> n &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">11</span><span class=\"sy1\">;</span> n<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        l <span class=\"sy2\">:=</span> frac<span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">}</span><br/>        r <span class=\"sy2\">:=</span> frac<span class=\"sy1\">{</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">}</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"F(%d):\u00a0%s \"</span><span class=\"sy1\">,</span> n<span class=\"sy1\">,</span> l<span class=\"sy1\">)</span><br/>        f<span class=\"sy1\">(</span>l<span class=\"sy1\">,</span> r<span class=\"sy1\">,</span> n<span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span>r<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// task 2.  direct solution by summing totient function</span><br/>    <span class=\"co1\">// 2.1 generate primes to 1000</span><br/>    <span class=\"kw1\">var</span> composite <span class=\"sy1\">[</span><span class=\"nu0\">1001</span><span class=\"sy1\">]</span><span class=\"kw4\">bool</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> p <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"nu0\">13</span><span class=\"sy1\">,</span> <span class=\"nu0\">17</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">31</span><span class=\"sy1\">}</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> n <span class=\"sy2\">:=</span> p <span class=\"sy3\">*</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span> n &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">1000</span><span class=\"sy1\">;</span> n <span class=\"sy2\">+=</span> p <span class=\"sy1\">{</span><br/>            composite<span class=\"sy1\">[</span>n<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw2\">true</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// 2.2 generate totients to 1000</span><br/>    <span class=\"kw1\">var</span> tot <span class=\"sy1\">[</span><span class=\"nu0\">1001</span><span class=\"sy1\">]</span><span class=\"kw4\">int</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> tot <span class=\"sy1\">{</span><br/>        tot<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> n <span class=\"sy2\">:=</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span> n &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">1000</span><span class=\"sy1\">;</span> n<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>composite<span class=\"sy1\">[</span>n<span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>            tot<span class=\"sy1\">[</span>n<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> n <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">for</span> a <span class=\"sy2\">:=</span> n <span class=\"sy3\">*</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span> a &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">1000</span><span class=\"sy1\">;</span> a <span class=\"sy2\">+=</span> n <span class=\"sy1\">{</span><br/>                f <span class=\"sy2\">:=</span> n <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>                <span class=\"kw1\">for</span> r <span class=\"sy2\">:=</span> a <span class=\"sy3\">/</span> n<span class=\"sy1\">;</span> r<span class=\"sy3\">%</span>n <span class=\"sy3\">==</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> r <span class=\"sy2\">/=</span> n <span class=\"sy1\">{</span><br/>                    f <span class=\"sy2\">*=</span> n<br/>                <span class=\"sy1\">}</span><br/>                tot<span class=\"sy1\">[</span>a<span class=\"sy1\">]</span> <span class=\"sy2\">*=</span> f<br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// 2.3 sum totients</span><br/>    <span class=\"kw1\">for</span> n<span class=\"sy1\">,</span> sum <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> n &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">1000</span><span class=\"sy1\">;</span> n<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        sum <span class=\"sy2\">+=</span> tot<span class=\"sy1\">[</span>n<span class=\"sy1\">]</span><br/>        <span class=\"kw1\">if</span> n<span class=\"sy3\">%</span><span class=\"nu0\">100</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"|F(%d)|:\u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> n<span class=\"sy1\">,</span> sum<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 42, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List <span class=\"br0\">(</span>unfoldr<span class=\"sy0\">,</span> mapAccumR<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Ratio <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> denominator<span class=\"sy0\">,</span> numerator<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Text<span class=\"sy0\">.</span>Printf <span class=\"br0\">(</span>PrintfArg<span class=\"sy0\">,</span> printf<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- The n'th order Farey sequence.</span><br/>farey <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Integer\"><span class=\"kw4\">Integer</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Rational\"><span class=\"kw4\">Rational</span></a><span class=\"br0\">]</span><br/>farey n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\u00a0: unfoldr step <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">where</span><br/>    step <span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">)</span><br/>      <span class=\"sy0\">|</span> c <span class=\"sy0\">&gt;</span> n <span class=\"sy0\">=</span> Nothing<br/>      <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">let</span> k <span class=\"sy0\">=</span> <span class=\"br0\">(</span>n <span class=\"sy0\">+</span> b<span class=\"br0\">)</span> `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:quot\"><span class=\"kw3\">quot</span></a>` d<br/>        <span class=\"kw1\">in</span> Just <span class=\"br0\">(</span>c <span class=\"sy0\">%</span>d<span class=\"sy0\">,</span> <span class=\"br0\">(</span>c<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> k <span class=\"sy0\">*</span> c <span class=\"sy0\">-</span> a<span class=\"sy0\">,</span> k <span class=\"sy0\">*</span> d <span class=\"sy0\">-</span> b<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- A list of pairs, (n, fn n), where fn is a function applied to the n'th order</span><br/><span class=\"co1\">-- Farey sequence.  We assume the list of orders is increasing.  Only the</span><br/><span class=\"co1\">-- highest order Farey sequence is evaluated; the remainder are generated by</span><br/><span class=\"co1\">-- successively pruning this sequence.</span><br/>fareys <span class=\"sy0\">::</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Rational\"><span class=\"kw4\">Rational</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> a<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Integer\"><span class=\"kw4\">Integer</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Integer\"><span class=\"kw4\">Integer</span></a><span class=\"sy0\">,</span> a<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>fareys fn ns <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:snd\"><span class=\"kw3\">snd</span></a> <span class=\"sy0\">$</span> mapAccumR prune <span class=\"br0\">(</span>farey <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:last\"><span class=\"kw3\">last</span></a> ns<span class=\"br0\">)</span> ns<br/>  <span class=\"kw1\">where</span><br/>    prune rs n <span class=\"sy0\">=</span><br/>      <span class=\"kw1\">let</span> rs<span class=\"st0\">''</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> n<span class=\"br0\">)</span> <span class=\"sy0\">.</span> denominator<span class=\"br0\">)</span> rs<br/>      <span class=\"kw1\">in</span> <span class=\"br0\">(</span>rs<span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>n<span class=\"sy0\">,</span> fn rs<span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>fprint<br/>  <span class=\"sy0\">::</span> <span class=\"br0\">(</span>PrintfArg b<span class=\"br0\">)</span><br/>  <span class=\"sy0\">=&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Integer\"><span class=\"kw4\">Integer</span></a><span class=\"sy0\">,</span> b<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>fprint fmt <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:uncurry\"><span class=\"kw3\">uncurry</span></a> <span class=\"sy0\">$</span> printf fmt<span class=\"br0\">)</span><br/>\u00a0<br/>showFracs <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Rational\"><span class=\"kw4\">Rational</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>showFracs <span class=\"sy0\">=</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unwords\"><span class=\"kw3\">unwords</span></a> <span class=\"sy0\">.</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a><br/>    <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concat\"><span class=\"kw3\">concat</span></a> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"sy0\">.</span> numerator<span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:const\"><span class=\"kw3\">const</span></a> <span class=\"st0\">\"/\"</span><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"sy0\">.</span> denominator<span class=\"br0\">]</span> <span class=\"sy0\">&lt;*&gt;</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> pure<span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"Farey Sequences<span class=\"es0\">\\n</span>\"</span><br/>  fprint <span class=\"st0\">\"%2d\u00a0%s<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">$</span> fareys showFracs <span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">11</span><span class=\"br0\">]</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Sequence Lengths<span class=\"es0\">\\n</span>\"</span><br/>  fprint <span class=\"st0\">\"%4d\u00a0%d<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">$</span> fareys <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> <span class=\"br0\">[</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">200</span> <span class=\"sy0\">..</span> <span class=\"nu0\">1000</span><span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">Farey=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  <span class=\"nu0\">0</span>,/:~~.<span class=\"sy0\">(</span>#~ &lt;:&amp;<span class=\"nu0\">1</span><span class=\"sy0\">)</span>,%/~<span class=\"nu0\">1x</span>+i.<span class=\"kw2\">y</span><br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 43, "block": "<pre class=\"java5 highlighted_source\"><span class=\"kw2\">import</span> <span class=\"co2\">java.util.TreeSet</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">public</span> <span class=\"kw2\">class</span> Farey<span class=\"br0\">{</span><br/>\t<span class=\"kw2\">private</span> <span class=\"kw2\">static</span> <span class=\"kw2\">class</span> Frac <span class=\"kw2\">implements</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Comparable.html\"><span class=\"kw21\">Comparable</span></a><span class=\"sy0\">&lt;</span>Frac<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw3\">int</span> num<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw3\">int</span> den<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw2\">public</span> Frac<span class=\"br0\">(</span><span class=\"kw3\">int</span> num, <span class=\"kw3\">int</span> den<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw2\">this</span>.<span class=\"me1\">num</span> = num<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw2\">this</span>.<span class=\"me1\">den</span> = den<span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t@<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Override.html\"><span class=\"kw21\">Override</span></a><br/>\t\t<span class=\"kw2\">public</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a> toString<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw2\">return</span> num + <span class=\"st0\">\"/\"</span> + den<span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t@<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Override.html\"><span class=\"kw21\">Override</span></a><br/>\t\t<span class=\"kw2\">public</span> <span class=\"kw3\">int</span> compareTo<span class=\"br0\">(</span>Frac o<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw2\">return</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Double.html\"><span class=\"kw21\">Double</span></a>.<span class=\"me1\">compare</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw3\">double</span><span class=\"br0\">)</span>num / den, <span class=\"br0\">(</span><span class=\"kw3\">double</span><span class=\"br0\">)</span>o.<span class=\"me1\">num</span> / o.<span class=\"me1\">den</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/TreeSet.html\"><span class=\"kw46\">TreeSet</span></a><span class=\"sy0\">&lt;</span>Frac<span class=\"sy0\">&gt;</span> genFarey<span class=\"br0\">(</span><span class=\"kw3\">int</span> i<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/TreeSet.html\"><span class=\"kw46\">TreeSet</span></a><span class=\"sy0\">&lt;</span>Frac<span class=\"sy0\">&gt;</span> farey = <span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/TreeSet.html\"><span class=\"kw46\">TreeSet</span></a><span class=\"sy0\">&lt;</span>Frac<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw3\">int</span> den = <span class=\"nu0\">1</span><span class=\"sy0\">;</span> den <span class=\"sy0\">&lt;</span>= i<span class=\"sy0\">;</span> den++<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw3\">int</span> num = <span class=\"nu0\">0</span><span class=\"sy0\">;</span> num <span class=\"sy0\">&lt;</span>= den<span class=\"sy0\">;</span> num++<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tfarey.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw2\">new</span> Frac<span class=\"br0\">(</span>num, den<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw2\">return</span> farey<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">void</span> main<span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw3\">int</span> i = <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">11</span><span class=\"sy0\">;</span> i++<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"F\"</span> + i + <span class=\"st0\">\": \"</span> + genFarey<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw3\">int</span> i = <span class=\"nu0\">100</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">1000</span><span class=\"sy0\">;</span> i += <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"F\"</span> + i + <span class=\"st0\">\": \"</span> + genFarey<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> + <span class=\"st0\">\" members\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 21, "block": "<pre class=\"text highlighted_source\">using DataStructures<br/>\u00a0<br/>function farey(n::Int)::OrderedSet{Rational}<br/>    rst = OrderedSet{Rational}(Rational[0, 1])<br/>    for den in 1:n, num in 1:den-1<br/>        push!(rst, Rational(num, den))<br/>    end<br/>    return rst<br/>end<br/>\u00a0<br/>for n in 1:11<br/>    print(\"F_$n: \")<br/>    for frac in farey(n)<br/>        print(numerator(frac), \"/\", denominator(frac), \" \")<br/>    end<br/>    println()<br/>end<br/>\u00a0<br/>for n in 100:100:1000<br/>    println(\"F_$n has \", length(farey(n)), \" fractions\")<br/>end</pre>"}, {"lang": "Kotlin", "loc": 28, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1</span><br/>\u00a0<br/>fun farey<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> List<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> c <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> d <span class=\"sy0\">=</span> n<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> mutableListOf<span class=\"br0\">(</span><span class=\"st0\">\"$a/$b\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;=</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> k <span class=\"sy0\">=</span> <span class=\"br0\">(</span>n + b<span class=\"br0\">)</span> / d<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> aa <span class=\"sy0\">=</span> a<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> bb <span class=\"sy0\">=</span> b<br/>        a <span class=\"sy0\">=</span> c<br/>        b <span class=\"sy0\">=</span> d<br/>        c <span class=\"sy0\">=</span> k <span class=\"sy0\">*</span> c - aa<br/>        d <span class=\"sy0\">=</span> k <span class=\"sy0\">*</span> d - bb<br/>        f.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"st0\">\"$a/$b\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> f.<span class=\"me1\">toList</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span>..<span class=\"nu0\">11</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"${\"</span><span class=\"sy0\">%</span>2d<span class=\"st0\">\".format(i)}: ${farey(i).joinToString(\"</span> <span class=\"st0\">\")}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">100</span>..<span class=\"nu0\">1000</span> step <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"${\"</span><span class=\"sy0\">%</span>4d<span class=\"st0\">\".format(i)}: ${\"</span><span class=\"sy0\">%</span>6d<span class=\"st0\">\".format(farey(i).size)} fractions\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 19, "block": "<pre class=\"lua highlighted_source\"><span class=\"co1\">-- Return farey sequence of order n</span><br/><span class=\"kw1\">function</span> farey <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> n<br/>    <span class=\"kw1\">local</span> farTab <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">while</span> c <span class=\"sy0\">&lt;=</span> n <span class=\"kw1\">do</span><br/>        k <span class=\"sy0\">=</span> <span class=\"kw3\">math.floor</span><span class=\"br0\">(</span><span class=\"br0\">(</span>n <span class=\"sy0\">+</span> b<span class=\"br0\">)</span> <span class=\"sy0\">/</span> d<span class=\"br0\">)</span><br/>        a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d <span class=\"sy0\">=</span> c<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> k <span class=\"sy0\">*</span> c <span class=\"sy0\">-</span> a<span class=\"sy0\">,</span> k <span class=\"sy0\">*</span> d <span class=\"sy0\">-</span> b<br/>        <span class=\"kw3\">table.insert</span><span class=\"br0\">(</span>farTab<span class=\"sy0\">,</span> <span class=\"br0\">{</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">return</span> farTab<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-- Main procedure</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span>i <span class=\"sy0\">..</span> <span class=\"st0\">\": \"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy0\">,</span> frac <span class=\"kw2\">in</span> <span class=\"kw3\">pairs</span><span class=\"br0\">(</span>farey<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"kw3\">io.write</span><span class=\"br0\">(</span>frac<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">..</span> <span class=\"st0\">\"/\"</span> <span class=\"sy0\">..</span> frac<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">..</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">1000</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span>i <span class=\"sy0\">..</span> <span class=\"st0\">\": \"</span> <span class=\"sy0\">..</span> <span class=\"sy0\">#</span>farey<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">..</span> <span class=\"st0\">\" items\"</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span></pre>"}, {"lang": "Maple", "loc": 25, "block": "<pre class=\"text highlighted_source\">#Displays terms in Farey_sequence of order n<br/>farey_sequence\u00a0:= proc(n)<br/>\tlocal a,b,c,d,k;<br/>\ta,b,c,d\u00a0:= 0,1,1,n;<br/>\tprintf(\"%d/%d\", a,b);<br/>\twhile(c &lt;= n) do<br/>\t\tk\u00a0:= trunc((n+b)/d);<br/>\t\ta,b,c,d\u00a0:= c,d,c*k-a,d*k-b;<br/>\t\tprintf(\",\u00a0%d/%d\", a,b);<br/>\tend do;<br/>\tprintf(\"\\n\");<br/>end proc;<br/>\u00a0<br/>#Returns the length of a Farey sequence<br/>farey_len\u00a0:= proc(n)<br/>\treturn 1 + add(NumberTheory:-Totient(k), k=1..n);<br/>end proc;<br/>\u00a0<br/>for i to 11 do<br/>\tfarey_sequence(i);<br/>end do;<br/>printf(\"\\n\");<br/>for j from 100 to 1000 by 100 do<br/>\tprintf(\"%d\\n\", farey_len(j));<br/>end do;</pre>"}, {"lang": "Mathematica", "loc": 2, "block": "<pre class=\"text highlighted_source\">FareySequence /@ Range[11]<br/>Table[Length[FareySequence[n]], {n, 100, 1000, 100}]</pre>"}, {"lang": "PARI/GP", "loc": 4, "block": "<pre class=\"parigp highlighted_source\">Farey<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span>my<span class=\"br0\">(</span>v<span class=\"sy0\">=</span><span class=\"kw1\">List</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">for</span><span class=\"br0\">(</span>k<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>n<span class=\"sy0\">,</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>k<span class=\"sy0\">,</span><span class=\"kw1\">listput</span><span class=\"br0\">(</span>v<span class=\"sy0\">,</span>i<span class=\"sy0\">/</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">vecsort</span><span class=\"br0\">(</span><span class=\"kw1\">Set</span><span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>countFarey<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">+</span><span class=\"kw1\">sum</span><span class=\"br0\">(</span>k<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> <span class=\"kw1\">eulerphi</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span><span class=\"br0\">(</span>n<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">11</span><span class=\"sy0\">,</span><span class=\"kw1\">print</span><span class=\"br0\">(</span>Farey<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">apply</span><span class=\"br0\">(</span>countFarey<span class=\"sy0\">,</span> <span class=\"nu1\">100</span><span class=\"sy0\">*</span><span class=\"br0\">[</span><span class=\"nu1\">1</span>..<span class=\"nu1\">10</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 51, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> Farey<span class=\"sy1\">;</span><br/> <span class=\"co2\">{$IFDEF FPC }{$MODE DELPHI}{$ELSE}{$APPTYPE CONSOLE}{$ENDIF}</span><br/><span class=\"kw1\">uses</span><br/>   sysutils<span class=\"sy1\">;</span><br/><span class=\"kw1\">type</span><br/>   tNextFarey<span class=\"sy3\">=</span> <span class=\"kw4\">record</span> <br/>                 nom<span class=\"sy1\">,</span>dom<span class=\"sy1\">,</span>n<span class=\"sy1\">,</span>c<span class=\"sy1\">,</span>d<span class=\"sy1\">:</span> <span class=\"kw4\">longInt</span><span class=\"sy1\">;</span><br/>               <span class=\"kw1\">end</span><span class=\"sy1\">;</span>  <br/>\u00a0<br/><span class=\"kw1\">function</span>  InitFarey<span class=\"br0\">(</span>maxdom<span class=\"sy1\">:</span><span class=\"kw4\">longINt</span><span class=\"br0\">)</span><span class=\"sy1\">:</span>tNextFarey<span class=\"sy1\">;</span>               <br/><span class=\"kw1\">Begin</span><br/>  <span class=\"kw1\">with</span> result <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">Begin</span><br/>    nom <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> dom <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> n   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> maxdom<span class=\"sy1\">;</span><br/>    c   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> d   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> maxdom<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> NextFarey<span class=\"br0\">(</span><span class=\"kw1\">var</span> fn<span class=\"sy1\">:</span>tNextFarey<span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">boolean</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  k<span class=\"sy1\">,</span>tmp<span class=\"sy1\">:</span> <span class=\"kw4\">longInt</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span>      <br/>  <span class=\"kw1\">with</span> fn <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">Begin</span><br/>    k <span class=\"sy1\">:</span><span class=\"sy3\">=</span> trunc<span class=\"br0\">(</span><span class=\"br0\">(</span>n <span class=\"sy3\">+</span> dom<span class=\"br0\">)</span><span class=\"sy3\">/</span>d<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    tmp <span class=\"sy1\">:</span><span class=\"sy3\">=</span> c<span class=\"sy1\">;</span>c<span class=\"sy1\">:</span><span class=\"sy3\">=</span> k<span class=\"sy3\">*</span>c<span class=\"sy3\">-</span>nom<span class=\"sy1\">;</span>nom<span class=\"sy1\">:</span><span class=\"sy3\">=</span> tmp<span class=\"sy1\">;</span> <br/>    tmp <span class=\"sy1\">:</span><span class=\"sy3\">=</span> d<span class=\"sy1\">;</span>d<span class=\"sy1\">:</span><span class=\"sy3\">=</span> k<span class=\"sy3\">*</span>d<span class=\"sy3\">-</span>dom<span class=\"sy1\">;</span>dom<span class=\"sy1\">:</span><span class=\"sy3\">=</span> tmp<span class=\"sy1\">;</span><br/>    result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> nom &lt;&gt; dom<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  TestF <span class=\"sy1\">:</span> tNextFarey<span class=\"sy1\">;</span><br/>  cnt<span class=\"sy1\">:</span> NativeInt<span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  TestF<span class=\"sy1\">:</span><span class=\"sy3\">=</span> InitFarey<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  cnt <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><span class=\"co1\">// out of InitFarey </span><br/>  <span class=\"kw1\">repeat</span><br/>    <span class=\"kw3\">write</span><span class=\"br0\">(</span>TestF<span class=\"sy1\">.</span><span class=\"me1\">nom</span><span class=\"sy1\">,</span><span class=\"st0\">'/'</span><span class=\"sy1\">,</span>TestF<span class=\"sy1\">.</span><span class=\"me1\">dom</span><span class=\"sy1\">,</span><span class=\"st0\">','</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    inc<span class=\"br0\">(</span>cnt<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">until</span> <span class=\"kw1\">NOT</span><span class=\"br0\">(</span>NextFarey<span class=\"br0\">(</span>TestF<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>TestF<span class=\"sy1\">.</span><span class=\"me1\">nom</span><span class=\"sy1\">,</span><span class=\"st0\">'/'</span><span class=\"sy1\">,</span>TestF<span class=\"sy1\">.</span><span class=\"me1\">dom</span><span class=\"br0\">)</span><span class=\"sy1\">;</span>  <br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>cnt<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  TestF<span class=\"sy1\">:</span><span class=\"sy3\">=</span> InitFarey<span class=\"br0\">(</span><span class=\"nu0\">10000</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  cnt <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">repeat</span><br/>    inc<span class=\"br0\">(</span>cnt<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">until</span> <span class=\"kw1\">NOT</span><span class=\"br0\">(</span>NextFarey<span class=\"br0\">(</span>TestF<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>TestF<span class=\"sy1\">.</span><span class=\"me1\">n</span><span class=\"sy1\">:</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span>cnt<span class=\"sy1\">:</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 29, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> Math<span class=\"sy0\">::</span><span class=\"me2\">BigRat</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> ntheory <span class=\"co2\">qw/euler_phi vecsum/</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> farey <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$N</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">@f</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span><span class=\"br0\">(</span><span class=\"re0\">$m0</span><span class=\"sy0\">,</span><span class=\"re0\">$n0</span><span class=\"sy0\">,</span> <span class=\"re0\">$m1</span><span class=\"sy0\">,</span><span class=\"re0\">$n1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$N</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@f</span><span class=\"sy0\">,</span> Math<span class=\"sy0\">::</span><span class=\"me2\">BigRat</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"st0\">\"$m0/$n0\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@f</span><span class=\"sy0\">,</span> Math<span class=\"sy0\">::</span><span class=\"me2\">BigRat</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"st0\">\"$m1/$n1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$f</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$m</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"re0\">$n0</span> <span class=\"sy0\">+</span> <span class=\"re0\">$N</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"re0\">$n1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$m1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$m0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"re0\">$n0</span> <span class=\"sy0\">+</span> <span class=\"re0\">$N</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"re0\">$n1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$n1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$n0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$m0</span><span class=\"sy0\">,</span><span class=\"re0\">$n0</span><span class=\"sy0\">,</span> <span class=\"re0\">$m1</span><span class=\"sy0\">,</span><span class=\"re0\">$n1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$m1</span><span class=\"sy0\">,</span><span class=\"re0\">$n1</span><span class=\"sy0\">,</span> <span class=\"re0\">$m</span><span class=\"sy0\">,</span><span class=\"re0\">$n</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@f</span><span class=\"sy0\">,</span> Math<span class=\"sy0\">::</span><span class=\"me2\">BigRat</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"st0\">\"$m/$n\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"re0\">@f</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> farey_count <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"sy0\">+</span> vecsum<span class=\"br0\">(</span>euler_phi<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">@f</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/join.html\"><span class=\"kw3\">join</span></a> <span class=\"st0\">\"/\"</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">parts</span> <span class=\"br0\">}</span>   <span class=\"co1\"># Force 0/1 and 1/1</span><br/>          farey<span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"F$_: [@f]<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">100000</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"F${_}00: \"</span><span class=\"sy0\">,</span> farey_count<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">*</span><span class=\"co5\">$_</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\" members<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 9, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> farey <span class=\"br0\">(</span><span class=\"re0\">$order</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@l</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">/</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$order</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"kw3\">push</span> <span class=\"re0\">@l</span><span class=\"sy0\">,</span> <span class=\"sy0\">|</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$^d</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"re0\">$^n</span><span class=\"sy0\">/</span><span class=\"re0\">$d</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    unique gather <span class=\"re0\">@l</span><span class=\"sy0\">.</span><span class=\"me1\">deepmap</span><span class=\"br0\">(</span><span class=\"sy0\">*.</span><span class=\"me1\">take</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st0\">\"Farey sequence order \"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"$_: \"</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"re0\">&amp;farey</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"sy0\">*.</span><span class=\"kw3\">nude</span><span class=\"sy0\">.</span><span class=\"kw3\">join</span><span class=\"br0\">(</span><span class=\"st_h\">'/'</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">11</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"Farey sequence order $_ has \"</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"sy0\">.</span><span class=\"re0\">&amp;farey</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">elems</span><span class=\"sy0\">,</span> <span class=\"st_h\">' elements.'</span> <span class=\"kw1\">for</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">200</span> <span class=\"sy0\">...</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 28, "block": "<pre class=\"text highlighted_source\">function farey(integer n)<br/>integer a=0, b=1, c=1, d=n<br/>integer items=1<br/>    if n&lt;=11 then<br/>        printf(1,\"%d:\u00a0%d/%d\",{n,a,b})<br/>    end if<br/>    while c&lt;=n do<br/>        integer k = floor((n+b)/d)<br/>        {a,b,c,d} = {c,d,k*c-a,k*d-b}<br/>        items += 1<br/>        if n&lt;=11 then<br/>            printf(1,\"\u00a0%d/%d\",{a,b})<br/>        end if<br/>    end while<br/>    return items<br/>end function<br/>\u00a0<br/>printf(1,\"Farey sequence for order 1 through 11:\\n\")<br/>for i=1 to 11 do<br/>    {} = farey(i)<br/>    printf(1,\"\\n\")<br/>end for<br/>printf(1,\"Farey sequence fractions, 100 to 1000 by hundreds:\\n\")<br/>sequence nf = {}<br/>for i=100 to 1000 by 100 do<br/>    nf = append(nf,farey(i))<br/>end for<br/>?nf</pre>"}, {"lang": "Prolog", "loc": 29, "block": "<pre class=\"prolog highlighted_source\">task<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tbetween<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> <span class=\"nu0\">11</span><span class=\"sy4\">,</span> I<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tfarey<span class=\"br0\">(</span>I<span class=\"sy4\">,</span> F<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"st_h\">': '</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\trwrite<span class=\"br0\">(</span>F<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">nl</span></a><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">fail</span></a><span class=\"sy4\">;</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">true</span></a><span class=\"sy4\">.</span><br/>\u00a0<br/>task<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span> between<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> <span class=\"nu0\">10</span><span class=\"sy4\">,</span> I<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tI100 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> I<span class=\"sy3\">*</span><span class=\"nu0\">100</span><span class=\"sy4\">,</span><br/>\tfarey<span class=\"br0\">(</span> I100<span class=\"sy4\">,</span> F<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tlength<span class=\"br0\">(</span>F<span class=\"sy4\">,</span>N<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"st_h\">'|F('</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span>I100<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"st_h\">')| = '</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> writeln<span class=\"br0\">(</span>N<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">fail</span></a><span class=\"sy4\">;</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">true</span></a><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% farey(+Order, Sequence)</span><br/>farey<span class=\"br0\">(</span>Order<span class=\"sy4\">,</span> Sequence<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>  <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">bagof</span></a><span class=\"br0\">(</span> R<span class=\"sy4\">,</span><br/>\t I^J^<span class=\"br0\">(</span>between<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> Order<span class=\"sy4\">,</span> J<span class=\"br0\">)</span><span class=\"sy4\">,</span> between<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> I<span class=\"br0\">)</span><span class=\"sy4\">,</span> R <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> I rdiv J<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t S<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>  predsort<span class=\"br0\">(</span> rcompare<span class=\"sy4\">,</span> S<span class=\"sy4\">,</span> Sequence <span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>rprint<span class=\"br0\">(</span> rdiv<span class=\"br0\">(</span>A<span class=\"sy4\">,</span>B<span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy1\">:-</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"sy3\">/</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span>B<span class=\"br0\">)</span><span class=\"sy4\">,</span> <span class=\"sy5\">!</span><span class=\"sy4\">.</span><br/>rprint<span class=\"br0\">(</span> I <span class=\"br0\">)</span> <span class=\"sy1\">:-</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">integer</span></a><span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"sy3\">/</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> <span class=\"sy5\">!</span><span class=\"sy4\">.</span><br/>\u00a0<br/>rwrite<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>rwrite<span class=\"br0\">(</span><span class=\"br0\">[</span>R<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span> rprint<span class=\"br0\">(</span>R<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>rwrite<span class=\"br0\">(</span><span class=\"br0\">[</span>R<span class=\"sy4\">,</span> T<span class=\"sy5\">|</span>Rs<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span> rprint<span class=\"br0\">(</span>R<span class=\"br0\">)</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"st_h\">', '</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> rwrite<span class=\"br0\">(</span><span class=\"br0\">[</span>T<span class=\"sy5\">|</span>Rs<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>rcompare<span class=\"br0\">(</span><span class=\"sy6\">&lt;</span><span class=\"sy4\">,</span> A<span class=\"sy4\">,</span> B<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> A <span class=\"sy6\">&lt;</span> B<span class=\"sy4\">,</span> <span class=\"sy5\">!</span><span class=\"sy4\">.</span><br/>rcompare<span class=\"br0\">(</span><span class=\"sy6\">&gt;</span><span class=\"sy4\">,</span> A<span class=\"sy4\">,</span> B<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> A <span class=\"sy6\">&gt;</span> B<span class=\"sy4\">,</span> <span class=\"sy5\">!</span><span class=\"sy4\">.</span><br/>rcompare<span class=\"br0\">(</span><span class=\"sy6\">=</span><span class=\"sy4\">,</span> A<span class=\"sy4\">,</span> B<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> A <span class=\"sy6\">=&lt;</span> B<span class=\"sy4\">.</span></pre>"}, {"lang": "PureBasic", "loc": 85, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">EnableExplicit</span><br/>\u00a0<br/><span class=\"kw1\">Structure</span> farey_struc<br/>  complex.<span class=\"kw2\">POINT</span><br/>  quotient.d<br/><span class=\"kw1\">EndStructure</span><br/>\u00a0<br/>#MAXORDER<span class=\"sy0\">=</span><span class=\"nu0\">1000</span><br/><span class=\"kw1\">Global</span> <span class=\"kw1\">NewList</span> fareylist.farey_struc<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> v_start.i,<br/>       v_end.i,<br/>       v_step.i,<br/>       order.i,<br/>       fractions.i,<br/>       check.b,<br/>       t$<br/>\u00a0<br/><span class=\"kw1\">Procedure</span> farey<span class=\"br0\">(</span>order<span class=\"br0\">)</span><br/>  <span class=\"kw1\">NewList</span> sequence.farey_struc<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Define</span> quotient.d,<br/>         divisor.i,<br/>         dividend.i<br/>\u00a0<br/>  <span class=\"kw1\">For</span> divisor<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> order<br/>    <span class=\"kw1\">For</span> dividend<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> divisor<br/>      quotient.d<span class=\"sy0\">=</span>dividend<span class=\"sy0\">/</span>divisor<br/>      <span class=\"kw2\">AddElement</span><span class=\"br0\">(</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>x<span class=\"sy0\">=</span>dividend<br/>      sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>y<span class=\"sy0\">=</span>divisor<br/>      sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient<span class=\"sy0\">=</span>quotient      <br/>    <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw2\">SortStructuredList</span><span class=\"br0\">(</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span>,#PB_Sort_Ascending,<br/>                     <span class=\"kw2\">OffsetOf</span><span class=\"br0\">(</span>farey_struc<span class=\"sy0\">\\</span>quotient<span class=\"br0\">)</span>,<br/>                     TypeOf<span class=\"br0\">(</span>farey_struc<span class=\"sy0\">\\</span>quotient<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">FirstElement</span><span class=\"br0\">(</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  quotient<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient  <br/>  <span class=\"kw2\">AddElement</span><span class=\"br0\">(</span>fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>x<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>x<br/>  fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>y<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>y<br/>  fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient<br/>\u00a0<br/>  <span class=\"kw1\">ForEach</span> sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> quotient<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient\u00a0: <span class=\"kw1\">Continue</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>    quotient<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient  <br/>    <span class=\"kw2\">AddElement</span><span class=\"br0\">(</span>fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>x<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>x<br/>    fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>y<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>y<br/>    fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient<span class=\"sy0\">=</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>quotient    <br/>  <span class=\"kw1\">Next</span><br/>  FreeList<span class=\"br0\">(</span>sequence<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"st0\">\"Farey sequence [Input exit = program end]\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Repeat</span><br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"Input-&gt; start end step [start&gt;=1; end&lt;=1000; step&gt;=1; (start&lt;end)]\u00a0: \"</span><span class=\"br0\">)</span><br/>  t$<span class=\"sy0\">=</span><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">If</span> <span class=\"kw2\">Trim</span><span class=\"br0\">(</span><span class=\"kw2\">LCase</span><span class=\"br0\">(</span>t$<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"st0\">\"exit\"</span>\u00a0: <span class=\"kw1\">End</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>  v_start<span class=\"sy0\">=</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>t$,<span class=\"nu0\">1</span>,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  v_end<span class=\"sy0\">=</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>t$,<span class=\"nu0\">2</span>,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  v_step<span class=\"sy0\">=</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>t$,<span class=\"nu0\">3</span>,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  check<span class=\"sy0\">=</span>Bool<span class=\"br0\">(</span>v_start<span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span> <span class=\"kw1\">And</span> v_end<span class=\"sy0\">&lt;=</span>#MAXORDER <span class=\"kw1\">And</span> v_step<span class=\"sy0\">&gt;=</span><span class=\"nu0\">1</span> <span class=\"kw1\">And</span> v_start<span class=\"sy0\">&lt;</span>v_end<span class=\"br0\">)</span><br/><span class=\"kw1\">Until</span> check<span class=\"sy0\">=</span>#True<br/><span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"sy0\">~</span><span class=\"st0\">\"\\n\"</span><span class=\"sy0\">+</span><span class=\"kw2\">LSet</span><span class=\"br0\">(</span><span class=\"st0\">\"-\"</span>,<span class=\"nu0\">80</span>,<span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>order<span class=\"sy0\">=</span>v_start<br/><span class=\"kw1\">While</span> order<span class=\"sy0\">&lt;=</span>v_end<br/>  FreeList<span class=\"br0\">(</span>fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">NewList</span> fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  farey<span class=\"br0\">(</span>order<span class=\"br0\">)</span><br/>  fractions<span class=\"sy0\">=</span>ListSize<span class=\"br0\">(</span>fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Farey sequence for order \"</span><span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>order<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" has \"</span><span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>fractions<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" fractions.\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> fractions<span class=\"sy0\">&lt;</span><span class=\"nu0\">100</span><br/>    <span class=\"kw1\">ForEach</span> fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">If</span> <span class=\"kw2\">ListIndex</span><span class=\"br0\">(</span>fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">7</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\u00a0: <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>      <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"sy0\">~</span><span class=\"st0\">\"\\t\"</span><span class=\"sy0\">+</span><br/>             <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>x<span class=\"br0\">)</span>,<span class=\"nu0\">2</span>,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\"/\"</span><span class=\"sy0\">+</span><br/>             <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>fareylist<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>complex<span class=\"sy0\">\\</span>y<span class=\"br0\">)</span>,<span class=\"nu0\">2</span>,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"sy0\">~</span><span class=\"st0\">\"\\n\"</span><span class=\"sy0\">+</span><span class=\"kw2\">LSet</span><span class=\"br0\">(</span><span class=\"st0\">\"=\"</span>,<span class=\"nu0\">80</span>,<span class=\"st0\">\"=\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  order<span class=\"sy0\">+</span>v_step<br/><span class=\"kw1\">Wend</span><br/><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 21, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> fractions <span class=\"kw1\">import</span> Fraction<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">class</span> Fr<span class=\"br0\">(</span>Fraction<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__repr__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"st0\">'(%s/%s)'</span>\u00a0% <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">numerator</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">denominator</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">def</span> farey<span class=\"br0\">(</span>n<span class=\"sy0\">,</span> length<span class=\"sy0\">=</span><span class=\"kw2\">False</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> length:<br/>        <span class=\"kw1\">return</span> <span class=\"br0\">[</span>Fr<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span> + <span class=\"kw2\">sorted</span><span class=\"br0\">(</span><span class=\"br0\">{</span>Fr<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> k<span class=\"br0\">)</span> <span class=\"kw1\">for</span> k <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> n+<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> m <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> k+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span>:<br/>        <span class=\"co1\">#return 1         +    len({Fr(m, k) for k in range(1, n+1) for m in range(1, k+1)})</span><br/>        <span class=\"kw1\">return</span>  <span class=\"br0\">(</span>n*<span class=\"br0\">(</span>n+<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>//<span class=\"nu0\">2</span> - <span class=\"kw2\">sum</span><span class=\"br0\">(</span>farey<span class=\"br0\">(</span>n//k<span class=\"sy0\">,</span> <span class=\"kw2\">True</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> k <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> n+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Farey sequence for order 1 through 11 (inclusive):'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span>: <br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span>farey<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Number of fractions in the Farey sequence for order 100 through 1,000 (inclusive) by hundreds:'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">[</span>farey<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> length<span class=\"sy0\">=</span><span class=\"kw2\">True</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">1001</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 20, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(require math/number-theory)<br/>(define (display-farey-sequence order show-fractions?)<br/>  (define f-s (farey-sequence order))<br/>  (printf \"-- Farey Sequence for order ~a has ~a fractions~%\" order (length f-s))<br/> \u00a0;; racket will simplify 0/1 and 1/1 to 0 and 1 respectively, so deconstruct into numerator and<br/> \u00a0;; denomimator (and take the opportunity to insert commas<br/>  (when show-fractions?<br/>    (displayln<br/>     (string-join<br/>      (for/list ((f f-s))<br/>        (format \"~a/~a\" (numerator f) (denominator f)))<br/>      \", \"))))<br/>\u00a0<br/>; compute and show the Farey sequence for order:<br/>;  1   through   11   (inclusive).<br/>(for ((order (in-range 1 (add1 11)))) (display-farey-sequence order #t))<br/>; compute and display the number of fractions in the Farey sequence for order:<br/>;  100   through   1,000   (inclusive)   by hundreds. <br/>(for ((order (in-range 100 (add1 1000) 100))) (display-farey-sequence order #f))</pre>"}, {"lang": "REXX", "loc": 26, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  computes and displays  a  Farey sequence  (or the number of fractions). */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> L H I <span class=\"sy0\">.</span>                                <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> L==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> L==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> L=<span class=\"nu0\">5</span>                      <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/>oldL=L                                           <span class=\"coMULTI\">/*original  L   (negativity=no display.*/</span><br/>L=<span class=\"kw6\">abs</span><span class=\"br0\">(</span>L<span class=\"br0\">)</span>                                         <span class=\"coMULTI\">/*but \u00b7\u00b7\u00b7 use   \u2502L\u2502   for all else.    */</span><br/><span class=\"kw1\">if</span> H==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> H==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> H=L                      <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">if</span> I==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> I==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> I=<span class=\"nu0\">1</span>                      <span class=\"coMULTI\">/* \"      \"         \"   \"   \"     \"    */</span><br/>                                                 <span class=\"coMULTI\">/*step through the range by increment. */</span><br/>     <span class=\"kw1\">do</span> n=L  <span class=\"kw2\">to</span>  H  <span class=\"kw2\">by</span> I                         <span class=\"coMULTI\">/*process the range (could be only one)*/</span><br/>     @=fareyF<span class=\"br0\">(</span>n<span class=\"br0\">)</span>;    #=<span class=\"st0\">' '</span><span class=\"kw6\">words</span><span class=\"br0\">(</span>@<span class=\"br0\">)</span><span class=\"st0\">\" \"</span>            <span class=\"coMULTI\">/*go ye forth and compute Farey numbers*/</span><br/>     <span class=\"kw1\">say</span> <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">'Farey sequence for order '</span>    n    <span class=\"st0\">\" has\"</span>    #    <span class=\"st0\">'fractions.'</span>, <span class=\"nu0\">150</span>, <span class=\"st0\">\"\u2550\"</span><span class=\"br0\">)</span><br/>     <span class=\"kw1\">if</span> oldL<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>                     <span class=\"coMULTI\">/*don't display Farey fractions if neg.*/</span><br/>     <span class=\"kw1\">say</span> @;          <span class=\"kw1\">say</span>                         <span class=\"coMULTI\">/*show Farey fractions and a blank line*/</span><br/>     <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*n*/</span>                                 <span class=\"coMULTI\">/* [\u2191]  build/display Farey fractions. */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>fareyF: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;  n<span class=\"sy0\">.</span>1=<span class=\"nu0\">0</span>;  d<span class=\"sy0\">.</span>1=<span class=\"nu0\">1</span>;  n<span class=\"sy0\">.</span>2=<span class=\"nu0\">1</span>;  d<span class=\"sy0\">.</span>2=x         <span class=\"coMULTI\">/*some kit parts.*/</span><br/>        $=n<span class=\"sy0\">.</span>1<span class=\"st0\">'/'</span>d<span class=\"sy0\">.</span>1  n<span class=\"sy0\">.</span>2<span class=\"st0\">\"/\"</span>d<span class=\"sy0\">.</span>2                   <span class=\"coMULTI\">/*a starter kit for the Farey sequence.*/</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]  now, build on the starter kit. */</span><br/>                   <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>;    y=j+<span class=\"nu0\">1</span>;   z=j+<span class=\"nu0\">2</span>     <span class=\"coMULTI\">/*construct from thirds  and  on  \"up\".*/</span><br/>                   n<span class=\"sy0\">.</span>z= <span class=\"br0\">(</span>d<span class=\"sy0\">.</span>j+x<span class=\"br0\">)</span>\u00a0% d<span class=\"sy0\">.</span>y<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span>y - n<span class=\"sy0\">.</span>j  <span class=\"coMULTI\">/*    \"     the fraction   numerator.  */</span><br/>                   d<span class=\"sy0\">.</span>z= <span class=\"br0\">(</span>d<span class=\"sy0\">.</span>j+x<span class=\"br0\">)</span>\u00a0% d<span class=\"sy0\">.</span>y<span class=\"sy0\">*</span>d<span class=\"sy0\">.</span>y - d<span class=\"sy0\">.</span>j  <span class=\"coMULTI\">/*    \"      \"     \"     denominator.  */</span><br/>                   <span class=\"kw1\">if</span> n<span class=\"sy0\">.</span>z<span class=\"sy0\">&gt;</span>x  <span class=\"kw3\">then</span> <span class=\"kw1\">leave</span>          <span class=\"coMULTI\">/*Should the construction be stopped\u00a0? */</span><br/>                   $=$  n<span class=\"sy0\">.</span>z<span class=\"st0\">'/'</span>d<span class=\"sy0\">.</span>z                <span class=\"coMULTI\">/*Heck no, add fraction to party mix.  */</span><br/>                   <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span>                   <span class=\"coMULTI\">/* [\u2191]   construct the Farey sequence. */</span><br/>        <span class=\"kw1\">return</span> $                                 <span class=\"coMULTI\">/*return with the Farey fractions.     */</span></pre>"}, {"lang": "Ring", "loc": 49, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Farey sequence<br/>\u00a0<br/>for i = 1 to 11<br/>     count = 0 <br/>     see \"F\" + string(i) + \" = \" <br/>     farey(i, false)<br/>next<br/>see nl<br/>for x = 100 to 1000 step 100<br/>      count = 0 <br/>      see \"F\" + string(x) + \" = \"<br/>      see farey(x, false)<br/>      see nl<br/>next<br/>\u00a0<br/>func farey(n, descending)<br/>        a = 0<br/>        b = 1<br/>        c = 1<br/>        d = n <br/>        if descending = true<br/>           a = 1<br/>           c = n -1<br/>        ok <br/>        count = count + 1<br/>        if n &lt; 12<br/>           see string(a) + \"/\" + string(b) + \" \" <br/>        ok<br/>        while ((c &lt;= n) and not descending) or ((a &gt; 0) and descending)<br/>                  aa = a<br/>                  bb = b<br/>                  cc = c<br/>                  dd = d<br/>                  k = floor((n + b) / d)<br/>                  a = cc <br/>                  b = dd<br/>                  c = k * cc - aa <br/>                  d = k * dd - bb<br/>                  count = count + 1<br/>                  if n &lt; 12<br/>                     see string(a) + \"/\" + string(b) + \" \"<br/>                  ok<br/>        end <br/>        if n &lt; 12<br/>           see nl<br/>        ok<br/>        return count<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 16, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> farey<span class=\"br0\">(</span>n, length=<span class=\"kw2\">false</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> length<br/>    <span class=\"br0\">(</span>n<span class=\"sy0\">*</span><span class=\"br0\">(</span>n<span class=\"sy0\">+</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span>..<span class=\"me1\">n</span><span class=\"br0\">)</span>.<span class=\"me1\">inject</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>sum,k<span class=\"sy0\">|</span> sum <span class=\"sy0\">+</span> farey<span class=\"br0\">(</span>n<span class=\"sy0\">/</span>k, <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"me1\">n</span><span class=\"br0\">)</span>.<span class=\"me1\">each_with_object</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>k,a<span class=\"sy0\">|</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>..<span class=\"me1\">k</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>m<span class=\"sy0\">|</span>a <span class=\"sy0\">&lt;&lt;</span> <span class=\"kw4\">Rational</span><span class=\"br0\">(</span>m,k<span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">}</span>.<span class=\"me1\">uniq</span>.<span class=\"me1\">sort</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> <span class=\"st0\">'Farey sequence for order 1 through 11 (inclusive):'</span><br/><span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">11</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"F(#{n}): \"</span> <span class=\"sy0\">+</span> farey<span class=\"br0\">(</span>n<span class=\"br0\">)</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">'Number of fractions in the Farey sequence:'</span><br/><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">100</span>..<span class=\"nu0\">1000</span><span class=\"br0\">)</span>.<span class=\"me1\">step</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"F(%4d) =%7d\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span>i, farey<span class=\"br0\">(</span>i, <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Scala", "loc": 29, "block": "<pre class=\"scala highlighted_source\">\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Farey <span class=\"br0\">{</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> fareySequence<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int, start<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Int, Int<span class=\"br0\">)</span>, stop<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Int, Int<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Stream<span class=\"br0\">[</span><span class=\"br0\">(</span>Int, Int<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>nominator<span class=\"sy0\">_</span>l, denominator<span class=\"sy0\">_</span>l<span class=\"br0\">)</span> <span class=\"sy0\">=</span> start<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>nominator<span class=\"sy0\">_</span>r, denominator<span class=\"sy0\">_</span>r<span class=\"br0\">)</span> <span class=\"sy0\">=</span> stop<br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> mediant <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>nominator<span class=\"sy0\">_</span>l + nominator<span class=\"sy0\">_</span>r<span class=\"br0\">)</span>, <span class=\"br0\">(</span>denominator<span class=\"sy0\">_</span>l + denominator<span class=\"sy0\">_</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>mediant.<span class=\"sy0\">_</span>2 <span class=\"sy0\">&lt;=</span> n<span class=\"br0\">)</span> fareySequence<span class=\"br0\">(</span>n, start, mediant<span class=\"br0\">)</span> ++ mediant <span class=\"sy0\">#::</span> fareySequence<span class=\"br0\">(</span>n, mediant, stop<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> Stream.<span class=\"me1\">empty</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> farey<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int, start<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Int, Int<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>, stop<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Int, Int<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Stream<span class=\"br0\">[</span><span class=\"br0\">(</span>Int, Int<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    start <span class=\"sy0\">#::</span> fareySequence<span class=\"br0\">(</span>n, start, stop<span class=\"br0\">)</span> ++ stop <span class=\"sy0\">#::</span> Stream.<span class=\"me1\">empty</span><span class=\"br0\">[</span><span class=\"br0\">(</span>Int, Int<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">1</span> to <span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      println<span class=\"br0\">(</span>s<span class=\"st0\">\"$i: \"</span> + farey<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span>e <span class=\"sy0\">=&gt;</span> s<span class=\"st0\">\"${e._1}/${e._2}\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    println<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">100</span> to <span class=\"nu0\">1000</span> by <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      println<span class=\"br0\">(</span>s<span class=\"st0\">\"$i: \"</span> + farey<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">length</span> + <span class=\"st0\">\" elements\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Scheme", "loc": 57, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>import <span class=\"br0\">(</span>scheme base<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>scheme <span class=\"kw1\">write</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; create a generator for Farey sequence n</span><br/><span class=\"co1\">;; using next term formula from https://en.wikipedia.org/wiki/Farey_sequence</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>farey<span class=\"sy0\">-</span>generator n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>a #f<span class=\"br0\">)</span> <span class=\"br0\">(</span>b <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>c #f<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">d</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> a<span class=\"br0\">)</span>    <span class=\"co1\">; first item in sequence</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">set!</span> a <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span><span class=\"sy0\">/</span> a b<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> c<span class=\"br0\">)</span>    <span class=\"co1\">; second item in sequence</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">set!</span> c <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span><span class=\"sy0\">/</span> c <span class=\"kw1\">d</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> c <span class=\"kw1\">d</span><span class=\"br0\">)</span>    <span class=\"co1\">; return #f when finished sequence</span><br/>             #f<span class=\"br0\">)</span> <br/>            <span class=\"br0\">(</span><span class=\"kw1\">else</span>       <span class=\"co1\">; compute next term </span><br/>              <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">f</span> <span class=\"br0\">(</span><span class=\"kw1\">floor</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> n b<span class=\"br0\">)</span> <span class=\"kw1\">d</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span>p <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"kw1\">f</span> c<span class=\"br0\">)</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span>q <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"kw1\">f</span> <span class=\"kw1\">d</span><span class=\"br0\">)</span> b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">set!</span> a c<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">set!</span> b <span class=\"kw1\">d</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">set!</span> c p<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">set!</span> <span class=\"kw1\">d</span> q<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"sy0\">/</span> p q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>farey<span class=\"sy0\">-</span><span class=\"kw1\">sequence</span> n <span class=\"kw1\">display</span>?<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>display<span class=\"sy0\">-</span>rat n<span class=\"br0\">)</span> <span class=\"co1\">; ensure 0,1 show /1</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">display</span> n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"kw1\">denominator</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"/1\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">;</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>gen <span class=\"br0\">(</span>farey<span class=\"sy0\">-</span>generator n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>res <span class=\"br0\">(</span>gen<span class=\"br0\">)</span> <span class=\"br0\">(</span>gen<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>count <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> count<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> res<span class=\"br0\">)</span> <span class=\"br0\">(</span>when <span class=\"kw1\">display</span>? <span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                 count<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>when <span class=\"kw1\">display</span>? <span class=\"br0\">(</span>display<span class=\"sy0\">-</span>rat res<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; </span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"Farey sequence for order 1 through 11 (inclusive):<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> i <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> i <span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span><span class=\"kw1\">string-append</span> <span class=\"st0\">\"F(\"</span> <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> i<span class=\"br0\">)</span> <span class=\"st0\">\"): \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>farey<span class=\"sy0\">-</span><span class=\"kw1\">sequence</span> i #t<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Number of fractions in the Farey sequence:<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"nu0\">100</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> i <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> i <span class=\"nu0\">1000</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">display</span> <br/>    <span class=\"br0\">(</span><span class=\"kw1\">string-append</span> <span class=\"st0\">\"F(\"</span> <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> i<span class=\"br0\">)</span> <span class=\"st0\">\") = \"</span><br/>                   <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span>farey<span class=\"sy0\">-</span><span class=\"kw1\">sequence</span> i #f<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Sidef", "loc": 19, "block": "<pre class=\"ruby highlighted_source\">func farey_count<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span>n<span class=\"sy0\">*</span><span class=\"br0\">(</span>n<span class=\"sy0\">+</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">//</span><span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span>..<span class=\"me1\">n</span> <span class=\"sy0\">-&gt;</span> sum_by <span class=\"br0\">{</span><span class=\"sy0\">|</span>k<span class=\"sy0\">|</span> farey_count<span class=\"br0\">(</span>n<span class=\"sy0\">//</span>k<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>func farey<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    gather <span class=\"br0\">{</span><br/>        <span class=\"nu0\">1</span>..<span class=\"me1\">n</span> <span class=\"sy0\">-&gt;</span> each <span class=\"br0\">{</span><span class=\"sy0\">|</span>k<span class=\"sy0\">|</span> <span class=\"nu0\">0</span>..<span class=\"me1\">k</span> <span class=\"sy0\">-&gt;</span> each <span class=\"br0\">{</span><span class=\"sy0\">|</span>m<span class=\"sy0\">|</span> take<span class=\"br0\">(</span>m<span class=\"sy0\">/</span>k<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span>.<span class=\"me1\">uniq</span>.<span class=\"me1\">sort</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">'Farey sequence for order 1 through 11 (inclusive):'</span><br/><span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    say<span class=\"br0\">(</span><span class=\"st0\">\"F(%2d):\u00a0%s\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span>n, farey<span class=\"br0\">(</span>n<span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span>.<span class=\"me1\">as_frac</span><span class=\"br0\">}</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">'Number of fractions in the Farey sequence:'</span><br/><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">100</span>..<span class=\"nu0\">1000</span> <span class=\"sy0\">-&gt;</span> by<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    say <span class=\"br0\">(</span><span class=\"st0\">\"F(%4d) =%7d\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span>i, farey_count<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Stata", "loc": 77, "block": "<pre class=\"text highlighted_source\">mata<br/>function totient(n_) {<br/>\tn = n_<br/>\tif (n&lt;4) {<br/>\t\tif (n&lt;1) return(.)<br/>\t\telse if (n&gt;1) return(n-1)<br/>\t\telse return(1)<br/>\t}<br/>\telse {<br/>\t\tr = 1<br/>\t\tif (mod(n,2)==0) {<br/>\t\t\tn = floor(n/2)<br/>\t\t\twhile (mod(n,2)==0) {<br/>\t\t\t\tn = floor(n/2)<br/>\t\t\t\tr = r*2<br/>\t\t\t}<br/>\t\t}<br/>\t\tfor (k=3; k*k&lt;=n; k=k+2) {<br/>\t\t\tif (mod(n,k)==0) {<br/>\t\t\t\tr = r*(k-1)<br/>\t\t\t\tn = floor(n/k)<br/>\t\t\t\twhile (mod(n,k)==0) {<br/>\t\t\t\t\tn = floor(n/k)<br/>\t\t\t\t\tr = r*k<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t}<br/>\t\tif (n&gt;1) r = r*(n-1)<br/>\t\treturn(r)<br/>\t}<br/>}<br/>\u00a0<br/>function map(f,a) {<br/>\tn = rows(a)<br/>\tp = cols(a)<br/>\tb = J(n,p,.)<br/>\tfor (i=1; i&lt;=n; i++) {<br/>\t\tfor (j=1; j&lt;=p; j++) {<br/>\t\t\tb[i,j] = (*f)(a[i,j])<br/>\t\t}<br/>\t}<br/>\treturn(b)<br/>}<br/>\u00a0<br/>function farey_length(n) {<br/>\treturn(1+sum(map(&amp;totient(),1::n)))<br/>}<br/>\u00a0<br/>function farey(n) {<br/>\tm = 1+sum(map(&amp;totient(),1::n))<br/>\tr = J(m,2,.)<br/>\tr[1,.] = 0,1<br/>\ta = 0<br/>\tb = 1<br/>\tc = 1<br/>\td = n<br/>\ti = 1<br/>\twhile (c&lt;=n) {<br/>\t\tk = floor((n+b)/d)<br/>\t\ta = k*c-a<br/>\t\tb = k*d-b<br/>\t\tswap(a,c)<br/>\t\tswap(b,d)<br/>\t\tr[++i,.] = a,b<br/>\t}<br/>\treturn(r)<br/>}<br/>\u00a0<br/>for (n=1; n&lt;=11; n++) {<br/>\ta = farey(n)<br/>\tm = rows(a)<br/>\tfor (i=1; i&lt;=m; i++) printf(\"%f/%f \",a[i,1],a[i,2])<br/>\tprintf(\"\\n\")<br/>}<br/>\u00a0<br/>map(&amp;farey_length(),100*(1..10))<br/>end</pre>"}, {"lang": "Swift", "loc": 49, "block": "<pre class=\"text highlighted_source\">class Farey {<br/>    let n: Int<br/>\u00a0<br/>    init(_ x: Int) {<br/>        n = x<br/>    }<br/>\u00a0<br/>    //using algorithm from wikipedia<br/>    var sequence: [(Int,Int)] {<br/>        var a = 0<br/>        var b = 1<br/>        var c = 1<br/>        var d = n<br/>        var results = [(a, b)]<br/>        while c &lt;= n {<br/>            let k = (n + b) / d<br/>            let oldA = a<br/>            let oldB = b<br/>            a = c<br/>            b = d<br/>            c = k * c - oldA<br/>            d = k * d - oldB<br/>            results += [(a, b)]<br/>        }<br/>        return results<br/>    }<br/>\u00a0<br/>    var formattedSequence: String {<br/>        var s = \"\\(n):\"<br/>        for pair in sequence {<br/>            s += \" \\(pair.0)/\\(pair.1)\"<br/>        }<br/>        return s<br/>    }<br/>\u00a0<br/>}<br/>\u00a0<br/>print(\"Sequences\\n\")<br/>\u00a0<br/>for n in 1...11 {<br/>    print(Farey(n).formattedSequence)<br/>}<br/>\u00a0<br/>print(\"\\nSequence Lengths\\n\")<br/>\u00a0<br/>for n in 1...10 {<br/>    let m = n * 100<br/>    print(\"\\(m): \\(Farey(m).sequence.count)\")<br/>}</pre>"}, {"lang": "Tcl", "loc": 27, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> farey <span class=\"br0\">{</span>n<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> nums <span class=\"br0\">[</span>lrepeat <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> result <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> found <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$found</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> nj <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$nums</span> <span class=\"br0\">[</span><span class=\"kw1\">set</span> j <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> found <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$nums</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$nj</span><span class=\"sy0\">*</span><span class=\"re0\">$i</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">set</span> nj <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$nums</span> <span class=\"br0\">[</span><span class=\"kw1\">set</span> j <span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">set</span> found <span class=\"nu0\">1</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">lappend</span> result <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$nj</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"re0\">$j</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i <span class=\"re0\">$j</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lset</span> nums <span class=\"re0\">$i</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$nums</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span> + <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$result</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">11</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> F<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span>:\\x20<span class=\"br0\">[</span>lmap n <span class=\"br0\">[</span>farey <span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><span class=\"kw2\">join</span> <span class=\"re0\">$n</span> /<span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">100</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">1000</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i <span class=\"nu0\">100</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> |F<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span>|\\x20=\\x20<span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"br0\">[</span>farey <span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "zkl", "loc": 10, "block": "<pre class=\"text highlighted_source\">fcn farey(n){<br/>   f1,f2:=T(0,1),T(1,n);  // fraction is (num,dnom)<br/>   print(\"%d/%d\u00a0%d/%d\".fmt(0,1,1,n));<br/>   while(f2[1]&gt;1){<br/>      k,t \u00a0:=(n + f1[1])/f2[1], f1;<br/>      f1,f2 = f2,T(f2[0]*k - t[0], f2[1]*k - t[1]);<br/>      print(\"\u00a0%d/%d\".fmt(f2.xplode()));<br/>   }<br/>   println();<br/>}</pre>"}]}