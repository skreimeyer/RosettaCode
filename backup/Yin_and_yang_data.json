{"task": "Yin_and_yang", "blocks": [{"lang": "Ada", "loc": 32, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Glib; <span class=\"kw3\">use</span> Glib;<br/><span class=\"kw3\">with</span> Cairo; <span class=\"kw3\">use</span> Cairo;<br/><span class=\"kw3\">with</span> Cairo.<span class=\"me1\">Png</span>; <span class=\"kw3\">use</span> Cairo.<span class=\"me1\">Png</span>;<br/><span class=\"kw3\">with</span> Cairo.<span class=\"me1\">Image_Surface</span>; <span class=\"kw3\">use</span> Cairo.<span class=\"me1\">Image_Surface</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> YinYang <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">subtype</span> Dub <span class=\"kw1\">is</span> Glib.<span class=\"me1\">Gdouble</span>;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> Draw <span class=\"br0\">(</span>C\u00a0: Cairo_Context; x\u00a0: Dub; y\u00a0: Dub; r\u00a0: Dub<span class=\"br0\">)</span> <span class=\"kw1\">is</span> <span class=\"kw1\">begin</span><br/>      Arc <span class=\"br0\">(</span>C, x, y, r + <span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.571</span>, <span class=\"nu0\">7.854</span><span class=\"br0\">)</span>;<br/>      Set_Source_Rgb <span class=\"br0\">(</span>C, <span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>; Fill <span class=\"br0\">(</span>C<span class=\"br0\">)</span>;<br/>      Arc_Negative <span class=\"br0\">(</span>C, x, y - r / <span class=\"nu0\">2.0</span>, r / <span class=\"nu0\">2.0</span>, <span class=\"nu0\">1.571</span>, <span class=\"nu0\">4.712</span><span class=\"br0\">)</span>;<br/>      Arc <span class=\"br0\">(</span>C, x, y + r / <span class=\"nu0\">2.0</span>, r / <span class=\"nu0\">2.0</span>, <span class=\"nu0\">1.571</span>, <span class=\"nu0\">4.712</span><span class=\"br0\">)</span>;<br/>      Arc_Negative <span class=\"br0\">(</span>C, x, y, r, <span class=\"nu0\">4.712</span>, <span class=\"nu0\">1.571</span><span class=\"br0\">)</span>;<br/>      Set_Source_Rgb <span class=\"br0\">(</span>C, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.0</span><span class=\"br0\">)</span>; Fill <span class=\"br0\">(</span>C<span class=\"br0\">)</span>;<br/>      Arc <span class=\"br0\">(</span>C, x, y - r / <span class=\"nu0\">2.0</span>, r / <span class=\"nu0\">5.0</span>, <span class=\"nu0\">1.571</span>, <span class=\"nu0\">7.854</span><span class=\"br0\">)</span>;<br/>      Set_Source_Rgb <span class=\"br0\">(</span>C, <span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>; Fill <span class=\"br0\">(</span>C<span class=\"br0\">)</span>;<br/>      Arc <span class=\"br0\">(</span>C, x, y + r / <span class=\"nu0\">2.0</span>, r / <span class=\"nu0\">5.0</span>, <span class=\"nu0\">1.571</span>, <span class=\"nu0\">7.854</span><span class=\"br0\">)</span>;<br/>      Set_Source_Rgb <span class=\"br0\">(</span>C, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.0</span><span class=\"br0\">)</span>; Fill <span class=\"br0\">(</span>C<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Draw;<br/>\u00a0<br/>   Surface\u00a0: Cairo_Surface;<br/>   Context\u00a0: Cairo_Context;<br/>   Status\u00a0: Cairo_Status;<br/><span class=\"kw1\">begin</span><br/>   Surface\u00a0:= Create <span class=\"br0\">(</span>Cairo_Format_ARGB32, <span class=\"nu0\">200</span>, <span class=\"nu0\">200</span><span class=\"br0\">)</span>;<br/>   Context\u00a0:= Create <span class=\"br0\">(</span>Surface<span class=\"br0\">)</span>;<br/>   Draw <span class=\"br0\">(</span>Context, <span class=\"nu0\">120.0</span>, <span class=\"nu0\">120.0</span>, <span class=\"nu0\">75.0</span><span class=\"br0\">)</span>;<br/>   Draw <span class=\"br0\">(</span>Context, <span class=\"nu0\">35.0</span>, <span class=\"nu0\">35.0</span>, <span class=\"nu0\">30.0</span><span class=\"br0\">)</span>;<br/>   Status\u00a0:= Write_To_Png <span class=\"br0\">(</span>Surface, <span class=\"st0\">\"YinYangAda.png\"</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">pragma</span> Assert <span class=\"br0\">(</span>Status = Cairo_Status_Success<span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> YinYang;</pre>"}, {"lang": "ALGOL 68", "loc": 38, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw3\">INT</span> scale x<span class=\"sy1\">=</span>2<span class=\"sy1\">,</span> scale y<span class=\"sy1\">=</span>1<span class=\"sy1\">;</span><br/><span class=\"kw3\">CHAR</span> black<span class=\"sy1\">=</span><span class=\"st0\">\"#\"</span><span class=\"sy1\">,</span> white<span class=\"sy1\">=</span><span class=\"st0\">\".\"</span><span class=\"sy1\">,</span> clear<span class=\"sy1\">=</span><span class=\"st0\">\" \"</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> <span class=\"kw22\">print</span> yin yang <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">REAL</span> radius<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>\u00a0<br/>  <span class=\"kw4\">PROC</span> in circle <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">REAL</span> centre x<span class=\"sy1\">,</span> centre y<span class=\"sy1\">,</span> radius<span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> y<span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span><br/>    <span class=\"br0\">(</span>x<span class=\"sy1\">-</span>centre x<span class=\"br0\">)</span><span class=\"sy1\">**</span>2<span class=\"sy1\">+</span><span class=\"br0\">(</span>y<span class=\"sy1\">-</span>centre y<span class=\"br0\">)</span><span class=\"sy1\">**</span>2 <span class=\"sy1\">&lt;=</span> radius<span class=\"sy1\">**</span>2<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw3\">REAL</span><span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span><span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><br/>    in big circle <span class=\"sy1\">=</span> in circle<span class=\"br0\">(</span>0<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> radius<span class=\"sy1\">,</span> <span class=\"sy1\">,</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    in white semi circle  <span class=\"sy1\">=</span> in circle<span class=\"br0\">(</span>0<span class=\"sy1\">,</span> <span class=\"sy1\">+</span>radius<span class=\"sy1\">/</span>2<span class=\"sy1\">,</span> radius<span class=\"sy1\">/</span>2<span class=\"sy1\">,</span> <span class=\"sy1\">,</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    in small black circle <span class=\"sy1\">=</span> in circle<span class=\"br0\">(</span>0<span class=\"sy1\">,</span> <span class=\"sy1\">+</span>radius<span class=\"sy1\">/</span>2<span class=\"sy1\">,</span> radius<span class=\"sy1\">/</span>6<span class=\"sy1\">,</span> <span class=\"sy1\">,</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    in black semi circle  <span class=\"sy1\">=</span> in circle<span class=\"br0\">(</span>0<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>radius<span class=\"sy1\">/</span>2<span class=\"sy1\">,</span> radius<span class=\"sy1\">/</span>2<span class=\"sy1\">,</span> <span class=\"sy1\">,</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    in small white circle <span class=\"sy1\">=</span> in circle<span class=\"br0\">(</span>0<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>radius<span class=\"sy1\">/</span>2<span class=\"sy1\">,</span> radius<span class=\"sy1\">/</span>6<span class=\"sy1\">,</span> <span class=\"sy1\">,</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw2\">FOR</span> sy <span class=\"kw2\">FROM</span> <span class=\"sy1\">+</span><span class=\"kw8\">ROUND</span><span class=\"br0\">(</span>radius <span class=\"sy1\">*</span> scale y<span class=\"br0\">)</span> <span class=\"kw2\">BY</span> <span class=\"sy1\">-</span>1 <span class=\"kw2\">TO</span> <span class=\"sy1\">-</span><span class=\"kw8\">ROUND</span><span class=\"br0\">(</span>radius <span class=\"sy1\">*</span> scale y<span class=\"br0\">)</span> <span class=\"kw2\">DO</span><br/>    <span class=\"kw2\">FOR</span> sx <span class=\"kw2\">FROM</span> <span class=\"sy1\">-</span><span class=\"kw8\">ROUND</span><span class=\"br0\">(</span>radius <span class=\"sy1\">*</span> scale x<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> <span class=\"sy1\">+</span><span class=\"kw8\">ROUND</span><span class=\"br0\">(</span>radius <span class=\"sy1\">*</span> scale x<span class=\"br0\">)</span> <span class=\"kw2\">DO</span><br/>      <span class=\"kw3\">REAL</span> x<span class=\"sy1\">=</span>sx<span class=\"sy1\">/</span>scale x<span class=\"sy1\">,</span> y<span class=\"sy1\">=</span>sy<span class=\"sy1\">/</span>scale y<span class=\"sy1\">;</span><br/>      <span class=\"kw22\">print</span><span class=\"br0\">(</span><br/>        <span class=\"kw2\">IF</span> in big circle<span class=\"br0\">(</span>x<span class=\"sy1\">,</span> y<span class=\"br0\">)</span> <span class=\"kw2\">THEN</span><br/>            <span class=\"kw2\">IF</span> in white semi circle<span class=\"br0\">(</span>x<span class=\"sy1\">,</span> y<span class=\"br0\">)</span> <span class=\"kw2\">THEN</span><br/>              <span class=\"kw2\">IF</span> in small black circle<span class=\"br0\">(</span>x<span class=\"sy1\">,</span> y<span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> black <span class=\"kw2\">ELSE</span> white <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">ELIF</span> in black semi circle<span class=\"br0\">(</span>x<span class=\"sy1\">,</span> y<span class=\"br0\">)</span> <span class=\"kw2\">THEN</span><br/>              <span class=\"kw2\">IF</span> in small white circle<span class=\"br0\">(</span>x<span class=\"sy1\">,</span> y<span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> white <span class=\"kw2\">ELSE</span> black <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">ELIF</span> x <span class=\"sy1\">&lt;</span> 0 <span class=\"kw2\">THEN</span> white <span class=\"kw2\">ELSE</span> black <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">ELSE</span><br/>          clear<br/>        <span class=\"kw2\">FI</span><br/>      <span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"kw22\">new line</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">OD</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>main<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>  <span class=\"kw22\">print</span> yin yang<span class=\"br0\">(</span>17<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">print</span> yin yang<span class=\"br0\">(</span>8<span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "Applesoft BASIC", "loc": 20, "block": "<pre class=\"text highlighted_source\">0 GOTO 6<br/>1Y=R:D=1-R:X=0:FORC=0TO1STEP0:M=D&gt;=0:Y=Y-M:D=D-Y*2*M:D=D+X*2+3:HPLOTXC-X,YC+YTOXC+X,YC+Y:HPLOTXC-Y,YC+XTOXC+Y,YC+X:HPLOTXC-X,YC-YTOXC+X,YC-Y:HPLOTXC-Y,YC-XTOXC+Y,YC-X:X=X+1:C=X&gt;=Y:NEXTC:RETURN<br/>2Y=R:D=1-R:X=0:FORC=0TO1STEP0:M=D&gt;=0:Y=Y-M:D=D-Y*2*M:D=D+X*2+3:HPLOTXC-X,YC+Y:HPLOTXC+X,YC+Y:HPLOTXC-Y,YC+X:HPLOTXC+Y,YC+X:HPLOTXC-X,YC-Y:HPLOTXC+X,YC-Y:HPLOTXC-Y,YC-X:HPLOTXC+Y,YC-X:X=X+1:C=X&gt;=Y:NEXTC:RETURN<br/>3Y=R:D=1-R:X=0:FORC=0TO1STEP0:M=D&gt;=0:Y=Y-M:D=D-Y*2*M:D=D+X*2+3:HPLOTXC,YC+YTOXC+X,YC+Y:HPLOTXC,YC+XTOXC+Y,YC+X:HPLOTXC,YC-YTOXC+X,YC-Y:HPLOTXC,YC-XTOXC+Y,YC-X:X=X+1:C=X&gt;=Y:NEXTC:RETURN<br/>\u00a0<br/>6 HGR2\u00a0: HCOLOR = 3\u00a0: HPLOT 0,0\u00a0: CALL 62454<br/>7 XC = 60\u00a0: YC = 60\u00a0: R = 30\u00a0: GOSUB 100YINYANG<br/>8 XC = 180\u00a0: YC = 80\u00a0: R = 60\u00a0: GOSUB 100YINYANG<br/>9 END<br/>\u00a0<br/>100 YP = YC\u00a0: S = R<br/>110 HCOLOR = 0: GOSUB 3FILLHALFCIRCLE<br/>120 HCOLOR = 3:YC = YP - S / 2\u00a0: R = S / 2\u00a0: GOSUB 1FILLCIRCLE<br/>130 HCOLOR = 0<br/>140 YC = YP + S / 2\u00a0: GOSUB 1FILLCIRCLE<br/>150 YC = YP - S / 2\u00a0: R = S / 6\u00a0: GOSUB 1FILLCIRCLE<br/>160 HCOLOR = 3<br/>170 YC = YP + S / 2\u00a0: GOSUB 1FILLCIRCLE<br/>180 HCOLOR = 0\u00a0: YC = YP\u00a0: R = S\u00a0: GOSUB 2CIRCLE<br/>190 RETURN</pre>"}, {"lang": "Asymptote", "loc": 18, "block": "<pre class=\"asymptote highlighted_source\"><span class=\"kw3\">unitsize</span><span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw4\">inch</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw3\">fill</span><span class=\"br0\">(</span><span class=\"kw3\">scale</span><span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"kw4\">unitsquare</span>, <span class=\"kw3\">invisible</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">picture</span> yinyang<span class=\"br0\">(</span><span class=\"kw2\">pair</span> <span class=\"kw3\">center</span>, <span class=\"kw2\">real</span> <span class=\"kw3\">radius</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">picture</span> p<span class=\"sy4\">;</span><br/>    <span class=\"kw3\">fill</span><span class=\"br0\">(</span>p, <span class=\"kw4\">unitcircle</span>, <span class=\"kw4\">white</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">fill</span><span class=\"br0\">(</span>p, <span class=\"kw2\">arc</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"kw4\">S</span>, <span class=\"kw4\">N</span><span class=\"br0\">)</span> <span class=\"sy2\">--</span> <span class=\"kw1\">cycle</span>, <span class=\"kw4\">black</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">fill</span><span class=\"br0\">(</span>p, <span class=\"kw2\">circle</span><span class=\"br0\">(</span><span class=\"kw4\">N</span><span class=\"sy2\">/</span><span class=\"nu0\">2</span>, <span class=\"nu0\">1</span><span class=\"sy2\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"kw4\">white</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">fill</span><span class=\"br0\">(</span>p, <span class=\"kw2\">circle</span><span class=\"br0\">(</span><span class=\"kw4\">S</span><span class=\"sy2\">/</span><span class=\"nu0\">2</span>, <span class=\"nu0\">1</span><span class=\"sy2\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"kw4\">black</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">fill</span><span class=\"br0\">(</span>p, <span class=\"kw2\">circle</span><span class=\"br0\">(</span><span class=\"kw4\">N</span><span class=\"sy2\">/</span><span class=\"nu0\">2</span>, <span class=\"nu0\">1</span><span class=\"sy2\">/</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>, <span class=\"kw4\">black</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">fill</span><span class=\"br0\">(</span>p, <span class=\"kw2\">circle</span><span class=\"br0\">(</span><span class=\"kw4\">S</span><span class=\"sy2\">/</span><span class=\"nu0\">2</span>, <span class=\"nu0\">1</span><span class=\"sy2\">/</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>, <span class=\"kw4\">white</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">draw</span><span class=\"br0\">(</span>p, <span class=\"kw4\">unitcircle</span>, <span class=\"kw3\">linewidth</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">/</span><span class=\"nu0\">32</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"kw4\">inch</span><span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"kw3\">gray</span><span class=\"br0\">(</span><span class=\"nu16\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw3\">shift</span><span class=\"br0\">(</span><span class=\"kw3\">center</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"kw3\">scale</span><span class=\"br0\">(</span><span class=\"kw3\">radius</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> p<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">add</span><span class=\"br0\">(</span>yinyang<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy2\">+</span> <span class=\"nu0\">1</span><span class=\"sy2\">/</span><span class=\"nu0\">4</span>, <span class=\"nu0\">4</span> <span class=\"sy2\">+</span> <span class=\"nu0\">3</span><span class=\"sy2\">/</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"kw3\">add</span><span class=\"br0\">(</span>yinyang<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy2\">+</span> <span class=\"nu0\">3</span><span class=\"sy2\">/</span><span class=\"nu0\">4</span>, <span class=\"nu0\">2</span> <span class=\"sy2\">+</span> <span class=\"nu0\">1</span><span class=\"sy2\">/</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span></pre>"}, {"lang": "AutoHotkey", "loc": 37, "block": "<pre class=\"ahk highlighted_source\">Yin_and_Yang<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span>  <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScriptDir\"><span class=\"kw2\">A_ScriptDir</span></a> <span class=\"st0\">\"\\YinYang1.png\"</span><span class=\"br0\">)</span><br/>Yin_and_Yang<span class=\"br0\">(</span><span class=\"nu0\">300</span><span class=\"sy0\">,</span> <span class=\"nu0\">300</span><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScriptDir\"><span class=\"kw2\">A_ScriptDir</span></a> <span class=\"st0\">\"\\YinYang2.png\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>Yin_and_Yang<span class=\"br0\">(</span>width<span class=\"sy0\">,</span> height<span class=\"sy0\">,</span> fileName<br/>\t<span class=\"sy0\">,</span> color1<span class=\"sy0\">=</span>0xFFFFFFFF<span class=\"sy0\">,</span> color2<span class=\"sy0\">=</span>0xFF000000<span class=\"sy0\">,</span> outlineWidth<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\u00a0<br/>\tpToken \t <span class=\"sy0\">:=</span> gdip_Startup<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\tpBitmap\t <span class=\"sy0\">:=</span> gdip_CreateBitmap<span class=\"br0\">(</span>w <span class=\"sy0\">:=</span> width<span class=\"sy0\">,</span> h <span class=\"sy0\">:=</span> height<span class=\"br0\">)</span><br/>\tw<span class=\"sy0\">-=</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> h<span class=\"sy0\">-=</span><span class=\"nu0\">1</span><br/>\tpGraphics<span class=\"sy0\">:=</span> gdip_GraphicsFromImage<span class=\"br0\">(</span>pBitmap<span class=\"br0\">)</span><br/>\tpBrushW\t <span class=\"sy0\">:=</span> gdip_BrushCreateSolid<span class=\"br0\">(</span>color1<span class=\"br0\">)</span><br/>\tpBrushB\t <span class=\"sy0\">:=</span> gdip_BrushCreateSolid<span class=\"br0\">(</span>color2<span class=\"br0\">)</span><br/>\u00a0<br/>\tgdip_SetSmoothingMode<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> \t\t\t<span class=\"co1\">; Antialiasing</span><br/>\u00a0<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>outlineWidth<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\tpPen <span class=\"sy0\">:=</span> gdip_CreatePen<span class=\"br0\">(</span>0xFF000000<span class=\"sy0\">,</span> outlineWidth<span class=\"br0\">)</span><br/>\t\tgdip_DrawEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pPen<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> w<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><br/>\t\tgdip_DeletePen<span class=\"br0\">(</span>pPen<span class=\"br0\">)</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\tgdip_FillPie<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrushB<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> w<span class=\"sy0\">,</span> h<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span><br/>\tgdip_FillPie<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrushW<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> w<span class=\"sy0\">,</span> h<span class=\"sy0\">,</span>  <span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span><br/>\tgdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrushB<span class=\"sy0\">,</span> w<span class=\"sy0\">//</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> h<span class=\"sy0\">//</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> w<span class=\"sy0\">//</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> h<span class=\"sy0\">//</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\tgdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrushW<span class=\"sy0\">,</span> w<span class=\"sy0\">//</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span>   <span class=\"sy0\">,</span> w<span class=\"sy0\">//</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> h<span class=\"sy0\">//</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\tgdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrushB<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">*</span>w<span class=\"sy0\">//</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> h<span class=\"sy0\">//</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> w<span class=\"sy0\">//</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> h<span class=\"sy0\">//</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>\tgdip_FillEllipse<span class=\"br0\">(</span>pGraphics<span class=\"sy0\">,</span> pBrushW<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">*</span>w<span class=\"sy0\">//</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">*</span>h<span class=\"sy0\">//</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span>w<span class=\"sy0\">//</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span>h<span class=\"sy0\">//</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>\u00a0<br/>\tr <span class=\"sy0\">:=</span> gdip_SaveBitmapToFile<span class=\"br0\">(</span>pBitmap<span class=\"sy0\">,</span> filename<span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"co1\">; cleanup:</span><br/>\tgdip_DeleteBrush<span class=\"br0\">(</span>pBrushW<span class=\"br0\">)</span><span class=\"sy0\">,</span> gdip_deleteBrush<span class=\"br0\">(</span>pBrushB<span class=\"br0\">)</span><br/>\tgdip_DisposeImage<span class=\"br0\">(</span>pBitmap<span class=\"br0\">)</span><br/>\tgdip_DeleteGraphics<span class=\"br0\">(</span>pGraphics<span class=\"br0\">)</span><br/>\tgdip_Shutdown<span class=\"br0\">(</span>pToken<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> r<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BBC BASIC", "loc": 16, "block": "<pre class=\"text highlighted_source\">      PROCyinyang(200, 200, 100)<br/>      PROCyinyang(700, 400, 300)<br/>      END<br/>\u00a0<br/>      DEF PROCyinyang(xpos%, ypos%, size%)<br/>      CIRCLE xpos%, ypos%, size%<br/>      LINE xpos%, ypos%+size%, xpos%, ypos%-size%<br/>      FILL xpos%+size%/2, ypos%<br/>      CIRCLE FILL xpos%, ypos%-size%/2, size%/2+2<br/>      GCOL 15<br/>      CIRCLE FILL xpos%, ypos%+size%/2, size%/2+2<br/>      CIRCLE FILL xpos%, ypos%-size%/2, size%/6+2<br/>      GCOL 0<br/>      CIRCLE FILL xpos%, ypos%+size%/2, size%/6+2<br/>      CIRCLE xpos%, ypos%, size%<br/>      ENDPROC</pre>"}, {"lang": "Befunge", "loc": 8, "block": "<pre class=\"text highlighted_source\">55+:#. 00p:2*10p:2/20p6/30p01v<br/>@#!`g01:+1g07,+55$&lt;v0-g010p07_<br/>0g-20g+:*+30g:*`v ^_:2/:*:70g0<br/>3+*:-g02-g00g07:_   0v v!`*:g0<br/>g-20g+:*+20g:*`&gt;v&gt; ^ v1_:70g00<br/>2+*:-g02-g00g07:_   1v v!`*:g0<br/>g-:*+00g:*`#v_$:0`!0\\v0_:70g00<br/>0#+g#1,#$&lt;  &gt; 2 #^&gt;#g&gt;#04#1+#:</pre>"}, {"lang": "C", "loc": 30, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> draw_yinyang<span class=\"br0\">(</span><span class=\"kw4\">int</span> trans<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> scale<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"&lt;use xlink:href='#y' transform='translate(%d,%d) scale(%g)'/&gt;\"</span><span class=\"sy0\">,</span><br/>\t\ttrans<span class=\"sy0\">,</span> trans<span class=\"sy0\">,</span> scale<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><br/>\t<span class=\"st0\">\"&lt;?xml version='1.0' encoding='UTF-8' standalone='no'?&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"&lt;svg xmlns='http://www.w3.org/2000/svg' version='1.1'<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\txmlns:xlink='http://www.w3.org/1999/xlink'<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\twidth='30' height='30'&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t&lt;defs&gt;&lt;g id='y'&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\t&lt;circle cx='0' cy='0' r='200' stroke='black'<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\t\tfill='white' stroke-width='1'/&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\t&lt;path d='M0 -200 A 200 200 0 0 0 0 200<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\t\t100 100 0 0 0 0 0 100 100 0 0 1 0 -200<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\t\tz' fill='black'/&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\t&lt;circle cx='0' cy='100' r='33' fill='white'/&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t\t&lt;circle cx='0' cy='-100' r='33' fill='black'/&gt;<span class=\"es1\">\\n</span>\"</span><br/>\t<span class=\"st0\">\"\t&lt;/g&gt;&lt;/defs&gt;<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tdraw_yinyang<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu18\">.05</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tdraw_yinyang<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu18\">.02</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"&lt;/svg&gt;\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 33, "block": "<pre class=\"csharp highlighted_source\">\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">partial</span> <span class=\"kw4\">class</span> Form1 <span class=\"sy0\">:</span> Form<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">public</span> Form1<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            InitializeComponent<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Paint <span class=\"sy0\">+=</span> Form1_Paint<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> Form1_Paint<span class=\"br0\">(</span><span class=\"kw4\">object</span> sender, PaintEventArgs e<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            Graphics g <span class=\"sy0\">=</span> e<span class=\"sy0\">.</span><span class=\"me1\">Graphics</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">SmoothingMode</span> <span class=\"sy0\">=</span> <span class=\"kw5\">System.<span class=\"me1\">Drawing</span><span class=\"sy0\">.</span><span class=\"me1\">Drawing2D</span></span><span class=\"sy0\">.</span><span class=\"me1\">SmoothingMode</span><span class=\"sy0\">.</span><span class=\"me1\">AntiAlias</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            DrawTaijitu<span class=\"br0\">(</span>g, <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">50</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span>, <span class=\"nu0\">200</span>, <span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            DrawTaijitu<span class=\"br0\">(</span>g, <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span>, <span class=\"nu0\">60</span>, <span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> DrawTaijitu<span class=\"br0\">(</span>Graphics g, Point pt, <span class=\"kw4\">int</span> width, <span class=\"kw4\">bool</span> hasOutline<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillPie</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">X</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, width, width, <span class=\"nu0\">90</span>, <span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillPie</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">White</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">X</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, width, width, <span class=\"nu0\">270</span>, <span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">float</span> headSize <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">float</span> headXPosition <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.25</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, headXPosition, Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span><span class=\"br0\">)</span>, headSize, headSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">White</span>, headXPosition, Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, headSize, headSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">float</span> headBlobSize <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.125</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">float</span> headBlobXPosition <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.4375</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">White</span>, headBlobXPosition, Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.1875</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, headBlobSize, headBlobSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, headBlobXPosition, Convert<span class=\"sy0\">.</span><span class=\"me1\">ToSingle</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.6875</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, headBlobSize, headBlobSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>hasOutline<span class=\"br0\">)</span> g<span class=\"sy0\">.</span><span class=\"me1\">DrawEllipse</span><span class=\"br0\">(</span>Pens<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">X</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, width, width<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span></pre>"}, {"lang": "Commodore BASIC", "loc": 9, "block": "<pre class=\"text highlighted_source\">10 COLOR 0,1:COLOR 1,2:COLOR 4,1:GRAPHIC 1,1<br/>20 X=160:Y=100:R=80<br/>30 CIRCLE 1,X,Y,R<br/>40 CIRCLE 1,X,Y-R/2,R/2,R/2,0,180<br/>50 CIRCLE 1,X,Y+R/2,R/2,R/2,180,360<br/>60 CIRCLE 1,X,Y-R/2,R/8<br/>70 CIRCLE 1,X,Y+R/2,R/8<br/>80 PAINT 1,X,Y+R/2<br/>90 PAINT 1,X-R/2,Y</pre>"}, {"lang": "D", "loc": 37, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">array</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span><br/>       std.<span class=\"me1\">conv</span><span class=\"sy0\">,</span> std.<span class=\"me1\">typecons</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">string</span> yinYang<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"coMULTI\">/*nothrow @safe*/</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">enum</span> <span class=\"sy0\">:</span> <span class=\"kw4\">char</span> <span class=\"br0\">{</span> empty <span class=\"sy0\">=</span> <span class=\"st0\">' '</span><span class=\"sy0\">,</span> white <span class=\"sy0\">=</span> <span class=\"st0\">'.'</span><span class=\"sy0\">,</span> black <span class=\"sy0\">=</span> <span class=\"st0\">'#'</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">const</span> radii <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">=&gt;</span> i <span class=\"sy0\">*</span> n<span class=\"br0\">)</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> ranges <span class=\"sy0\">=</span> radii.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>r <span class=\"sy0\">=&gt;</span> iota<span class=\"br0\">(</span><span class=\"sy0\">-</span>r<span class=\"sy0\">,</span> r <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">array</span><span class=\"br0\">)</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>    <span class=\"kw2\">alias</span> V <span class=\"sy0\">=</span> Tuple<span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"sy0\">,</span><span class=\"st0\">\"x\"</span><span class=\"sy0\">,</span> <span class=\"kw4\">int</span><span class=\"sy0\">,</span><span class=\"st0\">\"y\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> squares<span class=\"sy0\">,</span> circles<span class=\"sy0\">;</span><br/>    squares <span class=\"sy0\">=</span> ranges.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>r <span class=\"sy0\">=&gt;</span> cartesianProduct<span class=\"br0\">(</span>r<span class=\"sy0\">,</span> r<span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span>V.<span class=\"me1\">array</span><span class=\"br0\">)</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>sqrPoints<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> radius<span class=\"sy0\">;</span> zip<span class=\"br0\">(</span>squares<span class=\"sy0\">,</span> radii<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        circles <span class=\"sy0\">~=</span> sqrPoints.<span class=\"me1\">filter</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>p <span class=\"sy0\">=&gt;</span> p<span class=\"br0\">[</span><span class=\"br0\">]</span>.<span class=\"me1\">hypot</span> <span class=\"sy0\">&lt;=</span> radius<span class=\"br0\">)</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> m <span class=\"sy0\">=</span> squares<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">zip</span><span class=\"br0\">(</span>empty.<span class=\"me1\">repeat</span><span class=\"br0\">)</span>.<span class=\"me1\">assocArray</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> p<span class=\"sy0\">;</span> circles<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        m<span class=\"br0\">[</span>p<span class=\"br0\">]</span> <span class=\"sy0\">=</span> black<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> p<span class=\"sy0\">;</span> circles<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">x</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            m<span class=\"br0\">[</span>p<span class=\"br0\">]</span> <span class=\"sy0\">=</span> white<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> p<span class=\"sy0\">;</span> circles<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        m<span class=\"br0\">[</span>V<span class=\"br0\">(</span>p.<span class=\"me1\">x</span><span class=\"sy0\">,</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">+</span> <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> black<span class=\"sy0\">;</span><br/>        m<span class=\"br0\">[</span>V<span class=\"br0\">(</span>p.<span class=\"me1\">x</span><span class=\"sy0\">,</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> white<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> p<span class=\"sy0\">;</span> circles<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        m<span class=\"br0\">[</span>V<span class=\"br0\">(</span>p.<span class=\"me1\">x</span><span class=\"sy0\">,</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">+</span> <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> white<span class=\"sy0\">;</span><br/>        m<span class=\"br0\">[</span>V<span class=\"br0\">(</span>p.<span class=\"me1\">x</span><span class=\"sy0\">,</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> black<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> ranges<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>           .<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>y <span class=\"sy0\">=&gt;</span> ranges<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">retro</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> m<span class=\"br0\">[</span>V<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me1\">text</span><span class=\"br0\">)</span><br/>           .<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"nu0\">2</span>.<span class=\"me1\">yinYang</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>    <span class=\"nu0\">1</span>.<span class=\"me1\">yinYang</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 52, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">procedure</span> DrawYinAndYang<span class=\"br0\">(</span>Canv<span class=\"sy1\">:</span> TCanvas<span class=\"sy1\">;</span> R<span class=\"sy1\">:</span> TRect<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Brush</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clWhite<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pen</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clWhite<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pie</span><span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Brush</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clBlack<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pen</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clBlack<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pie</span><span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Brush</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clWhite<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pen</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clWhite<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Ellipse</span><span class=\"br0\">(</span><span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> <span class=\"nu0\">3</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Top</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Brush</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clBlack<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pen</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clBlack<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Ellipse</span><span class=\"br0\">(</span><span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> <span class=\"nu0\">3</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span>R<span class=\"sy1\">.</span><span class=\"me1\">Top</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Brush</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clWhite<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pen</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clWhite<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Ellipse</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">7</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> <span class=\"nu0\">9</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">11</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span> <span class=\"sy3\">+</span> <span class=\"nu0\">5</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">9</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> <span class=\"nu0\">7</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">13</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span> <span class=\"sy3\">+</span> <span class=\"nu0\">3</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Brush</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clBlack<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Pen</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clBlack<span class=\"sy1\">;</span><br/>  Canv<span class=\"sy1\">.</span><span class=\"me1\">Ellipse</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">7</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> <span class=\"nu0\">9</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span> <span class=\"sy3\">+</span> <span class=\"nu0\">13</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">9</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Right</span> <span class=\"sy3\">+</span> <span class=\"nu0\">7</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Bottom</span> <span class=\"sy3\">+</span> <span class=\"nu0\">11</span> <span class=\"sy3\">*</span> R<span class=\"sy1\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span> <span class=\"kw1\">div</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> TForm1<span class=\"sy1\">.</span><span class=\"me1\">FormCreate</span><span class=\"br0\">(</span>Sender<span class=\"sy1\">:</span> <span class=\"kw4\">TObject</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  ClientWidth <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">400</span><span class=\"sy1\">;</span><br/>  ClientHeight <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">400</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> TForm1<span class=\"sy1\">.</span><span class=\"me1\">FormPaint</span><span class=\"br0\">(</span>Sender<span class=\"sy1\">:</span> <span class=\"kw4\">TObject</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  R<span class=\"sy1\">:</span> TRect<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  R <span class=\"sy1\">:</span><span class=\"sy3\">=</span> ClientRect<span class=\"sy1\">;</span><br/>  Canvas<span class=\"sy1\">.</span><span class=\"me1\">Brush</span><span class=\"sy1\">.</span><span class=\"me1\">Color</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> clGray<span class=\"sy1\">;</span><br/>  Canvas<span class=\"sy1\">.</span><span class=\"me1\">FillRect</span><span class=\"br0\">(</span>R<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  InflateRect<span class=\"br0\">(</span>R<span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">50</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  OffsetRect<span class=\"br0\">(</span>R<span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">40</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">40</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DrawYinAndYang<span class=\"br0\">(</span>Canvas<span class=\"sy1\">,</span> R<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  InflateRect<span class=\"br0\">(</span>R<span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">90</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  OffsetRect<span class=\"br0\">(</span>R<span class=\"sy1\">,</span> <span class=\"nu0\">170</span><span class=\"sy1\">,</span> <span class=\"nu0\">170</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DrawYinAndYang<span class=\"br0\">(</span>Canvas<span class=\"sy1\">,</span> R<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0</pre>"}, {"lang": "DWScript", "loc": 77, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">type</span><br/>   TColorFuncX <span class=\"sy3\">=</span> <span class=\"kw1\">function</span> <span class=\"br0\">(</span>x <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">type</span><br/>   TSquareBoard <span class=\"sy3\">=</span> <span class=\"kw1\">class</span><br/>      Scale <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>      Pix <span class=\"sy1\">:</span> <span class=\"kw1\">array</span> <span class=\"kw1\">of</span> <span class=\"kw1\">array</span> <span class=\"kw1\">of</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">constructor</span> Create<span class=\"br0\">(</span>aScale <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">begin</span><br/>         Scale <span class=\"sy1\">:</span><span class=\"sy3\">=</span> aScale<span class=\"sy1\">;</span><br/>         Pix <span class=\"sy1\">:</span><span class=\"sy3\">=</span> new <span class=\"kw4\">Integer</span><span class=\"br0\">[</span>aScale<span class=\"sy3\">*</span><span class=\"nu0\">12</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> aScale<span class=\"sy3\">*</span><span class=\"nu0\">12</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      method Print<span class=\"sy1\">;</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">var</span> i<span class=\"sy1\">,</span> j <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">for</span> i<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">to</span> Pix<span class=\"sy1\">.</span><span class=\"me1\">High</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>            <span class=\"kw1\">for</span> j<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">to</span> Pix<span class=\"sy1\">.</span><span class=\"me1\">High</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>               <span class=\"kw1\">case</span> Pix<span class=\"br0\">[</span>j<span class=\"sy1\">,</span> i<span class=\"br0\">]</span> <span class=\"kw1\">of</span><br/>                  <span class=\"nu0\">1</span> <span class=\"sy1\">:</span> Print<span class=\"br0\">(</span><span class=\"st0\">'.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                  <span class=\"nu0\">2</span> <span class=\"sy1\">:</span> Print<span class=\"br0\">(</span><span class=\"st0\">'#'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>               <span class=\"kw1\">else</span><br/>                  Print<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>               <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>            <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>            PrintLn<span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      method DrawCircle<span class=\"br0\">(</span>cx<span class=\"sy1\">,</span> cy<span class=\"sy1\">,</span> cr <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span> color <span class=\"sy1\">:</span> TColorFuncX<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">var</span> rr <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Sqr</span><span class=\"br0\">(</span>cr<span class=\"sy3\">*</span>Scale<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">var</span> x<span class=\"sy1\">,</span> y <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">for</span> x <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> Pix<span class=\"sy1\">.</span><span class=\"me1\">High</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>            <span class=\"kw1\">for</span> y <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> Pix<span class=\"sy1\">.</span><span class=\"me1\">High</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>               <span class=\"kw1\">if</span> <span class=\"kw3\">Sqr</span><span class=\"br0\">(</span>x<span class=\"sy3\">-</span>cx<span class=\"sy3\">*</span>Scale<span class=\"br0\">)</span><span class=\"sy3\">+</span><span class=\"kw3\">Sqr</span><span class=\"br0\">(</span>y<span class=\"sy3\">-</span>cy<span class=\"sy3\">*</span>Scale<span class=\"br0\">)</span>&lt;<span class=\"sy3\">=</span>rr <span class=\"kw1\">then</span><br/>                  Pix<span class=\"br0\">[</span>x<span class=\"sy1\">,</span> y<span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> color<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      method ColorHalf<span class=\"br0\">(</span>x <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x&lt;<span class=\"nu0\">6</span><span class=\"sy3\">*</span>Scale<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">1</span><br/>         <span class=\"kw1\">else</span> Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">2</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      method ColorYin<span class=\"br0\">(</span>x <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">begin</span><br/>         Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">2</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      method ColorYang<span class=\"br0\">(</span>x <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">begin</span><br/>         Result<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      method YinYang<span class=\"sy1\">;</span><br/>      <span class=\"kw1\">begin</span><br/>         DrawCircle<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> ColorHalf<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         DrawCircle<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> ColorYang<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         DrawCircle<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">9</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> ColorYin<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         DrawCircle<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">9</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> ColorYang<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         DrawCircle<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> ColorYin<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> sq <span class=\"sy1\">:</span><span class=\"sy3\">=</span> new TSquareBoard<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>sq<span class=\"sy1\">.</span><span class=\"me1\">YinYang</span><span class=\"sy1\">;</span><br/>sq<span class=\"sy1\">.</span><span class=\"me1\">Print</span><span class=\"sy1\">;</span><br/>\u00a0<br/>sq <span class=\"sy1\">:</span><span class=\"sy3\">=</span> new TSquareBoard<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>sq<span class=\"sy1\">.</span><span class=\"me1\">YinYang</span><span class=\"sy1\">;</span><br/>sq<span class=\"sy1\">.</span><span class=\"me1\">Print</span><span class=\"sy1\">;</span></pre>"}, {"lang": "Gambas", "loc": 23, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Form_Open<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> hPictureBox <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=picturebox+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">PictureBox</span></a><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a> <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a><br/>  .<span class=\"me1\">Title</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Yin and yang\"</span><br/>  .<span class=\"me1\">Padding</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><br/>  .<span class=\"me1\">Height</span> <span class=\"sy0\">=</span> <span class=\"nu0\">210</span><br/>  .<span class=\"me1\">Width</span> <span class=\"sy0\">=</span> <span class=\"nu0\">310</span><br/>  .<span class=\"me1\">Arrangement</span> <span class=\"sy0\">=</span> Arrange.<span class=\"me1\">Row</span><br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> DownTo <span class=\"nu0\">1</span><br/>  hPictureBox <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=picturebox+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">PictureBox</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a><span class=\"br0\">)</span><br/>  <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a> hPictureBox<br/>    .<span class=\"me1\">Height</span> <span class=\"sy0\">=</span> siCount <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><br/>    .<span class=\"me1\">Width</span> <span class=\"sy0\">=</span> siCount <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><br/>    .<a href=\"http://www.google.com/search?hl=en&amp;q=picture+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Picture</span></a> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=picture+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Picture</span></a>.<span class=\"me1\">Load</span><span class=\"br0\">(</span><span class=\"st0\">\"../yinyang.png\"</span><span class=\"br0\">)</span><br/>    .<span class=\"me1\">Stretch</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a><br/>  <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 52, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"os\"</span><br/>    <span class=\"st0\">\"text/template\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> tmpl <span class=\"sy2\">=</span> <span class=\"co2\">`&lt;?xml version=\"1.0\"?&gt;<br/>&lt;svg xmlns=\"http://www.w3.org/2000/svg\"<br/>    xmlns:xlink=\"http://www.w3.org/1999/xlink\"<br/>    width=\"210\" height=\"150\"&gt;<br/>&lt;symbol id=\"yy\" viewBox=\"0 0 200 200\"&gt;<br/>&lt;circle stroke=\"black\" stroke-width=\"2\" fill=\"white\"<br/>    cx=\"100\" cy=\"100\" r=\"99\" /&gt;<br/>&lt;path fill=\"black\"<br/>    d=\"M100 100 a49 49 0 0 0 0 -98<br/>    v-1 a99 99 0 0 1 0 198<br/>    v-1 a49 49 0 0 1 0 -98\" /&gt;<br/>&lt;circle fill=\"black\" cx=\"100\" cy=\"51\" r=\"17\" /&gt;<br/>&lt;circle fill=\"white\" cx=\"100\" cy=\"149\" r=\"17\" /&gt;<br/>&lt;/symbol&gt;<br/>{{range .}}&lt;use xlink:href=\"#yy\"<br/>    x=\"{{.X}}\" y=\"{{.Y}}\" width=\"{{.Sz}}\" height=\"{{.Sz}}\"/&gt;<br/>{{end}}&lt;/svg&gt;<br/>`</span><br/>\u00a0<br/><span class=\"co1\">// structure specifies position and size to draw symbol</span><br/><span class=\"kw1\">type</span> xysz <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    X<span class=\"sy1\">,</span> Y<span class=\"sy1\">,</span> Sz <span class=\"kw4\">int</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// example data to specify drawing the symbol twice,</span><br/><span class=\"co1\">// with different position and size. </span><br/><span class=\"kw1\">var</span> yys <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span>xysz<span class=\"sy1\">{</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">},</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">140</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">60</span><span class=\"sy1\">},</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    xt <span class=\"sy2\">:=</span> template<span class=\"sy3\">.</span>New<span class=\"sy1\">(</span><span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>    template<span class=\"sy3\">.</span><span class=\"me1\">Must</span><span class=\"sy1\">(</span>xt<span class=\"sy3\">.</span><span class=\"me1\">Parse</span><span class=\"sy1\">(</span>tmpl<span class=\"sy1\">))</span><br/>    f<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span><span class=\"me1\">Create</span><span class=\"sy1\">(</span><span class=\"st0\">\"yy.svg\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">:=</span> xt<span class=\"sy3\">.</span>Execute<span class=\"sy1\">(</span>f<span class=\"sy1\">,</span> yys<span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    f<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 18, "block": "<pre class=\"haskell highlighted_source\"><span class=\"coMULTI\">{-# LANGUAGE NoMonomorphismRestriction #-}</span><br/>\u00a0<br/><span class=\"kw1\">import</span> Diagrams<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html\"><span class=\"kw2\">Prelude</span></a><br/><span class=\"kw1\">import</span> Diagrams<span class=\"sy0\">.</span>Backend<span class=\"sy0\">.</span>Cairo<span class=\"sy0\">.</span>CmdLine<br/>\u00a0<br/>yinyang <span class=\"sy0\">=</span> lw <span class=\"nu0\">0</span> <span class=\"sy0\">$</span><br/>          perim # lw <span class=\"nu0\">0.003</span> <span class=\"sy0\">&lt;&gt;</span><br/>          torus white black # xform <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:id\"><span class=\"kw3\">id</span></a> <span class=\"sy0\">&lt;&gt;</span><br/>          torus black white # xform <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:negate\"><span class=\"kw3\">negate</span></a> <span class=\"sy0\">&lt;&gt;</span><br/>          clipBy perim base<br/>  <span class=\"kw1\">where</span> perim      <span class=\"sy0\">=</span> arc <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"nu0\">360</span> <span class=\"sy0\">::</span> Deg<span class=\"br0\">)</span> # scale <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>        torus c c<span class=\"st0\">' = circle (1/3) # fc c'</span> <span class=\"sy0\">&lt;&gt;</span> circle <span class=\"nu0\">1</span> # fc c<br/>        xform f    <span class=\"sy0\">=</span> translateY <span class=\"br0\">(</span>f <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> scale <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>        base       <span class=\"sy0\">=</span> rect <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span> # fc white <span class=\"sy0\">|||</span> rect <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span> # fc black<br/>\u00a0<br/>main <span class=\"sy0\">=</span> defaultMain <span class=\"sy0\">$</span> <br/>       pad <span class=\"nu0\">1.1</span> <span class=\"sy0\">$</span> <br/>       beside <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> yinyang <span class=\"br0\">(</span>yinyang # scale <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 23, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> graphics<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>YinYang<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>YinYang<span class=\"br0\">(</span><span class=\"nu0\">40</span><span class=\"sy1\">,</span><span class=\"st0\">\"blue\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"yellow\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"white\"</span><span class=\"br0\">)</span><br/>WDone<span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"co1\"># quit on Q/q</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> YinYang<span class=\"br0\">(</span>R<span class=\"sy1\">,</span>lhs<span class=\"sy1\">,</span>rhs<span class=\"sy1\">,</span>bg<span class=\"br0\">)</span>   <span class=\"co1\"># draw YinYang with radius of R pixels and ...</span><br/><span class=\"sy1\">/</span>lhs <span class=\"sy1\">:=</span> <span class=\"st0\">\"white\"</span>                   <span class=\"co1\"># left hand side </span><br/><span class=\"sy1\">/</span>rhs <span class=\"sy1\">:=</span> <span class=\"st0\">\"black\"</span>                   <span class=\"co1\"># right hand side</span><br/><span class=\"sy1\">/</span>bg  <span class=\"sy1\">:=</span> <span class=\"st0\">\"grey\"</span>                    <span class=\"co1\"># background</span><br/>\u00a0<br/>wsize  <span class=\"sy1\">:=</span> <span class=\"nu0\">2</span><span class=\"sy1\">*</span><span class=\"br0\">(</span>C <span class=\"sy1\">:=</span> R <span class=\"sy1\">+</span> <span class=\"br0\">(</span>margin <span class=\"sy1\">:=</span> R<span class=\"sy1\">/</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>W <span class=\"sy1\">:=</span> WOpen<span class=\"br0\">(</span><span class=\"st0\">\"size=\"</span><span class=\"sy1\">||</span>wsize<span class=\"sy1\">||</span><span class=\"st0\">\",\"</span><span class=\"sy1\">||</span>wsize<span class=\"sy1\">,</span><span class=\"st0\">\"bg=\"</span><span class=\"sy1\">||</span>bg<span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Unable to open Window\"</span><span class=\"br0\">)</span><br/><span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span><span class=\"st0\">\"fg=\"</span><span class=\"sy1\">||</span>lhs<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"kw5\">FillCircle</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>R<span class=\"sy1\">,+</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"br0\">)</span>        <span class=\"co1\"># main halves</span><br/><span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span><span class=\"st0\">\"fg=\"</span><span class=\"sy1\">||</span>rhs<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"kw5\">FillCircle</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>R<span class=\"sy1\">,-</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"br0\">)</span>     <br/><span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span><span class=\"st0\">\"fg=\"</span><span class=\"sy1\">||</span>lhs<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"kw5\">FillCircle</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>C<span class=\"sy1\">+</span>R<span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span>R<span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,-</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\"># sub halves</span><br/><span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span><span class=\"st0\">\"fg=\"</span><span class=\"sy1\">||</span>rhs<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"kw5\">FillCircle</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>C<span class=\"sy1\">-</span>R<span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span>R<span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"kw4\">dtor</span><span class=\"br0\">(</span><span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span><span class=\"st0\">\"fg=\"</span><span class=\"sy1\">||</span>lhs<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"kw5\">FillCircle</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>C<span class=\"sy1\">-</span>R<span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span>R<span class=\"sy1\">/</span><span class=\"nu0\">8</span><span class=\"br0\">)</span>                      <span class=\"co1\"># dots</span><br/><span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span><span class=\"st0\">\"fg=\"</span><span class=\"sy1\">||</span>rhs<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <span class=\"kw5\">FillCircle</span><span class=\"br0\">(</span>W<span class=\"sy1\">,</span>C<span class=\"sy1\">,</span>C<span class=\"sy1\">+</span>R<span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span>R<span class=\"sy1\">/</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 14, "block": "<pre class=\"j highlighted_source\">yinyang=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  radii=. <span class=\"kw2\">y</span>*<span class=\"nu0\">1</span> <span class=\"nu0\">3</span> <span class=\"nu0\">6</span><br/>  ranges=. i:each radii<br/>  squares=. ,\"<span class=\"nu0\">0</span>/~each ranges<br/>  circles=. radii <span class=\"sy0\">(</span>[ &gt;: +/\"<span class=\"nu0\">1</span>&amp;.:*:@]<span class=\"sy0\">)</span>each squares<br/>  cInds=. <span class=\"sy0\">(</span>{:radii<span class=\"sy0\">)</span> +each circles #&amp;<span class=\"sy0\">(</span>,/<span class=\"sy0\">)</span>each squares<br/>\u00a0<br/>  M=. <span class=\"st_h\">' *.'</span> {~  circles <span class=\"sy0\">(</span>*  <span class=\"nu0\">1</span> + <span class=\"nu0\">0</span> &gt;: {:\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span>&amp;<span class=\"sy0\">(</span><span class=\"nu0\">_1</span>&amp;{::<span class=\"sy0\">)</span> squares<br/>  offset=. <span class=\"nu0\">3</span>*<span class=\"kw2\">y</span>,<span class=\"nu0\">0</span><br/>  M=. <span class=\"st_h\">'*'</span> <span class=\"sy0\">((</span><span class=\"nu0\">_2</span> {:: cInds<span class=\"sy0\">)</span> &lt;@:+\"<span class=\"nu0\">1</span> offset<span class=\"sy0\">)</span>} M<br/>  M=. <span class=\"st_h\">'.'</span> <span class=\"sy0\">((</span><span class=\"nu0\">_2</span> {:: cInds<span class=\"sy0\">)</span> &lt;@:-\"<span class=\"nu0\">1</span> offset<span class=\"sy0\">)</span>} M<br/>  M=. <span class=\"st_h\">'.'</span> <span class=\"sy0\">((</span><span class=\"nu0\">_3</span> {:: cInds<span class=\"sy0\">)</span> &lt;@:+\"<span class=\"nu0\">1</span> offset<span class=\"sy0\">)</span>} M<br/>  M=. <span class=\"st_h\">'*'</span> <span class=\"sy0\">((</span><span class=\"nu0\">_3</span> {:: cInds<span class=\"sy0\">)</span> &lt;@:-\"<span class=\"nu0\">1</span> offset<span class=\"sy0\">)</span>} M<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 81, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">package</span> <span class=\"co2\">org.rosettacode.yinandyang</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.Color</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.Graphics</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.Image</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.image.BufferedImage</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.ImageIcon</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.JFrame</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.JLabel</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> YinYangGenerator<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> size<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> YinYangGenerator<span class=\"br0\">(</span><span class=\"kw1\">final</span> <span class=\"kw4\">int</span> size<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">size</span> <span class=\"sy0\">=</span> size<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co3\">/**<br/>     *  Draw a yin yang symbol on the given graphics context.<br/>     */</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> drawYinYang<span class=\"br0\">(</span><span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> graphics<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"co1\">// Preserve the color for the caller</span><br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a> colorSave <span class=\"sy0\">=</span> graphics.<span class=\"me1\">getColor</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        graphics.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">WHITE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Use fillOval to draw a filled in circle</span><br/>        graphics.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, size<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, size<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        graphics.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Use fillArc to draw part of a filled in circle</span><br/>        graphics.<span class=\"me1\">fillArc</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, size<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, size<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">270</span>, <span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        graphics.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>size<span class=\"sy0\">/</span><span class=\"nu0\">4</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        graphics.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">WHITE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        graphics.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>size<span class=\"sy0\">/</span><span class=\"nu0\">4</span>, <span class=\"nu0\">0</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        graphics.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"sy0\">*</span>size<span class=\"sy0\">/</span><span class=\"nu0\">16</span>, <span class=\"nu0\">11</span><span class=\"sy0\">*</span>size<span class=\"sy0\">/</span><span class=\"nu0\">16</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">8</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        graphics.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        graphics.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"sy0\">*</span>size<span class=\"sy0\">/</span><span class=\"nu0\">16</span>, <span class=\"nu0\">3</span><span class=\"sy0\">*</span>size<span class=\"sy0\">/</span><span class=\"nu0\">16</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">8</span>, size<span class=\"sy0\">/</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Use drawOval to draw an empty circle for the outside border</span><br/>        graphics.<span class=\"me1\">drawOval</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, size<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, size<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// Restore the color for the caller</span><br/>        graphics.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>colorSave<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co3\">/**<br/>     *  Create an image containing a yin yang symbol.<br/>     */</span><br/>    <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Image</span></a> createImage<span class=\"br0\">(</span><span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a> bg<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"co1\">// A BufferedImage creates the image in memory</span><br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a> image <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a><span class=\"br0\">(</span>size, size, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a>.<span class=\"me1\">TYPE_INT_RGB</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Get the graphics object for the image; note in many</span><br/>        <span class=\"co1\">// applications you actually use Graphics2D for the </span><br/>        <span class=\"co1\">// additional API calls</span><br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> graphics <span class=\"sy0\">=</span> image.<span class=\"me1\">getGraphics</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Color in the background of the image</span><br/>        graphics.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>bg<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        graphics.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,size,size<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        drawYinYang<span class=\"br0\">(</span>graphics<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> image<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> size <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>.<span class=\"me1\">parseInt</span><span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">final</span> YinYangGenerator generator <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> YinYangGenerator<span class=\"br0\">(</span>size<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a> frame <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Yin Yang Generator\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        frame.<span class=\"me1\">setDefaultCloseOperation</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a>.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Image</span></a> yinYang <span class=\"sy0\">=</span> generator.<span class=\"me1\">createImage</span><span class=\"br0\">(</span>frame.<span class=\"me1\">getBackground</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Use JLabel to display an image</span><br/>        frame.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajlabel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JLabel</span></a><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aimageicon+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ImageIcon</span></a><span class=\"br0\">(</span>yinYang<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        frame.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        frame.<span class=\"me1\">setVisible</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 61, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"kw1\">function</span> Arc<span class=\"br0\">(</span>posX<span class=\"sy0\">,</span>posY<span class=\"sy0\">,</span>radius<span class=\"sy0\">,</span>startAngle<span class=\"sy0\">,</span>endAngle<span class=\"sy0\">,</span>color<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"co1\">//Angle in radians.</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">posX</span><span class=\"sy0\">=</span>posX<span class=\"sy0\">;</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">posY</span><span class=\"sy0\">=</span>posY<span class=\"sy0\">;</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">radius</span><span class=\"sy0\">=</span>radius<span class=\"sy0\">;</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">startAngle</span><span class=\"sy0\">=</span>startAngle<span class=\"sy0\">;</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">endAngle</span><span class=\"sy0\">=</span>endAngle<span class=\"sy0\">;</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">color</span><span class=\"sy0\">=</span>color<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">//0,0 is the top left of the screen</span><br/><span class=\"kw1\">var</span> YingYang<span class=\"sy0\">=</span><span class=\"br0\">[</span><br/><span class=\"kw1\">new</span> Arc<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0.5</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"nu0\">1.5</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"st0\">\"white\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"co1\">//Half white semi-circle</span><br/><span class=\"kw1\">new</span> Arc<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1.5</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"nu0\">0.5</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"st0\">\"black\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"co1\">//Half black semi-circle</span><br/><span class=\"kw1\">new</span> Arc<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">0.25</span><span class=\"sy0\">,</span>.5<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"st0\">\"black\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"co1\">//black circle</span><br/><span class=\"kw1\">new</span> Arc<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">0.75</span><span class=\"sy0\">,</span>.5<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"st0\">\"white\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"co1\">//white circle</span><br/><span class=\"kw1\">new</span> Arc<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">0.25</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"st0\">\"white\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"co1\">//small white circle</span><br/><span class=\"kw1\">new</span> Arc<span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span><span class=\"nu0\">0.75</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">,</span><span class=\"st0\">\"black\"</span><span class=\"br0\">)</span><span class=\"co1\">//small black circle</span><br/><span class=\"br0\">]</span><br/><span class=\"co1\">//Ying Yang is DONE!</span><br/><span class=\"co1\">//Now we'll have to draw it.</span><br/><span class=\"co1\">//We'll draw it in a matrix that way we can get results graphically or by text!</span><br/><span class=\"kw1\">function</span> Array2D<span class=\"br0\">(</span>width<span class=\"sy0\">,</span>height<span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">height</span><span class=\"sy0\">=</span>height<span class=\"sy0\">;</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">width</span><span class=\"sy0\">=</span>width<span class=\"sy0\">;</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">array2d</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span><span class=\"kw1\">this</span>.<span class=\"me1\">height</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"kw1\">this</span>.<span class=\"me1\">array2d</span>.<span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <span class=\"kw4\">Array</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">width</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>Array2D.<span class=\"kw1\">prototype</span>.<span class=\"me1\">resize</span><span class=\"sy0\">=</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>width<span class=\"sy0\">,</span>height<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"co1\">//This is expensive</span><br/><span class=\"co1\">//nheight and nwidth is the difference of the new and old height</span><br/><span class=\"kw1\">var</span> nheight<span class=\"sy0\">=</span>height<span class=\"sy0\">-</span><span class=\"kw1\">this</span>.<span class=\"me1\">height</span><span class=\"sy0\">,</span>nwidth<span class=\"sy0\">=</span>width<span class=\"sy0\">-</span><span class=\"kw1\">this</span>.<span class=\"me1\">width</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">if</span><span class=\"br0\">(</span>nwidth<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span><span class=\"kw1\">this</span>.<span class=\"me1\">height</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"kw1\">if</span><span class=\"br0\">(</span>i<span class=\"sy0\">&lt;</span>height<span class=\"br0\">)</span><br/><span class=\"kw4\">Array</span>.<span class=\"kw1\">prototype</span>.<span class=\"me1\">push</span>.<span class=\"me1\">apply</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">array2d</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"kw1\">new</span> <span class=\"kw4\">Array</span><span class=\"br0\">(</span>nwidth<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>nwidth<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span><span class=\"kw1\">this</span>.<span class=\"me1\">height</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"kw1\">if</span><span class=\"br0\">(</span>i<span class=\"sy0\">&lt;</span>height<span class=\"br0\">)</span><br/> <span class=\"kw1\">this</span>.<span class=\"me1\">array2d</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">splice</span><span class=\"br0\">(</span>width<span class=\"sy0\">,</span>nwidth<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">if</span><span class=\"br0\">(</span>nheight<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/> <span class=\"kw4\">Array</span>.<span class=\"kw1\">prototype</span>.<span class=\"me1\">push</span>.<span class=\"me1\">apply</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">array2d</span><span class=\"sy0\">,</span><span class=\"kw1\">new</span> <span class=\"kw4\">Array</span><span class=\"br0\">(</span>width<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>nheight<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/> <span class=\"kw1\">this</span>.<span class=\"me1\">array2d</span>.<span class=\"me1\">splice</span><span class=\"br0\">(</span>height<span class=\"sy0\">,</span>nheight<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>Array2D.<span class=\"kw1\">prototype</span>.<span class=\"me1\">loop</span><span class=\"sy0\">=</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>callback<span class=\"br0\">)</span><span class=\"br0\">{</span><br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span><span class=\"kw1\">this</span>.<span class=\"me1\">height</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/> <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i2<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i2<span class=\"sy0\">&lt;</span><span class=\"kw1\">this</span>.<span class=\"me1\">width</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>   callback.<span class=\"me1\">call</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"sy0\">,</span><span class=\"kw1\">this</span>.<span class=\"me1\">array2d</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>i2<span class=\"br0\">]</span><span class=\"sy0\">,</span>i<span class=\"sy0\">,</span>i2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/><span class=\"kw1\">var</span> mat<span class=\"sy0\">=</span><span class=\"kw1\">new</span> Array2D<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"co1\">//this sounds fine;</span><br/>YingYang<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"co1\">//In construction.</span><br/>\u00a0</pre>"}, {"lang": "jq", "loc": 30, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>def svg:<br/>  \"&lt;svg width='100%' height='100%' version='1.1'<br/>        xmlns='http://www.w3.org/2000/svg'<br/>\txmlns:xlink='http://www.w3.org/1999/xlink'&gt;\"\u00a0;<br/>\u00a0<br/>def draw_yinyang(x; scale):<br/>  \"&lt;use xlink:href='#y' transform='translate(\\(x),\\(x)) scale(\\(scale))'/&gt;\";<br/>\u00a0<br/>def define_yinyang:<br/>  \"&lt;defs&gt;<br/>    &lt;g id='y'&gt;<br/>        &lt;circle cx='0' cy='0' r='200' stroke='black'<br/>         fill='white' stroke-width='1'/&gt;<br/>        &lt;path d='M0 -200 A 200 200 0 0 0 0 200<br/>              100 100 0 0 0 0 0 100 100 0 0 1 0 -200<br/>  \t\t z' fill='black'/&gt;<br/>        &lt;circle cx='0' cy='100' r='33' fill='white'/&gt;<br/>        &lt;circle cx='0' cy='-100' r='33' fill='black'/&gt;<br/>    &lt;/g&gt;<br/>  &lt;/defs&gt;\"\u00a0;<br/>\u00a0<br/>def draw:<br/>  svg,<br/>    define_yinyang,<br/>    draw_yinyang(20; .05),<br/>    draw_yinyang(8\u00a0; .02),<br/>  \"&lt;/svg&gt;\"\u00a0;<br/>\u00a0<br/>draw</pre>"}, {"lang": "Julia", "loc": 21, "block": "<pre class=\"text highlighted_source\">function yinyang(n::Int=3)<br/>    radii   = (i * n for i in (1, 3, 6))<br/>    ranges  = collect(collect(-r:r) for r in radii)<br/>    squares = collect(collect((x, y) for x in rnge, y in rnge) for rnge in ranges)<br/>    circles = collect(collect((x, y) for (x,y) in sqrpoints if hypot(x, y) \u2264 radius)<br/>                      for (sqrpoints, radius) in zip(squares, radii))<br/>    m = Dict((x, y) =&gt; ' ' for (x, y) in squares[end])<br/>    for (x, y) in circles[end] m[(x, y)] = x &gt; 0\u00a0? '\u00b7'\u00a0: '*' end<br/>    for (x, y) in circles[end-1]<br/>        m[(x, y + 3n)] = '*'<br/>\t\tm[(x, y - 3n)] = '\u00b7'<br/>    end<br/>    for (x, y) in circles[end-2]<br/>        m[(x, y + 3n)] = '\u00b7'<br/>\t\tm[(x, y - 3n)] = '*'<br/>    end<br/>    return join((join(m[(x, y)]  for x in reverse(ranges[end])) for y in ranges[end]), '\\n')<br/>end<br/>\u00a0<br/>println(yinyang(4))<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 73, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Color</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Graphics</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Image</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">image</span>.<span class=\"me1\">BufferedImage</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">ImageIcon</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">JFrame</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">JPanel</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">JLabel</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> YinYangGenerator <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun drawYinYang<span class=\"br0\">(</span>size<span class=\"sy0\">:</span> Int, g<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a><span class=\"br0\">(</span>g<span class=\"br0\">)</span> <span class=\"br0\">{</span>      <br/>            <span class=\"co1\">// Preserve the color for the caller</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> colorSave <span class=\"sy0\">=</span> color<br/>            color <span class=\"sy0\">=</span> Color.<span class=\"me1\">WHITE</span><br/>\u00a0<br/>            <span class=\"co1\">// Use fillOval to draw a filled in circle</span><br/>            fillOval<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, size - <span class=\"nu0\">1</span>, size - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            color <span class=\"sy0\">=</span> Color.<span class=\"me1\">BLACK</span><br/>\u00a0<br/>            <span class=\"co1\">// Use fillArc to draw part of a filled in circle</span><br/>            fillArc<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, size - <span class=\"nu0\">1</span>, size - <span class=\"nu0\">1</span>, <span class=\"nu0\">270</span>, <span class=\"nu0\">180</span><span class=\"br0\">)</span><br/>            fillOval<span class=\"br0\">(</span>size / <span class=\"nu0\">4</span>, size / <span class=\"nu0\">2</span>, size / <span class=\"nu0\">2</span>, size / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            color <span class=\"sy0\">=</span> Color.<span class=\"me1\">WHITE</span><br/>            fillOval<span class=\"br0\">(</span>size / <span class=\"nu0\">4</span>, <span class=\"nu0\">0</span>, size / <span class=\"nu0\">2</span>, size / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            fillOval<span class=\"br0\">(</span><span class=\"nu0\">7</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, <span class=\"nu0\">11</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, size /<span class=\"nu0\">8</span>, size / <span class=\"nu0\">8</span><span class=\"br0\">)</span><br/>            color <span class=\"sy0\">=</span> Color.<span class=\"me1\">BLACK</span><br/>            fillOval<span class=\"br0\">(</span><span class=\"nu0\">7</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, size / <span class=\"nu0\">8</span>, size / <span class=\"nu0\">8</span><span class=\"br0\">)</span><br/>\u00a0<br/>            <span class=\"co1\">// Use drawOval to draw an empty circle for the outside border</span><br/>            drawOval<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, size - <span class=\"nu0\">1</span>, size - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>            <span class=\"co1\">// Restore the color for the caller</span><br/>            color <span class=\"sy0\">=</span> colorSave<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    fun createImage<span class=\"br0\">(</span>size<span class=\"sy0\">:</span> Int, bg<span class=\"sy0\">:</span> Color<span class=\"br0\">)</span><span class=\"sy0\">:</span> Image <span class=\"br0\">{</span><br/>        <span class=\"co1\">// A BufferedImage creates the image in memory</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> image <span class=\"sy0\">=</span> BufferedImage<span class=\"br0\">(</span>size, size, BufferedImage.<span class=\"me1\">TYPE_INT_RGB</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// Get the graphics object for the image</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> g <span class=\"sy0\">=</span> image.<span class=\"me1\">graphics</span><br/>\u00a0<br/>        <span class=\"co1\">// Color in the background of the image</span><br/>        g.<span class=\"me1\">color</span> <span class=\"sy0\">=</span> bg<br/>        g.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, size, size<span class=\"br0\">)</span><br/>        drawYinYang<span class=\"br0\">(</span>size, g<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> image<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> gen <span class=\"sy0\">=</span> YinYangGenerator<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> size <span class=\"sy0\">=</span> <span class=\"nu0\">400</span> <span class=\"co1\">// say    </span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> JPanel<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> yinYang <span class=\"sy0\">=</span> gen.<span class=\"me1\">createImage</span><span class=\"br0\">(</span>size, p.<span class=\"me1\">background</span><span class=\"br0\">)</span> <br/>    p.<span class=\"me1\">add</span><span class=\"br0\">(</span>JLabel<span class=\"br0\">(</span>ImageIcon<span class=\"br0\">(</span>yinYang<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> size2 <span class=\"sy0\">=</span> size / <span class=\"nu0\">2</span> <span class=\"co1\">// say</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> yinYang2 <span class=\"sy0\">=</span> gen.<span class=\"me1\">createImage</span><span class=\"br0\">(</span>size2, p.<span class=\"me1\">background</span><span class=\"br0\">)</span> <br/>    p.<span class=\"me1\">add</span><span class=\"br0\">(</span>JLabel<span class=\"br0\">(</span>ImageIcon<span class=\"br0\">(</span>yinYang2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> JFrame<span class=\"br0\">(</span><span class=\"st0\">\"Big and Small Yin Yang\"</span><span class=\"br0\">)</span>  <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a> <span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        defaultCloseOperation <span class=\"sy0\">=</span> JFrame.<span class=\"me1\">EXIT_ON_CLOSE</span><br/>        add<span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>        pack<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        isVisible <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 46, "block": "<pre class=\"lb highlighted_source\">    <span class=\"kw3\">WindowWidth</span>  <span class=\"sy0\">=</span><span class=\"nu0\">410</span><br/>    <span class=\"kw3\">WindowHeight</span> <span class=\"sy0\">=</span><span class=\"nu0\">440</span><br/>\u00a0<br/>    <span class=\"kw1\">open</span> <span class=\"st0\">\"Yin &amp; Yang\"</span> <span class=\"kw1\">for</span> graphics_nf_nsb <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>w<br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"trapclose [quit]\"</span><br/>\u00a0<br/>    <span class=\"kw1\">call</span> YinYang <span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu0\">200</span><br/>    <span class=\"kw1\">call</span> YinYang <span class=\"nu0\">120</span><span class=\"sy0\">,</span>  <span class=\"nu0\">50</span><span class=\"sy0\">,</span>  <span class=\"nu0\">50</span><br/>\u00a0<br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/>    <span class=\"kw1\">sub</span> YinYang x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> size<br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"up\u00a0; goto \"</span>; x; <span class=\"st0\">\" \"</span>; y<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"backcolor black\u00a0; color black\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; circlefilled \"</span>; size <span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"color 255 255 255\u00a0; backcolor 255 255 255\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"up  \u00a0; goto \"</span>;      x <span class=\"sy0\">-</span>size <span class=\"sy0\">/</span><span class=\"nu0\">2</span>; <span class=\"st0\">\" \"</span>; y <span class=\"sy0\">-</span>size <span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; boxfilled \"</span>; x;          <span class=\"st0\">\" \"</span>; y <span class=\"sy0\">+</span>size <span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"up\u00a0; goto \"</span>; x; <span class=\"st0\">\" \"</span>; y <span class=\"sy0\">-</span>size <span class=\"sy0\">/</span><span class=\"nu0\">4</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; backcolor black\u00a0; color black  \u00a0; circlefilled \"</span>; size  <span class=\"sy0\">/</span><span class=\"nu0\">4</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"up\u00a0; goto \"</span>; x; <span class=\"st0\">\" \"</span>; y <span class=\"sy0\">-</span>size <span class=\"sy0\">/</span><span class=\"nu0\">4</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; backcolor white\u00a0; color white\u00a0; circlefilled \"</span>; size <span class=\"sy0\">/</span><span class=\"nu0\">12</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"up\u00a0; goto \"</span>; x; <span class=\"st0\">\" \"</span>; y <span class=\"sy0\">+</span>size <span class=\"sy0\">/</span><span class=\"nu0\">4</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; backcolor white\u00a0; color white\u00a0; circlefilled \"</span>; size  <span class=\"sy0\">/</span><span class=\"nu0\">4</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"up\u00a0; goto \"</span>; x; <span class=\"st0\">\" \"</span>; y <span class=\"sy0\">+</span>size <span class=\"sy0\">/</span><span class=\"nu0\">4</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; backcolor black\u00a0; color black\u00a0; circlefilled \"</span>; size <span class=\"sy0\">/</span><span class=\"nu0\">12</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"up\u00a0; goto \"</span>; x; <span class=\"st0\">\" \"</span>; y<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; color black\u00a0; circle \"</span>; size <span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"flush\"</span><br/>\u00a0<br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">sub</span><br/>\u00a0<br/>    <span class=\"kw1\">scan</span><br/>\u00a0<br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/>  <span class=\"br0\">[</span>quit<span class=\"br0\">]</span><br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>w<br/>    <span class=\"kw1\">end</span></pre>"}, {"lang": "Logo", "loc": 60, "block": "<pre class=\"text highlighted_source\">to taijitu\u00a0:r <br/> \u00a0; Draw a classic Taoist taijitu of the given radius centered on the current<br/> \u00a0; turtle position. The \"eyes\" are placed along the turtle's heading, the<br/> \u00a0; filled one in front, the open one behind.<br/>\u00a0<br/> \u00a0; don't bother doing anything if the pen is not down<br/>  if not pendown? [stop]<br/>\u00a0<br/> \u00a0; useful derivative values<br/>  localmake \"r2 (ashift\u00a0:r  -1)<br/>  localmake \"r4 (ashift\u00a0:r2 -1)<br/>  localmake \"r8 (ashift\u00a0:r4 -1)<br/>\u00a0<br/> \u00a0; remember where we started<br/>  localmake \"start  pos<br/>\u00a0<br/> \u00a0; draw outer circle<br/>  pendown<br/>  arc 360\u00a0:r<br/>\u00a0<br/> \u00a0; draw upper half of S<br/>  penup<br/>  forward\u00a0:r2<br/>  pendown<br/>  arc 180\u00a0:r2<br/>\u00a0<br/> \u00a0; and filled inner eye<br/>  arc 360\u00a0:r8<br/>  fill<br/>\u00a0<br/> \u00a0; draw lower half of S<br/>  penup<br/>  back\u00a0:r<br/>  pendown<br/>  arc -180\u00a0:r2<br/>\u00a0<br/> \u00a0; other inner eye<br/>  arc  360\u00a0:r8<br/>\u00a0<br/> \u00a0; fill this half of the symbol <br/>  penup<br/>  forward\u00a0:r4<br/>  fill<br/>\u00a0<br/> \u00a0; put the turtle back where it started<br/>  setpos\u00a0:start<br/>  pendown<br/>end<br/>\u00a0<br/>; demo code to produce image at right<br/>clearscreen<br/>pendown<br/>hideturtle<br/>taijitu 100<br/>penup<br/>forward 150<br/>left 90<br/>forward 150<br/>pendown<br/>taijitu 75</pre>"}, {"lang": "Mathematica", "loc": 5, "block": "<pre class=\"text highlighted_source\">YinYang[size_]\u00a0:= <br/> Graphics[{{Circle[{0, 0}, 2]}, {Disk[{0, 0}, <br/>     2, {90 Degree, -90 Degree}]}, {White, Disk[{0, 1}, 1]}, {Black, <br/>    Disk[{0, -1}, 1]}, {Black, Disk[{0, 1}, 1/4]}, {White, <br/>    Disk[{0, -1}, 1/4]}}, ImageSize -&gt; 40 size]</pre>"}, {"lang": "Metapost", "loc": 24, "block": "<pre class=\"text highlighted_source\">vardef yinyang(expr u) =<br/>  picture pic_;<br/>  path p_;<br/>  p_\u00a0:= halfcircle scaled 2u rotated -90 --<br/>    halfcircle scaled u rotated 90 shifted (0, 1/2u) reflectedabout ((0,1), (0,-1)) --<br/>    halfcircle scaled u rotated -270 shifted (0, -1/2u) -- cycle;<br/>\u00a0<br/>  pic_\u00a0:= nullpicture;<br/>  addto pic_ contour fullcircle scaled 2u withcolor black;<br/>  addto pic_ contour p_ withcolor white;<br/>  addto pic_ doublepath p_ withcolor black withpen pencircle scaled 0.5mm;<br/>  addto pic_ contour fullcircle scaled 1/3u shifted (0, 1/2u) withcolor white;<br/>  addto pic_ contour fullcircle scaled 1/3u shifted (0, -1/2u) withcolor black;<br/>  pic_<br/>enddef;<br/>\u00a0<br/>beginfig(1)<br/> \u00a0% let's create a Yin Yang symbol with a radius of 5cm<br/>  draw yinyang(5cm) shifted (5cm, 5cm);<br/> \u00a0% and another one, radius 2.5cm, rotated 180 degrees and translated<br/>  draw yinyang(2.5cm) rotated 180 shifted (11cm, 11cm);<br/>endfig;<br/>\u00a0<br/>end.</pre>"}, {"lang": "NetRexx", "loc": 31, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>\u00a0<br/>options replace format comments java crossref savelog symbols <span class=\"kw2\">binary</span><br/>\u00a0<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"&lt;?xml version='1.0' encoding='UTF-8' standalone='no'?&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"&lt;svg xmlns='http://www.w3.org/2000/svg' version='1.1'\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"  xmlns:xlink='http://www.w3.org/1999/xlink'\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"  width='30' height='30'&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"  &lt;defs&gt;&lt;g id='y'&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"    &lt;circle cx='0' cy='0' r='200' stroke='black'\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"      fill='white' stroke-width='1'/&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"    &lt;path d='M0 -200 A 200 200 0 0 0 0 200\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"      100 100 0 0 0 0 0 100 100 0 0 1 0 -200\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"      z' fill='black'/&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"    &lt;circle cx='0' cy='100' r='33' fill='white'/&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"    &lt;circle cx='0' cy='-100' r='33' fill='black'/&gt;\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"  &lt;/g&gt;&lt;/defs&gt;\"</span><br/>\u00a0<br/><span class=\"kw1\">say</span> draw_yinyang<span class=\"br0\">(</span><span class=\"nu0\">20</span>, <span class=\"nu0\">0.05</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> draw_yinyang<span class=\"br0\">(</span><span class=\"nu0\">8</span>, <span class=\"nu0\">0.02</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"&lt;/svg&gt;\"</span><br/>\u00a0<br/><span class=\"kw1\">return</span><br/>\u00a0<br/>method draw_yinyang<span class=\"br0\">(</span>trans = int, scale = double<span class=\"br0\">)</span> <span class=\"kw2\">inheritable</span> <span class=\"kw2\">static</span> <span class=\"kw2\">returns</span> String<br/>  yy = String.<span class=\"me0\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"  &lt;use xlink:href='#y' transform='translate(%d,%d) scale(%g)'/&gt;\"</span>, -<br/>       <span class=\"br0\">[</span>Object Integer<span class=\"br0\">(</span>trans<span class=\"br0\">)</span>, Integer<span class=\"br0\">(</span>trans<span class=\"br0\">)</span>, Double<span class=\"br0\">(</span>scale<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> yy</pre>"}, {"lang": "OCaml", "loc": 32, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">open</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Graphics.html\"><span class=\"kw2\">Graphics</span></a><br/>\u00a0<br/><span class=\"kw1\">let</span> draw_yinyang x y radius black white <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> hr <span class=\"sy0\">=</span> radius <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> sr <span class=\"sy0\">=</span> radius <span class=\"sy0\">/</span> <span class=\"nu0\">6</span> <span class=\"kw1\">in</span><br/>  set_color black<span class=\"sy0\">;</span><br/>  set_line_width <span class=\"nu0\">6</span><span class=\"sy0\">;</span><br/>  draw_circle x y radius<span class=\"sy0\">;</span><br/>  set_line_width <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  set_color black<span class=\"sy0\">;</span><br/>  fill_arc x y radius radius <span class=\"nu0\">270</span> <span class=\"nu0\">450</span><span class=\"sy0\">;</span><br/>  set_color white<span class=\"sy0\">;</span><br/>  fill_arc x y radius radius <span class=\"nu0\">90</span> <span class=\"nu0\">270</span><span class=\"sy0\">;</span><br/>  fill_arc x <span class=\"br0\">(</span>y <span class=\"sy0\">+</span> hr<span class=\"br0\">)</span> hr hr <span class=\"nu0\">270</span> <span class=\"nu0\">450</span><span class=\"sy0\">;</span><br/>  set_color black<span class=\"sy0\">;</span><br/>  fill_arc x <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> hr<span class=\"br0\">)</span> hr hr <span class=\"nu0\">90</span> <span class=\"nu0\">270</span><span class=\"sy0\">;</span><br/>  fill_circle x <span class=\"br0\">(</span>y <span class=\"sy0\">+</span> hr<span class=\"br0\">)</span> sr<span class=\"sy0\">;</span><br/>  set_color white<span class=\"sy0\">;</span><br/>  fill_circle x <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> hr<span class=\"br0\">)</span> sr<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  open_graph <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> width <span class=\"sy0\">=</span> size_x<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">and</span> height <span class=\"sy0\">=</span> size_y<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  set_color <span class=\"br0\">(</span>rgb <span class=\"nu0\">200</span> <span class=\"nu0\">200</span> <span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  fill_rect <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> width height<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> w <span class=\"sy0\">=</span> width <span class=\"sy0\">/</span> <span class=\"nu0\">3</span><br/>  <span class=\"kw1\">and</span> h <span class=\"sy0\">=</span> height <span class=\"sy0\">/</span> <span class=\"nu0\">3</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> r <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmin\"><span class=\"kw3\">min</span></a> w h<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">3</span> <span class=\"kw1\">in</span><br/>  draw_yinyang w <span class=\"br0\">(</span>h<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>r<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> black white<span class=\"sy0\">;</span><br/>  draw_yinyang <span class=\"br0\">(</span>w<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> h r blue magenta<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALignore\"><span class=\"kw3\">ignore</span></a><span class=\"br0\">(</span>read_key<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 54, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> circle <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$radius</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span><span class=\"sy0\">,</span> <span class=\"re0\">$fill</span><span class=\"sy0\">,</span> <span class=\"re0\">$stroke</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a>   <span class=\"st0\">\"&lt;circle cx='$cx' cy='$cy' r='$radius' \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"fill='$fill' stroke='$stroke' stroke-width='1'/&gt;<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> yin_yang <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span><span class=\"sy0\">,</span> <span class=\"re0\">%opt</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$opt</span><span class=\"br0\">{</span>fill<span class=\"br0\">}</span>   <span class=\"sy0\">//=</span> <span class=\"st_h\">'white'</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$opt</span><span class=\"br0\">{</span>stroke<span class=\"br0\">}</span> <span class=\"sy0\">//=</span> <span class=\"st_h\">'black'</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$opt</span><span class=\"br0\">{</span>recurangle<span class=\"br0\">}</span> <span class=\"sy0\">//=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"&lt;g transform='rotate($opt{angle}, $cx, $cy)'&gt;\"</span><br/>                <span class=\"kw1\">if</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>angle<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$opt</span><span class=\"br0\">{</span>flip<span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        circle<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span><span class=\"sy0\">,</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>fill<span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>stroke<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"&lt;path d='M $cx \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">+</span> <span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"st0\">\"A \"</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\" 0 0 $c $cx $cy \"</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\" 0 0 $w $cx \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">-</span> <span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$rad</span><span class=\"sy0\">,</span>   <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$rad</span><span class=\"sy0\">,</span>   <span class=\"st0\">\" 0 0 $c $cx \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">+</span> <span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"z' fill='$opt{stroke}' stroke='none' /&gt;\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$opt</span><span class=\"br0\">{</span>recur<span class=\"br0\">}</span> <span class=\"kw1\">and</span> <span class=\"re0\">$rad</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\"># recursive \"eyes\" are slightly larger</span><br/>                yin_yang<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">+</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"re0\">%opt</span><span class=\"sy0\">,</span><br/>                                angle   <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>recurangle<span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>                                fill    <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>stroke<span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>                                stroke  <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>fill<span class=\"br0\">}</span>   <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                yin_yang<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">-</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"re0\">%opt</span><span class=\"sy0\">,</span><br/>                                angle   <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">180</span> <span class=\"sy0\">+</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>recurangle<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                circle<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">+</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>fill<span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>stroke<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                circle<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">-</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>stroke<span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>fill<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"&lt;/g&gt;\"</span> <span class=\"kw1\">if</span> <span class=\"re0\">$opt</span><span class=\"br0\">{</span>angle<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"co4\">&lt;&lt;'HEAD';<br/>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;<br/>&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" <br/>        \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;<br/>&lt;svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"<br/>        xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;<br/>HEAD</span><br/>\u00a0<br/>yin_yang<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu0\">250</span><span class=\"sy0\">,</span> <span class=\"nu0\">250</span><span class=\"sy0\">,</span> recur<span class=\"sy0\">=&gt;</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>         angle<span class=\"sy0\">=&gt;</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> recurangle<span class=\"sy0\">=&gt;</span><span class=\"nu0\">90</span><span class=\"sy0\">,</span> fill<span class=\"sy0\">=&gt;</span><span class=\"st_h\">'white'</span><span class=\"sy0\">,</span> stroke<span class=\"sy0\">=&gt;</span><span class=\"st_h\">'black'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>yin_yang<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">500</span><span class=\"sy0\">,</span> <span class=\"nu0\">500</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"&lt;/svg&gt;\"</span></pre>"}, {"lang": "Perl 6", "loc": 25, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> circle <span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span><span class=\"sy0\">,</span> <span class=\"re0\">$fill</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'white'</span><span class=\"sy0\">,</span> <span class=\"re0\">$stroke</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'black'</span> <span class=\"br0\">)</span><span class=\"br0\">{</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"&lt;circle cx='$cx' cy='$cy' r='$rad' fill='$fill' stroke='$stroke' stroke-width='1'/&gt;\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> yin_yang <span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$fill</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'white'</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$stroke</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'black'</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$angle</span> <span class=\"sy0\">=</span> <span class=\"nu0\">90</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"&lt;g transform='rotate($angle, $cx, $cy)'&gt;\"</span> <span class=\"kw1\">if</span> <span class=\"re0\">$angle</span><span class=\"sy0\">;</span><br/>    circle<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span><span class=\"sy0\">,</span> <span class=\"re0\">$fill</span><span class=\"sy0\">,</span> <span class=\"re0\">$stroke</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"&lt;path d='M $cx {$cy + $rad}A {$rad/2} {$rad/2} 0 0 $c $cx $cy \"</span><span class=\"sy0\">,</span><br/>        <span class=\"st0\">\"{$rad/2} {$rad/2} 0 0 $w $cx {$cy - $rad} $rad $rad 0 0 $c $cx \"</span><span class=\"sy0\">,</span><br/>        <span class=\"st0\">\"{$cy + $rad} z' fill='$stroke' stroke='none' /&gt;\"</span><span class=\"sy0\">;</span><br/>    circle<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">+</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"re0\">$fill</span><span class=\"sy0\">,</span> <span class=\"re0\">$stroke</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    circle<span class=\"br0\">(</span><span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"re0\">$cx</span><span class=\"sy0\">,</span> <span class=\"re0\">$cy</span> <span class=\"sy0\">-</span> <span class=\"re0\">$rad</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"re0\">$stroke</span><span class=\"sy0\">,</span> <span class=\"re0\">$fill</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"&lt;/g&gt;\"</span> <span class=\"kw1\">if</span> <span class=\"re0\">$angle</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st_h\">'&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;<br/>&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;<br/>&lt;svg height=\"400\" width=\"400\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"<br/> xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;'</span><span class=\"sy0\">;</span><br/>\u00a0<br/>yin_yang<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">130</span><span class=\"sy0\">,</span> <span class=\"nu0\">130</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>yin_yang<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">300</span><span class=\"sy0\">,</span> <span class=\"nu0\">300</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st_h\">'&lt;/svg&gt;'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 80, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\Yin_and_yang.exw<br/>--<br/>include pGUI.e<br/>\u00a0<br/>Ihandle dlg, canvas<br/>cdCanvas cd_canvas<br/>\u00a0<br/>procedure cdCanvasSecArc(cdCanvas hCdCanvas, atom xc, atom yc, atom w, atom h, atom angle1, atom angle2) <br/>-- cdCanvasSector does not draw anti-aliased edges, but cdCanvasArc does, so over-draw...<br/>    cdCanvasSector(hCdCanvas, xc, yc, w, h, angle1, angle2) <br/>    cdCanvasArc   (hCdCanvas, xc, yc, w, h, angle1, angle2) <br/>end procedure<br/>\u00a0<br/>procedure yinyang(atom  cx, cy, r)<br/>    cdCanvasArc(cd_canvas, cx, cy, r, r, 0, 360) <br/>    cdCanvasSecArc(cd_canvas, cx, cy, r, r, 270, 90) <br/>    cdCanvasSecArc(cd_canvas, cx, cy-r/4, r/2-1, r/2-1, 0, 360) <br/>    cdCanvasSetForeground(cd_canvas, CD_WHITE)<br/>    cdCanvasSecArc(cd_canvas, cx, cy+r/4, r/2-1, r/2-1, 0, 360) <br/>    cdCanvasSecArc(cd_canvas, cx, cy-r/4, r/8, r/8, 0, 360) <br/>    cdCanvasSetForeground(cd_canvas, CD_BLACK)<br/>    cdCanvasSecArc(cd_canvas, cx, cy+r/4, r/8, r/8, 0, 360) <br/>end procedure<br/>\u00a0<br/>function redraw_cb(Ihandle /*ih*/, integer /*posx*/, integer /*posy*/)<br/>integer {width, height} = IupGetIntInt(canvas, \"DRAWSIZE\")<br/>integer r = min(width,height)-40<br/>integer cx = floor(width/2)<br/>integer cy = floor(height/2)<br/>    cdCanvasActivate(cd_canvas)<br/>    cdCanvasClear(cd_canvas) <br/>    yinyang(cx-r*.43,cy+r*.43,r/6)<br/>    yinyang(cx,cy,r)<br/>    cdCanvasFlush(cd_canvas)<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function map_cb(Ihandle ih)<br/>    atom res = IupGetDouble(NULL, \"SCREENDPI\")/25.4<br/>    IupGLMakeCurrent(canvas)<br/>    cd_canvas = cdCreateCanvas(CD_GL, \"10x10\u00a0%g\", {res})<br/>    cdCanvasSetBackground(cd_canvas, CD_WHITE)<br/>    cdCanvasSetForeground(cd_canvas, CD_BLACK)<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function canvas_resize_cb(Ihandle /*canvas*/)<br/>    integer {canvas_width, canvas_height} = IupGetIntInt(canvas, \"DRAWSIZE\")<br/>    atom res = IupGetDouble(NULL, \"SCREENDPI\")/25.4<br/>    cdCanvasSetAttribute(cd_canvas, \"SIZE\", \"%dx%d\u00a0%g\", {canvas_width, canvas_height, res})<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function esc_close(Ihandle /*ih*/, atom c)<br/>    if c=K_ESC then return IUP_CLOSE end if<br/>    return IUP_CONTINUE<br/>end function<br/>\u00a0<br/>procedure main()<br/>    IupOpen()<br/>\u00a0<br/>    canvas = IupGLCanvas()<br/>    IupSetAttribute(canvas, \"RASTERSIZE\", \"340x340\") -- initial size<br/>    IupSetCallback(canvas, \"MAP_CB\", Icallback(\"map_cb\"))<br/>    IupSetCallback(canvas, \"RESIZE_CB\", Icallback(\"canvas_resize_cb\"))<br/>\u00a0<br/>    dlg = IupDialog(canvas)<br/>    IupSetAttribute(dlg, \"TITLE\", \"Yin and Yang\")<br/>    IupSetCallback(dlg, \"K_ANY\",     Icallback(\"esc_close\"))<br/>    IupSetCallback(canvas, \"ACTION\", Icallback(\"redraw_cb\"))<br/>\u00a0<br/>    IupMap(dlg)<br/>    IupSetAttribute(canvas, \"RASTERSIZE\", NULL) -- release the minimum limitation<br/>    IupShowXY(dlg,IUP_CENTER,IUP_CENTER)<br/>    IupMainLoop()<br/>    IupClose()<br/>end procedure<br/>\u00a0<br/>main()</pre>"}, {"lang": "PHL", "loc": 66, "block": "<pre class=\"text highlighted_source\">module circles;<br/>\u00a0<br/>extern printf;<br/>\u00a0<br/>@Boolean in_circle(@Integer centre_x, @Integer centre_y, @Integer radius, @Integer x, @Integer y) [<br/>\treturn (x-centre_x)*(x-centre_x)+(y-centre_y)*(y-centre_y) &lt;= radius*radius;<br/>]<br/>\u00a0<br/>@Boolean in_big_circle (@Integer radius, @Integer x, @Integer y) [<br/>\treturn in_circle(0, 0, radius, x, y);<br/>]<br/>\u00a0<br/>@Boolean in_while_semi_circle (@Integer radius, @Integer x, @Integer y) [<br/>\treturn in_circle(0, radius/2, radius/2, x, y);<br/>]<br/>\u00a0<br/>@Boolean in_small_white_circle (@Integer radius, @Integer x, @Integer y) [<br/>\treturn in_circle(0, 0-radius/2, radius/6, x, y);<br/>]<br/>\u00a0<br/>@Boolean in_black_semi_circle (@Integer radius, @Integer x, @Integer y) [<br/>\treturn in_circle(0, 0-radius/2, radius/2, x, y);<br/>]<br/>\u00a0<br/>@Boolean in_small_black_circle (@Integer radius, @Integer x, @Integer y) [<br/>\treturn in_circle(0, radius/2, radius/6, x, y);<br/>]<br/>\u00a0<br/>@Void print_yin_yang(@Integer radius) [<br/>\tvar white = '.';<br/>\tvar black = '#';<br/>\tvar clear = ' ';<br/>\u00a0<br/>\tvar scale_y = 1;<br/>\tvar scale_x = 2;<br/>\tfor (var sy = radius*scale_y; sy &gt;= -(radius*scale_y); sy=sy-1) {<br/>\t\tfor (var sx = -(radius*scale_x); sx &lt;= radius*scale_x; sx=sx+1) {<br/>\t\t\tvar x = sx/(scale_x);<br/>\t\t\tvar y = sy/(scale_y);<br/>\u00a0<br/>\t\t\tif (in_big_circle(radius, x, y)) {<br/>\t\t\t\tif (in_while_semi_circle(radius, x, y))<br/>\t\t\t\t\tif (in_small_black_circle(radius, x, y))<br/>\t\t\t\t\t\tprintf(\"%c\", black);<br/>\t\t\t\t\telse<br/>\t\t\t\t\t\tprintf(\"%c\", white);<br/>\t\t\t\telse if (in_black_semi_circle(radius, x, y))<br/>\t\t\t\t\tif (in_small_white_circle(radius, x, y))<br/>\t\t\t\t\t\tprintf(\"%c\", white);<br/>\t\t\t\t\telse<br/>\t\t\t\t\t\tprintf(\"%c\", black);<br/>\t\t\t\telse \tif (x &lt; 0)<br/>\t\t\t\t\t\tprintf(\"%c\", white);<br/>\t\t\t\t\telse<br/>\t\t\t\t\t\tprintf(\"%c\", black);<br/>\t\t\t} else printf(\"%c\", clear);<br/>\t\t}<br/>\t\tprintf(\"\\n\");<br/>\t}<br/>]<br/>\u00a0<br/>@Integer main [<br/>\tprint_yin_yang(17);<br/>\tprint_yin_yang(8);<br/>\treturn 0;<br/>]</pre>"}, {"lang": "PicoLisp", "loc": 24, "block": "<pre class=\"text highlighted_source\">(de circle (X Y C R)<br/>   (&gt;=<br/>      (* R R)<br/>      (+<br/>         (* (setq X (/ X 2)) X)<br/>         (* (dec 'Y C) Y) ) ) )<br/>\u00a0<br/>(de yinYang (R)<br/>   (for Y (range (- R) R)<br/>      (for X (range (- 0 R R) (+ R R))<br/>         (prin<br/>            (cond<br/>               ((circle X Y (- (/ R 2)) (/ R 6))<br/>                  \"#\" )<br/>               ((circle X Y (/ R 2) (/ R 6))<br/>                  \".\" )<br/>               ((circle X Y (- (/ R 2)) (/ R 2))<br/>                  \".\" )<br/>               ((circle X Y (/ R 2) (/ R 2))<br/>                  \"#\" )<br/>               ((circle X Y 0 R)<br/>                  (if (lt0 X) \".\" \"#\") )<br/>               (T \" \") ) ) )<br/>      (prinl) ) )</pre>"}, {"lang": "PostScript", "loc": 40, "block": "<pre class=\"text highlighted_source\">%!PS-Adobe-3.0<br/>%%BoundingBox: 0 0 400 400<br/>\u00a0<br/>/fs 10 def<br/>/ed { exch def } def<br/>/dist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } def<br/>/circ {<br/>    /r exch def<br/>    [r neg 1 r {<br/>        /y exch def<br/>        [ r 2 mul neg 1 r 2 mul {<br/>            /x ed x 2 div y 0 0 dist r .05 add gt {( )}{<br/>                x 2 div y 0 r 2 div dist dup<br/>                r 5 div le { pop (.) } {<br/>                    r 2 div le { (@) }{<br/>                        x 2 div y 0 r 2 div neg dist dup<br/>                        r 5 div le { pop (@)} {<br/>                            r 2 div le {(.)}{<br/>                                x 0 le {(.)}{(@)}ifelse<br/>                            } ifelse<br/>                        } ifelse<br/>                    } ifelse<br/>                } ifelse<br/>            } ifelse<br/>        } for]<br/>    } for]<br/>} def<br/>\u00a0<br/>/dis {  moveto gsave<br/>        {       grestore 0 fs 1.15 mul neg rmoveto gsave<br/>                {show} forall<br/>        } forall grestore<br/>} def<br/>\u00a0<br/>/Courier findfont fs scalefont setfont<br/>\u00a0<br/>11 circ 10 390 dis<br/>6 circ 220 180 dis<br/>showpage<br/>%%EOF</pre>"}, {"lang": "POV-Ray", "loc": 70, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>// ====== General Scene setup ====== <br/>#version 3.7;<br/>global_settings { assumed_gamma 2.2 }<br/>\u00a0<br/>camera{ location &lt;0,2.7,4&gt; look_at &lt;0,.1,0&gt; right x*1.6 <br/>        aperture .2 focal_point &lt;1,0,0&gt; blur_samples 200 variance 1/10000 }<br/>light_source{&lt;2,4,8&gt;, 1 spotlight point_at 0 radius 10}<br/>sky_sphere {pigment {granite scale &lt;1,.1,1&gt; color_map {[0 rgb 1][1 rgb &lt;0,.4,.6&gt;]}}}<br/>#default {finish {diffuse .9 reflection {.1 metallic} ambient .3}<br/>          normal {granite scale .2}}<br/>plane { y, -1 pigment {hexagon color rgb .7 color rgb .75 color rgb .65} <br/>        normal {hexagon scale 5}}<br/>\u00a0<br/>// ====== Declare one side of the symbol as a sum and difference of discs ====== <br/>\u00a0<br/>#declare yang = <br/>difference {<br/>  merge {<br/>    difference {<br/>      cylinder {0 &lt;0,.1,0&gt; 1}               // flat disk<br/>      box {-1 &lt;1,1,0&gt;}                      // cut in half<br/>      cylinder {&lt;.5,-.1,0&gt; &lt;.5,.2,0&gt; .5}    // remove half-cicle on one side<br/>    }<br/>    cylinder {&lt;-.5,0,0&gt; &lt;-.5,.1,0&gt; .5}      // add on the other side<br/>    cylinder {&lt;.5,0,0&gt; &lt;.5,.1,0&gt; .15}       // also add a little dot<br/>  }<br/>  cylinder {&lt;-.5,-.1,0&gt; &lt;-.5,.2,0&gt; .15}     // and carve out a hole<br/>  pigment{color rgb 0.1}<br/>}<br/>\u00a0<br/>// ====== The other side is white and 180-degree turned ====== <br/>\u00a0<br/>#declare yin = <br/>object {<br/>  yang<br/>  rotate &lt;0,180,0&gt;<br/>  pigment{color rgb 1}<br/>}<br/>\u00a0<br/>// ====== Here we put the two together: ====== <br/>\u00a0<br/>#macro yinyang( ysize )<br/>  union {<br/>    object {yin}<br/>    object {yang}<br/>    scale ysize   <br/>  }<br/>#end<br/>\u00a0<br/>// ====== Here we put one into a scene: ====== <br/>\u00a0<br/>object { yinyang(1)<br/>         translate -y*1.08 }<br/>\u00a0<br/>// ====== And a bunch more just for fun: ====== <br/>\u00a0<br/>#declare scl=1.1;<br/>#while (scl &gt; 0.01)  <br/>\u00a0<br/>  object { yinyang(scl) <br/>        rotate &lt;0,180,0&gt; translate &lt;-scl*4,scl*2-1,0&gt; <br/>        rotate &lt;0,scl*360,0&gt; translate &lt;-.5,0,0&gt;}<br/>\u00a0<br/>  object { yinyang(scl) <br/>        translate &lt;-scl*4,scl*2-1,0&gt; <br/>        rotate &lt;0,scl*360+180,0&gt; translate &lt;.5,0,0&gt;}<br/>\u00a0<br/>  #declare scl = scl*0.85;<br/>#end</pre>"}, {"lang": "Prolog", "loc": 56, "block": "<pre class=\"prolog highlighted_source\">ying_yang<span class=\"br0\">(</span>N<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tR <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N <span class=\"sy3\">*</span> <span class=\"nu0\">100</span><span class=\"sy4\">,</span><br/>\tsformat<span class=\"br0\">(</span>Title<span class=\"sy4\">,</span> <span class=\"st_h\">'Yin Yang ~w'</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>W<span class=\"sy4\">,</span> window<span class=\"br0\">(</span>Title<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>Wh<span class=\"sy4\">,</span> colour<span class=\"br0\">(</span><span class=\"sy5\">@</span>default<span class=\"sy4\">,</span> <span class=\"nu0\">255</span><span class=\"sy3\">*</span><span class=\"nu0\">255</span><span class=\"sy4\">,</span> <span class=\"nu0\">255</span><span class=\"sy3\">*</span><span class=\"nu0\">255</span><span class=\"sy4\">,</span> <span class=\"nu0\">255</span><span class=\"sy3\">*</span><span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>Bl<span class=\"sy4\">,</span> colour<span class=\"br0\">(</span><span class=\"sy5\">@</span>default<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tCX <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R <span class=\"sy3\">+</span> <span class=\"nu0\">50</span><span class=\"sy4\">,</span><br/>\tCY <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R <span class=\"sy3\">+</span> <span class=\"nu0\">50</span><span class=\"sy4\">,</span><br/>\tR1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><span class=\"sy4\">,</span><br/>\tR2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R <span class=\"sy3\">/</span> <span class=\"nu0\">8</span><span class=\"sy4\">,</span><br/>\tCY1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R1 <span class=\"sy3\">+</span> <span class=\"nu0\">50</span><span class=\"sy4\">,</span><br/>\tCY2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">3</span> <span class=\"sy3\">*</span> R1 <span class=\"sy3\">+</span> <span class=\"nu0\">50</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\tnew<span class=\"br0\">(</span>E<span class=\"sy4\">,</span> semi_disk<span class=\"br0\">(</span>point<span class=\"br0\">(</span>CX<span class=\"sy4\">,</span> CY<span class=\"br0\">)</span><span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> w<span class=\"sy4\">,</span> Bl<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>F<span class=\"sy4\">,</span> semi_disk<span class=\"br0\">(</span>point<span class=\"br0\">(</span>CX<span class=\"sy4\">,</span> CY<span class=\"br0\">)</span><span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> e<span class=\"sy4\">,</span> Wh<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>D1<span class=\"sy4\">,</span> disk<span class=\"br0\">(</span>point<span class=\"br0\">(</span>CX<span class=\"sy4\">,</span> CY1<span class=\"br0\">)</span><span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> Bl<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>D2<span class=\"sy4\">,</span> disk<span class=\"br0\">(</span>point<span class=\"br0\">(</span>CX<span class=\"sy4\">,</span> CY2<span class=\"br0\">)</span><span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> Wh<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>D3<span class=\"sy4\">,</span> disk<span class=\"br0\">(</span>point<span class=\"br0\">(</span>CX<span class=\"sy4\">,</span> CY1<span class=\"br0\">)</span><span class=\"sy4\">,</span> R2<span class=\"sy4\">,</span> Wh<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>D4<span class=\"sy4\">,</span> disk<span class=\"br0\">(</span>point<span class=\"br0\">(</span>CX<span class=\"sy4\">,</span> CY2<span class=\"br0\">)</span><span class=\"sy4\">,</span> R2<span class=\"sy4\">,</span> Bl<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\tsend_list<span class=\"br0\">(</span>W<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> <span class=\"br0\">[</span>E<span class=\"sy4\">,</span> F<span class=\"sy4\">,</span> D1<span class=\"sy4\">,</span> D2<span class=\"sy4\">,</span> D3<span class=\"sy4\">,</span> D4<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\tWD <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">2</span> <span class=\"sy3\">*</span> R <span class=\"sy3\">+</span> <span class=\"nu0\">100</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>W<span class=\"sy4\">,</span> size<span class=\"sy4\">,</span> size<span class=\"br0\">(</span>WD<span class=\"sy4\">,</span> WD <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>W<span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">open</span></a><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"sy1\">:-</span> pce_begin_class<span class=\"br0\">(</span>semi_disk<span class=\"sy4\">,</span> path<span class=\"sy4\">,</span> \"Semi disk with color \"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>initialise<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> C<span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> O<span class=\"sy4\">,</span> Col<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>        send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> send_super<span class=\"sy4\">,</span> initialise<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>C<span class=\"sy4\">,</span> x<span class=\"sy4\">,</span> CX<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>C<span class=\"sy4\">,</span> y<span class=\"sy4\">,</span> CY<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tchoose<span class=\"br0\">(</span>O<span class=\"sy4\">,</span> Deb<span class=\"sy4\">,</span> End<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tforall<span class=\"br0\">(</span>between<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> End<span class=\"sy4\">,</span> I<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t       <span class=\"br0\">(</span>   X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R <span class=\"sy3\">*</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">cos</span></a><span class=\"br0\">(</span>I <span class=\"sy3\">*</span> pi<span class=\"sy3\">/</span><span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> CX<span class=\"sy4\">,</span><br/>\t\t   Y <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R <span class=\"sy3\">*</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">sin</span></a><span class=\"br0\">(</span>I <span class=\"sy3\">*</span> pi<span class=\"sy3\">/</span><span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> CY<span class=\"sy4\">,</span><br/>\t           send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> append<span class=\"sy4\">,</span> point<span class=\"br0\">(</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> closed<span class=\"sy4\">,</span> <span class=\"sy5\">@</span>on<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> fill_pattern<span class=\"sy4\">,</span> Col<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"sy1\">:-</span> pce_end_class<span class=\"sy4\">.</span><br/>\u00a0<br/>choose<span class=\"br0\">(</span>s<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>choose<span class=\"br0\">(</span>n<span class=\"sy4\">,</span> <span class=\"nu0\">180</span><span class=\"sy4\">,</span> <span class=\"nu0\">360</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>choose<span class=\"br0\">(</span>w<span class=\"sy4\">,</span> <span class=\"nu0\">90</span><span class=\"sy4\">,</span> <span class=\"nu0\">270</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>choose<span class=\"br0\">(</span>e<span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">90</span><span class=\"sy4\">,</span> <span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"sy1\">:-</span> pce_begin_class<span class=\"br0\">(</span>disk<span class=\"sy4\">,</span> ellipse<span class=\"sy4\">,</span> \"disk with color \"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>initialise<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> C<span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> Col<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>        send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> send_super<span class=\"sy4\">,</span> initialise<span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> R<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> center<span class=\"sy4\">,</span> C<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> pen<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> fill_pattern<span class=\"sy4\">,</span> Col<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"sy1\">:-</span> pce_end_class<span class=\"sy4\">.</span></pre>"}, {"lang": "PureBasic", "loc": 22, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Procedure</span> Yin_And_Yang<span class=\"br0\">(</span>x, y, radius<span class=\"br0\">)</span><br/>  <span class=\"kw2\">DrawingMode</span><span class=\"br0\">(</span>#PB_2DDrawing_Outlined<span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>x, y, <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> radius, #Black<span class=\"br0\">)</span>               <span class=\"co1\">;outer circle</span><br/>  <span class=\"kw2\">DrawingMode</span><span class=\"br0\">(</span>#PB_2DDrawing_Default<span class=\"br0\">)</span><br/>  <span class=\"kw2\">LineXY</span><span class=\"br0\">(</span>x, y <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> radius, x, y <span class=\"sy0\">+</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> radius, #Black<span class=\"br0\">)</span><br/>  <span class=\"kw2\">FillArea</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, y, #Black, #Black<span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>x, y <span class=\"sy0\">-</span> radius, radius <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, #White<span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>x, y <span class=\"sy0\">+</span> radius, radius <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, #Black<span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>x, y <span class=\"sy0\">-</span> radius, radius <span class=\"sy0\">/</span> <span class=\"nu0\">3</span>, #Black<span class=\"br0\">)</span>       <span class=\"co1\">;small contrasting inner circles</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>x, y <span class=\"sy0\">+</span> radius, radius <span class=\"sy0\">/</span> <span class=\"nu0\">3</span>, #White<span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">CreateImage</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">700</span>, <span class=\"nu0\">700</span><span class=\"br0\">)</span> <span class=\"kw1\">And</span> <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">ImageOutput</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">FillArea</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, #White<span class=\"br0\">)</span><br/>    Yin_And_Yang<span class=\"br0\">(</span><span class=\"nu0\">105</span>, <span class=\"nu0\">105</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span><br/>    Yin_And_Yang<span class=\"br0\">(</span><span class=\"nu0\">400</span>, <span class=\"nu0\">400</span>, <span class=\"nu0\">148</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">;</span><br/>  <span class=\"kw2\">UsePNGImageEncoder</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  path$ <span class=\"sy0\">=</span> <span class=\"kw2\">SaveFileRequester</span><span class=\"br0\">(</span><span class=\"st0\">\"Save image\"</span>, <span class=\"st0\">\"Yin And yang.png\"</span>, <span class=\"st0\">\"*.png\"</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> path$ <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span>: <span class=\"kw2\">SaveImage</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, path$, #PB_ImagePlugin_PNG, <span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 21, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">math</span><br/><span class=\"kw1\">def</span> yinyang<span class=\"br0\">(</span>n<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:<br/>\tradii   <span class=\"sy0\">=</span> <span class=\"br0\">[</span>i * n <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\tranges  <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">range</span><span class=\"br0\">(</span>-r<span class=\"sy0\">,</span> r+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> r <span class=\"kw1\">in</span> radii<span class=\"br0\">]</span><br/>\tsquares <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> rnge <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> rnge<span class=\"br0\">]</span><br/>\t\t   <span class=\"kw1\">for</span> rnge <span class=\"kw1\">in</span> ranges<span class=\"br0\">]</span><br/>\tcircles <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"kw1\">for</span> x<span class=\"sy0\">,</span>y <span class=\"kw1\">in</span> sqrpoints<br/>\t\t     <span class=\"kw1\">if</span> <span class=\"kw3\">math</span>.<span class=\"me1\">hypot</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> radius <span class=\"br0\">]</span><br/>\t\t   <span class=\"kw1\">for</span> sqrpoints<span class=\"sy0\">,</span> radius <span class=\"kw1\">in</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span>squares<span class=\"sy0\">,</span> radii<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\tm <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span>:<span class=\"st0\">' '</span> <span class=\"kw1\">for</span> x<span class=\"sy0\">,</span>y <span class=\"kw1\">in</span> squares<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">for</span> x<span class=\"sy0\">,</span>y <span class=\"kw1\">in</span> circles<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span>:<br/>\t\tm<span class=\"br0\">[</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'*'</span><br/>\t<span class=\"kw1\">for</span> x<span class=\"sy0\">,</span>y <span class=\"kw1\">in</span> circles<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span>:<br/>\t\t<span class=\"kw1\">if</span> x<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>: m<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'\u00b7'</span><br/>\t<span class=\"kw1\">for</span> x<span class=\"sy0\">,</span>y <span class=\"kw1\">in</span> circles<span class=\"br0\">[</span>-<span class=\"nu0\">2</span><span class=\"br0\">]</span>:<br/>\t\tm<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y+<span class=\"nu0\">3</span>*n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'*'</span><br/>\t\tm<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y-<span class=\"nu0\">3</span>*n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'\u00b7'</span><br/>\t<span class=\"kw1\">for</span> x<span class=\"sy0\">,</span>y <span class=\"kw1\">in</span> circles<span class=\"br0\">[</span>-<span class=\"nu0\">3</span><span class=\"br0\">]</span>:<br/>\t\tm<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y+<span class=\"nu0\">3</span>*n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'\u00b7'</span><br/>\t\tm<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y-<span class=\"nu0\">3</span>*n<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'*'</span><br/>\t<span class=\"kw1\">return</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>'</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span>m<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">reversed</span><span class=\"br0\">(</span>ranges<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> ranges<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 15, "block": "<pre class=\"text highlighted_source\">plot.yin.yang &lt;- function(x=5, y=5, r=3, s=10, add=F){<br/>\tsuppressMessages(require(\"plotrix\"))<br/>\tif(!add) plot(1:10, type=\"n\", xlim=c(0,s), ylim=c(0,s), xlab=\"\", ylab=\"\", xaxt=\"n\", yaxt=\"n\", bty=\"n\", asp=1)<br/>\tdraw.circle(x, y, r, border=\"white\", col= \"black\")<br/>\tdraw.ellipse(x, y, r, r, col=\"white\", angle=0, segment=c(90,270), arc.only=F)<br/>\tdraw.ellipse(x, y - r * 0.5, r * 0.5, r * 0.5, col=\"black\", border=\"black\", angle=0, segment=c(90,270), arc.only=F)<br/>\tdraw.circle(x, y - r * 0.5, r * 0.125, border=\"white\", col= \"white\")<br/>\tdraw.circle(x, y + r * 0.5, r * 0.5, col=\"white\", border=\"white\")<br/>\tdraw.circle(x, y + r * 0.5, r * 0.125, border=\"black\", lty=1, col= \"black\")<br/>\tdraw.circle(x, y, r, border=\"black\")<br/>}<br/>png(\"yin_yang.png\")<br/>plot.yin.yang()<br/>plot.yin.yang(1,7,1, add=T)<br/>dev.off()</pre>"}, {"lang": "Racket", "loc": 22, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require slideshow/pict)<br/>\u00a0<br/>(define (yin-yang d)<br/>  (define base <br/>    (hc-append (inset/clip (circle d) 0 0 (- (/ d 2)) 0)<br/>               (inset/clip (disk d) (- (/ d 2)) 0 0 0)))<br/>  (define with-top<br/>    (ct-superimpose<br/>     base<br/>     (cc-superimpose (colorize (disk (/ d 2)) \"white\")<br/>                     (disk (/ d 8)))))<br/>  (define with-bottom<br/>    (cb-superimpose<br/>     with-top<br/>     (cc-superimpose (disk (/ d 2))<br/>                     (colorize (disk (/ d 8)) \"white\"))))<br/>  (cc-superimpose with-bottom (circle d)))<br/>\u00a0<br/>(yin-yang 200)<br/>\u00a0</pre>"}, {"lang": "Rascal", "loc": 19, "block": "<pre class=\"text highlighted_source\">import util::Math;<br/>import vis::Render;<br/>import vis::Figure;<br/>\u00a0<br/>public void yinyang(){<br/>\ttemplate = ellipse(fillColor(\"white\"));<br/>\u00a0<br/>\tsmallWhite = ellipse(fillColor(\"white\"), shrink(0.1), valign(0.75));<br/>\tsmallBlack = ellipse(fillColor(\"black\"), shrink(0.1), valign(0.25));<br/>\u00a0<br/>\tdots= [ellipse(fillColor(\"white\"), shrink(0.000001), align(0.5 + sin(0.0031415*n)/4, 0.25 + cos(0.0031415*n)/-4)) | n &lt;- [1 .. 1000]];<br/>\tdots2 = [ellipse(fillColor(\"black\"), shrink(0.000001), align(0.5 + sin(0.0031415*n)/-4, 0.75 + cos(0.0031415*n)/-4)) | n &lt;- [1 .. 1000]];<br/>\tdots3= [ellipse(fillColor(\"black\"), shrink(0.000001), align(0.5 + sin(0.0031415*n)/2, 0.5-cos(0.0031415*n)/-2)) | n &lt;- [1 .. 1000]];<br/>\u00a0<br/>\tblack= overlay([*dots, *dots2, *dots3], shapeConnected(true), shapeClosed(true), shapeCurved(true), fillColor(\"black\"));<br/>\u00a0<br/>\trender(hcat([vcat([overlay([template, black, smallWhite, smallBlack], aspectRatio (1.0)), space(), space()]), <br/>\t                   overlay([template, black, smallWhite, smallBlack], aspectRatio (1.0))]));<br/>}</pre>"}, {"lang": "REXX", "loc": 25, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program creates &amp; displays an ASCII art version of the Yin\u2500Yang (taijitu) symbol.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> s1 s2 <span class=\"sy0\">.</span>                                <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> s1==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> s1==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> s1=<span class=\"nu0\">17</span>                  <span class=\"coMULTI\">/*Not defined?   Then use the default. */</span><br/><span class=\"kw1\">if</span> s2==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> s2==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> s2=s1\u00a0% <span class=\"nu0\">2</span>              <span class=\"coMULTI\">/* \"      \"        \"   \"   \"     \"     */</span><br/><span class=\"kw1\">if</span> s1<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>              <span class=\"kw3\">then</span> <span class=\"kw1\">call</span>  Yin_Yang  s1     <span class=\"coMULTI\">/*create &amp; display 1st Yin-Yang symbol.*/</span><br/><span class=\"kw1\">if</span> s2<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>              <span class=\"kw3\">then</span> <span class=\"kw1\">call</span>  Yin_Yang  s2     <span class=\"coMULTI\">/*   \"   \"    \"    2nd    \"       \"    */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/><a class=\"__cf_email__\" data-cfemail=\"7c15123c\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:     <span class=\"kw1\">procedure</span>;  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> cy,r,x,y;           <span class=\"kw1\">return</span> x<span class=\"sy0\">**</span><span class=\"nu0\">2</span>  +  <span class=\"br0\">(</span>y-cy<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span>  <span class=\"sy0\">&lt;</span>=  r<span class=\"sy0\">**</span><span class=\"nu0\">2</span><br/><a class=\"__cf_email__\" data-cfemail=\"35575c5275\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:      <span class=\"coMULTI\">/*in big         circle. */</span>             <span class=\"kw1\">return</span> <a class=\"__cf_email__\" data-cfemail=\"355c5b75\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span>  <span class=\"nu0\">0</span> ,    r  ,    x,    y <span class=\"br0\">)</span><br/><a class=\"__cf_email__\" data-cfemail=\"ff8c9a9296bf\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:     <span class=\"coMULTI\">/*in semi        circle. */</span>             <span class=\"kw1\">return</span> <a class=\"__cf_email__\" data-cfemail=\"7f16113f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span> r<span class=\"sy0\">/</span><span class=\"nu0\">2</span>,    r<span class=\"sy0\">/</span><span class=\"nu0\">2</span>,    x,    y <span class=\"br0\">)</span><br/><a class=\"__cf_email__\" data-cfemail=\"82f1c0c2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:       <span class=\"coMULTI\">/*in small black circle. */</span>             <span class=\"kw1\">return</span> <a class=\"__cf_email__\" data-cfemail=\"137a7d53\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span> r<span class=\"sy0\">/</span><span class=\"nu0\">2</span>,    r<span class=\"sy0\">/</span><span class=\"nu0\">6</span>,    x,    y <span class=\"br0\">)</span><br/><a class=\"__cf_email__\" data-cfemail=\"9cefcbdc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:       <span class=\"coMULTI\">/*in small white circle. */</span>             <span class=\"kw1\">return</span> <a class=\"__cf_email__\" data-cfemail=\"acc5c2ec\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span>-r<span class=\"sy0\">/</span><span class=\"nu0\">2</span>,    r<span class=\"sy0\">/</span><span class=\"nu0\">6</span>,    x,    y <span class=\"br0\">)</span><br/><a class=\"__cf_email__\" data-cfemail=\"afeddccac2c6ef\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:    <span class=\"coMULTI\">/*in black semi  circle. */</span>             <span class=\"kw1\">return</span> <a class=\"__cf_email__\" data-cfemail=\"4b22250b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span>-r<span class=\"sy0\">/</span><span class=\"nu0\">2</span>,    r<span class=\"sy0\">/</span><span class=\"nu0\">2</span>,    x,    y <span class=\"br0\">)</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>Yin_Yang: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> r;  mY=<span class=\"nu0\">1</span>;  mX=<span class=\"nu0\">2</span>   <span class=\"coMULTI\">/*aspect multiplier for the  X,Y  axis.*/</span><br/>   <span class=\"kw1\">do</span>   sy= r<span class=\"sy0\">*</span>mY  <span class=\"kw2\">to</span>  -r<span class=\"sy0\">*</span>mY  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>;      $=                         <span class=\"coMULTI\">/*$ \u2261 an output line*/</span><br/>     <span class=\"kw1\">do</span> sx=-r<span class=\"sy0\">*</span>mX  <span class=\"kw2\">to</span>   r<span class=\"sy0\">*</span>mX;             x=sx<span class=\"sy0\">/</span>mX;      y=sy<span class=\"sy0\">/</span>mY      <span class=\"coMULTI\">/*apply aspect ratio*/</span><br/>     <span class=\"kw1\">if</span> <a class=\"__cf_email__\" data-cfemail=\"ceaca7a98e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw3\">then</span> <span class=\"kw1\">if</span> <a class=\"__cf_email__\" data-cfemail=\"2a594f47436a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">if</span> <a class=\"__cf_email__\" data-cfemail=\"d2a19092\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span><span class=\"br0\">)</span>     <span class=\"kw3\">then</span> $=$<span class=\"st0\">'\u0398'</span>;                 <span class=\"kw3\">else</span> $=$<span class=\"st0\">'\u00b0'</span><br/>                                <span class=\"kw3\">else</span> <span class=\"kw1\">if</span> <a class=\"__cf_email__\" data-cfemail=\"682a1b0d050128\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">if</span> <a class=\"__cf_email__\" data-cfemail=\"b7c4e0f7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> $=$<span class=\"st0\">'\u00b0'</span>;  <span class=\"kw3\">else</span> $=$<span class=\"st0\">'\u0398'</span><br/>                                                  <span class=\"kw3\">else</span> <span class=\"kw1\">if</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>    <span class=\"kw3\">then</span> $=$<span class=\"st0\">'\u00b0'</span>;  <span class=\"kw3\">else</span> $=$<span class=\"st0\">'\u0398'</span><br/>               <span class=\"kw3\">else</span> $=$<span class=\"st0\">' '</span><br/>     <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*sy*/</span><br/>   <span class=\"kw1\">say</span> <span class=\"kw6\">strip</span><span class=\"br0\">(</span>$, <span class=\"st0\">'T'</span><span class=\"br0\">)</span>                             <span class=\"coMULTI\">/*display one line of a Yin\u2500Yang symbol*/</span><br/>   <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*sx*/</span>;       <span class=\"kw1\">return</span></pre>"}, {"lang": "Ruby", "loc": 28, "block": "<pre class=\"ruby highlighted_source\">Shoes.<span class=\"me1\">app</span><span class=\"br0\">(</span><span class=\"re3\">:width</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">470</span>, <span class=\"re3\">:height</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">380</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  PI = <span class=\"re2\">Shoes::TWO_PI</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>\u00a0<br/>  strokewidth <span class=\"nu0\">1</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> yin_yang<span class=\"br0\">(</span>x, y, radius<span class=\"br0\">)</span><br/>    fill black; stroke black<br/>    arc x, y, radius, radius, <span class=\"sy0\">-</span>PI<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, PI<span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>\u00a0<br/>    fill white; stroke white<br/>    arc x, y, radius, radius, PI<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span>PI<span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>    oval x<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">4</span>, y<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, radius<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>\u00a0<br/>    fill black; stroke black<br/>    oval x<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">4</span>, y, radius<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    oval x<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">12</span>, y<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">4</span><span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">12</span>, radius<span class=\"sy0\">/</span><span class=\"nu0\">6</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>\u00a0<br/>    fill white; stroke white<br/>    oval x<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">12</span>, y<span class=\"sy0\">+</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">4</span><span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">12</span>, radius<span class=\"sy0\">/</span><span class=\"nu0\">6</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>\u00a0<br/>    nofill<br/>    stroke black<br/>    oval x<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, y<span class=\"sy0\">-</span>radius<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, radius<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  yin_yang <span class=\"nu0\">190</span>, <span class=\"nu0\">190</span>, <span class=\"nu0\">360</span><br/>  yin_yang <span class=\"nu0\">410</span>, <span class=\"nu0\">90</span>, <span class=\"nu0\">90</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Scala", "loc": 60, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">swing</span>.<span class=\"me1\">Swing</span>.<span class=\"me1\">pair2Dimension</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">swing</span>.<span class=\"br0\">{</span> MainFrame, Panel <span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"br0\">{</span> Color, Graphics2D <span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> YinYang <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> scala.<span class=\"me1\">swing</span>.<span class=\"me1\">SimpleSwingApplication</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> preferedSize <span class=\"sy0\">=</span> <span class=\"nu0\">500</span><br/>\u00a0<br/>  <span class=\"coMULTI\">/** Draw a Taijitu symbol on the given graphics context.<br/>   */</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> drawTaijitu<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D, size<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sizeMinsOne <span class=\"sy0\">=</span> size - <span class=\"nu0\">1</span><br/>    <span class=\"co1\">// Preserve the color for the caller</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> colorSave <span class=\"sy0\">=</span> g.<span class=\"me1\">getColor</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">WHITE</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">// Use fillOval to draw a filled in circle</span><br/>    g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, sizeMinsOne, sizeMinsOne<span class=\"br0\">)</span><br/>\u00a0<br/>    g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">// Use fillArc to draw part of a filled in circle</span><br/>    g.<span class=\"me1\">fillArc</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, sizeMinsOne, sizeMinsOne, <span class=\"nu0\">270</span>, <span class=\"nu0\">180</span><span class=\"br0\">)</span><br/>    g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>size / <span class=\"nu0\">4</span>, size / <span class=\"nu0\">2</span>, size / <span class=\"nu0\">2</span>, size / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>    g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">WHITE</span><span class=\"br0\">)</span><br/>    g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>size / <span class=\"nu0\">4</span>, <span class=\"nu0\">0</span>, size / <span class=\"nu0\">2</span>, size / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span><span class=\"nu0\">7</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, <span class=\"nu0\">11</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, size / <span class=\"nu0\">8</span>, size / <span class=\"nu0\">8</span><span class=\"br0\">)</span><br/>\u00a0<br/>    g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><br/>    g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span><span class=\"nu0\">7</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, <span class=\"nu0\">3</span> <span class=\"sy0\">*</span> size / <span class=\"nu0\">16</span>, size / <span class=\"nu0\">8</span>, size / <span class=\"nu0\">8</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">// Use drawOval to draw an empty circle for the outside border</span><br/>    g.<span class=\"me1\">drawOval</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, sizeMinsOne, sizeMinsOne<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">// Restore the color for the caller</span><br/>    g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>colorSave<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> top <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> MainFrame <span class=\"br0\">{</span><br/>    title <span class=\"sy0\">=</span> <span class=\"st0\">\"Rosetta Code &gt;&gt;&gt; Yin Yang Generator | Language: Scala\"</span><br/>    contents <span class=\"sy0\">=</span> gui<span class=\"br0\">(</span>preferedSize<span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> gui<span class=\"br0\">(</span>sizeInterior<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Panel<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      preferredSize <span class=\"sy0\">=</span> <span class=\"br0\">(</span>sizeInterior, sizeInterior<span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"coMULTI\">/** Draw a Taijitu symbol in this graphics context.<br/>       */</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> paintComponent<span class=\"br0\">(</span>graphics<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>graphics<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// Color in the background of the image</span><br/>        background <span class=\"sy0\">=</span> Color.<span class=\"me1\">RED</span><br/>        drawTaijitu<span class=\"br0\">(</span>graphics, sizeInterior<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"co1\">// def gui(</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    preferedSize <span class=\"sy0\">=</span> args.<span class=\"me1\">headOption</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">toInt</span><span class=\"br0\">)</span>.<span class=\"me1\">getOrElse</span><span class=\"br0\">(</span>preferedSize<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">main</span><span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scilab", "loc": 89, "block": "<pre class=\"text highlighted_source\">R = 1;                      //outer radius of first image<br/>scale = 0.5;                //scale of the second image<br/>\u00a0<br/>scf(0); clf();<br/>set(gca(),'isoview','on');<br/>xname('Yin and Yang');<br/>\u00a0<br/>//First one<br/>n_p = 100;                  //number of points per arc<br/>angles = [];                //angles for each arc<br/>angles = linspace(%pi/2, 3*%pi/2, n_p);<br/>Arcs = zeros(7,n_p);<br/>\u00a0<br/>    Arcs(1,:) = R * exp(%i * angles);<br/>    plot2d(real(Arcs(1,:)),imag(Arcs(1,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>    set(line.children,'foreground',8);<br/>\u00a0<br/>    Arcs(2,:) = -%i*R/2 + R/2 * exp(%i * angles);<br/>    plot2d(real(Arcs(2,:)),imag(Arcs(2,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>\u00a0<br/>angles = [];<br/>angles = linspace(-%pi/2,\u00a0%pi/2, n_p);<br/>\u00a0<br/>    Arcs(3,:) = R * exp(%i * angles);<br/>    plot2d(real(Arcs(3,:)), imag(Arcs(3,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>\u00a0<br/>    Arcs(4,:) =\u00a0%i*R/2 + R/2 * exp(%i * angles);<br/>    plot2d(real(Arcs(4,:)),imag(Arcs(4,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>    set(line.children,'foreground',8);<br/>\u00a0<br/>angles = [];<br/>angles = linspace(0, 2*%pi, n_p);<br/>\u00a0<br/>    Arcs(5,:) =\u00a0%i*R/2 + R/8 * exp(%i * angles);<br/>    plot2d(real(Arcs(5,:)),imag(Arcs(5,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>\u00a0<br/>    Arcs(6,:) = -%i*R/2 + R/8 * exp(%i * angles);<br/>    plot2d(real(Arcs(6,:)),imag(Arcs(6,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>    set(line.children,'foreground',8);<br/>\u00a0<br/>    Arcs(7,:) = R * exp(%i * angles);<br/>    plot2d(real(Arcs(7,:)),imag(Arcs(7,:)));<br/>    set(gca(),'axes_visible',['off','off','off']);<br/>\u00a0<br/>//Scaling<br/>new_pos = R + 2*R*scale;<br/>Arcs = new_pos + Arcs .* scale;<br/>\u00a0<br/>    plot2d(real(Arcs(1,:)),imag(Arcs(1,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>    set(line.children,'foreground',8);<br/>\u00a0<br/>    plot2d(real(Arcs(2,:)),imag(Arcs(2,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>\u00a0<br/>    plot2d(real(Arcs(3,:)), imag(Arcs(3,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>\u00a0<br/>    plot2d(real(Arcs(4,:)),imag(Arcs(4,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>    set(line.children,'foreground',8);<br/>\u00a0<br/>    plot2d(real(Arcs(5,:)),imag(Arcs(5,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>\u00a0<br/>    plot2d(real(Arcs(6,:)),imag(Arcs(6,:)));<br/>    line = gce();<br/>    set(line.children,'polyline_style',5);<br/>    set(line.children,'foreground',8);<br/>\u00a0<br/>    plot2d(real(Arcs(7,:)),imag(Arcs(7,:)));<br/>    set(gca(),'axes_visible',['off','off','off']);</pre>"}, {"lang": "Seed7", "loc": 26, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"float.s7i\";<br/>  include \"math.s7i\";<br/>  include \"draw.s7i\";<br/>  include \"keybd.s7i\";<br/>\u00a0<br/>const proc: yinYang (in integer: xPos, in integer: yPos, in integer: size) is func<br/>  begin<br/>    pieslice(xPos, yPos, size, 3.0 * PI / 2.0, PI, black);<br/>    pieslice(xPos, yPos, size, PI / 2.0, PI, white);<br/>    fcircle(xPos, yPos - size div 2, size div 2, white);<br/>    fcircle(xPos, yPos + size div 2, size div 2, black);<br/>    fcircle(xPos, yPos - size div 2, size div 6, black);<br/>    fcircle(xPos, yPos + size div 2, size div 6, white);<br/>    circle(xPos, yPos, size, black);<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    screen(640, 480);<br/>    clear(white);<br/>    KEYBOARD\u00a0:= GRAPH_KEYBOARD;<br/>    yinYang(100, 100, 80);<br/>    yinYang(400, 250, 200);<br/>    readln(KEYBOARD);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 24, "block": "<pre class=\"ruby highlighted_source\">func circle <span class=\"br0\">(</span>rad, cx, cy, fill=<span class=\"st0\">'white'</span>, stroke=<span class=\"st0\">'black'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    say <span class=\"st0\">\"&lt;circle cx='#{cx}' cy='#{cy}' r='#{rad}' fill='#{fill}' stroke='#{stroke}' stroke-width='1'/&gt;\"</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func yin_yang <span class=\"br0\">(</span>rad, cx, cy, fill=<span class=\"st0\">'white'</span>, stroke=<span class=\"st0\">'black'</span>, angle=<span class=\"nu0\">90</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var <span class=\"br0\">(</span>c, w<span class=\"br0\">)</span> = <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>    angle\u00a0!= <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> say <span class=\"st0\">\"&lt;g transform='rotate(#{angle}, #{cx}, #{cy})'&gt;\"</span>;<br/>    circle<span class=\"br0\">(</span>rad, cx, cy, fill, stroke<span class=\"br0\">)</span>;<br/>    say<span class=\"br0\">(</span><span class=\"st0\">\"&lt;path d='M #{cx} #{cy + rad}A #{rad/2} #{rad/2} 0 0 #{c} #{cx} #{cy} \"</span>,<br/>        <span class=\"st0\">\"#{rad/2} #{rad/2} 0 0 #{w} #{cx} #{cy - rad} #{rad} #{rad} 0 0 #{c} #{cx} \"</span>,<br/>        <span class=\"st0\">\"#{cy + rad} z' fill='#{stroke}' stroke='none' /&gt;\"</span><span class=\"br0\">)</span>;<br/>    circle<span class=\"br0\">(</span>rad<span class=\"sy0\">/</span><span class=\"nu0\">5</span>, cx, cy <span class=\"sy0\">+</span> rad<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, fill, stroke<span class=\"br0\">)</span>;<br/>    circle<span class=\"br0\">(</span>rad<span class=\"sy0\">/</span><span class=\"nu0\">5</span>, cx, cy <span class=\"sy0\">-</span> rad<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, stroke, fill<span class=\"br0\">)</span>;<br/>    angle\u00a0!= <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> say <span class=\"st0\">\"&lt;/g&gt;\"</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">'&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;<br/>&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;<br/>&lt;svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;'</span>;<br/>\u00a0<br/>yin_yang<span class=\"br0\">(</span><span class=\"nu0\">40</span>, <span class=\"nu0\">50</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span>;<br/>yin_yang<span class=\"br0\">(</span><span class=\"nu0\">20</span>, <span class=\"nu0\">120</span>, <span class=\"nu0\">120</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>say <span class=\"st0\">'&lt;/svg&gt;'</span>;</pre>"}, {"lang": "SVG", "loc": 34, "block": "<pre class=\"xml highlighted_source\"><span class=\"sc3\"><span class=\"re1\">&lt;?xml</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span> <span class=\"re0\">encoding</span>=<span class=\"st0\">\"UTF-8\"</span> <span class=\"re0\">standalone</span>=<span class=\"st0\">\"no\"</span><span class=\"re2\">?&gt;</span></span><br/><span class=\"sc0\">&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" </span><br/><span class=\"sc0\">  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;</span><br/><span class=\"sc3\"><span class=\"re1\">&lt;svg</span> <span class=\"re0\">xmlns</span>=<span class=\"st0\">\"http://www.w3.org/2000/svg\"</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.1\"</span></span><br/><span class=\"sc3\">    <span class=\"re0\">xmlns:xlink</span>=<span class=\"st0\">\"http://www.w3.org/1999/xlink\"</span></span><br/><span class=\"sc3\">    <span class=\"re0\">width</span>=<span class=\"st0\">\"600\"</span> <span class=\"re0\">height</span>=<span class=\"st0\">\"600\"</span><span class=\"re2\">&gt;</span></span><br/>\u00a0<br/><span class=\"sc-1\">&lt;!-- We create the symbol in the rectangle from (0, 0) to (1, 1)</span><br/><span class=\"sc-1\">and then translate it so it's centered on the origin. --&gt;</span><br/><span class=\"sc3\"><span class=\"re1\">&lt;symbol</span> <span class=\"re0\">id</span>=<span class=\"st0\">\"yinyang\"</span><span class=\"re2\">&gt;</span></span><br/>  <span class=\"sc3\"><span class=\"re1\">&lt;g</span> <span class=\"re0\">transform</span>=<span class=\"st0\">\"translate(-0.5, -0.5)\"</span><span class=\"re2\">&gt;</span></span><br/>    <span class=\"sc-1\">&lt;!-- A white circle, for the bulk of the left-hand part --&gt;</span><br/>    <span class=\"sc3\"><span class=\"re1\">&lt;circle</span> <span class=\"re0\">cx</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">cy</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">r</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">fill</span>=<span class=\"st0\">\"white\"</span><span class=\"re2\">/&gt;</span></span><br/>    <span class=\"sc-1\">&lt;!-- A black semicircle, for the bulk of the right-hand part --&gt;</span><br/>    <span class=\"sc3\"><span class=\"re1\">&lt;path</span> <span class=\"re0\">d</span>=<span class=\"st0\">\"M 0.5,0 A 0.5,0.5 0 0,1 0.5,1 z\"</span> <span class=\"re0\">fill</span>=<span class=\"st0\">\"black\"</span><span class=\"re2\">/&gt;</span></span><br/>    <span class=\"sc-1\">&lt;!-- Circles to extend each part --&gt;</span><br/>    <span class=\"sc3\"><span class=\"re1\">&lt;circle</span> <span class=\"re0\">cx</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">cy</span>=<span class=\"st0\">\"0.25\"</span> <span class=\"re0\">r</span>=<span class=\"st0\">\"0.25\"</span> <span class=\"re0\">fill</span>=<span class=\"st0\">\"white\"</span><span class=\"re2\">/&gt;</span></span><br/>    <span class=\"sc3\"><span class=\"re1\">&lt;circle</span> <span class=\"re0\">cx</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">cy</span>=<span class=\"st0\">\"0.75\"</span> <span class=\"re0\">r</span>=<span class=\"st0\">\"0.25\"</span> <span class=\"re0\">fill</span>=<span class=\"st0\">\"black\"</span><span class=\"re2\">/&gt;</span></span><br/>    <span class=\"sc-1\">&lt;!-- The spots --&gt;</span><br/>    <span class=\"sc3\"><span class=\"re1\">&lt;circle</span> <span class=\"re0\">cx</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">cy</span>=<span class=\"st0\">\"0.25\"</span> <span class=\"re0\">r</span>=<span class=\"st0\">\"0.1\"</span> <span class=\"re0\">fill</span>=<span class=\"st0\">\"black\"</span><span class=\"re2\">/&gt;</span></span><br/>    <span class=\"sc3\"><span class=\"re1\">&lt;circle</span> <span class=\"re0\">cx</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">cy</span>=<span class=\"st0\">\"0.75\"</span> <span class=\"re0\">r</span>=<span class=\"st0\">\"0.1\"</span> <span class=\"re0\">fill</span>=<span class=\"st0\">\"white\"</span><span class=\"re2\">/&gt;</span></span><br/>    <span class=\"sc-1\">&lt;!-- An outline for the whole shape --&gt;</span><br/>    <span class=\"sc3\"><span class=\"re1\">&lt;circle</span> <span class=\"re0\">cx</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">cy</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">r</span>=<span class=\"st0\">\"0.5\"</span> <span class=\"re0\">fill</span>=<span class=\"st0\">\"none\"</span></span><br/><span class=\"sc3\">      <span class=\"re0\">stroke</span>=<span class=\"st0\">\"gray\"</span> <span class=\"re0\">stroke-width</span>=<span class=\"st0\">\".01\"</span><span class=\"re2\">/&gt;</span></span><br/>  <span class=\"sc3\"><span class=\"re1\">&lt;/g<span class=\"re2\">&gt;</span></span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;/symbol<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/><span class=\"sc3\"><span class=\"re1\">&lt;use</span> <span class=\"re0\">xlink:href</span>=<span class=\"st0\">\"#yinyang\"</span></span><br/><span class=\"sc3\">  <span class=\"re0\">transform</span>=<span class=\"st0\">\"translate(125, 125) scale(200, 200)\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/><span class=\"sc3\"><span class=\"re1\">&lt;use</span> <span class=\"re0\">xlink:href</span>=<span class=\"st0\">\"#yinyang\"</span></span><br/><span class=\"sc3\">  <span class=\"re0\">transform</span>=<span class=\"st0\">\"translate(375, 375) scale(400, 400)\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/><span class=\"sc3\"><span class=\"re1\">&lt;/svg<span class=\"re2\">&gt;</span></span></span></pre>"}, {"lang": "Tcl", "loc": 27, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/><span class=\"kw2\">package</span> require Tk<br/>\u00a0<br/><span class=\"kw1\">namespace</span> import tcl::<span class=\"me1\">mathop</span>::\\<span class=\"br0\">[</span>-+\\<span class=\"br0\">]</span>    <span class=\"sy0\">;</span><span class=\"co1\"># Shorter coordinate math</span><br/><span class=\"kw1\">proc</span> yinyang <span class=\"br0\">{</span>c x y r <span class=\"br0\">{</span>colors <span class=\"br0\">{</span>white black<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    lassign <span class=\"re0\">$colors</span> a b<br/>    <span class=\"kw1\">set</span> tt <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$r</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> / <span class=\"nu0\">3.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> h <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$r</span> / <span class=\"nu0\">2.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> t <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$r</span> / <span class=\"nu0\">3.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> s <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$r</span> / <span class=\"nu0\">6.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"re0\">$c</span> create arc <span class=\"br0\">[</span>- <span class=\"re0\">$x</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$y</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$x</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$y</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> \\<br/>\t-fill <span class=\"re0\">$a</span> -outline <span class=\"br0\">{</span><span class=\"br0\">}</span> -extent <span class=\"nu0\">180</span> -start <span class=\"nu0\">90</span><br/>    <span class=\"re0\">$c</span> create arc <span class=\"br0\">[</span>- <span class=\"re0\">$x</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$y</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$x</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$y</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> \\<br/>\t-fill <span class=\"re0\">$b</span> -outline <span class=\"br0\">{</span><span class=\"br0\">}</span> -extent <span class=\"nu0\">180</span> -start <span class=\"nu0\">270</span><br/>    <span class=\"re0\">$c</span> create oval <span class=\"br0\">[</span>- <span class=\"re0\">$x</span> <span class=\"re0\">$h</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$y</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$x</span> <span class=\"re0\">$h</span><span class=\"br0\">]</span> <span class=\"re0\">$y</span> \\<br/>\t-fill <span class=\"re0\">$a</span> -outline <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"re0\">$c</span> create oval <span class=\"br0\">[</span>- <span class=\"re0\">$x</span> <span class=\"re0\">$h</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$y</span> <span class=\"re0\">$r</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$x</span> <span class=\"re0\">$h</span><span class=\"br0\">]</span> <span class=\"re0\">$y</span> \\<br/>\t-fill <span class=\"re0\">$b</span> -outline <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"re0\">$c</span> create oval <span class=\"br0\">[</span>- <span class=\"re0\">$x</span> <span class=\"re0\">$s</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$y</span> <span class=\"re0\">$tt</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$x</span> <span class=\"re0\">$s</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$y</span> <span class=\"re0\">$t</span><span class=\"br0\">]</span> \\<br/>\t-fill <span class=\"re0\">$b</span> -outline <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"re0\">$c</span> create oval <span class=\"br0\">[</span>- <span class=\"re0\">$x</span> <span class=\"re0\">$s</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$y</span> <span class=\"re0\">$tt</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$x</span> <span class=\"re0\">$s</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$y</span> <span class=\"re0\">$t</span><span class=\"br0\">]</span> \\<br/>\t-fill <span class=\"re0\">$a</span> -outline <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>pack <span class=\"br0\">[</span>canvas .c -width <span class=\"nu0\">300</span> -height <span class=\"nu0\">300</span> -background gray50<span class=\"br0\">]</span><br/>yinyang .c <span class=\"nu0\">110</span> <span class=\"nu0\">110</span> <span class=\"nu0\">90</span><br/>yinyang .c <span class=\"nu0\">240</span> <span class=\"nu0\">240</span> <span class=\"nu0\">40</span></pre>"}, {"lang": "Visual Basic .NET", "loc": 21, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"kw1\">Public</span> <span class=\"kw1\">Class</span> Form1<br/>\u00a0<br/>    <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> Form1_Paint<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> sender <span class=\"kw1\">As</span> System<span class=\"sy0\">.</span><span class=\"kw2\">Object</span>, <span class=\"kw1\">ByVal</span> e <span class=\"kw1\">As</span> System<span class=\"sy0\">.</span><span class=\"me1\">Windows</span><span class=\"sy0\">.</span><span class=\"me1\">Forms</span><span class=\"sy0\">.</span><span class=\"me1\">PaintEventArgs</span><span class=\"br0\">)</span> <span class=\"kw1\">Handles</span> <span class=\"kw1\">MyBase</span><span class=\"sy0\">.</span><span class=\"me1\">Paint</span><br/>        <span class=\"kw1\">Dim</span> g <span class=\"kw1\">As</span> Graphics <span class=\"sy0\">=</span> e<span class=\"sy0\">.</span><span class=\"me1\">Graphics</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">SmoothingMode</span> <span class=\"sy0\">=</span> Drawing2D<span class=\"sy0\">.</span><span class=\"me1\">SmoothingMode</span><span class=\"sy0\">.</span><span class=\"me1\">AntiAlias</span><br/>\u00a0<br/>        DrawTaijitu<span class=\"br0\">(</span>g, <span class=\"kw1\">New</span> Point<span class=\"br0\">(</span><span class=\"nu0\">50</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span>, <span class=\"nu0\">200</span>, <span class=\"kw1\">True</span><span class=\"br0\">)</span><br/>        DrawTaijitu<span class=\"br0\">(</span>g, <span class=\"kw1\">New</span> Point<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span>, <span class=\"nu0\">60</span>, <span class=\"kw1\">True</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>    <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> DrawTaijitu<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> g <span class=\"kw1\">As</span> Graphics, <span class=\"kw1\">ByVal</span> pt <span class=\"kw1\">As</span> Point, <span class=\"kw1\">ByVal</span> width <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span>, <span class=\"kw1\">ByVal</span> hasOutline <span class=\"kw1\">As</span> <span class=\"kw2\">Boolean</span><span class=\"br0\">)</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">FillPie</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">X</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, width, width, <span class=\"nu0\">90</span>, <span class=\"nu0\">180</span><span class=\"br0\">)</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">FillPie</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">White</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">X</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, width, width, <span class=\"nu0\">270</span>, <span class=\"nu0\">180</span><span class=\"br0\">)</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.25</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">White</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.25</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">White</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.4375</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.1875</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.125</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.125</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.4375</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.6875</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.125</span><span class=\"br0\">)</span>, <span class=\"kw4\">CSng</span><span class=\"br0\">(</span>width <span class=\"sy0\">*</span> <span class=\"nu0\">0.125</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> hasOutline <span class=\"kw1\">Then</span> g<span class=\"sy0\">.</span><span class=\"me1\">DrawEllipse</span><span class=\"br0\">(</span>Pens<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">X</span>, pt<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, width, width<span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Class</span></pre>"}, {"lang": "XPL0", "loc": 29, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;          \\intrinsic 'code' declarations<br/>\u00a0<br/>def Black=0, Red=4, White=$F;<br/>\u00a0<br/>proc Circle(X0, Y0, R, CL, CR); \\Show a filled circle<br/>int X0, Y0, R, CL, CR;          \\left and right half colors<br/>int X, Y;<br/>[for Y:= -R to R do<br/>    for X:= -R to R do<br/>        if X*X + Y*Y &lt;= R*R then<br/>            Point(X+X0, Y+Y0, if X&lt;0 then CL else CR);<br/>]; \\Circle<br/>\u00a0<br/>proc YinYang(X0, Y0, R);<br/>int  X0, Y0, R;<br/>[Circle(X0, Y0,     R,   White, Black);<br/> Circle(X0, Y0-R/2, R/2, White, White);<br/> Circle(X0, Y0-R/2, R/6, Black, Black);<br/> Circle(X0, Y0+R/2, R/2, Black, Black);<br/> Circle(X0, Y0+R/2, R/6, White, White);<br/>]; \\YinYang<br/>\u00a0<br/>[SetVid($101);                  \\640x480 graphics<br/>Circle(320, 240, 400, Red, Red);\\fill screen with background color<br/>YinYang(80, 80, 70);<br/>YinYang(240, 240, 150);<br/>if ChIn(1) then [];             \\wait for keystroke<br/>SetVid(3);                      \\restore normal text mode<br/>]</pre>"}, {"lang": "Yabasic", "loc": 49, "block": "<pre class=\"text highlighted_source\">open window 640, 480<br/>\u00a0<br/>color 0,0,0<br/>clear window<br/>\u00a0<br/>taijitu(640/2, 480/2, 480/4)<br/>taijitu(100,100,50)<br/>\u00a0<br/>sub taijitu(x,y,r)<br/>\tfill circle x,y,r<br/>\tcolor 255,255,255<br/>\tfill circle x,y,r-4<br/>\tcolor 0,0,0<br/>\tline x, y-r to x, y+r<br/>\tinfill(x-2, y-2)<br/>\tfill circle x,y-r/2,r/2\t<br/>\tcolor 255,255,255<br/>\tfill circle x,y+r/2-2,r/2-1<br/>\tfill circle x,y-r/2-2,r/8-1<br/>\tcolor 0,0,0<br/>\tfill circle x,y+r/2-2,r/8-1<br/>end sub<br/>\u00a0<br/>sub infill(x,y)<br/>\tlocal oy,lx,rx,nx,i,m,t,l$,r$,a$,test$<br/>\ttest$=getbit$(x,y,x,y)\t\t// get a sample of fill area<br/>\toy=y-1\u00a0: lx=x\u00a0: rx=x \u00a0: m=1\t// m=1 makes go downwards<br/>\tfor t=1 to 2<br/>\t\trepeat<br/>\t\t\trepeat<br/>\t\t\t\tl$=getbit$(lx,y,lx,y)<br/>\t\t\t\tlx=lx-1\u00a0: if lx&lt;0 break \t// test how far left to go<br/>\t\t\tuntil (l$&lt;&gt;test$)<br/>\t\t\trepeat<br/>\t\t\t\t r$=getbit$(rx,y,rx,y)<br/>\t\t\t\t rx=rx+1\u00a0: if rx&gt;peek(\"winwidth\") break \t// test how far right to go<br/>\t\t\tuntil (r$&lt;&gt;test$)<br/>\t\t\tlx=lx+2\u00a0: rx=rx-2\u00a0: line lx,y to rx,y  \t\t\t// draw line across fill area<br/>\t\t\tnx=0<br/>\t\t\tfor i=lx to rx<br/>\t\t\t\ta$=getbit$(i,y+m,i,y+m)\t\t\t\t// get sample for next line<br/>\t\t\t\tif a$=test$ let nx=i \u00a0: break\t\t\t// test if new cycle reqd<br/>\t\t\tnext i <br/>\t\t\tlx=nx\u00a0: rx=nx<br/>\t\t\ty=y+m\u00a0: if (y&lt;0 or y&gt;peek(\"winheight\")) break\t\t// test how far up or down to go<br/>\t\tuntil (nx=0)<br/>\t\tlx=x\u00a0: rx=x\u00a0: y=oy\u00a0: m=-1\t\t\t\t\t// m=-1 makes go upwards\t\t\t\t\t\t<br/>\tnext t<br/>end sub</pre>"}, {"lang": "zkl", "loc": 25, "block": "<pre class=\"text highlighted_source\">fcn draw_yinyang(trans,scale){<br/>   0'|&lt;use xlink:href=\"#y\" transform=\"translate(%d,%d) scale(%g)\"/&gt;|<br/>   .fmt(trans,trans,scale).print();<br/>}<br/>\u00a0<br/>print(<br/>\"&lt;?xml version='1.0' encoding='UTF-8' standalone='no'?&gt;\\n\"<br/>\"&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n\"<br/>\"\t'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n\"<br/>\"&lt;svg xmlns='http://www.w3.org/2000/svg' version='1.1'\\n\"<br/>\"\txmlns:xlink='http://www.w3.org/1999/xlink'\\n\"<br/>\"\t\twidth='30' height='30'&gt;\\n\"<br/>\"\t&lt;defs&gt;&lt;g id='y'&gt;\\n\"<br/>\"\t\t&lt;circle cx='0' cy='0' r='200' stroke='black'\\n\"<br/>\"\t\t\tfill='white' stroke-width='1'/&gt;\\n\"<br/>\"\t\t&lt;path d='M0 -200 A 200 200 0 0 0 0 200\\n\"<br/>\"\t\t\t100 100 0 0 0 0 0 100 100 0 0 1 0 -200\\n\"<br/>\"\t\t\tz' fill='black'/&gt;\\n\"<br/>\"\t\t&lt;circle cx='0' cy='100' r='33' fill='white'/&gt;\\n\"<br/>\"\t\t&lt;circle cx='0' cy='-100' r='33' fill='black'/&gt;\\n\"<br/>\"\t&lt;/g&gt;&lt;/defs&gt;\\n\");<br/>\u00a0<br/>draw_yinyang(20, 0.05);<br/>draw_yinyang( 8, 0.02);<br/>print(\"&lt;/svg&gt;\");</pre>"}]}