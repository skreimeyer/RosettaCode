{"task": "Chat_server", "blocks": [{"lang": "Ada", "loc": 85, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Containers</span>.<span class=\"me1\">Vectors</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Command_Line</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Command_Line</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Exceptions</span>;   <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Exceptions</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;      <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Unbounded</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Unbounded</span>;<br/><span class=\"kw3\">with</span> Sockets;          <span class=\"kw3\">use</span> Sockets;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Chat_Server <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">package</span> Client_Vectors <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Containers</span>.<span class=\"me1\">Vectors</span><br/>     <span class=\"br0\">(</span>Element_Type =&gt; Socket_FD, Index_Type =&gt; Positive<span class=\"br0\">)</span>;<br/>   All_Clients\u00a0: Client_Vectors.<span class=\"me1\">Vector</span>;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> Write <span class=\"br0\">(</span>S\u00a0: String<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">procedure</span> Output <span class=\"br0\">(</span>Position\u00a0: Client_Vectors.<span class=\"me1\">Cursor</span><span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>         Sock\u00a0: Socket_FD\u00a0:= Client_Vectors.<span class=\"me1\">Element</span> <span class=\"br0\">(</span>Position<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">begin</span><br/>         Put_Line <span class=\"br0\">(</span>Sock, S<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> Output;<br/>   <span class=\"kw1\">begin</span><br/>      All_Clients.<span class=\"me1\">Iterate</span> <span class=\"br0\">(</span>Output'<span class=\"kw3\">Access</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Write;<br/>\u00a0<br/>   <span class=\"kw3\">task</span> <span class=\"kw3\">type</span> Client_Task <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">entry</span> Start <span class=\"br0\">(</span>FD\u00a0: Socket_FD<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Client_Task;<br/>\u00a0<br/>   <span class=\"kw3\">task</span> <span class=\"kw3\">body</span> Client_Task <span class=\"kw1\">is</span><br/>      Sock   \u00a0: Socket_FD;<br/>      Sock_ID\u00a0: Positive;<br/>      Name   \u00a0: Unbounded_String;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">select</span><br/>         <span class=\"kw3\">accept</span> Start <span class=\"br0\">(</span>FD\u00a0: Socket_FD<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>            Sock\u00a0:= FD;<br/>         <span class=\"kw1\">end</span> Start;<br/>      <span class=\"kw2\">or</span><br/>         <span class=\"kw3\">terminate</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">select</span>;<br/>\u00a0<br/>      <span class=\"kw1\">while</span> Name = Null_Unbounded_String <span class=\"kw1\">loop</span><br/>         Put <span class=\"br0\">(</span>Sock, <span class=\"st0\">\"Enter Name:\"</span><span class=\"br0\">)</span>;<br/>         Name\u00a0:= To_Unbounded_String <span class=\"br0\">(</span>Get_Line <span class=\"br0\">(</span>Sock<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      Write <span class=\"br0\">(</span>To_String <span class=\"br0\">(</span>Name<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" joined.\"</span><span class=\"br0\">)</span>;<br/>      All_Clients.<span class=\"me1\">Append</span> <span class=\"br0\">(</span>Sock<span class=\"br0\">)</span>;<br/>      Sock_ID\u00a0:= All_Clients.<span class=\"me1\">Find_Index</span> <span class=\"br0\">(</span>Sock<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">declare</span><br/>            Input\u00a0: String\u00a0:= Get_Line <span class=\"br0\">(</span>Sock<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">begin</span><br/>            Write <span class=\"br0\">(</span>To_String <span class=\"br0\">(</span>Name<span class=\"br0\">)</span> &amp; <span class=\"st0\">\": \"</span> &amp; Input<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">exception</span><br/>      <span class=\"kw3\">when</span> Connection_Closed =&gt;<br/>         Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"Connection closed\"</span><span class=\"br0\">)</span>;<br/>         Shutdown <span class=\"br0\">(</span>Sock, Both<span class=\"br0\">)</span>;<br/>         All_Clients.<span class=\"me1\">Delete</span> <span class=\"br0\">(</span>Sock_ID<span class=\"br0\">)</span>;<br/>         Write <span class=\"br0\">(</span>To_String <span class=\"br0\">(</span>Name<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" left.\"</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Client_Task;<br/>\u00a0<br/>   Accepting_Socket\u00a0: Socket_FD;<br/>   Incoming_Socket \u00a0: Socket_FD;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Client_Access <span class=\"kw1\">is</span> <span class=\"kw3\">access</span> Client_Task;<br/>   Dummy\u00a0: Client_Access;<br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">if</span> Argument_Count /= <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>      Raise_Exception <span class=\"br0\">(</span>Constraint_Error'Identity,<br/>                       <span class=\"st0\">\"Usage: \"</span> &amp; Command_Name &amp; <span class=\"st0\">\" port\"</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   Socket <span class=\"br0\">(</span>Accepting_Socket, PF_INET, SOCK_STREAM<span class=\"br0\">)</span>;<br/>   Setsockopt <span class=\"br0\">(</span>Accepting_Socket, SOL_SOCKET, SO_REUSEADDR, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>   Bind <span class=\"br0\">(</span>Accepting_Socket, Positive'Value <span class=\"br0\">(</span>Argument <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   Listen <span class=\"br0\">(</span>Accepting_Socket<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">loop</span><br/>      Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"Waiting for new connection\"</span><span class=\"br0\">)</span>;<br/>      Accept_Socket <span class=\"br0\">(</span>Accepting_Socket, Incoming_Socket<span class=\"br0\">)</span>;<br/>      Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"New connection acknowledged\"</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>      Dummy\u00a0:= <span class=\"kw3\">new</span> Client_Task;<br/>      Dummy.<span class=\"me1\">Start</span> <span class=\"br0\">(</span>Incoming_Socket<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/><span class=\"kw1\">end</span> Chat_Server;</pre>"}, {"lang": "C", "loc": 248, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;sys/socket.h&gt;</span><br/><span class=\"co2\">#include &lt;sys/select.h&gt;</span><br/><span class=\"co2\">#include &lt;netinet/in.h&gt;</span><br/><span class=\"co2\">#include &lt;netinet/ip.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> tsocket<span class=\"sy0\">;</span><br/><span class=\"kw4\">struct</span> sockaddr_in tsockinfo<span class=\"sy0\">;</span><br/>fd_set status<span class=\"sy0\">,</span> current<span class=\"sy0\">;</span><br/><span class=\"kw4\">void</span> ClientText<span class=\"br0\">(</span><span class=\"kw4\">int</span> handle<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>buf<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> buf_len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> client<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">char</span> buffer<span class=\"br0\">[</span><span class=\"nu0\">4096</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> pos<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span> name<span class=\"br0\">[</span><span class=\"nu0\">32</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"sy0\">*</span>connections<span class=\"br0\">[</span>FD_SETSIZE<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> AddConnection<span class=\"br0\">(</span><span class=\"kw4\">int</span> handle<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> client<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>buffer<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span><br/>    connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>pos <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> CloseConnection<span class=\"br0\">(</span><span class=\"kw4\">int</span> handle<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">char</span> buf<span class=\"br0\">[</span><span class=\"nu0\">512</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span><br/>\u00a0<br/>    FD_CLR<span class=\"br0\">(</span>handle<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a><span class=\"br0\">(</span>buf<span class=\"sy0\">,</span> <span class=\"st0\">\"* Disconnected:\u00a0%s<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> FD_SETSIZE<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>handle <span class=\"sy0\">!=</span> j <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">!=</span> tsocket <span class=\"sy0\">&amp;&amp;</span> FD_ISSET<span class=\"br0\">(</span>j<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>write<span class=\"br0\">(</span>j<span class=\"sy0\">,</span> buf<span class=\"sy0\">,</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>buf<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    CloseConnection<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"br0\">(</span><span class=\"st0\">\"-- Connection\u00a0%d disconnected<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> handle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    close<span class=\"br0\">(</span>handle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> strip<span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span>buf<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">;</span><br/>\u00a0<br/>    x <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strchr.html\"><span class=\"kw3\">strchr</span></a><span class=\"br0\">(</span>buf<span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">=</span><span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    x <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strchr.html\"><span class=\"kw3\">strchr</span></a><span class=\"br0\">(</span>buf<span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es1\">\\r</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">=</span><span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> RelayText<span class=\"br0\">(</span><span class=\"kw4\">int</span> handle<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>begin<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>end<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> ret <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    begin <span class=\"sy0\">=</span> connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>buffer<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>pos <span class=\"sy0\">==</span> <span class=\"nu0\">4000</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>begin<span class=\"br0\">[</span><span class=\"nu0\">3999</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><br/>            begin<span class=\"br0\">[</span><span class=\"nu0\">4000</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            begin<span class=\"br0\">[</span><span class=\"nu0\">4000</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy0\">;</span><br/>            begin<span class=\"br0\">[</span><span class=\"nu0\">4001</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        begin<span class=\"br0\">[</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>pos<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    end <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strchr.html\"><span class=\"kw3\">strchr</span></a><span class=\"br0\">(</span>begin<span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>end <span class=\"sy0\">!=</span> NULL<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">char</span> output<span class=\"br0\">[</span><span class=\"nu0\">8000</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        output<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strncpy.html\"><span class=\"kw3\">strncpy</span></a><span class=\"br0\">(</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"sy0\">,</span> begin<span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"br0\">[</span><span class=\"nu0\">31</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            strip<span class=\"br0\">(</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a><span class=\"br0\">(</span>output<span class=\"sy0\">,</span> <span class=\"st0\">\"* Connected:\u00a0%s<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            ret <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <br/>        <span class=\"br0\">{</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a><span class=\"br0\">(</span>output<span class=\"sy0\">,</span> <span class=\"st0\">\"%s:\u00a0%.*s<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>name<span class=\"sy0\">,</span> <br/>                    end<span class=\"sy0\">-</span>begin<span class=\"sy0\">,</span> begin<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            ret <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>output<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> FD_SETSIZE<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>handle <span class=\"sy0\">!=</span> j <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">!=</span> tsocket <span class=\"sy0\">&amp;&amp;</span> FD_ISSET<span class=\"br0\">(</span>j<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>write<span class=\"br0\">(</span>j<span class=\"sy0\">,</span> output<span class=\"sy0\">,</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>output<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        CloseConnection<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        begin <span class=\"sy0\">=</span> end<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        end <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strchr.html\"><span class=\"kw3\">strchr</span></a><span class=\"br0\">(</span>begin<span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strcpy.html\"><span class=\"kw3\">strcpy</span></a><span class=\"br0\">(</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>buffer<span class=\"sy0\">,</span> begin<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>pos <span class=\"sy0\">-=</span> begin <span class=\"sy0\">-</span> connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>buffer<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> ret<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> ClientText<span class=\"br0\">(</span><span class=\"kw4\">int</span> handle<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>buf<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> buf_len<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>    j <span class=\"sy0\">=</span> connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>pos<span class=\"sy0\">;</span> <br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> buf_len<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>buffer<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> buf<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">==</span> <span class=\"nu0\">4000</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>RelayText<span class=\"br0\">(</span>handle<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            j <span class=\"sy0\">=</span> connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>pos<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    connections<span class=\"br0\">[</span>handle<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span>pos <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>RelayText<span class=\"br0\">(</span>handle<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">int</span> ChatLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>    FD_ZERO<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    FD_SET<span class=\"br0\">(</span>tsocket<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    FD_SET<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        current <span class=\"sy0\">=</span> status<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>select<span class=\"br0\">(</span>FD_SETSIZE<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>current<span class=\"sy0\">,</span> NULL<span class=\"sy0\">,</span> NULL<span class=\"sy0\">,</span> NULL<span class=\"br0\">)</span><span class=\"sy0\">==-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/perror.html\"><span class=\"kw3\">perror</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Select\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> FD_SETSIZE<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>FD_ISSET<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>current<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> tsocket<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">struct</span> sockaddr_in cliinfo<span class=\"sy0\">;</span><br/>                    socklen_t addrlen <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>cliinfo<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw4\">int</span> handle<span class=\"sy0\">;</span><br/>                    handle <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>tsocket<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>cliinfo<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>addrlen<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>handle <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/perror.html\"><span class=\"kw3\">perror</span></a> <span class=\"br0\">(</span><span class=\"st0\">\"Couldn't accept connection\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>handle <span class=\"sy0\">&gt;</span> FD_SETSIZE<span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"br0\">(</span><span class=\"st0\">\"Unable to accept new connection.<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        close<span class=\"br0\">(</span>handle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">else</span><br/>                    <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>write<span class=\"br0\">(</span>handle<span class=\"sy0\">,</span> <span class=\"st0\">\"Enter name: \"</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                        <span class=\"br0\">{</span><br/>                            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"-- New connection\u00a0%d from\u00a0%s:%hu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>                                handle<span class=\"sy0\">,</span> <br/>                                inet_ntoa <span class=\"br0\">(</span>cliinfo.<span class=\"me1\">sin_addr</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                                ntohs<span class=\"br0\">(</span>cliinfo.<span class=\"me1\">sin_port</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            FD_SET<span class=\"br0\">(</span>handle<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                            AddConnection<span class=\"br0\">(</span>handle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span> <span class=\"coMULTI\">/* Read data, relay to others. */</span><br/>                <span class=\"kw1\">else</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">char</span> buf<span class=\"br0\">[</span><span class=\"nu0\">512</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw4\">int</span> b<span class=\"sy0\">;</span><br/>\u00a0<br/>                    b <span class=\"sy0\">=</span> read<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> buf<span class=\"sy0\">,</span> <span class=\"nu0\">500</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>b <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        CloseConnection<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">else</span><br/>                    <span class=\"br0\">{</span><br/>                        ClientText<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> buf<span class=\"sy0\">,</span> b<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"coMULTI\">/* While 1 */</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main <span class=\"br0\">(</span><span class=\"kw4\">int</span> argc<span class=\"sy0\">,</span> <span class=\"kw4\">char</span><span class=\"sy0\">*</span>argv<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    tsocket <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>PF_INET<span class=\"sy0\">,</span> SOCK_STREAM<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    tsockinfo.<span class=\"me1\">sin_family</span> <span class=\"sy0\">=</span> AF_INET<span class=\"sy0\">;</span><br/>    tsockinfo.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> htons<span class=\"br0\">(</span><span class=\"nu0\">7070</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>argc <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        tsockinfo.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> htons<span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>argv<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    tsockinfo.<span class=\"me1\">sin_addr</span>.<span class=\"me1\">s_addr</span> <span class=\"sy0\">=</span> htonl<span class=\"br0\">(</span>INADDR_ANY<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"br0\">(</span><span class=\"st0\">\"Socket\u00a0%d on port\u00a0%hu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> tsocket<span class=\"sy0\">,</span> ntohs<span class=\"br0\">(</span>tsockinfo.<span class=\"me1\">sin_port</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>bind<span class=\"br0\">(</span>tsocket<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>tsockinfo<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>tsockinfo<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/perror.html\"><span class=\"kw3\">perror</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Couldn't bind socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>listen<span class=\"br0\">(</span>tsocket<span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/perror.html\"><span class=\"kw3\">perror</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Couldn't listen to port\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    ChatLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "CoffeeScript", "loc": 109, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>net = require<span class=\"br0\">(</span><span class=\"st0\">\"net\"</span><span class=\"br0\">)</span><br/>sys = require<span class=\"br0\">(</span><span class=\"st0\">\"sys\"</span><span class=\"br0\">)</span><br/>EventEmitter = require<span class=\"br0\">(</span><span class=\"st0\">\"events\"</span><span class=\"br0\">)</span>.<span class=\"me1\">EventEmitter</span><br/>\u00a0<br/>isNicknameLegal = <span class=\"br0\">(</span>nickname<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw4\">false</span> <span class=\"kw1\">unless</span> nickname.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"br0\">[</span>A<span class=\"sy0\">-</span>Za<span class=\"sy0\">-</span>z0<span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy0\">*/,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"kw2\">is</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw1\">for</span> used_nick <span class=\"kw1\">of</span> <span class=\"sy0\">@</span>chatters<br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">false</span> <span class=\"kw1\">if</span> used_nick <span class=\"kw2\">is</span> nickname<br/>  <span class=\"kw4\">true</span><br/>\u00a0<br/><span class=\"kw3\">class</span> ChatServer<br/>  constructor<span class=\"sy0\">:</span> <span class=\"sy0\">-&gt;</span><br/>    <span class=\"sy0\">@</span>chatters = <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"sy0\">@</span>server = net.<span class=\"me1\">createServer</span> <span class=\"sy0\">@</span>handleConnection<br/>    <span class=\"sy0\">@</span>server.<span class=\"me1\">listen</span> <span class=\"nu0\">1212</span><span class=\"sy0\">,</span> <span class=\"st0\">\"localhost\"</span><br/>\u00a0<br/>  handleConnection<span class=\"sy0\">:</span> <span class=\"br0\">(</span>connection<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    console.<span class=\"me1\">log</span> <span class=\"st0\">\"Incoming connection from \"</span> <span class=\"sy0\">+</span> connection.<span class=\"me1\">remoteAddress</span><br/>    connection.<span class=\"me1\">setEncoding</span> <span class=\"st0\">\"utf8\"</span><br/>    chatter = <span class=\"kw3\">new</span> Chatter<span class=\"br0\">(</span>connection<span class=\"sy0\">,</span> <span class=\"kw3\">this</span><span class=\"br0\">)</span><br/>    chatter.<span class=\"kw4\">on</span> <span class=\"st0\">\"chat\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>handleChat<br/>    chatter.<span class=\"kw4\">on</span> <span class=\"st0\">\"join\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>handleJoin<br/>    chatter.<span class=\"kw4\">on</span> <span class=\"st0\">\"leave\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>handleLeave<br/>\u00a0<br/>  handleChat<span class=\"sy0\">:</span> <span class=\"br0\">(</span>chatter<span class=\"sy0\">,</span> message<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"sy0\">@</span>sendToEveryChatterExcept chatter<span class=\"sy0\">,</span> chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\": \"</span> <span class=\"sy0\">+</span> message<br/>\u00a0<br/>  handleJoin<span class=\"sy0\">:</span> <span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    console.<span class=\"me1\">log</span> chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has joined the chat.\"</span><br/>    <span class=\"sy0\">@</span>sendToEveryChatter chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has joined the chat.\"</span><br/>    <span class=\"sy0\">@</span>addChatter chatter<br/>\u00a0<br/>  handleLeave<span class=\"sy0\">:</span> <span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    console.<span class=\"me1\">log</span> chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has left the chat.\"</span><br/>    <span class=\"sy0\">@</span>removeChatter chatter<br/>    <span class=\"sy0\">@</span>sendToEveryChatter chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has left the chat.\"</span><br/>\u00a0<br/>  addChatter<span class=\"sy0\">:</span> <span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"sy0\">@</span>chatters<span class=\"br0\">[</span>chatter.<span class=\"me1\">nickname</span><span class=\"br0\">]</span> = chatter<br/>\u00a0<br/>  removeChatter<span class=\"sy0\">:</span> <span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"kw3\">delete</span> <span class=\"sy0\">@</span>chatters<span class=\"br0\">[</span>chatter.<span class=\"me1\">nickname</span><span class=\"br0\">]</span><br/>\u00a0<br/>  sendToEveryChatter<span class=\"sy0\">:</span> <span class=\"br0\">(</span>data<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"kw1\">for</span> nickname <span class=\"kw1\">of</span> <span class=\"sy0\">@</span>chatters<br/>      <span class=\"sy0\">@</span>chatters<span class=\"br0\">[</span>nickname<span class=\"br0\">]</span>.<span class=\"me1\">send</span> data<br/>\u00a0<br/>  sendToEveryChatterExcept<span class=\"sy0\">:</span> <span class=\"br0\">(</span>chatter<span class=\"sy0\">,</span> data<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"kw1\">for</span> nickname <span class=\"kw1\">of</span> <span class=\"sy0\">@</span>chatters<br/>      <span class=\"sy0\">@</span>chatters<span class=\"br0\">[</span>nickname<span class=\"br0\">]</span>.<span class=\"me1\">send</span> data  <span class=\"kw1\">unless</span> nickname <span class=\"kw2\">is</span> chatter.<span class=\"me1\">nickname</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw3\">class</span> Chatter <span class=\"kw3\">extends</span> EventEmitter<br/>  constructor<span class=\"sy0\">:</span> <span class=\"br0\">(</span>socket<span class=\"sy0\">,</span> server<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    EventEmitter.<span class=\"me1\">call</span> <span class=\"kw3\">this</span><br/>    <span class=\"sy0\">@</span>socket = socket<br/>    <span class=\"sy0\">@</span>server = server<br/>    <span class=\"sy0\">@</span>nickname = <span class=\"st0\">\"\"</span><br/>    <span class=\"sy0\">@</span>lineBuffer = <span class=\"kw3\">new</span> SocketLineBuffer<span class=\"br0\">(</span>socket<span class=\"br0\">)</span><br/>    <span class=\"sy0\">@</span>lineBuffer.<span class=\"kw4\">on</span> <span class=\"st0\">\"line\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>handleNickname<br/>    <span class=\"sy0\">@</span>socket.<span class=\"kw4\">on</span> <span class=\"st0\">\"close\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>handleDisconnect<br/>    <span class=\"sy0\">@</span>send <span class=\"st0\">\"Welcome! What is your nickname?\"</span><br/>\u00a0<br/>  handleNickname<span class=\"sy0\">:</span> <span class=\"br0\">(</span>nickname<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"kw1\">if</span> isNicknameLegal<span class=\"br0\">(</span>nickname<span class=\"br0\">)</span><br/>      <span class=\"sy0\">@</span>nickname = nickname<br/>      <span class=\"sy0\">@</span>lineBuffer.<span class=\"me1\">removeAllListeners</span> <span class=\"st0\">\"line\"</span><br/>      <span class=\"sy0\">@</span>lineBuffer.<span class=\"kw4\">on</span> <span class=\"st0\">\"line\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>handleChat<br/>      <span class=\"sy0\">@</span>send <span class=\"st0\">\"Welcome to the chat, \"</span> <span class=\"sy0\">+</span> nickname <span class=\"sy0\">+</span> <span class=\"st0\">\"!\"</span><br/>      <span class=\"sy0\">@</span>emit <span class=\"st0\">\"join\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">this</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"sy0\">@</span>send <span class=\"st0\">\"Sorry, but that nickname is not legal or is already in use!\"</span><br/>      <span class=\"sy0\">@</span>send <span class=\"st0\">\"What is your nickname?\"</span><br/>\u00a0<br/>  handleChat<span class=\"sy0\">:</span> <span class=\"br0\">(</span>line<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"sy0\">@</span>emit <span class=\"st0\">\"chat\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">this</span><span class=\"sy0\">,</span> line<br/>\u00a0<br/>  handleDisconnect<span class=\"sy0\">:</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"sy0\">@</span>emit <span class=\"st0\">\"leave\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">this</span><br/>\u00a0<br/>  send<span class=\"sy0\">:</span> <span class=\"br0\">(</span>data<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    <span class=\"sy0\">@</span>socket.<span class=\"me1\">write</span> data <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw3\">class</span> SocketLineBuffer <span class=\"kw3\">extends</span> EventEmitter<br/>  constructor<span class=\"sy0\">:</span> <span class=\"br0\">(</span>socket<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    EventEmitter.<span class=\"me1\">call</span> <span class=\"kw3\">this</span><br/>    <span class=\"sy0\">@</span>socket = socket<br/>    <span class=\"sy0\">@</span>buffer = <span class=\"st0\">\"\"</span><br/>    <span class=\"sy0\">@</span>socket.<span class=\"kw4\">on</span> <span class=\"st0\">\"data\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>handleData<br/>\u00a0<br/>  handleData<span class=\"sy0\">:</span> <span class=\"br0\">(</span>data<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>    console.<span class=\"me1\">log</span> <span class=\"st0\">\"Handling data\"</span><span class=\"sy0\">,</span> data<br/>    i = <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> i <span class=\"sy0\">&lt;</span> data.<span class=\"me1\">length</span><br/>      char = data.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>      <span class=\"sy0\">@</span>buffer <span class=\"sy0\">+</span>= char<br/>      <span class=\"kw1\">if</span> char <span class=\"kw2\">is</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><br/>        <span class=\"sy0\">@</span>buffer = <span class=\"sy0\">@</span>buffer.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">@</span>buffer = <span class=\"sy0\">@</span>buffer.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">@</span>emit <span class=\"st0\">\"line\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span>buffer<br/>        console.<span class=\"me1\">log</span> <span class=\"st0\">\"incoming line: #{@buffer}\"</span><br/>        <span class=\"sy0\">@</span>buffer = <span class=\"st0\">\"\"</span><br/>      i<span class=\"sy0\">++</span><br/>\u00a0<br/>server = <span class=\"kw3\">new</span> ChatServer<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 161, "block": "<pre class=\"d highlighted_source\">\u00a0<br/><span class=\"kw2\">import</span> std.<span class=\"me1\">getopt</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">socket</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> client <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> pos<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> name<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> buffer<span class=\"sy0\">;</span><br/>    Socket socket<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> broadcast<span class=\"br0\">(</span>client<span class=\"br0\">[</span><span class=\"br0\">]</span> connections<span class=\"sy0\">,</span> <span class=\"kw4\">size_t</span> self<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> message<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    writeln<span class=\"br0\">(</span>message<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">size_t</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> connections.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> self<span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span>message<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">bool</span> registerClient<span class=\"br0\">(</span>client<span class=\"br0\">[</span><span class=\"br0\">]</span> connections<span class=\"sy0\">,</span> <span class=\"kw4\">size_t</span> self<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">size_t</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> connections.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> self<span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>icmp<span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>self<span class=\"br0\">]</span>.<span class=\"me1\">name</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">ushort</span> port <span class=\"sy0\">=</span> <span class=\"nu0\">4004</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">auto</span> helpInformation <span class=\"sy0\">=</span> getopt<br/>    <span class=\"br0\">(</span><br/>        args<span class=\"sy0\">,</span><br/>        <span class=\"st0\">\"port|p\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"The port to listen to chat clients on [default is 4004]\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>port<br/>    <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>helpInformation.<span class=\"me1\">helpWanted</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        defaultGetoptPrinter<span class=\"br0\">(</span><span class=\"st0\">\"A simple chat server based on a task in rosettacode.\"</span><span class=\"sy0\">,</span> helpInformation.<span class=\"me1\">options</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">auto</span> listener <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> TcpSocket<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>listener.<span class=\"me1\">isAlive</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    listener.<span class=\"me1\">blocking</span> <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>    listener.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw2\">new</span> InternetAddress<span class=\"br0\">(</span>port<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    listener.<span class=\"me1\">listen</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Listening on port: \"</span><span class=\"sy0\">,</span> port<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">enum</span> MAX_CONNECTIONS <span class=\"sy0\">=</span> <span class=\"nu0\">60</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> socketSet <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> SocketSet<span class=\"br0\">(</span>MAX_CONNECTIONS <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    client<span class=\"br0\">[</span><span class=\"br0\">]</span> connections<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        socketSet.<span class=\"me1\">add</span><span class=\"br0\">(</span>listener<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>con<span class=\"sy0\">;</span> connections<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            socketSet.<span class=\"me1\">add</span><span class=\"br0\">(</span>con.<span class=\"me1\">socket</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        Socket.<span class=\"me1\">select</span><span class=\"br0\">(</span>socketSet<span class=\"sy0\">,</span> <span class=\"kw2\">null</span><span class=\"sy0\">,</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">size_t</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> connections.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>socketSet.<span class=\"me1\">isSet</span><span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"nu0\">1024</span><span class=\"br0\">]</span> buf<span class=\"sy0\">;</span><br/>                <span class=\"kw4\">auto</span> datLength <span class=\"sy0\">=</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">receive</span><span class=\"br0\">(</span>buf<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>datLength <span class=\"sy0\">==</span> Socket.<span class=\"me1\">ERROR</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Connection error.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>datLength <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>buf<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span> <span class=\"sy0\">||</span> buf<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'<span class=\"es1\">\\r</span>'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"/quit\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                            connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span>.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                                writeln<span class=\"br0\">(</span><span class=\"st0\">\"Connection from \"</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span><span class=\"sy0\">,</span> <span class=\"st0\">\" closed.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                                writeln<span class=\"br0\">(</span><span class=\"st0\">\"Connection from \"</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">remoteAddress</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\" closed.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            <span class=\"br0\">}</span><br/>\u00a0<br/>                            connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> connections<span class=\"br0\">[</span>$<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                            connections.<span class=\"me1\">length</span><span class=\"sy0\">--;</span><br/>                            i<span class=\"sy0\">--;</span><br/>\u00a0<br/>                            writeln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\t</span>Total connections: \"</span><span class=\"sy0\">,</span> connections.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span>.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                            connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">=</span> strip<span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span>.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                                connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span> <span class=\"sy0\">=</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span><span class=\"sy0\">;</span><br/>                                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>registerClient<span class=\"br0\">(</span>connections<span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                                    connections.<span class=\"me1\">broadcast</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"st0\">\"+++ \"</span> <span class=\"sy0\">~</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span> <span class=\"sy0\">~</span> <span class=\"st0\">\" arrived +++\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                                    connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"Name already registered. Please enter your name: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                                    connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span>.<span class=\"me1\">length</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                                <span class=\"br0\">}</span><br/>                            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                                connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"A name is required. Please enter your name: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            <span class=\"br0\">}</span><br/>                        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                            connections.<span class=\"me1\">broadcast</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span> <span class=\"sy0\">~</span> <span class=\"st0\">\"&gt; \"</span> <span class=\"sy0\">~</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span><br/>                        connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span>.<span class=\"me1\">length</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                        connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">~=</span> buf<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"me1\">datLength</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw2\">try</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span>.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                            writeln<span class=\"br0\">(</span><span class=\"st0\">\"Connection from \"</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span><span class=\"sy0\">,</span> <span class=\"st0\">\" closed.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                            writeln<span class=\"br0\">(</span><span class=\"st0\">\"Connection from \"</span><span class=\"sy0\">,</span> connections<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">remoteAddress</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\" closed.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span><br/>                    <span class=\"br0\">}</span> <span class=\"kw2\">catch</span> <span class=\"br0\">(</span>SocketException<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        writeln<span class=\"br0\">(</span><span class=\"st0\">\"Connection closed.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>socketSet.<span class=\"me1\">isSet</span><span class=\"br0\">(</span>listener<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            Socket sn <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>            <span class=\"kw2\">scope</span><span class=\"br0\">(</span>failure<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"Error accepting\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>sn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    sn.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            sn <span class=\"sy0\">=</span> listener.<span class=\"me1\">accept</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw2\">assert</span><span class=\"br0\">(</span>sn.<span class=\"me1\">isAlive</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw2\">assert</span><span class=\"br0\">(</span>listener.<span class=\"me1\">isAlive</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>connections.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;</span> MAX_CONNECTIONS<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                client newclient<span class=\"sy0\">;</span><br/>\u00a0<br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"Connection from \"</span><span class=\"sy0\">,</span> sn.<span class=\"me1\">remoteAddress</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\" established.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                sn.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter name: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                newclient.<span class=\"me1\">socket</span> <span class=\"sy0\">=</span> sn<span class=\"sy0\">;</span><br/>                connections <span class=\"sy0\">~=</span> newclient<span class=\"sy0\">;</span><br/>\u00a0<br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\t</span>Total connections: \"</span><span class=\"sy0\">,</span> connections.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"Rejected connection from \"</span><span class=\"sy0\">,</span> sn.<span class=\"me1\">remoteAddress</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"; too many connections.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                sn.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw2\">assert</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>sn.<span class=\"me1\">isAlive</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw2\">assert</span><span class=\"br0\">(</span>listener.<span class=\"me1\">isAlive</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        socketSet.<span class=\"me1\">reset</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Erlang", "loc": 65, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>chat<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>start<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> start<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">record</span><span class=\"br0\">(</span><span class=\"re1\">client</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>name<span class=\"sy3\">=</span>none<span class=\"sy1\">,</span> socket<span class=\"sy3\">=</span>none<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">start</span><span class=\"br0\">(</span><span class=\"nu0\">8080</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"re3\">start</span><span class=\"br0\">(</span><span class=\"re5\">Port</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"kw3\">register</span><span class=\"br0\">(</span>server<span class=\"sy1\">,</span> <span class=\"kw3\">spawn</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">server</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"re5\">LSocket</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">listen</span><span class=\"br0\">(</span><span class=\"re5\">Port</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"kw4\">binary</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>packet<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>active<span class=\"sy1\">,</span> false<span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>reuseaddr<span class=\"sy1\">,</span> true<span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"re3\">accept</span><span class=\"br0\">(</span><span class=\"re5\">LSocket</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% main loop for message dispatcher</span><br/><span class=\"re3\">server</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">server</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"re3\">server</span><span class=\"br0\">(</span><span class=\"re5\">Clients</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"kw1\">receive</span><br/>        <span class=\"br0\">{</span>join<span class=\"sy1\">,</span> <span class=\"re5\">Client</span><span class=\"sy3\">=</span>#<span class=\"re7\">client</span><span class=\"br0\">{</span>name <span class=\"sy3\">=</span> <span class=\"re5\">Name</span><span class=\"sy1\">,</span> socket <span class=\"sy3\">=</span> <span class=\"re5\">Socket</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span><br/>            <span class=\"kw3\">self</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy3\">!</span> <span class=\"br0\">{</span>say<span class=\"sy1\">,</span> <span class=\"re5\">Socket</span><span class=\"sy1\">,</span> <span class=\"st0\">\"has joined.\"</span> <span class=\"sy3\">++</span> <span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">13</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy1\">,</span><br/>            <span class=\"re3\">server</span><span class=\"br0\">(</span><span class=\"re5\">Clients</span> <span class=\"sy3\">++</span> <span class=\"br0\">[</span><span class=\"re5\">Client</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"br0\">{</span>leave<span class=\"sy1\">,</span> <span class=\"re5\">Socket</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span><br/>            <span class=\"br0\">{</span>value<span class=\"sy1\">,</span> #<span class=\"re7\">client</span><span class=\"br0\">{</span>name <span class=\"sy3\">=</span> <span class=\"re5\">Name</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"re5\">List</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">keytake</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"re5\">Clients</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"kw3\">self</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy3\">!</span> <span class=\"br0\">{</span>say<span class=\"sy1\">,</span> none<span class=\"sy1\">,</span> <span class=\"re5\">Message</span> <span class=\"sy3\">=</span> <span class=\"st0\">\"has left.\"</span><span class=\"br0\">}</span><span class=\"sy1\">,</span><br/>            <span class=\"re3\">server</span><span class=\"br0\">(</span><span class=\"re5\">List</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"br0\">{</span>say<span class=\"sy1\">,</span> <span class=\"re5\">Socket</span><span class=\"sy1\">,</span> <span class=\"re5\">Data</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span><br/>            <span class=\"br0\">{</span>value<span class=\"sy1\">,</span> #<span class=\"re7\">client</span><span class=\"br0\">{</span>name <span class=\"sy3\">=</span> <span class=\"re5\">From</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"re5\">List</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">keytake</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"re5\">Clients</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"re5\">Message</span> <span class=\"sy3\">=</span> <span class=\"re5\">From</span> <span class=\"sy3\">++</span> <span class=\"st0\">\"\u00a0: \"</span> <span class=\"sy3\">++</span> <span class=\"re5\">Data</span><span class=\"sy1\">,</span><br/>            <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">map</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span>#<span class=\"re7\">client</span><span class=\"br0\">{</span>socket <span class=\"sy3\">=</span> <span class=\"re5\">S</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>                    <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">send</span><span class=\"br0\">(</span><span class=\"re5\">S</span><span class=\"sy1\">,</span> <span class=\"re5\">Message</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">end</span><span class=\"sy1\">,</span> <span class=\"re5\">List</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">,</span><br/>    <span class=\"re3\">server</span><span class=\"br0\">(</span><span class=\"re5\">Clients</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% accepts connections then spawns the client handler</span><br/><span class=\"re3\">accept</span><span class=\"br0\">(</span><span class=\"re5\">LSocket</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"re5\">Socket</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">accept</span><span class=\"br0\">(</span><span class=\"re5\">LSocket</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"kw3\">spawn</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">connecting</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"re3\">accept</span><span class=\"br0\">(</span><span class=\"re5\">LSocket</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% when client is first connect send prompt for user name</span><br/><span class=\"re3\">connecting</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">send</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"sy1\">,</span> <span class=\"st0\">\"What is your name? \"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"kw1\">case</span> <span class=\"re3\">listen</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span><br/>        <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span><br/>            <span class=\"re5\">Name</span> <span class=\"sy3\">=</span> <span class=\"kw3\">binary_to_list</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            server <span class=\"sy3\">!</span> <span class=\"br0\">{</span>join<span class=\"sy1\">,</span> #<span class=\"re7\">client</span><span class=\"br0\">{</span>name <span class=\"sy3\">=</span>  <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">sublist</span><span class=\"br0\">(</span><span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">length</span><span class=\"br0\">(</span><span class=\"re5\">Name</span><span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> socket <span class=\"sy3\">=</span> <span class=\"re5\">Socket</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy1\">,</span><br/>            <span class=\"re3\">client</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"re5\">_</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">ok</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% main client loop that listens for data</span><br/><span class=\"re3\">client</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"kw1\">case</span> <span class=\"re3\">listen</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span><br/>        <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"re5\">Data</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span><br/>            <span class=\"me1\">server</span> <span class=\"sy3\">!</span> <span class=\"br0\">{</span>say<span class=\"sy1\">,</span> <span class=\"re5\">Socket</span><span class=\"sy1\">,</span> <span class=\"kw3\">binary_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Data</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">,</span><br/>            <span class=\"re3\">client</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"re5\">_</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">server</span> <span class=\"sy3\">!</span> <span class=\"br0\">{</span>leave<span class=\"sy1\">,</span> <span class=\"re5\">Socket</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% utility function that listens for data on a socket</span><br/><span class=\"re3\">listen</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"kw1\">case</span> <a href=\"http://erlang.org/doc/man/gen_tcp.html\"><span class=\"kw5\">gen_tcp</span></a>:<span class=\"re3\">recv</span><span class=\"br0\">(</span><span class=\"re5\">Socket</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span><br/>        <span class=\"re5\">Response</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">Response</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Go", "loc": 182, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"bufio\"</span><br/>\t<span class=\"st0\">\"flag\"</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"log\"</span><br/>\t<span class=\"st0\">\"net\"</span><br/>\t<span class=\"st0\">\"strings\"</span><br/>\t<span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tlog<span class=\"sy3\">.</span>SetPrefix<span class=\"sy1\">(</span><span class=\"st0\">\"chat: \"</span><span class=\"sy1\">)</span><br/>\taddr <span class=\"sy2\">:=</span> flag<span class=\"sy3\">.</span><span class=\"me1\">String</span><span class=\"sy1\">(</span><span class=\"st0\">\"addr\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"localhost:4000\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"listen address\"</span><span class=\"sy1\">)</span><br/>\tflag<span class=\"sy3\">.</span><span class=\"me1\">Parse</span><span class=\"sy1\">()</span><br/>\tlog<span class=\"sy3\">.</span><span class=\"me1\">Fatal</span><span class=\"sy1\">(</span>ListenAndServe<span class=\"sy1\">(</span><span class=\"sy3\">*</span>addr<span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// A Server represents a chat server that accepts incoming connections.</span><br/><span class=\"kw1\">type</span> Server <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\tadd  <span class=\"kw4\">chan</span> <span class=\"sy3\">*</span>conn  <span class=\"co1\">// To add a connection</span><br/>\trem  <span class=\"kw4\">chan</span> <span class=\"kw4\">string</span> <span class=\"co1\">// To remove a connection by name</span><br/>\tmsg  <span class=\"kw4\">chan</span> <span class=\"kw4\">string</span> <span class=\"co1\">// To send a message to all connections</span><br/>\tstop <span class=\"kw4\">chan</span> <span class=\"kw4\">bool</span>   <span class=\"co1\">// To stop early</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// ListenAndServe listens on the TCP network address addr for</span><br/><span class=\"co1\">// new chat client connections.</span><br/><span class=\"kw4\">func</span> ListenAndServe<span class=\"sy1\">(</span>addr <span class=\"kw4\">string</span><span class=\"sy1\">)</span> error <span class=\"sy1\">{</span><br/>\tln<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> net<span class=\"sy3\">.</span>Listen<span class=\"sy1\">(</span><span class=\"st0\">\"tcp\"</span><span class=\"sy1\">,</span> addr<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> err<br/>\t<span class=\"sy1\">}</span><br/>\tlog<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Listening for connections on\"</span><span class=\"sy1\">,</span> addr<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">defer</span> ln<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\ts <span class=\"sy2\">:=</span> &amp;Server<span class=\"sy1\">{</span><br/>\t\tadd<span class=\"sy1\">:</span>  <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> <span class=\"sy3\">*</span>conn<span class=\"sy1\">),</span><br/>\t\trem<span class=\"sy1\">:</span>  <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> <span class=\"kw4\">string</span><span class=\"sy1\">),</span><br/>\t\tmsg<span class=\"sy1\">:</span>  <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> <span class=\"kw4\">string</span><span class=\"sy1\">),</span><br/>\t\tstop<span class=\"sy1\">:</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> <span class=\"kw4\">bool</span><span class=\"sy1\">),</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">go</span> s<span class=\"sy3\">.</span>handleConns<span class=\"sy1\">()</span><br/>\t<span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"co1\">// TODO use AcceptTCP() so that we can get a TCPConn on which</span><br/>\t\t<span class=\"co1\">// we can call SetKeepAlive() and SetKeepAlivePeriod()</span><br/>\t\trwc<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> ln<span class=\"sy3\">.</span>Accept<span class=\"sy1\">()</span><br/>\t\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"co1\">// TODO Could handle err.(net.Error).Temporary()</span><br/>\t\t\t<span class=\"co1\">// here by adding a backoff delay.</span><br/>\t\t\t<span class=\"kw3\">close</span><span class=\"sy1\">(</span>s<span class=\"sy3\">.</span>stop<span class=\"sy1\">)</span><br/>\t\t\t<span class=\"kw1\">return</span> err<br/>\t\t<span class=\"sy1\">}</span><br/>\t\tlog<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"New connection from\"</span><span class=\"sy1\">,</span> rwc<span class=\"sy3\">.</span>RemoteAddr<span class=\"sy1\">())</span><br/>\t\t<span class=\"kw1\">go</span> newConn<span class=\"sy1\">(</span>s<span class=\"sy1\">,</span> rwc<span class=\"sy1\">)</span><span class=\"sy3\">.</span>welcome<span class=\"sy1\">()</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// handleConns is run as a go routine to handle adding and removal of</span><br/><span class=\"co1\">// chat client connections as well as broadcasting messages to them.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s <span class=\"sy3\">*</span>Server<span class=\"sy1\">)</span> handleConns<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t<span class=\"co1\">// We define the `conns` map here rather than within Server,</span><br/>\t<span class=\"co1\">// and we use local function literals rather than methods to be</span><br/>\t<span class=\"co1\">// extra sure that the only place that touches this map is this</span><br/>\t<span class=\"co1\">// method. In this way we forgo any explicit locking needed as</span><br/>\t<span class=\"co1\">// we're the only go routine that can see or modify this.</span><br/>\tconns <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">map</span><span class=\"sy1\">[</span><span class=\"kw4\">string</span><span class=\"sy1\">]</span><span class=\"sy3\">*</span>conn<span class=\"sy1\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">var</span> dropConn <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"kw4\">string</span><span class=\"sy1\">)</span><br/>\twriteAll <span class=\"sy2\">:=</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>str <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t\tlog<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Broadcast:\u00a0%q\"</span><span class=\"sy1\">,</span> str<span class=\"sy1\">)</span><br/>\t\t<span class=\"co1\">// TODO handle blocked connections</span><br/>\t\t<span class=\"kw1\">for</span> name<span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> conns <span class=\"sy1\">{</span><br/>\t\t\tc<span class=\"sy3\">.</span>SetWriteDeadline<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>Add<span class=\"sy1\">(</span><span class=\"nu0\">500</span> <span class=\"sy3\">*</span> time<span class=\"sy3\">.</span>Millisecond<span class=\"sy1\">))</span><br/>\t\t\t_<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>Write<span class=\"sy1\">([]</span><span class=\"kw4\">byte</span><span class=\"sy1\">(</span>str<span class=\"sy1\">))</span><br/>\t\t\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\t\tlog<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Error writing to\u00a0%q:\u00a0%v\"</span><span class=\"sy1\">,</span> name<span class=\"sy1\">,</span> err<span class=\"sy1\">)</span><br/>\t\t\t\tc<span class=\"sy3\">.</span><span class=\"me1\">Close</span><span class=\"sy1\">()</span><br/>\t\t\t\tdelete<span class=\"sy1\">(</span>conns<span class=\"sy1\">,</span> name<span class=\"sy1\">)</span><br/>\t\t\t\t<span class=\"co1\">// Defer all the disconnect messages until after</span><br/>\t\t\t\t<span class=\"co1\">// we've closed all currently problematic conns.</span><br/>\t\t\t\t<span class=\"kw1\">defer</span> dropConn<span class=\"sy1\">(</span>name<span class=\"sy1\">)</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\u00a0<br/>\tdropConn <span class=\"sy2\">=</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>name <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">if</span> c<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> conns<span class=\"sy1\">[</span>name<span class=\"sy1\">];</span> ok <span class=\"sy1\">{</span><br/>\t\t\tlog<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Closing connection with\u00a0%q from\u00a0%v\"</span><span class=\"sy1\">,</span><br/>\t\t\t\tname<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>RemoteAddr<span class=\"sy1\">())</span><br/>\t\t\tc<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\t\t\tdelete<span class=\"sy1\">(</span>conns<span class=\"sy1\">,</span> name<span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>\t\t\tlog<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Dropped connection with\u00a0%q\"</span><span class=\"sy1\">,</span> name<span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\tstr <span class=\"sy2\">:=</span> fmt<span class=\"sy3\">.</span><span class=\"me1\">Sprintf</span><span class=\"sy1\">(</span><span class=\"st0\">\"---\u00a0%q disconnected ---<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> name<span class=\"sy1\">)</span><br/>\t\twriteAll<span class=\"sy1\">(</span>str<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">defer</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t\twriteAll<span class=\"sy1\">(</span><span class=\"st0\">\"Server stopping!<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> conns <span class=\"sy1\">{</span><br/>\t\t\tc<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}()</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">select</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">case</span> c <span class=\"sy2\">:=</span> &lt;<span class=\"sy3\">-</span>s<span class=\"sy3\">.</span>add<span class=\"sy1\">:</span><br/>\t\t\t<span class=\"kw1\">if</span> _<span class=\"sy1\">,</span> exists <span class=\"sy2\">:=</span> conns<span class=\"sy1\">[</span>c<span class=\"sy3\">.</span>name<span class=\"sy1\">];</span> exists <span class=\"sy1\">{</span><br/>\t\t\t\tfmt<span class=\"sy3\">.</span>Fprintf<span class=\"sy1\">(</span>c<span class=\"sy1\">,</span> <span class=\"st0\">\"Name\u00a0%q is not available<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>name<span class=\"sy1\">)</span><br/>\t\t\t\t<span class=\"kw1\">go</span> c<span class=\"sy3\">.</span>welcome<span class=\"sy1\">()</span><br/>\t\t\t\t<span class=\"kw1\">continue</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\tstr <span class=\"sy2\">:=</span> fmt<span class=\"sy3\">.</span>Sprintf<span class=\"sy1\">(</span><span class=\"st0\">\"+++\u00a0%q connected +++<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>name<span class=\"sy1\">)</span><br/>\t\t\twriteAll<span class=\"sy1\">(</span>str<span class=\"sy1\">)</span><br/>\t\t\tconns<span class=\"sy1\">[</span>c<span class=\"sy3\">.</span>name<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> c<br/>\t\t\t<span class=\"kw1\">go</span> c<span class=\"sy3\">.</span>readloop<span class=\"sy1\">()</span><br/>\t\t<span class=\"kw1\">case</span> str <span class=\"sy2\">:=</span> &lt;<span class=\"sy3\">-</span>s<span class=\"sy3\">.</span>msg<span class=\"sy1\">:</span><br/>\t\t\twriteAll<span class=\"sy1\">(</span>str<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">case</span> name <span class=\"sy2\">:=</span> &lt;<span class=\"sy3\">-</span>s<span class=\"sy3\">.</span>rem<span class=\"sy1\">:</span><br/>\t\t\tdropConn<span class=\"sy1\">(</span>name<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">case</span> &lt;<span class=\"sy3\">-</span>s<span class=\"sy3\">.</span>stop<span class=\"sy1\">:</span><br/>\t\t\t<span class=\"kw1\">return</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// A conn represents the server side of a single chat connection.</span><br/><span class=\"co1\">// Note we embed the bufio.Reader and net.Conn (and specifically in</span><br/><span class=\"co1\">// that order) so that a conn gets the appropriate methods from each</span><br/><span class=\"co1\">// to be a full io.ReadWriteCloser.</span><br/><span class=\"kw1\">type</span> conn <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\t<span class=\"sy3\">*</span><a href=\"http://golang.org/search?q=bufio.Reader\"><span class=\"kw5\">bufio.<span class=\"me1\">Reader</span></span></a>         <span class=\"co1\">// buffered input</span><br/>\t<a href=\"http://golang.org/search?q=net.Conn\"><span class=\"kw5\">net.<span class=\"me1\">Conn</span></span></a>              <span class=\"co1\">// raw connection</span><br/>\tserver        <span class=\"sy3\">*</span>Server <span class=\"co1\">// the Server on which the connection arrived</span><br/>\tname          <span class=\"kw4\">string</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> newConn<span class=\"sy1\">(</span>s <span class=\"sy3\">*</span>Server<span class=\"sy1\">,</span> rwc <a href=\"http://golang.org/search?q=net.Conn\"><span class=\"kw5\">net.<span class=\"me1\">Conn</span></span></a><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>conn <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">return</span> &amp;conn<span class=\"sy1\">{</span><br/>\t\tReader<span class=\"sy1\">:</span> bufio<span class=\"sy3\">.</span>NewReader<span class=\"sy1\">(</span>rwc<span class=\"sy1\">),</span><br/>\t\tConn<span class=\"sy1\">:</span>   rwc<span class=\"sy1\">,</span><br/>\t\tserver<span class=\"sy1\">:</span> s<span class=\"sy1\">,</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// welcome requests a name from the client before attempting to add the</span><br/><span class=\"co1\">// named connect to the set handled by the server.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span>conn<span class=\"sy1\">)</span> welcome<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">var</span> err error<br/>\t<span class=\"kw1\">for</span> c<span class=\"sy3\">.</span>name <span class=\"sy2\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span> c<span class=\"sy3\">.</span><span class=\"me1\">name</span> <span class=\"sy3\">==</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span> <span class=\"sy1\">{</span><br/>\t\tfmt<span class=\"sy3\">.</span><span class=\"me1\">Fprint</span><span class=\"sy1\">(</span>c<span class=\"sy1\">,</span> <span class=\"st0\">\"Enter your name: \"</span><span class=\"sy1\">)</span><br/>\t\tc<span class=\"sy3\">.</span><span class=\"me1\">name</span><span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> c<span class=\"sy3\">.</span><span class=\"me1\">ReadString</span><span class=\"sy1\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\tlog<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Reading name from\u00a0%v:\u00a0%v\"</span><span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>RemoteAddr<span class=\"sy1\">(),</span> err<span class=\"sy1\">)</span><br/>\t\t\tc<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\t\t\t<span class=\"kw1\">return</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\tc<span class=\"sy3\">.</span>name <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>TrimSpace<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>name<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"co1\">// The server will take this *conn and do a final check</span><br/>\t<span class=\"co1\">// on the name, possibly starting c.welcome() again.</span><br/>\tc<span class=\"sy3\">.</span><span class=\"me1\">server</span><span class=\"sy3\">.</span><span class=\"me1\">add</span> <span class=\"sy3\">&lt;-</span> c<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// readloop is started as a go routine by the server once the initial</span><br/><span class=\"co1\">// welcome phase has completed successfully. It reads single lines from</span><br/><span class=\"co1\">// the client and passes them to the server for broadcast to all chat</span><br/><span class=\"co1\">// clients (including us).</span><br/><span class=\"co1\">// Once done, we ask the server to remove (and close) our connection.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span>conn<span class=\"sy1\">)</span> readloop<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>\t\tmsg<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>ReadString<span class=\"sy1\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">break</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"co1\">//msg = strings.TrimSpace(msg)</span><br/>\t\tc<span class=\"sy3\">.</span><span class=\"me1\">server</span><span class=\"sy3\">.</span><span class=\"me1\">msg</span> <span class=\"sy3\">&lt;-</span> c<span class=\"sy3\">.</span><span class=\"me1\">name</span> <span class=\"sy3\">+</span> <span class=\"st0\">\"&gt; \"</span> <span class=\"sy3\">+</span> msg<br/>\t<span class=\"sy1\">}</span><br/>\tc<span class=\"sy3\">.</span><span class=\"me1\">server</span><span class=\"sy3\">.</span><span class=\"me1\">rem</span> <span class=\"sy3\">&lt;-</span> c<span class=\"sy3\">.</span><span class=\"me1\">name</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 85, "block": "<pre class=\"haskell highlighted_source\"><span class=\"coMULTI\">{-# LANGUAGE OverloadedStrings #-}</span><br/><span class=\"kw1\">import</span> Network<br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a><br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Concurrent<br/><span class=\"kw1\">import</span> <span class=\"kw1\">qualified</span> Data<span class=\"sy0\">.</span>Text <span class=\"kw1\">as</span> T<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Text <span class=\"br0\">(</span>Text<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> <span class=\"kw1\">qualified</span> Data<span class=\"sy0\">.</span>Text<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"kw1\">as</span> T<br/><span class=\"kw1\">import</span> <span class=\"kw1\">qualified</span> Data<span class=\"sy0\">.</span>Map <span class=\"kw1\">as</span> M<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Map <span class=\"br0\">(</span>Map<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><span class=\"sy0\">.</span>Reader<br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><span class=\"sy0\">.</span>Error<br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Exception<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Monoid <br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Applicative<br/>\u00a0<br/><span class=\"kw1\">type</span> ServerApp <span class=\"sy0\">=</span> ReaderT ThreadData <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a><br/><span class=\"kw1\">data</span> Speaker <span class=\"sy0\">=</span> Server <span class=\"sy0\">|</span> Client Text<br/><span class=\"kw1\">data</span> ThreadData <span class=\"sy0\">=</span> ThreadData <span class=\"br0\">{</span> threadHandle <span class=\"sy0\">::</span> Handle<br/>                             <span class=\"sy0\">,</span> userTableMV <span class=\"sy0\">::</span> MVar <span class=\"br0\">(</span>Map Text Handle<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/>echoLocal <span class=\"sy0\">=</span> liftIO <span class=\"sy0\">.</span> T<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a><br/>echoRemote <span class=\"sy0\">=</span> echoMessage <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"&gt;&gt; \"</span><span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">)</span><br/>echoMessage msg <span class=\"sy0\">=</span> viewHandle <span class=\"sy0\">&gt;&gt;=</span> \\h <span class=\"sy0\">-&gt;</span> liftIO <span class=\"sy0\">$</span> T<span class=\"sy0\">.</span>hPutStrLn h msg<br/>getRemoteLine <span class=\"sy0\">=</span> viewHandle <span class=\"sy0\">&gt;&gt;=</span> liftIO <span class=\"sy0\">.</span> T<span class=\"sy0\">.</span>hGetLine<br/>putMVarT <span class=\"sy0\">=</span> <span class=\"br0\">(</span>liftIO<span class=\"sy0\">.</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> putMVar<br/>takeMVarT <span class=\"sy0\">=</span> liftIO <span class=\"sy0\">.</span> takeMVar<br/>readMVarT <span class=\"sy0\">=</span> liftIO <span class=\"sy0\">.</span> readMVar<br/>modifyUserTable fn <span class=\"sy0\">=</span> viewUsers <span class=\"sy0\">&gt;&gt;=</span> \\mv <span class=\"sy0\">-&gt;</span><br/>                     liftIO <span class=\"sy0\">$</span> modifyMVar<span class=\"sy0\">_</span> mv <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"sy0\">.</span> fn<span class=\"br0\">)</span><br/>viewHandle <span class=\"sy0\">=</span> threadHandle <span class=\"sy0\">&lt;$&gt;</span> ask<br/>viewUsers <span class=\"sy0\">=</span> userTableMV <span class=\"sy0\">&lt;$&gt;</span> ask<br/>\u00a0<br/>userChat <span class=\"sy0\">::</span> ServerApp <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>userChat <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    name <span class=\"sy0\">&lt;-</span> addUser <br/>    echoLocal name<br/>    h <span class=\"sy0\">&lt;-</span> viewHandle<br/>    <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:flip\"><span class=\"kw3\">flip</span></a> catchError<span class=\"br0\">)</span> <span class=\"br0\">(</span>\\<span class=\"sy0\">_</span> <span class=\"sy0\">-&gt;</span> removeUser name<span class=\"br0\">)</span> <span class=\"sy0\">$</span><br/>      <span class=\"kw1\">do</span> echoLocal <span class=\"sy0\">$</span> <span class=\"st0\">\"Accepted \"</span> <span class=\"sy0\">&lt;&gt;</span> name<br/>         forever <span class=\"sy0\">$</span> getRemoteLine <span class=\"sy0\">&gt;&gt;=</span> broadcast <span class=\"br0\">(</span>Client name<span class=\"br0\">)</span><br/>\u00a0<br/>removeUser <span class=\"sy0\">::</span> Text <span class=\"sy0\">-&gt;</span> ServerApp <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>removeUser name <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    echoLocal <span class=\"sy0\">$</span> <span class=\"st0\">\"Exception with \"</span> <span class=\"sy0\">&lt;&gt;</span> name <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\", removing from userTable\"</span><br/>    broadcast Server <span class=\"sy0\">$</span> name <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\" has left the server\"</span><br/>    modifyUserTable <span class=\"br0\">(</span>M<span class=\"sy0\">.</span>delete name<span class=\"br0\">)</span><br/>\u00a0<br/>addUser <span class=\"sy0\">::</span> ServerApp Text<br/>addUser <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    h <span class=\"sy0\">&lt;-</span> viewHandle<br/>    usersMV <span class=\"sy0\">&lt;-</span> viewUsers<br/>    echoRemote <span class=\"st0\">\"Enter username\"</span> <br/>    name <span class=\"sy0\">&lt;-</span> T<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"br0\">(</span><span class=\"sy0\">/=</span><span class=\"st0\">'<span class=\"es0\">\\r</span>'</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span> getRemoteLine<br/>    userTable <span class=\"sy0\">&lt;-</span> takeMVarT usersMV<br/>    <span class=\"kw1\">if</span> name `M<span class=\"sy0\">.</span>member` userTable<br/>      <span class=\"kw1\">then</span> <span class=\"kw1\">do</span> echoRemote <span class=\"st0\">\"Username already exists!\"</span> <br/>              putMVarT usersMV userTable<br/>              addUser<br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">do</span> putMVarT usersMV <span class=\"br0\">(</span>M<span class=\"sy0\">.</span>insert name h userTable<span class=\"br0\">)</span><br/>              broadcast Server <span class=\"sy0\">$</span> name <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\" has joined the server\"</span><br/>              echoRemote <span class=\"st0\">\"Welcome to the server!<span class=\"es0\">\\n</span>&gt;&gt; Other users:\"</span><br/>              readMVarT usersMV <span class=\"sy0\">&gt;&gt;=</span><br/>                  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span>echoRemote <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"*\"</span> <span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fst\"><span class=\"kw3\">fst</span></a><span class=\"br0\">)</span> <br/>                <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">/=</span>name<span class=\"br0\">)</span><span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fst\"><span class=\"kw3\">fst</span></a><span class=\"br0\">)</span> <span class=\"sy0\">.</span> M<span class=\"sy0\">.</span>toList<br/>              <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> name<br/>\u00a0<br/>broadcast <span class=\"sy0\">::</span> Speaker <span class=\"sy0\">-&gt;</span> Text <span class=\"sy0\">-&gt;</span> ServerApp <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>broadcast user msg <span class=\"sy0\">=</span><br/>    viewUsers <span class=\"sy0\">&gt;&gt;=</span> readMVarT <span class=\"sy0\">&gt;&gt;=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span>f <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:snd\"><span class=\"kw3\">snd</span></a><span class=\"br0\">)</span> <span class=\"sy0\">.</span> fn <span class=\"sy0\">.</span> M<span class=\"sy0\">.</span>toList<br/>  <span class=\"kw1\">where</span> f h <span class=\"sy0\">=</span> liftIO <span class=\"sy0\">$</span> T<span class=\"sy0\">.</span>hPutStrLn h <span class=\"sy0\">$</span> nm <span class=\"sy0\">&lt;&gt;</span> msg<br/>        <span class=\"br0\">(</span>fn<span class=\"sy0\">,</span> nm<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw1\">case</span> user <span class=\"kw1\">of</span><br/>                    Server <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:id\"><span class=\"kw3\">id</span></a><span class=\"sy0\">,</span> <span class=\"st0\">\"&gt;&gt; \"</span><span class=\"br0\">)</span><br/>                    Client t <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">/=</span>t<span class=\"br0\">)</span> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fst\"><span class=\"kw3\">fst</span></a><span class=\"br0\">)</span><span class=\"sy0\">,</span> t <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"&gt; \"</span><span class=\"br0\">)</span><br/>\u00a0<br/>clientLoop socket users <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    <span class=\"br0\">(</span>h<span class=\"sy0\">,</span> <span class=\"sy0\">_,</span> <span class=\"sy0\">_</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> accept socket<br/>    hSetBuffering h LineBuffering<br/>    forkIO <span class=\"sy0\">$</span> runReaderT userChat <span class=\"br0\">(</span>ThreadData h users<span class=\"br0\">)</span><br/>    clientLoop socket users<br/>\u00a0<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    server <span class=\"sy0\">&lt;-</span> listenOn <span class=\"sy0\">$</span> PortNumber <span class=\"nu0\">5002</span><br/>    T<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"Server started\"</span><br/>    newMVar <span class=\"br0\">(</span>M<span class=\"sy0\">.</span>empty<span class=\"br0\">)</span> <span class=\"sy0\">&gt;&gt;=</span> clientLoop server<br/>\u00a0</pre>"}, {"lang": "Icon and Unicon", "loc": 27, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw2\">global</span> mlck<span class=\"sy0\">,</span> nCons<span class=\"sy0\">,</span> cons<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    mlck <span class=\"sy0\">:=</span> mutex<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    nCons <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>    cons <span class=\"sy0\">:=</span> mutex<span class=\"br0\">(</span><span class=\"kw4\">set</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> f <span class=\"sy0\">:=</span> <span class=\"kw4\">open</span><span class=\"br0\">(</span><span class=\"st0\">\":12321\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"na\"</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>        handle_client<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        critical mlck<span class=\"sy0\">:</span> <span class=\"kw1\">if</span> nCons <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw4\">close</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> handle_client<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    critical mlck<span class=\"sy0\">:</span> nCons <span class=\"sy0\">+:=</span> <span class=\"nu0\">1</span><br/>    thread <span class=\"br0\">{</span><br/>        <span class=\"kw4\">select</span><span class=\"br0\">(</span>f<span class=\"sy0\">,</span><span class=\"nu0\">1000</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">writes</span><span class=\"br0\">(</span>f<span class=\"sy0\">,</span> <span class=\"st0\">\"Name? \"</span><span class=\"br0\">)</span><br/>            nick <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"kw4\">read</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">upto</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span><span class=\"es0\">\\r</span>'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>cons<span class=\"sy0\">,</span> nick<span class=\"sy0\">,</span><span class=\"st0\">\" has joined.\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw4\">insert</span><span class=\"br0\">(</span>cons<span class=\"sy0\">,</span> f<span class=\"br0\">)</span><br/>            <span class=\"kw1\">while</span> s <span class=\"sy0\">:=</span> <span class=\"kw4\">read</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>cons<span class=\"sy0\">,</span> nick<span class=\"sy0\">,</span><span class=\"st0\">\": \"</span><span class=\"sy0\">,</span>s<span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"kw4\">delete</span><span class=\"br0\">(</span>cons<span class=\"sy0\">,</span> f<span class=\"br0\">)</span><br/>        <span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>cons<span class=\"sy0\">,</span> nick<span class=\"sy0\">,</span><span class=\"st0\">\" has left.\"</span><span class=\"br0\">)</span><br/>        critical mlck<span class=\"sy0\">:</span> nCons <span class=\"sy0\">-:=</span> <span class=\"nu0\">1</span><br/>        <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Java", "loc": 153, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.io.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.net.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> ChatServer <span class=\"kw1\">implements</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arunnable+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Runnable</span></a><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> port <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">private</span> List<span class=\"sy0\">&lt;</span>Client<span class=\"sy0\">&gt;</span> clients <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;</span>Client<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> ChatServer<span class=\"br0\">(</span><span class=\"kw4\">int</span> port<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span>  <span class=\"kw1\">this</span>.<span class=\"me1\">port</span> <span class=\"sy0\">=</span> port<span class=\"sy0\">;</span>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">try</span><br/>    <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aserversocket+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ServerSocket</span></a> ss <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aserversocket+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ServerSocket</span></a><span class=\"br0\">(</span>port<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asocket+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Socket</span></a> s <span class=\"sy0\">=</span> ss.<span class=\"me1\">accept</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Athread+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Thread</span></a><span class=\"br0\">(</span><span class=\"kw1\">new</span> Client<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span>  e.<span class=\"me1\">printStackTrace</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">private</span> <span class=\"kw1\">synchronized</span> <span class=\"kw4\">boolean</span> registerClient<span class=\"br0\">(</span>Client client<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>Client otherClient <span class=\"sy0\">:</span> clients<span class=\"br0\">)</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>otherClient.<span class=\"me1\">clientName</span>.<span class=\"me1\">equalsIgnoreCase</span><span class=\"br0\">(</span>client.<span class=\"me1\">clientName</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>    clients.<span class=\"me1\">add</span><span class=\"br0\">(</span>client<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> deregisterClient<span class=\"br0\">(</span>Client client<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">boolean</span> wasRegistered <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">synchronized</span> <span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span>  wasRegistered <span class=\"sy0\">=</span> clients.<span class=\"me1\">remove</span><span class=\"br0\">(</span>client<span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>wasRegistered<span class=\"br0\">)</span><br/>      broadcast<span class=\"br0\">(</span>client, <span class=\"st0\">\"--- \"</span> <span class=\"sy0\">+</span> client.<span class=\"me1\">clientName</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" left ---\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">private</span> <span class=\"kw1\">synchronized</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> getOnlineListCSV<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    StringBuilder sb <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> StringBuilder<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    sb.<span class=\"me1\">append</span><span class=\"br0\">(</span>clients.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"st0\">\" user(s) online: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> clients.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>      sb.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\", \"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span>clients.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">clientName</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> sb.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> broadcast<span class=\"br0\">(</span>Client fromClient, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> msg<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Copy client list (don't want to hold lock while doing IO)</span><br/>    List<span class=\"sy0\">&lt;</span>Client<span class=\"sy0\">&gt;</span> clients <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">synchronized</span> <span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span>  clients <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;</span>Client<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">clients</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>Client client <span class=\"sy0\">:</span> clients<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>client.<span class=\"me1\">equals</span><span class=\"br0\">(</span>fromClient<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">try</span><br/>      <span class=\"br0\">{</span>  client.<span class=\"me1\">write</span><span class=\"br0\">(</span>msg <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"br0\">}</span><br/>      <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span>  <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Client <span class=\"kw1\">implements</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arunnable+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Runnable</span></a><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asocket+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Socket</span></a> socket <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Awriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Writer</span></a> output <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> clientName <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Client<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asocket+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Socket</span></a> socket<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">this</span>.<span class=\"me1\">socket</span> <span class=\"sy0\">=</span> socket<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">try</span><br/>      <span class=\"br0\">{</span><br/>        socket.<span class=\"me1\">setSendBufferSize</span><span class=\"br0\">(</span><span class=\"nu0\">16384</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        socket.<span class=\"me1\">setTcpNoDelay</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedreader+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedReader</span></a> input <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedreader+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedReader</span></a><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainputstreamreader+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">InputStreamReader</span></a><span class=\"br0\">(</span>socket.<span class=\"me1\">getInputStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        output <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aoutputstreamwriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">OutputStreamWriter</span></a><span class=\"br0\">(</span>socket.<span class=\"me1\">getOutputStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        write<span class=\"br0\">(</span><span class=\"st0\">\"Please enter your name: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> line <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>line <span class=\"sy0\">=</span> input.<span class=\"me1\">readLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span>clientName <span class=\"sy0\">==</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">{</span><br/>            line <span class=\"sy0\">=</span> line.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>line.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>              write<span class=\"br0\">(</span><span class=\"st0\">\"A name is required. Please enter your name: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>              <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            clientName <span class=\"sy0\">=</span> line<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>registerClient<span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>              clientName <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>              write<span class=\"br0\">(</span><span class=\"st0\">\"Name already registered. Please enter your name: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>              <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            write<span class=\"br0\">(</span>getOnlineListCSV<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            broadcast<span class=\"br0\">(</span><span class=\"kw1\">this</span>, <span class=\"st0\">\"+++ \"</span> <span class=\"sy0\">+</span> clientName <span class=\"sy0\">+</span> <span class=\"st0\">\" arrived +++\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>          <span class=\"br0\">}</span><br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span>line.<span class=\"me1\">equalsIgnoreCase</span><span class=\"br0\">(</span><span class=\"st0\">\"/quit\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>          broadcast<span class=\"br0\">(</span><span class=\"kw1\">this</span>, clientName <span class=\"sy0\">+</span> <span class=\"st0\">\"&gt; \"</span> <span class=\"sy0\">+</span> line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span>  <span class=\"br0\">}</span><br/>      <span class=\"kw1\">finally</span><br/>      <span class=\"br0\">{</span><br/>        deregisterClient<span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        output <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">try</span><br/>        <span class=\"br0\">{</span>  socket.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"br0\">}</span><br/>        <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span>  <span class=\"br0\">}</span><br/>        socket <span class=\"sy0\">=</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> write<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> msg<span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a><br/>    <span class=\"br0\">{</span><br/>      output.<span class=\"me1\">write</span><span class=\"br0\">(</span>msg<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      output.<span class=\"me1\">flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">boolean</span> equals<span class=\"br0\">(</span>Client client<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">return</span> <span class=\"br0\">(</span>client <span class=\"sy0\">!=</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>client <span class=\"kw1\">instanceof</span> Client<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>clientName <span class=\"sy0\">!=</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>client.<span class=\"me1\">clientName</span> <span class=\"sy0\">!=</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> clientName.<span class=\"me1\">equals</span><span class=\"br0\">(</span>client.<span class=\"me1\">clientName</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> port <span class=\"sy0\">=</span> <span class=\"nu0\">4004</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>args.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      port <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>.<span class=\"me1\">parseInt</span><span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">new</span> ChatServer<span class=\"br0\">(</span>port<span class=\"br0\">)</span>.<span class=\"me1\">run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "JavaScript", "loc": 158, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> net <span class=\"sy0\">=</span> require<span class=\"br0\">(</span><span class=\"st0\">\"net\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> sys <span class=\"sy0\">=</span> require<span class=\"br0\">(</span><span class=\"st0\">\"sys\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> EventEmitter <span class=\"sy0\">=</span> require<span class=\"br0\">(</span><span class=\"st0\">\"events\"</span><span class=\"br0\">)</span>.<span class=\"me1\">EventEmitter</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/*******************************************************************************<br/> * ChatServer<br/> *<br/> * Manages connections, users, and chat messages.<br/> ******************************************************************************/</span><br/>\u00a0<br/><span class=\"kw1\">function</span> ChatServer<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">server</span>   <span class=\"sy0\">=</span> net.<span class=\"me1\">createServer</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">handleConnection</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">server</span>.<span class=\"me1\">listen</span><span class=\"br0\">(</span><span class=\"nu0\">1212</span><span class=\"sy0\">,</span> <span class=\"st0\">\"localhost\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">isNicknameLegal</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>nickname<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"co1\">// A nickname may contain letters or numbers only,</span><br/>  <span class=\"co1\">// and may only be used once.</span><br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span>nickname.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"co2\">/[A-Za-z0-9]*/</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>used_nick <span class=\"kw1\">in</span> <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>used_nick <span class=\"sy0\">==</span> nickname<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleConnection</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>connection<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">\"Incoming connection from \"</span> <span class=\"sy0\">+</span> connection.<span class=\"me1\">remoteAddress</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  connection.<span class=\"me1\">setEncoding</span><span class=\"br0\">(</span><span class=\"st0\">\"utf8\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">var</span> chatter <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Chatter<span class=\"br0\">(</span>connection<span class=\"sy0\">,</span> <span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  chatter.<span class=\"me1\">on</span><span class=\"br0\">(</span><span class=\"st0\">\"chat\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">handleChat</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  chatter.<span class=\"me1\">on</span><span class=\"br0\">(</span><span class=\"st0\">\"join\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">handleJoin</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  chatter.<span class=\"me1\">on</span><span class=\"br0\">(</span><span class=\"st0\">\"leave\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">handleLeave</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleChat</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>chatter<span class=\"sy0\">,</span> message<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">sendToEveryChatterExcept</span><span class=\"br0\">(</span>chatter<span class=\"sy0\">,</span> chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\": \"</span> <span class=\"sy0\">+</span> message<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleJoin</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  console.<span class=\"me1\">log</span><span class=\"br0\">(</span>chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has joined the chat.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">sendToEveryChatter</span><span class=\"br0\">(</span>chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has joined the chat.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">addChatter</span><span class=\"br0\">(</span>chatter<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleLeave</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  console.<span class=\"me1\">log</span><span class=\"br0\">(</span>chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has left the chat.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">removeChatter</span><span class=\"br0\">(</span>chatter<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">sendToEveryChatter</span><span class=\"br0\">(</span>chatter.<span class=\"me1\">nickname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" has left the chat.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">addChatter</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span><span class=\"br0\">[</span>chatter.<span class=\"me1\">nickname</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> chatter<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">removeChatter</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>chatter<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">delete</span> <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span><span class=\"br0\">[</span>chatter.<span class=\"me1\">nickname</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">sendToEveryChatter</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>nickname <span class=\"kw1\">in</span> <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span><span class=\"br0\">[</span>nickname<span class=\"br0\">]</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ChatServer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">sendToEveryChatterExcept</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>chatter<span class=\"sy0\">,</span> data<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>nickname <span class=\"kw1\">in</span> <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>nickname <span class=\"sy0\">!=</span> chatter.<span class=\"me1\">nickname</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">this</span>.<span class=\"me1\">chatters</span><span class=\"br0\">[</span>nickname<span class=\"br0\">]</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/*******************************************************************************<br/> * Chatter<br/> *<br/> * Represents a single user/connection in the chat server.<br/> ******************************************************************************/</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Chatter<span class=\"br0\">(</span>socket<span class=\"sy0\">,</span> server<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  EventEmitter.<span class=\"me1\">call</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">socket</span>     <span class=\"sy0\">=</span> socket<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">server</span>     <span class=\"sy0\">=</span> server<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">nickname</span>   <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">lineBuffer</span> <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> SocketLineBuffer<span class=\"br0\">(</span>socket<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">lineBuffer</span>.<span class=\"me1\">on</span><span class=\"br0\">(</span><span class=\"st0\">\"line\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">handleNickname</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">on</span><span class=\"br0\">(</span><span class=\"st0\">\"close\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">handleDisconnect</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"Welcome! What is your nickname?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>sys.<span class=\"me1\">inherits</span><span class=\"br0\">(</span>Chatter<span class=\"sy0\">,</span> EventEmitter<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>Chatter.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleNickname</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>nickname<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span>server.<span class=\"me1\">isNicknameLegal</span><span class=\"br0\">(</span>nickname<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">nickname</span> <span class=\"sy0\">=</span> nickname<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">lineBuffer</span>.<span class=\"me1\">removeAllListeners</span><span class=\"br0\">(</span><span class=\"st0\">\"line\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">lineBuffer</span>.<span class=\"me1\">on</span><span class=\"br0\">(</span><span class=\"st0\">\"line\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">handleChat</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"Welcome to the chat, \"</span> <span class=\"sy0\">+</span> nickname <span class=\"sy0\">+</span> <span class=\"st0\">\"!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">emit</span><span class=\"br0\">(</span><span class=\"st0\">\"join\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"Sorry, but that nickname is not legal or is already in use!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"What is your nickname?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>Chatter.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleChat</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">emit</span><span class=\"br0\">(</span><span class=\"st0\">\"chat\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span><span class=\"sy0\">,</span> line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>Chatter.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleDisconnect</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">emit</span><span class=\"br0\">(</span><span class=\"st0\">\"leave\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>Chatter.<span class=\"kw1\">prototype</span>.<span class=\"me1\">send</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span>data <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/*******************************************************************************<br/> * SocketLineBuffer<br/> *<br/> * Listens for and buffers incoming data on a socket and emits a 'line' event<br/> * whenever a complete line is detected.<br/> ******************************************************************************/</span><br/>\u00a0<br/><span class=\"kw1\">function</span> SocketLineBuffer<span class=\"br0\">(</span>socket<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  EventEmitter.<span class=\"me1\">call</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">socket</span> <span class=\"sy0\">=</span> socket<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">this</span>.<span class=\"me1\">socket</span>.<span class=\"me1\">on</span><span class=\"br0\">(</span><span class=\"st0\">\"data\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">handleData</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>sys.<span class=\"me1\">inherits</span><span class=\"br0\">(</span>SocketLineBuffer<span class=\"sy0\">,</span> EventEmitter<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>SocketLineBuffer.<span class=\"kw1\">prototype</span>.<span class=\"me1\">handleData</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> data.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> <span class=\"kw5\">char</span> <span class=\"sy0\">=</span> data.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">+=</span> <span class=\"kw5\">char</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw5\">char</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">=</span> <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">=</span> <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">this</span>.<span class=\"me1\">emit</span><span class=\"br0\">(</span><span class=\"st0\">\"line\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">this</span>.<span class=\"me1\">buffer</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">// Start the server!</span><br/>server <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ChatServer<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Julia", "loc": 84, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>using HttpServer<br/>using WebSockets<br/>\u00a0<br/>const connections = Dict{Int,WebSocket}()<br/>const usernames   = Dict{Int,String}()<br/>\u00a0<br/>function decodeMessage( msg )<br/>    String(copy(msg))<br/>end<br/>\u00a0<br/>\u00a0<br/>wsh = WebSocketHandler() do req, client<br/>    global connections<br/>    @show connections[client.id] = client<br/>    println(\"req is $req\")<br/>    notifyonline = \"Connection from user number $(client.id) is now online.\"<br/>    for (k,v) in connections<br/>        if k\u00a0!= client.id<br/>            try<br/>                write(v, notifyonline)<br/>            catch<br/>                continue<br/>            end<br/>        end<br/>    end<br/>    while true<br/>        try<br/>            msg = read(client)<br/>        catch<br/>            telloffline = \"User $(usernames[client.id]) disconnected.\"<br/>            println(telloffline, \"(The client id was $(client.id).)\")<br/>            delete!(connections, client.id)<br/>            if haskey(usernames, client.id)<br/>                delete!(usernames, client.id)<br/>            end<br/>            for (k,v) in connections<br/>                try<br/>                    write(v, telloffline)<br/>                catch<br/>                    continue<br/>                end<br/>            end<br/>            return<br/>        end<br/>        msg = decodeMessage(msg)<br/>        if startswith(msg, \"setusername:\")<br/>            println(\"SETTING USERNAME: $msg\")<br/>            usernames[client.id] = msg[13:end]<br/>            notifyusername = \"User number $(client.id) chose $(usernames[client.id]) as name handle.\"<br/>            for (k,v) in connections<br/>                try<br/>                    write(v, notifyusername)<br/>                catch<br/>                    println(\"Caught exception writing to user $k\")<br/>                    continue<br/>                end<br/>            end<br/>        end<br/>        if startswith(msg, \"say:\")<br/>            println(\"EMITTING MESSAGE: $msg\")<br/>            for (k,v) in connections<br/>                if k\u00a0!= client.id<br/>                    try<br/>                        write(v, (usernames[client.id] * \": \" * msg[5:end]))<br/>                    catch<br/>                        println(\"Caught exception writing to user $k\")<br/>                        continue<br/>                    end<br/>                end<br/>            end<br/>        end<br/>    end<br/>end<br/>\u00a0<br/>onepage = readstring(Pkg.dir(\"WebSockets\",\"examples\",\"chat-client.html\"))<br/>httph = HttpHandler() do req::Request, res::Response<br/>  Response(onepage)<br/>end<br/>\u00a0<br/>server = Server(httph, wsh)<br/>println(\"Chat server listening on 8000...\")<br/>run(server,8000)<br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 42, "block": "<pre class=\"text highlighted_source\">import asyncnet, asyncdispatch<br/>\u00a0<br/>type<br/>  Client = tuple<br/>    socket: AsyncSocket<br/>    name: string<br/>    connected: bool<br/>\u00a0<br/>var clients {.threadvar.}: seq[Client]<br/>\u00a0<br/>proc sendOthers(client: Client, line: string) {.async.} =<br/>  for c in clients:<br/>    if c\u00a0!= client and c.connected:<br/>      await c.socket.send(line &amp; \"\\c\\L\")<br/>\u00a0<br/>proc processClient(socket: AsyncSocket) {.async.} =<br/>  await socket.send(\"Please enter your name: \")<br/>  var client: Client = (socket, await socket.recvLine(), true)<br/>\u00a0<br/>  clients.add(client)<br/>  asyncCheck client.sendOthers(\"+++ \" &amp; client.name &amp; \" arrived +++\")<br/>\u00a0<br/>  while true:<br/>    let line = await client.socket.recvLine()<br/>    if line == \"\":<br/>      asyncCheck client.sendOthers(\"--- \" &amp; client.name &amp; \" leaves ---\")<br/>      client.connected = false<br/>      return<br/>    asyncCheck client.sendOthers(client.name &amp; \"&gt; \" &amp; line)<br/>\u00a0<br/>proc serve() {.async.} =<br/>  clients = @[]<br/>  var server = newAsyncSocket()<br/>  server.bindAddr(Port(4004))<br/>  server.listen()<br/>\u00a0<br/>  while true:<br/>    let socket = await server.accept()<br/>    asyncCheck processClient(socket)<br/>\u00a0<br/>asyncCheck serve()<br/>runForever()</pre>"}, {"lang": "Objeck", "loc": 111, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">use</span> System.IO.Net<span class=\"sy0\">;</span><br/><span class=\"kw1\">use</span> System.Concurrency<span class=\"sy0\">;</span><br/><span class=\"kw1\">use</span> Collection<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> ChatServer <span class=\"br0\">{</span><br/>    @clients <span class=\"sy0\">:</span> StringMap<span class=\"sy0\">;</span><br/>    @clients_mutex <span class=\"sy0\">:</span> ThreadMutex<span class=\"sy0\">;</span><br/>\u00a0<br/>    New<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      @clients <span class=\"sy0\">:=</span> StringMap<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      @clients_mutex <span class=\"sy0\">:=</span> ThreadMutex<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"st0\">\"clients_mutex\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> ValidLogin<span class=\"br0\">(</span>login_name <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"sy0\">,</span> clients <span class=\"sy0\">:</span> StringMap<span class=\"br0\">)</span> ~ <span class=\"kw2\">Bool</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>clients<span class=\"sy0\">-&gt;</span><span class=\"me1\">Has</span><span class=\"br0\">(</span>login_name<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw3\">false</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">return</span> <span class=\"kw3\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      chat_server <span class=\"sy0\">:=</span> ChatServer<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      chat_server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Broadcast<span class=\"br0\">(</span>message <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"sy0\">,</span> sender <span class=\"sy0\">:</span> Client<span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      client_array <span class=\"sy0\">:</span> Vector<span class=\"sy0\">;</span><br/>      critical<span class=\"br0\">(</span>@clients_mutex<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        client_array <span class=\"sy0\">:=</span> @clients<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetValues</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">each</span><span class=\"br0\">(</span>i <span class=\"sy0\">:</span> client_array<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        client <span class=\"sy0\">:=</span> client_array<span class=\"sy0\">-&gt;</span><span class=\"me1\">Get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">As</span><span class=\"br0\">(</span>Client<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>client <span class=\"sy0\">&lt;&gt;</span> sender<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          client<span class=\"sy0\">-&gt;</span><span class=\"me1\">Send</span><span class=\"br0\">(</span>message<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span>      <br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Disconnect<span class=\"br0\">(</span>sender <span class=\"sy0\">:</span> Client<span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      send_name <span class=\"sy0\">:=</span> sender<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      Broadcast<span class=\"br0\">(</span><span class=\"st0\">\"+++ {$send_name} has left +++\"</span><span class=\"sy0\">,</span> sender<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      critical<span class=\"br0\">(</span>@clients_mutex<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        @clients<span class=\"sy0\">-&gt;</span><span class=\"me1\">Remove</span><span class=\"br0\">(</span>sender<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      sender<span class=\"sy0\">-&gt;</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Run<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      server <span class=\"sy0\">:=</span> TCPSocketServer<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"nu0\">4661</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Listen</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"kw3\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          client_sock <span class=\"sy0\">:=</span> server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Accept</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>          critical<span class=\"br0\">(</span>@clients_mutex<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">WriteString</span><span class=\"br0\">(</span><span class=\"st0\">\"login: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            login_name <span class=\"sy0\">:=</span> client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">ReadString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>ValidLogin<span class=\"br0\">(</span>login_name<span class=\"sy0\">,</span> @clients<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>              client <span class=\"sy0\">:=</span> Client<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span>login_name<span class=\"sy0\">,</span> client_sock<span class=\"sy0\">,</span> @self<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>              @clients<span class=\"sy0\">-&gt;</span><span class=\"me1\">Insert</span><span class=\"br0\">(</span>client<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> client<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>              client<span class=\"sy0\">-&gt;</span><span class=\"me1\">Execute</span><span class=\"br0\">(</span><span class=\"kw2\">Nil</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>              client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">WriteString</span><span class=\"br0\">(</span><span class=\"st0\">\"+++ login in use +++<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>              client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>          <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">class</span> Client <span class=\"kw1\">from</span> Thread <span class=\"br0\">{</span><br/>    @client_sock <span class=\"sy0\">:</span> TCPSocket<span class=\"sy0\">;</span><br/>    @server <span class=\"sy0\">:</span> ChatServer<span class=\"sy0\">;</span><br/>\u00a0<br/>    New<span class=\"br0\">(</span>login_name <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"sy0\">,</span> client_sock <span class=\"sy0\">:</span> TCPSocket<span class=\"sy0\">,</span> server <span class=\"sy0\">:</span> ChatServer<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      Parent<span class=\"br0\">(</span>login_name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      @client_sock <span class=\"sy0\">:=</span> client_sock<span class=\"sy0\">;</span><br/>      @server <span class=\"sy0\">:=</span> server<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Close<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      @client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Send<span class=\"br0\">(</span>message <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>@client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">IsOpen</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> message<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        @client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">WriteString</span><span class=\"br0\">(</span><span class=\"st0\">\"{$message}<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        @server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Disconnect</span><span class=\"br0\">(</span>@self<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">:</span> <span class=\"kw1\">public</span> <span class=\"sy0\">:</span> Run<span class=\"br0\">(</span>param <span class=\"sy0\">:</span> Base<span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      client_name <span class=\"sy0\">:=</span> GetName<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      @server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Broadcast</span><span class=\"br0\">(</span><span class=\"st0\">\"+++ {$client_name} has arrived +++\"</span><span class=\"sy0\">,</span> @self<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      message <span class=\"sy0\">:=</span> @client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">ReadString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">while</span><span class=\"br0\">(</span>message<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;</span> message<span class=\"sy0\">-&gt;</span><span class=\"me1\">Equals</span><span class=\"br0\">(</span><span class=\"st0\">\"/quit\"</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw3\">false</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        @server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Broadcast</span><span class=\"br0\">(</span><span class=\"st0\">\"{$client_name}&gt; {$message}\"</span><span class=\"sy0\">,</span> @self<span class=\"br0\">)</span><span class=\"sy0\">;</span>      <br/>        message <span class=\"sy0\">:=</span> @client_sock<span class=\"sy0\">-&gt;</span><span class=\"me1\">ReadString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      @server<span class=\"sy0\">-&gt;</span><span class=\"me1\">Disconnect</span><span class=\"br0\">(</span>@self<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 108, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> <span class=\"nu0\">5.010</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">use</span> threads<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> threads<span class=\"sy0\">::</span><span class=\"me2\">shared</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">use</span> IO<span class=\"sy0\">::</span><span class=\"me2\">Socket</span><span class=\"sy0\">::</span><span class=\"me2\">INET</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> Time<span class=\"sy0\">::</span><span class=\"me2\">HiRes</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/sleep.html\"><span class=\"kw3\">sleep</span></a> ualarm<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$HOST</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"localhost\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$PORT</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4004</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"sy0\">@</span><a href=\"http://perldoc.perl.org/functions/open.html\"><span class=\"kw3\">open</span></a><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">%users</span> <span class=\"sy0\">:</span> shared<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> broadcast <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$id</span><span class=\"sy0\">,</span> <span class=\"re0\">$message</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"$message<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"re0\">%users</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$id</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$open</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/send.html\"><span class=\"kw3\">send</span></a><span class=\"br0\">(</span><span class=\"st0\">\"$message<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> sign_in <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$conn</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    state <span class=\"re0\">$id</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    threads<span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><br/>        <span class=\"kw2\">sub</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$conn</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/send.html\"><span class=\"kw3\">send</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Please enter your name: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$conn</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/recv.html\"><span class=\"kw3\">recv</span></a><span class=\"br0\">(</span><span class=\"kw1\">my</span> <span class=\"re0\">$name</span><span class=\"sy0\">,</span> <span class=\"nu0\">1024</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/defined.html\"><span class=\"kw3\">defined</span></a> <span class=\"re0\">$name</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$name</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/unpack.html\"><span class=\"kw3\">unpack</span></a><span class=\"br0\">(</span><span class=\"st_h\">'A*'</span><span class=\"sy0\">,</span> <span class=\"re0\">$name</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/exists.html\"><span class=\"kw3\">exists</span></a> <span class=\"re0\">$users</span><span class=\"br0\">{</span><span class=\"re0\">$name</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"re0\">$conn</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/send.html\"><span class=\"kw3\">send</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Name entered is already in use.<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$name</span> <span class=\"kw1\">ne</span> <span class=\"st_h\">''</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"re0\">$users</span><span class=\"br0\">{</span><span class=\"re0\">$id</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">$name</span><span class=\"sy0\">;</span><br/>                        broadcast<span class=\"br0\">(</span><span class=\"re0\">$id</span><span class=\"sy0\">,</span> <span class=\"st0\">\"+++ $name arrived +++\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">last</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"sy0\">++</span><span class=\"re0\">$id</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><a href=\"http://perldoc.perl.org/functions/open.html\"><span class=\"kw3\">open</span></a><span class=\"sy0\">,</span> <span class=\"re0\">$conn</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$server</span> <span class=\"sy0\">=</span> IO<span class=\"sy0\">::</span><span class=\"me2\">Socket</span><span class=\"sy0\">::</span><span class=\"me2\">INET</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><br/>                                   Timeout   <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>                                   LocalPort <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$PORT</span><span class=\"sy0\">,</span><br/>                                   Proto     <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"tcp\"</span><span class=\"sy0\">,</span><br/>                                   LocalAddr <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$HOST</span><span class=\"sy0\">,</span><br/>                                   Blocking  <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>                                   Listen    <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>                                   Reuse     <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>                                  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/local.html\"><span class=\"kw3\">local</span></a> <span class=\"co5\">$|</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Listening on $HOST:$PORT<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$conn</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">$server</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/accept.html\"><span class=\"kw3\">accept</span></a><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/defined.html\"><span class=\"kw3\">defined</span></a><span class=\"br0\">(</span><span class=\"re0\">$conn</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        sign_in<span class=\"br0\">(</span><span class=\"re0\">$conn</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"re0\">%users</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$conn</span> <span class=\"sy0\">=</span> <span class=\"re0\">$open</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$message</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"br0\">{</span><br/>            <a href=\"http://perldoc.perl.org/functions/local.html\"><span class=\"kw3\">local</span></a> <span class=\"re0\">$SIG</span><span class=\"br0\">{</span>ALRM<span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"alarm<span class=\"es0\">\\n</span>\"</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>            ualarm<span class=\"br0\">(</span><span class=\"nu0\">500</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$conn</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/recv.html\"><span class=\"kw3\">recv</span></a><span class=\"br0\">(</span><span class=\"re0\">$message</span><span class=\"sy0\">,</span> <span class=\"nu0\">1024</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            ualarm<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"co5\"><a class=\"__cf_email__\" data-cfemail=\"bc98fc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></span> <span class=\"kw1\">eq</span> <span class=\"st0\">\"alarm<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">next</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/defined.html\"><span class=\"kw3\">defined</span></a><span class=\"br0\">(</span><span class=\"re0\">$message</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$message</span> <span class=\"kw1\">ne</span> <span class=\"st_h\">''</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$message</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/unpack.html\"><span class=\"kw3\">unpack</span></a><span class=\"br0\">(</span><span class=\"st_h\">'A*'</span><span class=\"sy0\">,</span> <span class=\"re0\">$message</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                broadcast<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"st0\">\"$users{$i}&gt; $message\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                broadcast<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"st0\">\"--- $users{$i} leaves ---\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <a href=\"http://perldoc.perl.org/functions/delete.html\"><span class=\"kw3\">delete</span></a> <span class=\"re0\">$users</span><span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>                <a href=\"http://perldoc.perl.org/functions/undef.html\"><span class=\"kw3\">undef</span></a> <span class=\"re0\">$open</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://perldoc.perl.org/functions/sleep.html\"><span class=\"kw3\">sleep</span></a><span class=\"br0\">(</span><span class=\"nu0\">0.1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 45, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"co1\">#!/usr/bin/env perl6</span><br/>\u00a0<br/>react <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">%connections</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    whenever IO<span class=\"sy0\">::</span><span class=\"me2\">Socket</span><span class=\"sy0\">::</span><span class=\"me2\">Async</span><span class=\"sy0\">.</span><span class=\"me1\">listen</span><span class=\"br0\">(</span><span class=\"st_h\">'localhost'</span><span class=\"sy0\">,</span> <span class=\"nu0\">4004</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$conn</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$name</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"kw3\">print</span><span class=\"sy0\">:</span> <span class=\"st0\">\"Please enter your name: \"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        whenever <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"me1\">Supply</span><span class=\"sy0\">.</span><span class=\"me1\">lines</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$message</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"sy0\">!</span><span class=\"re0\">$name</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"re0\">%connections</span><span class=\"br0\">{</span><span class=\"re0\">$message</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"kw3\">print</span><span class=\"sy0\">:</span> <span class=\"st0\">\"Name already taken, choose another one: \"</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$name</span> <span class=\"sy0\">=</span> <span class=\"re0\">$message</span><span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%connections</span><span class=\"br0\">{</span><span class=\"re0\">$name</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">$conn</span><span class=\"sy0\">;</span><br/>                    broadcast <span class=\"st0\">\"+++\u00a0%s arrived +++\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$name</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                broadcast <span class=\"st0\">\"%s&gt;\u00a0%s\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$name</span><span class=\"sy0\">,</span> <span class=\"re0\">$message</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw2\">LAST</span> <span class=\"br0\">{</span><br/>                broadcast <span class=\"st0\">\"---\u00a0%s left ---\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$name</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">%connections</span><span class=\"br0\">{</span><span class=\"re0\">$name</span><span class=\"br0\">}</span><span class=\"sy0\">:</span><span class=\"kw3\">delete</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"me1\">close</span> <span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            QUIT <span class=\"br0\">{</span><br/>                 <span class=\"kw1\">default</span> <span class=\"br0\">{</span><br/>                     <span class=\"kw3\">say</span> <span class=\"st0\">\"oh no, $_\"</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">sub</span> broadcast <span class=\"br0\">(</span><span class=\"re0\">$format</span><span class=\"sy0\">,</span> <span class=\"re0\">$from</span><span class=\"sy0\">,</span> <span class=\"sy0\">*</span><span class=\"re0\">@message</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$text</span> <span class=\"sy0\">=</span> <span class=\"kw3\">sprintf</span> <span class=\"re0\">$format</span><span class=\"sy0\">,</span> <span class=\"re0\">$from</span><span class=\"sy0\">,</span> <span class=\"sy0\">|</span><span class=\"re0\">@message</span><span class=\"sy0\">;</span><br/>        <span class=\"kw3\">say</span> <span class=\"re0\">$text</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"re0\">%connections</span><span class=\"sy0\">.</span><span class=\"kw3\">kv</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$name</span><span class=\"sy0\">,</span> <span class=\"re0\">$conn</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"kw3\">print</span><span class=\"sy0\">:</span> <span class=\"st0\">\"$text<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">if</span> <span class=\"re0\">$name</span> <span class=\"kw1\">ne</span> <span class=\"re0\">$from</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PicoLisp", "loc": 28, "block": "<pre class=\"text highlighted_source\">#!/usr/bin/picolisp /usr/lib/picolisp/lib.l<br/>\u00a0<br/>(de chat Lst<br/>   (out *Sock<br/>      (mapc prin Lst)<br/>      (prinl) ) )<br/>\u00a0<br/>(setq *Port (port 4004))<br/>\u00a0<br/>(loop<br/>   (setq *Sock (listen *Port))<br/>   (NIL (fork) (close *Port))<br/>   (close *Sock) )<br/>\u00a0<br/>(out *Sock<br/>   (prin \"Please enter your name: \")<br/>   (flush) )<br/>(in *Sock (setq *Name (line T)))<br/>\u00a0<br/>(tell 'chat \"+++ \" *Name \" arrived +++\")<br/>\u00a0<br/>(task *Sock<br/>   (in @<br/>      (ifn (eof)<br/>         (tell 'chat *Name \"&gt; \" (line T))<br/>         (tell 'chat \"--- \" *Name \" left ---\")<br/>         (bye) ) ) )<br/>(wait)</pre>"}, {"lang": "Python", "loc": 78, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#!/usr/bin/env python</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">socket</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">thread</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">time</span><br/>\u00a0<br/>HOST <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>PORT <span class=\"sy0\">=</span> <span class=\"nu0\">4004</span><br/>\u00a0<br/><span class=\"kw1\">def</span> accept<span class=\"br0\">(</span>conn<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">\"\"\"<br/>    Call the inner func in a thread so as not to block. Wait for a <br/>    name to be entered from the given connection. Once a name is <br/>    entered, set the connection to non-blocking and add the user to <br/>    the users dict.<br/>    \"\"\"</span><br/>    <span class=\"kw1\">def</span> threaded<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>            conn.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"Please enter your name: \"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">try</span>:<br/>                name <span class=\"sy0\">=</span> conn.<span class=\"me1\">recv</span><span class=\"br0\">(</span><span class=\"nu0\">1024</span><span class=\"br0\">)</span>.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">except</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">error</span>:<br/>                <span class=\"kw1\">continue</span><br/>            <span class=\"kw1\">if</span> name <span class=\"kw1\">in</span> users:<br/>                conn.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"st0\">\"Name entered is already in use.<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">elif</span> name:<br/>                conn.<span class=\"me1\">setblocking</span><span class=\"br0\">(</span><span class=\"kw2\">False</span><span class=\"br0\">)</span><br/>                users<span class=\"br0\">[</span>name<span class=\"br0\">]</span> <span class=\"sy0\">=</span> conn<br/>                broadcast<span class=\"br0\">(</span>name<span class=\"sy0\">,</span> <span class=\"st0\">\"+++\u00a0%s arrived +++\"</span>\u00a0% name<span class=\"br0\">)</span><br/>                <span class=\"kw1\">break</span><br/>    <span class=\"kw3\">thread</span>.<span class=\"me1\">start_new_thread</span><span class=\"br0\">(</span>threaded<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> broadcast<span class=\"br0\">(</span>name<span class=\"sy0\">,</span> message<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">\"\"\"<br/>    Send a message to all users from the given name.<br/>    \"\"\"</span><br/>    <span class=\"kw1\">print</span> message<br/>    <span class=\"kw1\">for</span> to_name<span class=\"sy0\">,</span> conn <span class=\"kw1\">in</span> users.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> to_name <span class=\"sy0\">!=</span> name:<br/>            <span class=\"kw1\">try</span>:<br/>                conn.<span class=\"me1\">send</span><span class=\"br0\">(</span>message + <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">except</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">error</span>:<br/>                <span class=\"kw1\">pass</span><br/>\u00a0<br/><span class=\"co1\"># Set up the server socket.</span><br/>server <span class=\"sy0\">=</span> <span class=\"kw3\">socket</span>.<span class=\"kw3\">socket</span><span class=\"br0\">(</span><span class=\"kw3\">socket</span>.<span class=\"me1\">AF_INET</span><span class=\"sy0\">,</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">SOCK_STREAM</span><span class=\"br0\">)</span><br/>server.<span class=\"me1\">setsockopt</span><span class=\"br0\">(</span><span class=\"kw3\">socket</span>.<span class=\"me1\">SOL_SOCKET</span><span class=\"sy0\">,</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">SO_REUSEADDR</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>server.<span class=\"me1\">setblocking</span><span class=\"br0\">(</span><span class=\"kw2\">False</span><span class=\"br0\">)</span><br/>server.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"br0\">(</span>HOST<span class=\"sy0\">,</span> PORT<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>server.<span class=\"me1\">listen</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Listening on\u00a0%s\"</span>\u00a0% <span class=\"br0\">(</span><span class=\"st0\">\"%s:%s\"</span>\u00a0% server.<span class=\"me1\">getsockname</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\"># Main event loop.</span><br/>users <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>    <span class=\"kw1\">try</span>:<br/>        <span class=\"co1\"># Accept new connections.</span><br/>        <span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>            <span class=\"kw1\">try</span>:<br/>                conn<span class=\"sy0\">,</span> addr <span class=\"sy0\">=</span> server.<span class=\"me1\">accept</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">except</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">error</span>:<br/>                <span class=\"kw1\">break</span><br/>            accept<span class=\"br0\">(</span>conn<span class=\"br0\">)</span><br/>        <span class=\"co1\"># Read from connections.</span><br/>        <span class=\"kw1\">for</span> name<span class=\"sy0\">,</span> conn <span class=\"kw1\">in</span> users.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">try</span>:<br/>                message <span class=\"sy0\">=</span> conn.<span class=\"me1\">recv</span><span class=\"br0\">(</span><span class=\"nu0\">1024</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">except</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">error</span>:<br/>                <span class=\"kw1\">continue</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> message:<br/>                <span class=\"co1\"># Empty string is given on disconnect.</span><br/>                <span class=\"kw1\">del</span> users<span class=\"br0\">[</span>name<span class=\"br0\">]</span><br/>                broadcast<span class=\"br0\">(</span>name<span class=\"sy0\">,</span> <span class=\"st0\">\"---\u00a0%s leaves ---\"</span>\u00a0% name<span class=\"br0\">)</span><br/>            <span class=\"kw1\">else</span>:<br/>                broadcast<span class=\"br0\">(</span>name<span class=\"sy0\">,</span> <span class=\"st0\">\"%s&gt;\u00a0%s\"</span>\u00a0% <span class=\"br0\">(</span>name<span class=\"sy0\">,</span> message.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw3\">time</span>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">.1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">except</span> <span class=\"br0\">(</span><span class=\"kw2\">SystemExit</span><span class=\"sy0\">,</span> <span class=\"kw2\">KeyboardInterrupt</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">break</span></pre>"}, {"lang": "Racket", "loc": 23, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(define outs (list (current-output-port)))<br/>(define ((tell-all who o) line)<br/>  (for ([c outs] #:unless (eq? o c)) (displayln (~a who \": \" line) c)))<br/>\u00a0<br/>(define ((client i o))<br/>  (define nick (begin (display \"Nick: \" o) (read-line i)))<br/>  (define tell (tell-all nick o))<br/>  (let loop ([line \"(joined)\"])<br/>    (if (eof-object? line)<br/>      (begin (tell \"(left)\") (set! outs (remq o outs)) (close-output-port o))<br/>      (begin (tell line) (loop (read-line i))))))<br/>\u00a0<br/>(define (chat-server listener)<br/>  (define-values [i o] (tcp-accept listener))<br/>  (for ([p (list i o)]) (file-stream-buffer-mode p 'none))<br/>  (thread (client i o)) (set! outs (cons o outs)) (chat-server listener))<br/>\u00a0<br/>(void (thread (\u03bb() (chat-server (tcp-listen 12321)))))<br/>((client (current-input-port) (current-output-port)))<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 69, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'gserver'</span><br/>\u00a0<br/><span class=\"kw1\">class</span> ChatServer <span class=\"sy0\">&lt;</span> GServer<br/>  <span class=\"kw1\">def</span> initialize <span class=\"sy0\">*</span>args<br/>    <span class=\"kw1\">super</span><br/>\u00a0<br/>    <span class=\"co1\">#Keep a list for broadcasting messages</span><br/>    <span class=\"re1\">@chatters</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"co1\">#We'll need this for thread safety</span><br/>    <span class=\"re1\">@mutex</span> = <span class=\"kw4\">Mutex</span>.<span class=\"me1\">new</span> <br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\">#Send message out to everyone but sender</span><br/>  <span class=\"kw1\">def</span> broadcast message, sender = <span class=\"kw2\">nil</span><br/>    <span class=\"co1\">#Need to use \\r\\n for our Windows friends</span><br/>    message = message.<span class=\"me1\">strip</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><br/>\u00a0<br/>    <span class=\"co1\">#Mutex for safety - GServer uses threads</span><br/>    <span class=\"re1\">@mutex</span>.<span class=\"me1\">synchronize</span> <span class=\"kw1\">do</span><br/>      <span class=\"re1\">@chatters</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>chatter<span class=\"sy0\">|</span><br/>        <span class=\"kw1\">begin</span><br/>          chatter.<span class=\"kw3\">print</span> message <span class=\"kw1\">unless</span> chatter == sender<br/>        <span class=\"kw1\">rescue</span><br/>          <span class=\"re1\">@chatters</span>.<span class=\"me1\">delete</span> chatter<br/>        <span class=\"kw1\">end</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\">#Handle each connection</span><br/>  <span class=\"kw1\">def</span> serve io<br/>    io.<span class=\"kw3\">print</span> <span class=\"st0\">'Name: '</span><br/>    name = io.<span class=\"kw3\">gets</span><br/>\u00a0<br/>    <span class=\"co1\">#They might disconnect</span><br/>    <span class=\"kw2\">return</span> <span class=\"kw1\">if</span> name.<span class=\"kw2\">nil</span>?<br/>\u00a0<br/>    name.<span class=\"me1\">strip</span>!<br/>\u00a0<br/>    broadcast <span class=\"st0\">\"--+ #{name} has joined +--\"</span><br/>\u00a0<br/>    <span class=\"co1\">#Add to our list of connections</span><br/>    <span class=\"re1\">@mutex</span>.<span class=\"me1\">synchronize</span> <span class=\"kw1\">do</span><br/>      <span class=\"re1\">@chatters</span> <span class=\"sy0\">&lt;&lt;</span> io<br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"co1\">#Get and broadcast input until connection returns nil</span><br/>    <span class=\"kw3\">loop</span> <span class=\"kw1\">do</span><br/>      message = io.<span class=\"kw3\">gets</span><br/>\u00a0<br/>      <span class=\"kw1\">if</span> message<br/>        broadcast <span class=\"st0\">\"#{name}&gt; #{message}\"</span>, io<br/>      <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">break</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    broadcast <span class=\"st0\">\"--+ #{name} has left +--\"</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">#Start up the server on port 7000</span><br/><span class=\"co1\">#Accept connections for any IP address</span><br/><span class=\"co1\">#Allow up to 100 connections</span><br/><span class=\"co1\">#Send information to stderr</span><br/><span class=\"co1\">#Turn on informational messages</span><br/>ChatServer.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">7000</span>, <span class=\"st0\">'0.0.0.0'</span>, <span class=\"nu0\">100</span>, <span class=\"re0\">$stderr</span>, <span class=\"kw2\">true</span><span class=\"br0\">)</span>.<span class=\"me1\">start</span>.<span class=\"me1\">join</span><br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 61, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><br/>\u00a0<br/><span class=\"co1\"># Write a message to everyone except the sender of the message</span><br/><span class=\"kw1\">proc</span> writeEveryoneElse <span class=\"br0\">{</span>sender message<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    dict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>who ch<span class=\"br0\">}</span> <span class=\"sy0\">$</span>::<span class=\"me1\">cmap</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$who</span> ne <span class=\"re0\">$sender</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"re0\">$ch</span> <span class=\"re0\">$message</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># How to read a line (up to 256 chars long) in a coroutine</span><br/><span class=\"kw1\">proc</span> cgets <span class=\"br0\">{</span>ch var<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"re0\">$var</span> v<br/>    <span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">gets</span> <span class=\"re0\">$ch</span> v<span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">eof</span> <span class=\"re0\">$ch</span><span class=\"br0\">]</span> || <span class=\"br0\">[</span>chan pending input <span class=\"re0\">$ch</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">256</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">return</span> false<br/>\t<span class=\"br0\">}</span><br/>\tyield<br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> true<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># The chatting, as seen by one user</span><br/><span class=\"kw1\">proc</span> chat <span class=\"br0\">{</span>ch addr port<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">### CONNECTION CODE ###</span><br/>    <span class=\"co1\">#Log \"connection from ${addr}:${port} on channel $ch\"</span><br/>    <span class=\"kw2\">fconfigure</span> <span class=\"re0\">$ch</span> -buffering none -blocking <span class=\"nu0\">0</span> -encoding utf-<span class=\"nu0\">8</span><br/>    <span class=\"kw2\">fileevent</span> <span class=\"re0\">$ch</span> readable <span class=\"br0\">[</span><span class=\"kw2\">info</span> coroutine<span class=\"br0\">]</span><br/>    <span class=\"kw1\">global</span> cmap<br/>    try <span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"co1\">### GET THE NICKNAME OF THE USER ###</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"re0\">$ch</span> <span class=\"st0\">\"Please enter your name: \"</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span>cgets <span class=\"re0\">$ch</span> name<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">return</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"co1\">#Log \"Mapping ${addr}:${port} to ${name} on channel $ch\"</span><br/>\tdict <span class=\"kw1\">set</span> cmap <span class=\"re0\">$name</span> <span class=\"re0\">$ch</span><br/>\twriteEveryoneElse <span class=\"re0\">$name</span> <span class=\"st0\">\"+++ $name arrived +++\"</span><br/>\u00a0<br/>\t<span class=\"co1\">### MAIN CHAT LOOP ###</span><br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>cgets <span class=\"re0\">$ch</span> line<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    writeEveryoneElse <span class=\"re0\">$name</span> <span class=\"st0\">\"$name&gt; $line\"</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"br0\">}</span> finally <span class=\"br0\">{</span><br/>\t<span class=\"co1\">### DISCONNECTION CODE ###</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exists name<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    writeEveryoneElse <span class=\"re0\">$name</span> <span class=\"st0\">\"--- $name left ---\"</span><br/>\t    dict unset cmap <span class=\"re0\">$name</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">close</span> <span class=\"re0\">$ch</span><br/>\t<span class=\"co1\">#Log \"disconnection from ${addr}:${port} on channel $ch\"</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Service the socket by making corouines running [chat]</span><br/><span class=\"kw2\">socket</span> -server <span class=\"br0\">{</span>coroutine c<span class=\"br0\">[</span><span class=\"kw2\">incr</span> count<span class=\"br0\">]</span> chat<span class=\"br0\">}</span> <span class=\"nu0\">4004</span><br/><span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">cmap</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\"># Dictionary mapping nicks to channels</span><br/>vwait forever<span class=\"sy0\">;</span>\t\t<span class=\"co1\"># Run event loop</span></pre>"}, {"lang": "zkl", "loc": 49, "block": "<pre class=\"text highlighted_source\">const PORT=23;<br/>\u00a0<br/>var users=Dictionary(); // ( handle:socket, ...)<br/>pipe:=Thread.Pipe(); // how server tells thread to connect to user<br/>\u00a0<br/>fcn accept(pipe){ // a thread waiting for the server to send a socket<br/>   while(socket:=pipe.read()){<br/>      println(\"Somebody is connecting ...\");<br/>      socket.read();  // telnet stuff<br/>      while(True){    // get credentials<br/>\t reg name;<br/>\t socket.write(\"Your handle: \");  // bottle neck<br/>\t try{ name = socket.read().text.strip() } catch(IOError){ continue }<br/>\t if(users.holds(name)) socket.write(\"Handle is already in use.\\n\");<br/>\t else if(name){<br/>\t    users[name] = socket;<br/>\t    chat.launch(name,socket);\t// thread<br/>\t    broadcast(name, \"+++\u00a0%s arrived +++\".fmt(name));<br/>\t    break;\t// wait for next connection<br/>\t }<br/>      }//while<br/>   }//while<br/>}.launch(pipe); // thread<br/>\u00a0<br/>fcn chat(name,socket){\t\t// a thread, one per user<br/>   try{<br/>      socket.write(\"^D to disconnect\\n\");<br/>      while(True){<br/>\t message:=socket.read().text.strip();<br/>\t if(message==\"\\xff\\xec\") break; // ^D to disconnect.<br/>\t broadcast(name, \"%s&gt;\u00a0%s\".fmt(name,message));<br/>      }<br/>   }catch{}  // eg socket pukes<br/>   users.del(name); socket.close(); <br/>   broadcast(name, \"---\u00a0%s leaves ---\".fmt(name));<br/>}<br/>\u00a0<br/>    // Send a message to all users from the given name.<br/>fcn broadcast(name, message){ // called from user thread<br/>   println(message);  // log message to server console<br/>   users.pump(Void,'wrap([(toName,socket)]){<br/>      if(toName\u00a0!= name) try{ socket.write(message + \"\\n\") } catch(IOError){}<br/>   });<br/>}<br/>\u00a0<br/>   // Set up the server socket.<br/>server:=Network.TCPServerSocket.open(PORT);<br/>println(\"Listening on\u00a0%s:%s\".fmt(server.hostname,server.port));<br/>server.listen(pipe);  // Main event loop </pre>"}]}