{"task": "Range_extraction", "blocks": [{"lang": "Ada", "loc": 46, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;            <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Unbounded</span>;  <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Unbounded</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Fixed</span>;      <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Fixed</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Range_Extraction <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">type</span> Sequence <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Integer;<br/>   <span class=\"kw3\">function</span> Image <span class=\"br0\">(</span>S\u00a0: Sequence<span class=\"br0\">)</span> <span class=\"kw1\">return</span> String <span class=\"kw1\">is</span><br/>      Result\u00a0: Unbounded_String;<br/>      From  \u00a0: Integer;<br/>      <span class=\"kw3\">procedure</span> Flush <span class=\"br0\">(</span>To\u00a0: Integer<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">if</span> Length <span class=\"br0\">(</span>Result<span class=\"br0\">)</span> &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            Append <span class=\"br0\">(</span>Result, ','<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         Append <span class=\"br0\">(</span>Result, Trim <span class=\"br0\">(</span>Integer'Image <span class=\"br0\">(</span>From<span class=\"br0\">)</span>, Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Left</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">if</span> From &lt; To <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">if</span> From+<span class=\"nu0\">1</span> = To <span class=\"kw1\">then</span><br/>               Append <span class=\"br0\">(</span>Result, ','<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">else</span><br/>               Append <span class=\"br0\">(</span>Result, '-'<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            Append <span class=\"br0\">(</span>Result, Trim <span class=\"br0\">(</span>Integer'Image <span class=\"br0\">(</span>To<span class=\"br0\">)</span>, Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Left</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> Flush;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> S'Length &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         From\u00a0:= S <span class=\"br0\">(</span>S'First<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> S'First + <span class=\"nu0\">1</span>..<span class=\"me1\">S</span>'Last <span class=\"kw1\">loop</span><br/>            <span class=\"kw1\">if</span> S <span class=\"br0\">(</span>I - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span> /= S <span class=\"br0\">(</span>I<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               Flush <span class=\"br0\">(</span>S <span class=\"br0\">(</span>I - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>               From\u00a0:= S <span class=\"br0\">(</span>I<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         Flush <span class=\"br0\">(</span>S <span class=\"br0\">(</span>S'Last<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">return</span> To_String <span class=\"br0\">(</span>Result<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Image;<br/><span class=\"kw1\">begin</span><br/>   Put_Line<br/>     <span class=\"br0\">(</span>  Image<br/>          <span class=\"br0\">(</span>  <span class=\"br0\">(</span>  <span class=\"nu0\">0</span>,  <span class=\"nu0\">1</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">4</span>,  <span class=\"nu0\">6</span>,  <span class=\"nu0\">7</span>,  <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>,<br/>                <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>,<br/>                <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>,<br/>                <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><br/>             <span class=\"br0\">)</span>  <span class=\"br0\">)</span>  <span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Range_Extraction;</pre>"}, {"lang": "Aime", "loc": 43, "block": "<pre class=\"text highlighted_source\">text<br/>rp(...)<br/>{<br/>    integer i, j;<br/>    data b;<br/>    text f;<br/>\u00a0<br/>    i = 0;<br/>    j = 0;<br/>    while (i &lt; count()) {<br/>        while (j &lt; count() - 1) {<br/>            if (__integer($(j + 1)) == __integer($j) + 1) {<br/>                j += 1;<br/>            } else {<br/>                break;<br/>            }<br/>        }<br/>        if (i + 1 &lt; j) {<br/>            b_form(b, \"%s%d-%d\", f, $i, $j);<br/>            f = \",\";<br/>        } else {<br/>            while (i &lt; j + 1) {<br/>                b_form(b, \"%s%d\", f, $i);<br/>                f = \",\";<br/>                i += 1;<br/>            }<br/>        }<br/>\tj += 1;<br/>\ti = j;<br/>    }<br/>\u00a0<br/>    return b_string(b);<br/>}<br/>\u00a0<br/>integer<br/>main(void)<br/>{<br/>    o_form(\"%s\\n\", rp(0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20,<br/>                      21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>                      37, 38, 39));<br/>\u00a0<br/>    return 0;<br/>}</pre>"}, {"lang": "ALGOL 68", "loc": 54, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\">##</span><span class=\"coMULTI\">#<br/>  REQUIRES(MODE SCALAR, OP(SCALAR,SCALAR)BOOL =, OP(SCALAR,SCALAR)SCALAR +);<br/>#</span><span class=\"coMULTI\">##</span><br/><span class=\"kw4\">MODE</span> SCALARLIST <span class=\"sy1\">=</span> <span class=\"kw4\">FLEX</span><span class=\"br0\">[</span>0<span class=\"br0\">]</span>SCALAR<span class=\"sy1\">;</span><br/><span class=\"kw4\">MODE</span> YIELDINT <span class=\"sy1\">=</span> <span class=\"kw4\">PROC</span><span class=\"br0\">(</span>SCALAR<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><br/><span class=\"coMULTI\"># Declarations for manipulating lists of range pairs [lwb:upb] #</span><br/><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><br/><span class=\"kw4\">MODE</span> RANGE <span class=\"sy1\">=</span> <span class=\"kw6\">STRUCT</span><span class=\"br0\">(</span>SCALAR lwb<span class=\"sy1\">,</span> upb<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">MODE</span> RANGELIST <span class=\"sy1\">=</span> <span class=\"kw4\">FLEX</span><span class=\"br0\">[</span>0<span class=\"br0\">]</span>RANGE<span class=\"sy1\">;</span><br/><span class=\"kw4\">MODE</span> YIELDRANGE <span class=\"sy1\">=</span> <span class=\"kw4\">PROC</span><span class=\"br0\">(</span>RANGE<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> range repr <span class=\"sy1\">=</span> <span class=\"br0\">(</span>RANGE range<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>  <span class=\"kw3\">STRING</span> lwb <span class=\"sy1\">:=</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span>lwb <span class=\"kw6\">OF</span> range<span class=\"sy1\">,</span>0<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">IF</span> lwb <span class=\"kw6\">OF</span> range <span class=\"sy1\">=</span> upb <span class=\"kw6\">OF</span> range <span class=\"kw2\">THEN</span><br/>    lwb<br/>  <span class=\"kw2\">ELSE</span><br/>    <span class=\"coMULTI\"># \"[\"+lwb+\":\"+whole(upb OF range,0)+\"]\"  #</span><br/>    lwb<span class=\"sy1\">+</span><span class=\"st0\">\"-\"</span><span class=\"sy1\">+</span><span class=\"kw22\">whole</span><span class=\"br0\">(</span>upb <span class=\"kw6\">OF</span> range<span class=\"sy1\">,</span>0<span class=\"br0\">)</span><br/>  <span class=\"kw2\">FI</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># OP REPR = (RANGE range)STRING: range repr(range); #</span> <span class=\"coMULTI\"># firmly related to UNIRANGE #</span><br/>\u00a0<br/><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><br/><span class=\"coMULTI\"># Declarations for manipulating lists containing pairs AND lone INTs #</span><br/><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><span class=\"coMULTI\">##</span><br/><span class=\"kw4\">MODE</span> UNIRANGE <span class=\"sy1\">=</span> <span class=\"kw6\">UNION</span><span class=\"br0\">(</span>SCALAR<span class=\"sy1\">,</span> RANGE<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">MODE</span> UNIRANGELIST <span class=\"sy1\">=</span> <span class=\"kw4\">FLEX</span><span class=\"br0\">[</span>0<span class=\"br0\">]</span>UNIRANGE<span class=\"sy1\">;</span><br/><span class=\"kw4\">MODE</span> YIELDUNIRANGE <span class=\"sy1\">=</span> <span class=\"kw4\">PROC</span><span class=\"br0\">(</span>UNIRANGE<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> unirange repr <span class=\"sy1\">=</span> <span class=\"br0\">(</span>UNIRANGE unirange<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span><br/>  <span class=\"kw2\">CASE</span> unirange <span class=\"kw2\">IN</span><br/>    <span class=\"br0\">(</span>RANGE range<span class=\"br0\">)</span><span class=\"sy1\">:</span> range repr<span class=\"br0\">(</span>range<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span>SCALAR scalar<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span>scalar<span class=\"sy1\">,</span>0<span class=\"br0\">)</span><br/>  <span class=\"kw2\">ESAC</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"br0\">(</span>UNIRANGE<span class=\"br0\">)</span><span class=\"kw3\">STRING</span> <span class=\"kw8\">REPR</span> <span class=\"sy1\">=</span> unirange repr<span class=\"sy1\">;</span> <span class=\"coMULTI\"># alias #</span><br/>\u00a0<br/><span class=\"coMULTI\"># The closest thing Algol68 has to inheritance is the UNION #</span><br/><span class=\"kw4\">MODE</span> UNIRANGELISTS <span class=\"sy1\">=</span> <span class=\"kw6\">UNION</span><span class=\"br0\">(</span>UNIRANGELIST<span class=\"sy1\">,</span> RANGELIST<span class=\"sy1\">,</span> SCALARLIST<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> unirange list repr <span class=\"sy1\">=</span> <span class=\"br0\">(</span>UNIRANGELIST unirange list<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/><span class=\"coMULTI\">##</span><span class=\"coMULTI\"># Produce a STRING representation of a UNIRANGELIST #</span><span class=\"coMULTI\">##</span><br/>  <span class=\"kw3\">STRING</span> out <span class=\"coMULTI\">#\u00a0:= \"(\"#</span><span class=\"sy1\">,</span> sep <span class=\"sy1\">:=</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">FOR</span> key <span class=\"kw2\">FROM</span> <span class=\"kw8\">LWB</span> unirange list <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> unirange list <span class=\"kw2\">DO</span><br/>    out <span class=\"sy1\">+:=</span> sep <span class=\"sy1\">+</span> <span class=\"kw8\">REPR</span> unirange list<span class=\"br0\">[</span>key<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    sep <span class=\"sy1\">:=</span> <span class=\"st0\">\",\"</span> <span class=\"coMULTI\"># +\" \" #</span><br/>  <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>  out <span class=\"coMULTI\"># +\")\" #</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"br0\">(</span>UNIRANGELIST<span class=\"br0\">)</span><span class=\"kw3\">STRING</span> <span class=\"kw8\">REPR</span> <span class=\"sy1\">=</span> unirange list repr<span class=\"sy1\">;</span> <span class=\"coMULTI\"># alias #</span></pre>"}, {"lang": "AppleScript", "loc": 103, "block": "<pre class=\"applescript highlighted_source\"><span class=\"co1\">-- rangeFormat\u00a0:: [Int] -&gt; String</span><br/><span class=\"kw3\">on</span> rangeFormat<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">script</span> rangeString<br/>        <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><br/>            <span class=\"kw3\">if</span> length <span class=\"kw3\">of</span> xs &gt; <span class=\"nu0\">2</span> <span class=\"kw3\">then</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">item</span> <span class=\"nu0\">1</span> <span class=\"kw3\">of</span> xs <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">&amp;</span> <span class=\"br0\">(</span><span class=\"kw1\">item</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw3\">of</span> xs <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><span class=\"br0\">)</span><br/>            <span class=\"kw3\">else</span><br/>                intercalate<span class=\"br0\">(</span><span class=\"st0\">\",\"</span>, xs<span class=\"br0\">)</span><br/>            <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>        <span class=\"kw3\">end</span> |\u03bb|<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>    <span class=\"kw3\">script</span> nonConsec<br/>        <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>a, b<span class=\"br0\">)</span><br/>            b <span class=\"sy0\">-</span> a &gt; <span class=\"nu0\">1</span><br/>        <span class=\"kw3\">end</span> |\u03bb|<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>    intercalate<span class=\"br0\">(</span><span class=\"st0\">\",\"</span>, map<span class=\"br0\">(</span>rangeString, splitBy<span class=\"br0\">(</span>nonConsec, xs<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> rangeFormat<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">--TEST ------------------------------------------------------------------------</span><br/><span class=\"kw3\">on</span> <span class=\"kw1\">run</span><br/>    <span class=\"kw3\">set</span> xs <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, \u00ac<br/>        <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, \u00ac<br/>        <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>, <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><span class=\"br0\">}</span><br/>\u00a0<br/>    rangeFormat<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">--&gt; \"0-2,4,6-8,11,12,14-25,27-33,35-39\"</span><br/><span class=\"kw3\">end</span> <span class=\"kw1\">run</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- GENERIC FUNCTIONS ----------------------------------------------------------</span><br/>\u00a0<br/><span class=\"co1\">-- splitBy\u00a0:: (a -&gt; a -&gt; Bool) -&gt; [a] -&gt; [[a]]</span><br/><span class=\"kw3\">on</span> splitBy<span class=\"br0\">(</span>f, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> mf <span class=\"kw3\">to</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw3\">if</span> length <span class=\"kw3\">of</span> xs <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span> <span class=\"kw3\">then</span><br/>        <span class=\"br0\">{</span>xs<span class=\"br0\">}</span><br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">script</span> p<br/>            <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>a, x<span class=\"br0\">)</span><br/>                <span class=\"kw3\">set</span> <span class=\"br0\">{</span>acc, active, prev<span class=\"br0\">}</span> <span class=\"kw3\">to</span> a<br/>                <span class=\"kw3\">if</span> mf<span class=\"co2\">'</span>s |\u03bb|<span class=\"br0\">(</span>prev, x<span class=\"br0\">)</span> <span class=\"kw3\">then</span><br/>                    <span class=\"br0\">{</span>acc <span class=\"sy0\">&amp;</span> <span class=\"br0\">{</span>active<span class=\"br0\">}</span>, <span class=\"br0\">{</span>x<span class=\"br0\">}</span>, x<span class=\"br0\">}</span><br/>                <span class=\"kw3\">else</span><br/>                    <span class=\"br0\">{</span>acc, active <span class=\"sy0\">&amp;</span> x, x<span class=\"br0\">}</span><br/>                <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>            <span class=\"kw3\">end</span> |\u03bb|<br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>        <span class=\"kw3\">set</span> h <span class=\"kw3\">to</span> <span class=\"kw1\">item</span> <span class=\"nu0\">1</span> <span class=\"kw3\">of</span> xs<br/>        <span class=\"kw3\">set</span> lstParts <span class=\"kw3\">to</span> foldl<span class=\"br0\">(</span>p, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span>h<span class=\"br0\">}</span>, h<span class=\"br0\">}</span>, <span class=\"kw1\">items</span> <span class=\"nu0\">2</span> <span class=\"kw2\">thru</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw3\">of</span> xs<span class=\"br0\">)</span><br/>        <span class=\"kw1\">item</span> <span class=\"nu0\">1</span> <span class=\"kw3\">of</span> lstParts <span class=\"sy0\">&amp;</span> <span class=\"br0\">{</span><span class=\"kw1\">item</span> <span class=\"nu0\">2</span> <span class=\"kw3\">of</span> lstParts<span class=\"br0\">}</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> splitBy<br/>\u00a0<br/><span class=\"co1\">-- foldl\u00a0:: (a -&gt; b -&gt; a) -&gt; a -&gt; [b] -&gt; a</span><br/><span class=\"kw3\">on</span> foldl<span class=\"br0\">(</span>f, startValue, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">set</span> v <span class=\"kw3\">to</span> startValue<br/>        <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> length <span class=\"kw3\">of</span> xs<br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> lng<br/>            <span class=\"kw3\">set</span> v <span class=\"kw3\">to</span> |\u03bb|<span class=\"br0\">(</span>v, <span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> xs, i, xs<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>        <span class=\"kw3\">return</span> v<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/><span class=\"kw3\">end</span> foldl<br/>\u00a0<br/><span class=\"co1\">-- map\u00a0:: (a -&gt; b) -&gt; [a] -&gt; [b]</span><br/><span class=\"kw3\">on</span> map<span class=\"br0\">(</span>f, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> length <span class=\"kw3\">of</span> xs<br/>        <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> lng<br/>            <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> |\u03bb|<span class=\"br0\">(</span><span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> xs, i, xs<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>        <span class=\"kw3\">return</span> lst<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/><span class=\"kw3\">end</span> map<br/>\u00a0<br/><span class=\"co1\">-- intercalate\u00a0:: Text -&gt; [Text] -&gt; Text</span><br/><span class=\"kw3\">on</span> intercalate<span class=\"br0\">(</span>strText, lstText<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> <span class=\"br0\">{</span>dlm, <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span><span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span>, strText<span class=\"br0\">}</span><br/>    <span class=\"kw3\">set</span> strJoined <span class=\"kw3\">to</span> lstText <span class=\"kw2\">as</span> <span class=\"kw1\">text</span><br/>    <span class=\"kw3\">set</span> <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> dlm<br/>    <span class=\"kw3\">return</span> strJoined<br/><span class=\"kw3\">end</span> intercalate<br/>\u00a0<br/><span class=\"co1\">-- Lift 2nd class handler function into 1st class script wrapper </span><br/><span class=\"co1\">-- mReturn\u00a0:: Handler -&gt; Script</span><br/><span class=\"kw3\">on</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> class <span class=\"kw3\">of</span> f <span class=\"kw3\">is</span> <span class=\"kw3\">script</span> <span class=\"kw3\">then</span><br/>        f<br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">script</span><br/>            <span class=\"kw3\">property</span> |\u03bb|\u00a0: f<br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> mReturn</pre>"}, {"lang": "AutoHotkey", "loc": 11, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">msgbox</span></a>\u00a0% extract<span class=\"br0\">(</span><span class=\"st0\">\"0,1,2,4,6,7,8,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>extract<span class=\"br0\">(</span> list <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">loop</span></a><span class=\"sy0\">,</span> parse<span class=\"sy0\">,</span> list<span class=\"sy0\">,</span> `<span class=\"sy0\">,,</span> <span class=\"re0\">%A_Tab%</span><span class=\"re0\">%A_Space%</span>`r`n<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"sy0\">+</span><span class=\"nu0\">0</span>\u00a0!<span class=\"sy0\">=</span> p<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            ret <span class=\"sy0\">.=</span> <span class=\"br0\">(</span>f!<span class=\"sy0\">=</span>p\u00a0? <span class=\"br0\">(</span>p<span class=\"sy0\">&gt;</span>f<span class=\"sy0\">+</span><span class=\"nu0\">1</span>\u00a0? <span class=\"st0\">\"-\"</span>\u00a0: <span class=\"st0\">\",\"</span><span class=\"br0\">)</span> p\u00a0: <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"st0\">\",\"</span> f <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>        p <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>ret <span class=\"br0\">(</span>f!<span class=\"sy0\">=</span>p\u00a0? <span class=\"br0\">(</span>p<span class=\"sy0\">&gt;</span>f<span class=\"sy0\">+</span><span class=\"nu0\">1</span>\u00a0? <span class=\"st0\">\"-\"</span>\u00a0: <span class=\"st0\">\",\"</span><span class=\"br0\">)</span> p\u00a0: <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 54, "block": "<pre class=\"awk highlighted_source\"><span class=\"co1\">#!/usr/bin/awk -f</span><br/>\u00a0<br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    delete sequence<br/>    delete range<br/>\u00a0<br/>    seqStr = <span class=\"st0\">\"0,1,2,4,6,7,8,11,12,14,15,16,17,18,19,20,21,22,23,24,\"</span><br/>    seqStr = seqStr <span class=\"st0\">\"25,27,28,29,30,31,32,33,35,36,37,38,39\"</span><br/>    <span class=\"kw5\">print</span> <span class=\"st0\">\"Sequence: \"</span> seqStr<br/>    fillSequence<span class=\"br0\">(</span>seqStr<span class=\"br0\">)</span><br/>    rangeExtract<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    showRange<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    exit<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> rangeExtract<span class=\"br0\">(</span>    runStart, runLen<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    delete range<br/>    runStart = <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span>runStart <span class=\"sy2\">&lt;=</span> <span class=\"kw4\">length</span><span class=\"br0\">(</span>sequence<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        runLen = getSeqRunLen<span class=\"br0\">(</span>runStart<span class=\"br0\">)</span><br/>        addRange<span class=\"br0\">(</span>runStart, runLen<span class=\"br0\">)</span><br/>        runStart <span class=\"sy3\">+</span>= runLen<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> getSeqRunLen<span class=\"br0\">(</span>startPos,    pos<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>pos = startPos; pos <span class=\"sy2\">&lt;</span> <span class=\"kw4\">length</span><span class=\"br0\">(</span>sequence<span class=\"br0\">)</span>; pos<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>sequence<span class=\"br0\">[</span>pos<span class=\"br0\">]</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"sy2\">!=</span> sequence<span class=\"br0\">[</span>pos <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">break</span>;<br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw6\">return</span> pos <span class=\"sy3\">-</span> startPos <span class=\"sy3\">+</span> <span class=\"nu0\">1</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> addRange<span class=\"br0\">(</span>startPos, len,    str<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>len <span class=\"sy2\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> str = sequence<span class=\"br0\">[</span>startPos<span class=\"br0\">]</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>len <span class=\"sy2\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> str = sequence<span class=\"br0\">[</span>startPos<span class=\"br0\">]</span> <span class=\"st0\">\",\"</span> sequence<span class=\"br0\">[</span>startPos <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">else</span> str = sequence<span class=\"br0\">[</span>startPos<span class=\"br0\">]</span> <span class=\"st0\">\"-\"</span> sequence<span class=\"br0\">[</span>startPos <span class=\"sy3\">+</span> len <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    range<span class=\"br0\">[</span><span class=\"kw4\">length</span><span class=\"br0\">(</span>range<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> = str<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> showRange<span class=\"br0\">(</span>    r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw5\">printf</span> <span class=\"st0\">\"  Ranges: \"</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>r = <span class=\"nu0\">1</span>; r <span class=\"sy2\">&lt;=</span> <span class=\"kw4\">length</span><span class=\"br0\">(</span>range<span class=\"br0\">)</span>; r<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy2\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw5\">printf</span> <span class=\"st0\">\",\"</span><br/>        <span class=\"kw5\">printf</span> range<span class=\"br0\">[</span>r<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw5\">printf</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> fillSequence<span class=\"br0\">(</span>seqStr,    n, s<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    n = <span class=\"kw4\">split</span><span class=\"br0\">(</span>seqStr,a,<span class=\"sy3\">/</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span><span class=\"sy3\">+/</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>s = <span class=\"nu0\">1</span>; s <span class=\"sy2\">&lt;=</span> n; s<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        sequence<span class=\"br0\">[</span>s<span class=\"br0\">]</span> = a<span class=\"br0\">[</span>s<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "BBC BASIC", "loc": 26, "block": "<pre class=\"text highlighted_source\">      range$ = \" 0,  1,  2,  4,  6,  7,  8, 11, 12, 14, \" + \\<br/>      \\        \"15, 16, 17, 18, 19, 20, 21, 22, 23, 24, \" + \\<br/>      \\        \"25, 27, 28, 29, 30, 31, 32, 33, 35, 36, \" + \\<br/>      \\        \"37, 38, 39\"<br/>      PRINT FNrangeextract(range$)<br/>      END<br/>\u00a0<br/>      DEF FNrangeextract(r$)<br/>      LOCAL f%, i%, r%, t%, t$<br/>      f% = VAL(r$)<br/>      REPEAT<br/>        i% = INSTR(r$, \",\", i%+1)<br/>        t% = VALMID$(r$, i%+1)<br/>        IF t% = f% + r% + 1 THEN<br/>          r% += 1<br/>        ELSE<br/>          CASE r% OF<br/>            WHEN 0: t$ += STR$(f%) + \",\"<br/>            WHEN 1: t$ += STR$(f%) + \",\" + STR$(f% + r%) + \",\"<br/>            OTHERWISE: t$ += STR$(f%) + \"-\" + STR$(f% + r%) + \",\"<br/>          ENDCASE<br/>          r% = 0<br/>          f% = t%<br/>        ENDIF<br/>      UNTIL i% = 0<br/>      = LEFT$(t$)</pre>"}, {"lang": "Bracmat", "loc": 51, "block": "<pre class=\"text highlighted_source\">  ( rangeExtract<br/>  =     accumulator firstInRange nextInRange<br/>      , accumulate fasten rangePattern<br/>    .   ( accumulate<br/>        =    \u00a0!accumulator<br/>              (!accumulator:|?&amp;\",\")<br/>             \u00a0!firstInRange<br/>              (  \u00a0!firstInRange+1:&lt;&gt;!nextInRange<br/>                &amp;   (\u00a0!firstInRange+2:!nextInRange&amp;\",\"<br/>                    | \"-\"<br/>                    )<br/>                    -1+!nextInRange<br/>              | <br/>              )<br/>         \u00a0:\u00a0?accumulator<br/>        )<br/>      &amp; ( fasten<br/>        = [%(\u00a0!accumulate<br/>            &amp; (!sjt:?firstInRange)+1:?nextInRange<br/>            )<br/>        )<br/>      &amp; ( rangePattern<br/>        =   ( <br/>            |  \u00a0?<br/>                (\u00a0!nextInRange<br/>                &amp; 1+!nextInRange:?nextInRange<br/>                )<br/>            )<br/>            ( &amp;!accumulate<br/>            | (#&lt;&gt;!nextInRange:!fasten)\u00a0!rangePattern<br/>            )<br/>        )<br/>      &amp;\u00a0:?accumulator:?firstInRange<br/>      &amp;\u00a0!arg:(|#!fasten\u00a0!rangePattern)<br/>      &amp; str$!accumulator<br/>  )<br/>&amp; ( test<br/>  =   L A<br/>    .   put$(!arg \" ==&gt;\\n\",LIN)<br/>      &amp; (  \u00a0!arg:(?,?)<br/>          &amp; whl'(!arg:(?A,?arg)&amp;(!A,!L):?L)<br/>          &amp; whl'(!L:(?A,?L)&amp;!A\u00a0!arg:?arg)<br/>        | <br/>        )<br/>      &amp; out$(rangeExtract$!arg)<br/>  )<br/>&amp;   test<br/>  $ (0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>    15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>    25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>    37, 38, 39)</pre>"}, {"lang": "C", "loc": 36, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">size_t</span> rprint<span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span>s<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> len<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/><span class=\"co2\">#define sep (a &gt; s\u00a0? \",\"\u00a0: \"\") /* use comma except before first output */</span><br/><span class=\"co2\">#define ol (s\u00a0? 100\u00a0: 0)       /* print only if not testing for length */</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">char</span> <span class=\"sy0\">*</span>a <span class=\"sy0\">=</span> s<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> len <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> x<span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> x<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> j<span class=\"br0\">)</span><br/>\t\t\ta <span class=\"sy0\">+=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/snprintf.html\"><span class=\"kw3\">snprintf</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">?</span>a<span class=\"sy0\">:</span>s<span class=\"sy0\">,</span> ol<span class=\"sy0\">,</span> <span class=\"st0\">\"%s%d-%d\"</span><span class=\"sy0\">,</span> sep<span class=\"sy0\">,</span> x<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> x<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">else</span><br/>\t\t\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;=</span> j<span class=\"br0\">)</span><br/>\t\t\t\ta <span class=\"sy0\">+=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/snprintf.html\"><span class=\"kw3\">snprintf</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">?</span>a<span class=\"sy0\">:</span>s<span class=\"sy0\">,</span> ol<span class=\"sy0\">,</span> <span class=\"st0\">\"%s%d\"</span><span class=\"sy0\">,</span> sep<span class=\"sy0\">,</span> x<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> a <span class=\"sy0\">-</span> s<span class=\"sy0\">;</span><br/><span class=\"co2\">#undef sep</span><br/><span class=\"co2\">#undef ol</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> x<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span>\t<span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"nu0\">35</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"nu0\">37</span><span class=\"sy0\">,</span> <span class=\"nu0\">38</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw4\">char</span> <span class=\"sy0\">*</span>s <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span>rprint<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\trprint<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 55, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;iterator&gt;</span><br/><span class=\"co2\">#include &lt;cstddef&gt;</span><br/>\u00a0<br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">typename</span> InIter<span class=\"sy1\">&gt;</span><br/> <span class=\"kw4\">void</span> extract_ranges<span class=\"br0\">(</span>InIter begin, InIter end, std<span class=\"sy4\">::</span><span class=\"me2\">ostream</span><span class=\"sy3\">&amp;</span> os<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>begin <span class=\"sy1\">==</span> end<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">int</span> current <span class=\"sy1\">=</span> <span class=\"sy2\">*</span>begin<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>  os <span class=\"sy1\">&lt;&lt;</span> current<span class=\"sy4\">;</span><br/>  <span class=\"kw4\">int</span> count <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>begin <span class=\"sy3\">!</span><span class=\"sy1\">=</span> end<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> next <span class=\"sy1\">=</span> <span class=\"sy2\">*</span>begin<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>next <span class=\"sy1\">==</span> current<span class=\"sy2\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"sy2\">++</span>count<span class=\"sy4\">;</span><br/>    <span class=\"kw1\">else</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>count <span class=\"sy1\">&gt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>        os <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">'-'</span><span class=\"sy4\">;</span><br/>      <span class=\"kw1\">else</span><br/>        os <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">','</span><span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>count <span class=\"sy1\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        os <span class=\"sy1\">&lt;&lt;</span> current <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">','</span><span class=\"sy4\">;</span><br/>      os <span class=\"sy1\">&lt;&lt;</span> next<span class=\"sy4\">;</span><br/>      count <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    current <span class=\"sy1\">=</span> next<span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>count <span class=\"sy1\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    os <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span>count <span class=\"sy1\">&gt;</span> <span class=\"nu0\">2</span><span class=\"sy4\">?</span> <span class=\"st0\">'-'</span> <span class=\"sy4\">:</span> <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> current<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">typename</span> T, std<span class=\"sy4\">::</span><span class=\"kw4\">size_t</span> n<span class=\"sy1\">&gt;</span><br/> T<span class=\"sy2\">*</span> end<span class=\"br0\">(</span>T <span class=\"br0\">(</span><span class=\"sy3\">&amp;</span>array<span class=\"br0\">)</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> array<span class=\"sy2\">+</span>n<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> data<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span>,  <span class=\"nu0\">1</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">4</span>,  <span class=\"nu0\">6</span>,  <span class=\"nu0\">7</span>,  <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>,<br/>                 <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>,<br/>                 <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>,<br/>                 <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span> <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  extract_ranges<span class=\"br0\">(</span>data, end<span class=\"br0\">(</span>data<span class=\"br0\">)</span>, std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 59, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> RangeExtraction<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">const</span> <span class=\"kw4\">string</span> testString <span class=\"sy0\">=</span> <span class=\"st0\">\"0,  1,  2,  4,  6,  7,  8, 11, 12, 14,15, 16, 17, 18, 19, 20, 21, 22, 23, 24,25, 27, 28, 29, 30, 31, 32, 33, 35, 36,37, 38, 39\"</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> result <span class=\"sy0\">=</span> <span class=\"kw4\">String</span><span class=\"sy0\">.</span><span class=\"kw1\">Join</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span>, RangesToStrings<span class=\"br0\">(</span>GetRanges<span class=\"br0\">(</span>testString<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Console<span class=\"sy0\">.</span><span class=\"kw1\">Out</span><span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>result<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> IEnumerable<span class=\"sy0\">&lt;</span>IEnumerable<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;&gt;</span> GetRanges<span class=\"br0\">(</span><span class=\"kw4\">string</span> testString<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> numbers <span class=\"sy0\">=</span> testString<span class=\"sy0\">.</span><span class=\"me1\">Split</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">{</span> <span class=\"st0\">','</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw1\">Select</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> current <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> n <span class=\"kw1\">in</span> numbers<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current<span class=\"sy0\">.</span><span class=\"me1\">Count</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                current<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current<span class=\"sy0\">.</span><span class=\"me1\">Max</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">==</span> n<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    current<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> current<span class=\"sy0\">;</span><br/>                    current <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span> n <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> current<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> IEnumerable<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span> RangesToStrings<span class=\"br0\">(</span>IEnumerable<span class=\"sy0\">&lt;</span>IEnumerable<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;&gt;</span> ranges<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> range <span class=\"kw1\">in</span> ranges<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>range<span class=\"sy0\">.</span><span class=\"me1\">Count</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> range<span class=\"sy0\">.</span><span class=\"me1\">Single</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>range<span class=\"sy0\">.</span><span class=\"me1\">Count</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> range<span class=\"sy0\">.</span><span class=\"me1\">Min</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\",\"</span> <span class=\"sy0\">+</span> range<span class=\"sy0\">.</span><span class=\"me1\">Max</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> range<span class=\"sy0\">.</span><span class=\"me1\">Min</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">+</span> range<span class=\"sy0\">.</span><span class=\"me1\">Max</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Ceylon", "loc": 44, "block": "<pre class=\"text highlighted_source\">shared void run() {<br/>\u00a0<br/>\tvalue numbers = [<br/>\t\t0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>\t\t15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>\t\t25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>\t\t37, 38, 39<br/>\t];<br/>\u00a0<br/>\tfunction asRangeFormattedString&lt;Value&gt;([Value*] values) <br/>\t\t\tgiven Value satisfies Enumerable&lt;Value&gt; {<br/>\u00a0<br/>\t\tvalue builder = StringBuilder();<br/>\u00a0<br/>\t\tvoid append(Range&lt;Value&gt; range) {<br/>\t\t\tif(!builder.empty) {<br/>\t\t\t\tbuilder.append(\",\");<br/>\t\t\t}<br/>\t\t\tif(1 &lt;= range.size &lt; 3) {<br/>\t\t\t\tbuilder.append(\",\".join(range));<br/>\t\t\t} else {<br/>\t\t\t\tbuilder.append(\"``range.first``-``range.last``\");<br/>\t\t\t}<br/>\t\t}<br/>\u00a0<br/>\t\tif(nonempty values) {<br/>\t\t\tvariable value currentRange = values.first..values.first;<br/>\t\t\tfor(val in values.rest) {<br/>\t\t\t\tif(currentRange.last.successor == val) {<br/>\t\t\t\t\tcurrentRange = currentRange.first..val;<br/>\t\t\t\t} else {<br/>\t\t\t\t\tappend(currentRange);<br/>\t\t\t\t\tcurrentRange = val..val;<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t\tappend(currentRange);<br/>\t\t}<br/>\t\treturn builder.string;<br/>\t}<br/>\u00a0<br/>\tvalue rangeString = asRangeFormattedString(numbers);<br/>\tassert(rangeString == \"0-2,4,6-8,11,12,14-25,27-33,35-39\");<br/>\tprint(rangeString);<br/>}</pre>"}, {"lang": "Clojure", "loc": 16, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span>use '<span class=\"br0\">[</span>flatland<span class=\"sy0\">.</span>useful<span class=\"sy0\">.</span>seq\u00a0:<span class=\"me1\">only</span> <span class=\"br0\">(</span>partition<span class=\"sy0\">-</span>between<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> nonconsecutive? <span class=\"br0\">[</span><span class=\"br0\">[</span>x y<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">not</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">inc</span> x<span class=\"br0\">)</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> string<span class=\"sy0\">-</span>ranges <span class=\"br0\">[</span>coll<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>left <span class=\"br0\">(</span><span class=\"kw1\">first</span> coll<span class=\"br0\">)</span><br/>        size <span class=\"br0\">(</span><span class=\"kw1\">count</span> coll<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> size <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">str</span> left <span class=\"st0\">\"-\"</span> <span class=\"br0\">(</span>last coll<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">=</span> size <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">str</span> left <span class=\"st0\">\",\"</span> <span class=\"br0\">(</span>last coll<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     \u00a0:<span class=\"me1\">else</span> <span class=\"br0\">(</span><span class=\"kw1\">str</span> left<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> format<span class=\"sy0\">-</span>with<span class=\"sy0\">-</span>ranges <span class=\"br0\">[</span>coll<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span>println <span class=\"br0\">(</span>clojure<span class=\"sy0\">.</span>string<span class=\"sy0\">/</span>join <span class=\"st0\">\",\"</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">map</span> string<span class=\"sy0\">-</span>ranges <span class=\"br0\">(</span>partition<span class=\"sy0\">-</span>between nonconsecutive? coll<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 180, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> extract-range-task<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  data-str                <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span> <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"0,  1,  2,  4,  6,\"</span><br/>           &amp; <span class=\"st0\">\" 7,  8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, \"</span><br/>           &amp; <span class=\"st0\">\"24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  result                  <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"extract-range\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> data-str<span class=\"sy0\">,</span> <span class=\"kw3\">REFERENCE</span> result<br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>result<span class=\"br0\">)</span><br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> extract-range-task<span class=\"sy0\">.</span><br/>\u00a0<br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> extract-<span class=\"kw4\">range</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       LOCAL-STORAGE <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw2\">COPY</span> <span class=\"st0\">\"nums-table.cpy\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  difference              <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  rng-begin               <span class=\"kw3\">PIC</span> S999<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  rng-<span class=\"kw3\">end</span>                 <span class=\"kw3\">PIC</span> S999<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  num-<span class=\"kw3\">trailing</span>            <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  trailing-comma-pos      <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  nums-str                <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  extracted-<span class=\"kw4\">range</span>         <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  extracted-range-len     CONSTANT <span class=\"kw4\">LENGTH</span> extracted-<span class=\"kw4\">range</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> nums-str<span class=\"sy0\">,</span> extracted-<span class=\"kw4\">range</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"split-nums\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> nums-str<span class=\"sy0\">,</span> <span class=\"st0\">\", \"</span><span class=\"sy0\">,</span><br/>               <span class=\"kw3\">REFERENCE</span> nums-<span class=\"kw3\">table</span><br/>\u00a0<br/>           *&gt; Process the <span class=\"kw3\">table</span><br/>           <span class=\"kw2\">MOVE</span> nums <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">TO</span> rng-begin<br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> nums-idx <span class=\"kw3\">FROM</span> <span class=\"nu0\">2</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span><br/>                   <span class=\"kw2\">UNTIL</span> num-nums &lt; nums-idx<br/>               <span class=\"kw3\">SUBTRACT</span> nums <span class=\"br0\">(</span>nums-idx<span class=\"sy0\"> - </span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw3\">FROM</span> nums <span class=\"br0\">(</span>nums-idx<span class=\"br0\">)</span><br/>                   <span class=\"kw2\">GIVING</span> difference<br/>\u00a0<br/>               *&gt; <span class=\"kw1\">If</span> <span class=\"kw3\">number</span> <span class=\"kw3\">is</span> more <span class=\"kw3\">than</span> one away <span class=\"kw3\">from</span> the previous one<br/>               *&gt; <span class=\"kw3\">end</span> the <span class=\"kw4\">range</span> <span class=\"kw3\">and</span> <span class=\"kw3\">start</span> a new one<span class=\"sy0\">.</span><br/>               <span class=\"kw1\">IF</span> difference &gt; <span class=\"nu0\">1</span><br/>                   <span class=\"kw2\">MOVE</span> nums <span class=\"br0\">(</span>nums-idx<span class=\"sy0\"> - </span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">TO</span> rng-<span class=\"kw3\">end</span><br/>                   <span class=\"kw2\">CALL</span> <span class=\"st0\">\"add-next-range\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> rng-begin<span class=\"sy0\">,</span><br/>                       rng-<span class=\"kw3\">end</span><span class=\"sy0\">,</span> <span class=\"kw3\">REFERENCE</span> extracted-<span class=\"kw4\">range</span><br/>                   <span class=\"kw2\">MOVE</span> nums <span class=\"br0\">(</span>nums-idx<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> rng-begin<br/>               END-<span class=\"kw1\">IF</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>           *&gt; Process the <span class=\"kw3\">last</span> <span class=\"kw3\">number</span><br/>           <span class=\"kw2\">MOVE</span> nums <span class=\"br0\">(</span>num-nums<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> rng-<span class=\"kw3\">end</span><br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"add-next-range\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> rng-begin<span class=\"sy0\">,</span><br/>               rng-<span class=\"kw3\">end</span><span class=\"sy0\">,</span> <span class=\"kw3\">REFERENCE</span> extracted-<span class=\"kw4\">range</span><br/>\u00a0<br/>           *&gt; Remove <span class=\"kw3\">trailing</span> <span class=\"kw3\">comma</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"find-num-trailing-spaces\"</span><br/>               <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> extracted-<span class=\"kw4\">range</span><span class=\"sy0\">,</span> <span class=\"kw3\">REFERENCE</span> num-<span class=\"kw3\">trailing</span><br/>           <span class=\"kw2\">COMPUTE</span> trailing-comma-pos <span class=\"sy0\">=</span><br/>               extracted-range-len<span class=\"sy0\"> - </span>num-<span class=\"kw3\">trailing</span><br/>           <span class=\"kw2\">MOVE</span> <span class=\"kw3\">SPACE</span> <span class=\"kw2\">TO</span> extracted-<span class=\"kw4\">range</span> <span class=\"br0\">(</span>trailing-comma-pos:<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> split-nums <span class=\"kw3\">INITIAL</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  num-len                 <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  next-num-pos            <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  str                     <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  delim                   <span class=\"kw3\">PIC</span> X <span class=\"kw3\">ANY</span> <span class=\"kw4\">LENGTH</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw2\">COPY</span> <span class=\"st0\">\"nums-table.cpy\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> str<span class=\"sy0\">,</span> delim<span class=\"sy0\">,</span> nums-<span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">INITIALIZE</span> num-nums<br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">UNTIL</span> str <span class=\"sy0\">=</span> <span class=\"kw3\">SPACES</span><br/>               <span class=\"kw2\">INITIALIZE</span> num-len<br/>               <span class=\"kw1\">INSPECT</span> str <span class=\"kw2\">TALLYING</span> num-len <span class=\"kw3\">FOR</span> <span class=\"kw3\">CHARACTERS</span> <span class=\"kw3\">BEFORE</span> delim<br/>\u00a0<br/>               <span class=\"kw2\">ADD</span> <span class=\"nu0\">1</span> <span class=\"kw2\">TO</span> num-nums<br/>\u00a0<br/>               *&gt; <span class=\"kw1\">If</span> there are <span class=\"kw3\">no</span> more instances <span class=\"kw3\">of</span> delim <span class=\"kw3\">in</span> the <span class=\"kw3\">string</span><span class=\"sy0\">,</span><br/>               *&gt; <span class=\"kw2\">add</span> the rest <span class=\"kw3\">of</span> the <span class=\"kw3\">string</span> <span class=\"kw2\">to</span> the <span class=\"kw3\">last</span> element <span class=\"kw3\">of</span> the<br/>               *&gt; <span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>               <span class=\"kw1\">IF</span> num-len <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <br/>                   <span class=\"kw2\">MOVE</span> str <span class=\"kw2\">TO</span> nums <span class=\"br0\">(</span>num-nums<span class=\"br0\">)</span><br/>                   <span class=\"kw2\">EXIT</span> <span class=\"kw2\">PERFORM</span><br/>               <span class=\"kw3\">ELSE</span><br/>                   <span class=\"kw2\">MOVE</span> str <span class=\"br0\">(</span><span class=\"nu0\">1</span>:num-len<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> nums <span class=\"br0\">(</span>num-nums<span class=\"br0\">)</span><br/>                   <span class=\"kw2\">ADD</span> <span class=\"nu0\">3</span> <span class=\"kw2\">TO</span> num-len <span class=\"kw2\">GIVING</span> next-num-pos<br/>                   <span class=\"kw2\">MOVE</span> str <span class=\"br0\">(</span>next-num-pos:<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> str<br/>               END-<span class=\"kw1\">IF</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> split-nums<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> add-next-<span class=\"kw4\">range</span> <span class=\"kw3\">INITIAL</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  num-<span class=\"kw3\">trailing</span>            <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  start-pos               <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  range-len               <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  begin-edited            <span class=\"kw3\">PIC</span> -ZZ9<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  end-edited              <span class=\"kw3\">PIC</span> -ZZ9<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  rng-begin               <span class=\"kw3\">PIC</span> S999<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  rng-<span class=\"kw3\">end</span>                 <span class=\"kw3\">PIC</span> S999<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  extracted-<span class=\"kw4\">range</span>         <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  extracted-range-len     CONSTANT <span class=\"kw4\">LENGTH</span> extracted-<span class=\"kw4\">range</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> rng-begin<span class=\"sy0\">,</span> rng-<span class=\"kw3\">end</span><span class=\"sy0\">,</span> extracted-<span class=\"kw4\">range</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"find-num-trailing-spaces\"</span><br/>               <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> extracted-<span class=\"kw4\">range</span><span class=\"sy0\">,</span> <span class=\"kw3\">REFERENCE</span> num-<span class=\"kw3\">trailing</span><br/>           <span class=\"kw2\">COMPUTE</span> start-pos <span class=\"sy0\">=</span> extracted-range-len<span class=\"sy0\"> - </span>num-<span class=\"kw3\">trailing</span><span class=\"sy0\"> + </span><span class=\"nu0\">1</span><br/>\u00a0<br/>           <span class=\"kw3\">SUBTRACT</span> rng-begin <span class=\"kw3\">FROM</span> rng-<span class=\"kw3\">end</span> <span class=\"kw2\">GIVING</span> range-len<br/>\u00a0<br/>           <span class=\"kw2\">MOVE</span> rng-begin <span class=\"kw2\">TO</span> begin-edited<br/>           <span class=\"kw2\">MOVE</span> rng-<span class=\"kw3\">end</span> <span class=\"kw2\">TO</span> end-edited<br/>\u00a0<br/>           <span class=\"kw2\">EVALUATE</span> <span class=\"kw3\">TRUE</span><br/>               <span class=\"kw3\">WHEN</span> rng-begin <span class=\"sy0\">=</span> rng-<span class=\"kw3\">end</span><br/>                   <span class=\"kw3\">STRING</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>begin-edited<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><br/>                       <span class=\"kw2\">INTO</span> extracted-<span class=\"kw4\">range</span> <span class=\"br0\">(</span>start-pos:<span class=\"br0\">)</span><br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> range-len <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>                   <span class=\"kw3\">STRING</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>begin-edited<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"sy0\">,</span><br/>                       <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>end-edited<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><br/>                       <span class=\"kw2\">INTO</span> extracted-<span class=\"kw4\">range</span> <span class=\"br0\">(</span>start-pos:<span class=\"br0\">)</span><br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> <span class=\"kw3\">OTHER</span><br/>                   <span class=\"kw3\">STRING</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>begin-edited<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-\"</span><span class=\"sy0\">,</span><br/>                         <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>end-edited<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><br/>                         <span class=\"kw2\">INTO</span> extracted-<span class=\"kw4\">range</span> <span class=\"br0\">(</span>start-pos:<span class=\"br0\">)</span><br/>           END-<span class=\"kw2\">EVALUATE</span><br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> add-next-<span class=\"kw4\">range</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> find-num-trailing-<span class=\"kw3\">spaces</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  str                     <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  num-<span class=\"kw3\">trailing</span>            <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> str<span class=\"sy0\">,</span> num-<span class=\"kw3\">trailing</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">INITIALIZE</span> num-<span class=\"kw3\">trailing</span><br/>           <span class=\"kw1\">INSPECT</span> str <span class=\"kw2\">TALLYING</span> num-<span class=\"kw3\">trailing</span> <span class=\"kw3\">FOR</span> <span class=\"kw3\">TRAILING</span> <span class=\"kw3\">SPACES</span><br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> find-num-trailing-<span class=\"kw3\">spaces</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> extract-<span class=\"kw4\">range</span><span class=\"sy0\">.</span></pre>"}, {"lang": "Common Lisp", "loc": 27, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> format-with-ranges <span class=\"br0\">(</span><span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>unless <span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"kw1\">return</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>with-output-to-string <span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>current <span class=\"br0\">(</span>first <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">list</span>    <span class=\"br0\">(</span>rest <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>count   <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">princ</span> current s<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">dolist</span> <span class=\"br0\">(</span>next <span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> next <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ current<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>incf count<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">progn</span> <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> count <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"st0\">\"-\"</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span> s<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> count <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span><span class=\"kw1\">princ</span> current s<span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"st0\">\",\"</span> s<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">princ</span> next s<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">setf</span> count <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">setf</span> current next<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> count <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> count <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"st0\">\"-\"</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span> s<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">princ</span> current s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>CL-USER<span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span>format-with-ranges <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">1</span>  <span class=\"nu0\">2</span>  <span class=\"nu0\">4</span>  <span class=\"nu0\">6</span>  <span class=\"nu0\">7</span>  <span class=\"nu0\">8</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">14</span><br/>                                   <span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span> <span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span><br/>                                   <span class=\"nu0\">25</span> <span class=\"nu0\">27</span> <span class=\"nu0\">28</span> <span class=\"nu0\">29</span> <span class=\"nu0\">30</span> <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">35</span> <span class=\"nu0\">36</span><br/>                                   <span class=\"nu0\">37</span> <span class=\"nu0\">38</span> <span class=\"nu0\">39</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"st0\">\"0-2,4,6-8,11,12,14-25,27-33,35-39\"</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 30, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">conv</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">string</span> rangeExtraction<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> items<span class=\"br0\">)</span><br/><span class=\"kw2\">in</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>items.<span class=\"me1\">isSorted</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw2\">body</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>items.<span class=\"me1\">empty</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> ranges <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>items<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">text</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x<span class=\"sy0\">,</span> <span class=\"kw4\">immutable</span> y<span class=\"sy0\">;</span> items.<span class=\"me1\">zip</span><span class=\"br0\">(</span>items<span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> $<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">==</span> y<span class=\"br0\">)</span><br/>            ranges<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">~=</span> y.<span class=\"me1\">text</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span><br/>            ranges <span class=\"sy0\">~=</span> <span class=\"br0\">[</span>y.<span class=\"me1\">text</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> ranges<br/>           .<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>r <span class=\"sy0\">=&gt;</span> r.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">?</span> r<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">~</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">~</span> r.<span class=\"me1\">back</span> <span class=\"sy0\">:</span> r.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           .<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>data<span class=\"sy0\">;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span><br/>                     <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                    <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                    <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span><br/>                     <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"sy0\">,</span><br/>                     <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"nu0\">35</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span> <span class=\"nu0\">37</span><span class=\"sy0\">,</span> <span class=\"nu0\">38</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        data.<span class=\"me1\">rangeExtraction</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "DWScript", "loc": 25, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">procedure</span> ExtractRanges<span class=\"br0\">(</span><span class=\"kw1\">const</span> values <span class=\"sy1\">:</span> <span class=\"kw1\">array</span> <span class=\"kw1\">of</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">var</span> i<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">while</span> i&lt;values<span class=\"sy1\">.</span><span class=\"me1\">Length</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> i&gt;<span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         Print<span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      Print<span class=\"br0\">(</span>values<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">var</span> j<span class=\"sy1\">:</span><span class=\"sy3\">=</span>i<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">while</span> <span class=\"br0\">(</span>j&lt;values<span class=\"sy1\">.</span><span class=\"me1\">Length</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"br0\">(</span>values<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy3\">=</span>values<span class=\"br0\">[</span>j<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>         <span class=\"kw3\">Inc</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw3\">Dec</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">if</span> j&gt;i <span class=\"kw1\">then</span> <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">if</span> j<span class=\"sy3\">=</span>i<span class=\"sy3\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>            Print<span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">else</span> Print<span class=\"br0\">(</span><span class=\"st0\">'-'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         Print<span class=\"br0\">(</span>values<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      i<span class=\"sy1\">:</span><span class=\"sy3\">=</span>j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>ExtractRanges<span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span>  <span class=\"nu0\">1</span><span class=\"sy1\">,</span>  <span class=\"nu0\">2</span><span class=\"sy1\">,</span>  <span class=\"nu0\">4</span><span class=\"sy1\">,</span>  <span class=\"nu0\">6</span><span class=\"sy1\">,</span>  <span class=\"nu0\">7</span><span class=\"sy1\">,</span>  <span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span><br/>               <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">17</span><span class=\"sy1\">,</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span><br/>               <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">31</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">33</span><span class=\"sy1\">,</span> <span class=\"nu0\">35</span><span class=\"sy1\">,</span> <span class=\"nu0\">36</span><span class=\"sy1\">,</span><br/>               <span class=\"nu0\">37</span><span class=\"sy1\">,</span> <span class=\"nu0\">38</span><span class=\"sy1\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span></pre>"}, {"lang": "E", "loc": 17, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> rex<span class=\"br0\">(</span>numbers <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/List\"><span class=\"kw6\">List</span></a><span class=\"br0\">[</span><a href=\"http://wiki.erights.org/wiki/int\"><span class=\"kw6\">int</span></a><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> region <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>..<span class=\"sy0\">!</span><span class=\"nu0\">0</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> n <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> numbers <span class=\"br0\">{</span> region <span class=\"sy0\">|=</span> n..<span class=\"me1\">n</span> <span class=\"br0\">}</span><br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> ranges <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> interval <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> region.<span class=\"me1\">getSimpleRegions</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> a <span class=\"sy0\">:=</span> interval.<span class=\"me1\">getOptStart</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> b <span class=\"sy0\">:=</span> interval.<span class=\"me1\">getOptBound</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>        ranges with<span class=\"sy0\">=</span> <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>b <span class=\"sy0\">&gt;</span> a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                         <span class=\"st0\">`$a-$b`</span><br/>                     <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>b <span class=\"sy0\">&lt;=&gt;</span> a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                         <span class=\"st0\">`$a,$b`</span><br/>                     <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <span class=\"br0\">{</span> <span class=\"co1\"># b &lt;=&gt; a</span><br/>                         <span class=\"st0\">`$a`</span><br/>                     <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    return <span class=\"st0\">\",\"</span>.<span class=\"me1\">rjoin</span><span class=\"br0\">(</span>ranges<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 26, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> task '<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">4</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">14</span> <span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span> <span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span> <span class=\"nu0\">25</span> <span class=\"nu0\">27</span> <span class=\"nu0\">28</span> <span class=\"nu0\">29</span> <span class=\"nu0\">30</span> <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">35</span> <span class=\"nu0\">36</span> <span class=\"nu0\">37</span> <span class=\"nu0\">38</span> <span class=\"nu0\">39</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; 1- GROUPING</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>group<span class=\"sy0\">-</span>range item acc<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">if</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span>empty? acc<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">!=</span> <span class=\"br0\">(</span><span class=\"kw1\">caar</span> acc<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span> item<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cons</span> <span class=\"br0\">(</span><span class=\"kw1\">cons</span> item item<span class=\"br0\">)</span> acc<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">begin</span>  <span class=\"br0\">(</span>set<span class=\"sy0\">-</span><span class=\"kw1\">car</span><span class=\"sy0\">!</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> acc<span class=\"br0\">)</span> item<span class=\"br0\">)</span> acc<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; intermediate result</span><br/><span class=\"co1\">;; (foldl group-range () task)</span><br/><span class=\"co1\">;; \u2192 ((39 . 35) (33 . 27) (25 . 14) (12 . 11) (8 . 6) (4 . 4) (2 . 0))</span><br/>\u00a0<br/><span class=\"co1\">;; 2- FORMATTING</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>range<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> range<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>from <span class=\"br0\">(</span>rest range<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>to <span class=\"br0\">(</span>first range<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>\t\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> from to<span class=\"br0\">)</span> <span class=\"br0\">(</span>format <span class=\"st0\">\"%d \"</span> from<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> to <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">+</span> from<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"br0\">(</span>format <span class=\"st0\">\"%d,\u00a0%d \"</span> from to<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span><span class=\"kw1\">else</span> <span class=\"br0\">(</span>format <span class=\"st0\">\"%d-%d \"</span> from to<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; 3 - FINAL</span><br/><span class=\"br0\">(</span>string<span class=\"sy0\">-</span>join <span class=\"br0\">(</span><span class=\"kw1\">map</span> range<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span>  <span class=\"br0\">(</span><span class=\"kw1\">reverse</span> <span class=\"br0\">(</span>foldl group<span class=\"sy0\">-</span>range <span class=\"br0\">(</span><span class=\"br0\">)</span> task<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>    \u2192 <span class=\"st0\">\"0-2 ,4 ,6-8 ,11, 12 ,14-25 ,27-33 ,35-39 \"</span><br/>\u00a0</pre>"}, {"lang": "Eiffel", "loc": 74, "block": "<pre class=\"eiffel highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span><br/>\tRANGE<br/>\u00a0<br/><span class=\"kw2\">create</span><br/>\tmake<br/>\u00a0<br/><span class=\"kw1\">feature</span><br/>\tmake<br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\textended_range<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\textended_range <span class=\"sy0\">:=</span> <span class=\"st0\">\"0,  1,  2,  4,  6,  7,  8, 11, 12, 14, \"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"15, 16, 17, 18, 19, 20, 21, 22, 23, 24, \"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"25, 27, 28, 29, 30, 31, 32, 33, 35, 36, \"</span> <span class=\"sy0\">+</span><br/>                \t\t<span class=\"st0\">\"37, 38, 39\"</span><br/>\t\t\tprint<span class=\"br0\">(</span><span class=\"st0\">\"Extended range: \"</span> <span class=\"sy0\">+</span> extended_range <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\tprint<span class=\"br0\">(</span><span class=\"st0\">\"Extracted range: \"</span> <span class=\"sy0\">+</span> extracted_range<span class=\"br0\">(</span>extended_range<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">%N</span><span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw1\">feature</span><br/>\textracted_range<span class=\"br0\">(</span>sequence<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><span class=\"br0\">)</span><span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\telements<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+list&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">LIST</span></a><span class=\"br0\">[</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><span class=\"br0\">]</span><br/>\t\t\tfirst, curr<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><br/>\t\t\tsubrange_size, index<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\tsequence.<span class=\"me1\">replace_substring_all</span> <span class=\"br0\">(</span><span class=\"st0\">\", \"</span>, <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>\t\t\telements <span class=\"sy0\">:=</span> sequence.<span class=\"me1\">split</span> <span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">from</span><br/>\t\t\t\tindex <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><br/>\t\t\t\tfirst <span class=\"sy0\">:=</span> elements.<span class=\"me1\">at</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\tsubrange_size <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span><br/>\t\t\t<span class=\"kw2\">until</span><br/>\t\t\t\tindex <span class=\"sy0\">&gt;</span> elements.<span class=\"me1\">count</span><br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tcurr <span class=\"sy0\">:=</span> elements.<span class=\"me1\">at</span> <span class=\"br0\">(</span>index<span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">if</span> curr.<span class=\"me1\">to_integer</span> <span class=\"sy0\">-</span> first.<span class=\"me1\">to_integer</span> <span class=\"sy0\">-</span> subrange_size <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\t\t\t\t<span class=\"kw2\">then</span><br/>\t\t\t\t\tsubrange_size <span class=\"sy0\">:=</span> subrange_size <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span>first<span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>subrange_size <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"kw2\">then</span><br/>\t\t\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span> <span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span> <span class=\"br0\">(</span><span class=\"st0\">\" - \"</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>subrange_size <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"kw2\">then</span><br/>\t\t\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>first.<span class=\"me1\">to_integer</span> <span class=\"sy0\">+</span> subrange_size<span class=\"br0\">)</span>.<span class=\"me1\">out</span><span class=\"br0\">)</span><br/>\t\t\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span> <span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\t\t\t\t\tfirst <span class=\"sy0\">:=</span> curr<br/>\t\t\t\t\tsubrange_size <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\tindex <span class=\"sy0\">:=</span> index <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span>first<span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>subrange_size <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span> <span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span> <span class=\"br0\">(</span><span class=\"st0\">\" - \"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>subrange_size <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">append</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>first.<span class=\"me1\">to_integer</span> <span class=\"sy0\">+</span> subrange_size<span class=\"br0\">)</span>.<span class=\"me1\">out</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/><span class=\"kw2\">end</span><br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 30, "block": "<pre class=\"text highlighted_source\">defmodule RC do<br/>  def range_extract(list) do<br/>    max = Enum.max(list) + 2<br/>    sorted = Enum.sort([max|list])<br/>    candidate_number = hd(sorted)<br/>    current_number = hd(sorted)<br/>    extract(tl(sorted), candidate_number, current_number, [])<br/>  end<br/>\u00a0<br/>  defp extract([], _, _, range), do: Enum.reverse(range) |&gt; Enum.join(\",\")<br/>  defp extract([next|rest], candidate, current, range) when current+1 &gt;= next do<br/>    extract(rest, candidate, next, range)<br/>  end<br/>  defp extract([next|rest], candidate, current, range) when candidate == current do<br/>    extract(rest, next, next, [to_string(current)|range])<br/>  end<br/>  defp extract([next|rest], candidate, current, range) do<br/>    separator = if candidate+1 == current, do: \",\", else: \"-\"<br/>    str = \"#{candidate}#{separator}#{current}\"<br/>    extract(rest, next, next, [str|range])<br/>  end<br/>end<br/>\u00a0<br/>list = [<br/>   0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>  15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>  25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>  37, 38, 39<br/>]<br/>IO.inspect RC.range_extract(list)</pre>"}, {"lang": "Emacs Lisp", "loc": 17, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(require 'gnus-range)<br/>(defun rangext (lst)<br/>  (mapconcat (lambda (item)<br/>               (if (consp item)<br/>\t\t   (if (= (+ 1 (car item) ) (cdr item) )<br/>\t\t       (format \"%d,%d\" (car item) (cdr item) )<br/>\t\t     (format \"%d-%d\" (car item) (cdr item) ))<br/>                 (format \"%d\" item)))<br/>             (gnus-compress-sequence lst)<br/>             \",\"))<br/>\u00a0<br/>(insert (rangext '(0  1  2  4  6  7  8 11 12 14<br/>           15 16 17 18 19 20 21 22 23 24<br/>           25 27 28 29 30 31 32 33 35 36<br/>           37 38 39) ))<br/>\u00a0</pre>"}, {"lang": "Erlang", "loc": 23, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span> range <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>extraction<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">extraction</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"re5\">H</span> | <span class=\"re5\">T</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"kw4\">is_integer</span><span class=\"br0\">(</span><span class=\"re5\">H</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>        <span class=\"re5\">Reversed_extracts</span> <span class=\"sy3\">=</span> <span class=\"re3\">extraction_acc</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">foldl</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> extraction<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"re5\">H</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"re5\">T</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">reverse</span><span class=\"br0\">(</span><span class=\"re5\">Reversed_extracts</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"st0\">\",\"</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"~p~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re3\">extraction</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span> <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">17</span><span class=\"sy1\">,</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">31</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">33</span><span class=\"sy1\">,</span> <span class=\"nu0\">35</span><span class=\"sy1\">,</span> <span class=\"nu0\">36</span><span class=\"sy1\">,</span> <span class=\"nu0\">37</span><span class=\"sy1\">,</span> <span class=\"nu0\">38</span><span class=\"sy1\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">extraction</span><span class=\"br0\">(</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">N</span> <span class=\"sy3\">=:=</span> <span class=\"re5\">Start</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">extraction</span><span class=\"br0\">(</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span>  <span class=\"sy1\">-&gt;</span> <span class=\"br0\">{</span><span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re3\">extraction_acc</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">extraction</span><span class=\"br0\">(</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Stop</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">N</span> <span class=\"sy3\">=:=</span> <span class=\"re5\">Stop</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">extraction</span><span class=\"br0\">(</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Stop</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">{</span><span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re3\">extraction_acc</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Stop</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">extraction_acc</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> | <span class=\"re5\">Acc</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">extraction_acc</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Stop</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">Stop</span> <span class=\"sy3\">&gt;</span> <span class=\"re5\">Start</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Start</span><span class=\"br0\">)</span> <span class=\"sy3\">++</span> <span class=\"st0\">\"-\"</span> <span class=\"sy3\">++</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Stop</span><span class=\"br0\">)</span> | <span class=\"re5\">Acc</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">extraction_acc</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Stop</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Stop</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Start</span><span class=\"br0\">)</span> | <span class=\"re5\">Acc</span><span class=\"br0\">]</span><span class=\"sy1\">.</span> <span class=\"co1\">% Reversed</span><br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 32, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">function</span> extract_ranges<span class=\"br0\">(</span><span class=\"kw2\">sequence</span> s<span class=\"br0\">)</span><br/>    <span class=\"kw2\">integer</span> first<br/>    <span class=\"kw2\">sequence</span> out<br/>    out <span class=\"sy1\">=</span> <span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">return</span> out<br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    first <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">2</span> <span class=\"kw1\">to</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span>\u00a0!<span class=\"sy1\">=</span> s<span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">if</span> first <span class=\"sy1\">=</span> i<span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>                out <span class=\"sy1\">&amp;=</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d,\"</span><span class=\"sy2\">,</span> s<span class=\"br0\">[</span>first<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">elsif</span> first <span class=\"sy1\">=</span> i<span class=\"sy1\">-</span><span class=\"nu0\">2</span> <span class=\"kw1\">then</span><br/>                out <span class=\"sy1\">&amp;=</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d,%d,\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>s<span class=\"br0\">[</span>first<span class=\"br0\">]</span><span class=\"sy2\">,</span>s<span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">else</span><br/>                out <span class=\"sy1\">&amp;=</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d-%d,\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>s<span class=\"br0\">[</span>first<span class=\"br0\">]</span><span class=\"sy2\">,</span>s<span class=\"br0\">[</span>i<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>            first <span class=\"sy1\">=</span> i<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>    <span class=\"kw1\">if</span> first <span class=\"sy1\">=</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        out <span class=\"sy1\">&amp;=</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy2\">,</span> s<span class=\"br0\">[</span>first<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">elsif</span> first <span class=\"sy1\">=</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>        out <span class=\"sy1\">&amp;=</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d,%d\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>s<span class=\"br0\">[</span>first<span class=\"br0\">]</span><span class=\"sy2\">,</span>s<span class=\"br0\">[</span>$<span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>        out <span class=\"sy1\">&amp;=</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d-%d\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>s<span class=\"br0\">[</span>first<span class=\"br0\">]</span><span class=\"sy2\">,</span>s<span class=\"br0\">[</span>$<span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">return</span> out<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> extract_ranges<span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span> <span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"nu0\">2</span><span class=\"sy2\">,</span> <span class=\"nu0\">4</span><span class=\"sy2\">,</span> <span class=\"nu0\">6</span><span class=\"sy2\">,</span> <span class=\"nu0\">7</span><span class=\"sy2\">,</span> <span class=\"nu0\">8</span><span class=\"sy2\">,</span> <span class=\"nu0\">11</span><span class=\"sy2\">,</span> <span class=\"nu0\">12</span><span class=\"sy2\">,</span> <span class=\"nu0\">14</span><span class=\"sy2\">,</span> <span class=\"nu0\">15</span><span class=\"sy2\">,</span> <span class=\"nu0\">16</span><span class=\"sy2\">,</span> <span class=\"nu0\">17</span><span class=\"sy2\">,</span> <span class=\"nu0\">18</span><span class=\"sy2\">,</span> <span class=\"nu0\">19</span><span class=\"sy2\">,</span><br/>    <span class=\"nu0\">20</span><span class=\"sy2\">,</span> <span class=\"nu0\">21</span><span class=\"sy2\">,</span> <span class=\"nu0\">22</span><span class=\"sy2\">,</span> <span class=\"nu0\">23</span><span class=\"sy2\">,</span> <span class=\"nu0\">24</span><span class=\"sy2\">,</span> <span class=\"nu0\">25</span><span class=\"sy2\">,</span> <span class=\"nu0\">27</span><span class=\"sy2\">,</span> <span class=\"nu0\">28</span><span class=\"sy2\">,</span> <span class=\"nu0\">29</span><span class=\"sy2\">,</span> <span class=\"nu0\">30</span><span class=\"sy2\">,</span> <span class=\"nu0\">31</span><span class=\"sy2\">,</span> <span class=\"nu0\">32</span><span class=\"sy2\">,</span> <span class=\"nu0\">33</span><span class=\"sy2\">,</span> <span class=\"nu0\">35</span><span class=\"sy2\">,</span> <span class=\"nu0\">36</span><span class=\"sy2\">,</span> <span class=\"nu0\">37</span><span class=\"sy2\">,</span> <span class=\"nu0\">38</span><span class=\"sy2\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 24, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> extractRanges <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>  | <span class=\"br0\">[</span><span class=\"br0\">]</span>    <span class=\"sy0\">-&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">empty</span><br/>  | x::xr <span class=\"sy0\">-&gt;</span><br/>      <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> loop ys first last <span class=\"sy0\">=</span> <span class=\"kw4\">seq</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">match</span> ys <span class=\"kw1\">with</span><br/>        | y::yr <span class=\"kw1\">when</span> y <span class=\"sy0\">=</span> last <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> loop yr first y  <span class=\"co1\">// add to current range</span><br/>        | y::yr                   <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield</span> <span class=\"br0\">(</span>first, last<span class=\"br0\">)</span>     <span class=\"co1\">// finish current range</span><br/>                                     <span class=\"kw1\">yield!</span> loop yr y y      <span class=\"co1\">//  and start next</span><br/>        | <span class=\"br0\">[</span><span class=\"br0\">]</span>                      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield</span> <span class=\"br0\">(</span>first, last<span class=\"br0\">)</span> <span class=\"br0\">}</span>   <span class=\"co1\">// finish final range</span><br/>      loop xr x x<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">let</span> rangeToString <span class=\"br0\">(</span>s,e<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">match</span> e<span class=\"sy0\">-</span>s <span class=\"kw1\">with</span><br/>  | <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> sprintf <span class=\"st0\">\"%d\"</span> s<br/>  | <span class=\"nu0\">1</span> <span class=\"sy0\">-&gt;</span> sprintf <span class=\"st0\">\"%d,%d\"</span> s e<br/>  | _ <span class=\"sy0\">-&gt;</span> sprintf <span class=\"st0\">\"%d-%d\"</span> s e<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">let</span> extract <span class=\"sy0\">=</span> extractRanges <span class=\"sy0\">&gt;&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">map</span> rangeToString <span class=\"sy0\">&gt;&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">String</span></a>.<span class=\"me1\">concat</span> <span class=\"st0\">\",\"</span><br/>\u00a0<br/>\u00a0<br/>printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span>extract <span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> <span class=\"nu0\">14</span><span class=\"sy0\">;</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span> <span class=\"nu0\">17</span><span class=\"sy0\">;</span> <span class=\"nu0\">18</span><span class=\"sy0\">;</span> <span class=\"nu0\">19</span><span class=\"sy0\">;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> <span class=\"nu0\">21</span><span class=\"sy0\">;</span><br/>                        <span class=\"nu0\">22</span><span class=\"sy0\">;</span> <span class=\"nu0\">23</span><span class=\"sy0\">;</span> <span class=\"nu0\">24</span><span class=\"sy0\">;</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span> <span class=\"nu0\">27</span><span class=\"sy0\">;</span> <span class=\"nu0\">28</span><span class=\"sy0\">;</span> <span class=\"nu0\">29</span><span class=\"sy0\">;</span> <span class=\"nu0\">30</span><span class=\"sy0\">;</span> <span class=\"nu0\">31</span><span class=\"sy0\">;</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span> <span class=\"nu0\">33</span><span class=\"sy0\">;</span> <span class=\"nu0\">35</span><span class=\"sy0\">;</span> <span class=\"nu0\">36</span><span class=\"sy0\">;</span> <span class=\"nu0\">37</span><span class=\"sy0\">;</span> <span class=\"nu0\">38</span><span class=\"sy0\">;</span> <span class=\"nu0\">39</span> <span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 18, "block": "<pre class=\"text highlighted_source\">USING: formatting io kernel math math.parser sequences<br/>splitting.monotonic\u00a0;<br/>IN: rosetta-code.range-extraction<br/>\u00a0<br/>: make-range ( seq -- str )<br/>    [ first ] [ last ] bi \"%d-%d\" sprintf\u00a0;<br/>\u00a0<br/>: make-atomic ( seq -- str ) [ number&gt;string ] map \",\" join\u00a0;<br/>\u00a0<br/>: extract-range ( seq -- str )<br/>    [ - -1 = ] monotonic-split<br/>    [ dup length 2 &gt; [ make-range ] [ make-atomic ] if ] map<br/>    \",\" join\u00a0;<br/>\u00a0<br/>{<br/>    0 1 2 4 6 7 8 11 12 14 15 16 17 18 19 20 21 22<br/>    23 24 25 27 28 29 30 31 32 33 35 36 37 38 39<br/>} extract-range print</pre>"}, {"lang": "Forth", "loc": 27, "block": "<pre class=\"text highlighted_source\">create values<br/>here<br/>    0 ,  1 ,  2 ,  4 ,  6 ,  7 ,  8 , 11 , 12 , 14 ,<br/>   15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 ,<br/>   25 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 35 , 36 ,<br/>   37 , 38 , 39 ,<br/>here swap - 1 cells / constant /values<br/>\u00a0<br/>: clip 1- swap cell+ swap\u00a0;            \\ reduce array<br/>: .range2 0 .r .\" -\" 0 .r\u00a0;            \\ difference two or more<br/>: .range1 0 .r .\" , \" 0 .r\u00a0;           \\ difference one<br/>: .range0 drop 0 .r\u00a0;                  \\ no difference<br/>                                       \\ select printing routine<br/>create .range ' .range0 , ' .range1 , ' .range2 ,<br/>  does&gt; &gt;r over over - 2 min cells r&gt; + @ execute\u00a0;<br/>\u00a0<br/>: .ranges                              ( a n --)<br/>  over @ dup &gt;r &gt;r                     \\ setup first value<br/>  begin<br/>    clip dup                           \\ check length array<br/>  while<br/>    over @ dup <a class=\"__cf_email__\" data-cfemail=\"dfad9f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> 1+ =                 \\ check if range breaks<br/>    if r&gt; drop &gt;r else r&gt; r&gt; .range .\" , \" dup &gt;r &gt;r then<br/>  repeat 2drop r&gt; r&gt; .range cr         \\ print last range<br/>;<br/>\u00a0<br/>values /values .ranges</pre>"}, {"lang": "Fortran", "loc": 59, "block": "<pre class=\"fortran highlighted_source\">      <span class=\"kw1\">SUBROUTINE</span> IRANGE<span class=\"br0\">(</span>TEXT<span class=\"br0\">)</span>\t<span class=\"co1\">!Identifies integer ranges in a list of integers.</span><br/><span class=\"co1\">Could make this a function, but then a maximum text length returned would have to be specified.</span><br/>       <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> TEXT\t<span class=\"co1\">!The list on input, the list with ranges on output.</span><br/>       <span class=\"kw3\">INTEGER</span> LOTS\t\t<span class=\"co1\">!Once again, how long is a piece of string?</span><br/>       <span class=\"kw3\">PARAMETER</span> <span class=\"br0\">(</span>LOTS <span class=\"sy0\">=</span> <span class=\"nu0\">666</span><span class=\"br0\">)</span>\t<span class=\"co1\">!This should do, at least for demonstrations.</span><br/>       <span class=\"kw3\">INTEGER</span> <span class=\"kw4\">VAL</span><span class=\"br0\">(</span>LOTS<span class=\"br0\">)</span>\t<span class=\"co1\">!The integers of the list.</span><br/>       <span class=\"kw3\">INTEGER</span> N\t\t<span class=\"co1\">!Count of numbers.</span><br/>       <span class=\"kw3\">INTEGER</span> I,I1\t\t<span class=\"co1\">!Steppers.</span><br/>        N <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\t\t<span class=\"co1\">!Presume there to be one number.</span><br/>        <span class=\"kw1\">DO</span> I <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>,<span class=\"kw4\">LEN</span><span class=\"br0\">(</span>TEXT<span class=\"br0\">)</span>\t<span class=\"co1\">!Then by noticing commas,</span><br/>          <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>TEXT<span class=\"br0\">(</span>I<span class=\"sy0\">:</span>I<span class=\"br0\">)</span><span class=\"kw2\">.<span class=\"me1\">EQ</span>.</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span> N <span class=\"sy0\">=</span> N <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>\t<span class=\"co1\">!Determine how many more there are.</span><br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span>\t\t\t<span class=\"co1\">!Step alonmg the text.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>N.<span class=\"me1\">LE</span>.2<span class=\"br0\">)</span> <span class=\"kw1\">RETURN</span>\t<span class=\"co1\">!One comma = two values. Boring.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>N.<span class=\"me1\">GT</span>.<span class=\"me1\">LOTS</span><span class=\"br0\">)</span> <span class=\"kw1\">STOP</span> <span class=\"st0\">\"Too many values!\"</span><br/>        READ <span class=\"br0\">(</span>TEXT,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"kw4\">VAL</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>N<span class=\"br0\">)</span>\t<span class=\"co1\">!Get the numbers, with free-format flexibility.</span><br/>        TEXT <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span>\t\t<span class=\"co1\">!Scrub the parameter!</span><br/>        L <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\t\t\t<span class=\"co1\">!No text has been placed.</span><br/>        I1 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\t\t\t<span class=\"co1\">!Start the scan.</span><br/>   <span class=\"nu0\">10</span>   <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>L.<span class=\"me1\">GT</span>.0<span class=\"br0\">)</span> <span class=\"kw1\">CALL</span> EMIT<span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span>\t<span class=\"co1\">!A comma if there is prior text.</span><br/>        <span class=\"kw1\">CALL</span> SPLOT<span class=\"br0\">(</span><span class=\"kw4\">VAL</span><span class=\"br0\">(</span>I1<span class=\"br0\">)</span><span class=\"br0\">)</span>\t\t<span class=\"co1\">!The first number always appears.</span><br/>        <span class=\"kw1\">DO</span> I <span class=\"sy0\">=</span> I1 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>,N\t\t\t<span class=\"co1\">!Now probe ahead</span><br/>          <span class=\"kw1\">IF</span> <span class=\"br0\">(</span><span class=\"kw4\">VAL</span><span class=\"br0\">(</span>I <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw2\">.<span class=\"me1\">NE</span>.</span> <span class=\"kw4\">VAL</span><span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">EXIT</span>\t<span class=\"co1\">!While values are consecutive.</span><br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span>\t\t\t\t<span class=\"co1\">!Up to the end of the remaining list.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>I <span class=\"sy0\">-</span> I1 <span class=\"kw2\">.<span class=\"me1\">GT</span>.</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span>\t\t<span class=\"co1\">!More than two consecutive values seen?</span><br/>          <span class=\"kw1\">CALL</span> EMIT<span class=\"br0\">(</span><span class=\"st0\">\"-\"</span><span class=\"br0\">)</span>\t\t<span class=\"co1\">!Yes!</span><br/>          <span class=\"kw1\">CALL</span> SPLOT<span class=\"br0\">(</span><span class=\"kw4\">VAL</span><span class=\"br0\">(</span>I <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\t<span class=\"co1\">!The ending number of a range.</span><br/>          I1 <span class=\"sy0\">=</span> I\t\t\t<span class=\"co1\">!Finger the first beyond the run.</span><br/>         <span class=\"kw1\">ELSE</span>\t\t\t<span class=\"co1\">!But if too few to be worth a span,</span><br/>          I1 <span class=\"sy0\">=</span> I1 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>\t\t\t<span class=\"co1\">!Just finger the next number.</span><br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">IF</span>\t\t\t<span class=\"co1\">!So much for that starter.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>I.<span class=\"me1\">LE</span>.<span class=\"me1\">N</span><span class=\"br0\">)</span> <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">10</span>\t<span class=\"co1\">!Any more?</span><br/>       <span class=\"kw1\">CONTAINS</span>\t\t<span class=\"co1\">!Some assistants to save on repetition.</span><br/>        <span class=\"kw1\">SUBROUTINE</span> EMIT<span class=\"br0\">(</span>C<span class=\"br0\">)</span>\t<span class=\"co1\">!Rolls forth one character.</span><br/>         <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"nu0\">1</span> C\t\t<span class=\"co1\">!The character.</span><br/>          L <span class=\"sy0\">=</span> L <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>\t\t<span class=\"co1\">!Advance the finger.</span><br/>          <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>L.<span class=\"me1\">GT</span>.<span class=\"kw4\">LEN</span><span class=\"br0\">(</span>TEXT<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">STOP</span> <span class=\"st0\">\"Ran out of text!\"</span>\t<span class=\"co1\">!Maybe not.</span><br/>          TEXT<span class=\"br0\">(</span>L<span class=\"sy0\">:</span>L<span class=\"br0\">)</span> <span class=\"sy0\">=</span> C\t\t<span class=\"co1\">!And place the character.</span><br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">SUBROUTINE</span> EMIT\t<span class=\"co1\">!That was simple.</span><br/>        <span class=\"kw1\">SUBROUTINE</span> SPLOT<span class=\"br0\">(</span>N<span class=\"br0\">)</span>\t<span class=\"co1\">!Rolls forth a signed number.</span><br/>         <span class=\"kw3\">INTEGER</span> N\t\t<span class=\"co1\">!The number.</span><br/>         <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"nu0\">12</span> FIELD\t<span class=\"co1\">!Sufficient for 32-bit integers.</span><br/>         <span class=\"kw3\">INTEGER</span> I\t\t<span class=\"co1\">!A stepper.</span><br/>          WRITE <span class=\"br0\">(</span>FIELD,<span class=\"st0\">\"(I0)\"</span><span class=\"br0\">)</span> N<span class=\"co1\">!Roll the number, with trailing spaces.</span><br/>          <span class=\"kw1\">DO</span> I <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">12</span>\t\t<span class=\"co1\">!Now transfer the text of the number.</span><br/>            <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>FIELD<span class=\"br0\">(</span>I<span class=\"sy0\">:</span>I<span class=\"br0\">)</span><span class=\"kw2\">.<span class=\"me1\">LE</span>.</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"kw1\">EXIT</span>\t<span class=\"co1\">!Up to the first space.</span><br/>            <span class=\"kw1\">CALL</span> EMIT<span class=\"br0\">(</span>FIELD<span class=\"br0\">(</span>I<span class=\"sy0\">:</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span>\t<span class=\"co1\">!One by one.</span><br/>          <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span>\t\t<span class=\"co1\">!On to the end.</span><br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">SUBROUTINE</span> SPLOT\t<span class=\"co1\">!Not so difficult either.</span><br/>      <span class=\"kw1\">END</span>\t<span class=\"co1\">!So much for IRANGE.</span><br/>\u00a0<br/>      <span class=\"kw1\">PROGRAM</span> POKE<br/>      <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span> SOME<br/>      SOME <span class=\"sy0\">=</span> <span class=\"st0\">\"  0,  1,  2,  4,  6,  7,  8, 11, 12, 14,  \"</span><br/>     <span class=\"nu0\">1</span>      <span class=\"sy0\">//</span><span class=\"st0\">\"  15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\"</span><br/>     <span class=\"nu0\">2</span>      <span class=\"sy0\">//</span><span class=\"st0\">\"25, 27, 28, 29, 30, 31, 32, 33, 35, 36,  \"</span><br/>     <span class=\"nu0\">3</span>      <span class=\"sy0\">//</span><span class=\"st0\">\"37, 38, 39                               \"</span><br/>      <span class=\"kw1\">CALL</span> IRANGE<span class=\"br0\">(</span>SOME<span class=\"br0\">)</span><br/>      WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> SOME<br/>      <span class=\"kw1\">END</span></pre>"}, {"lang": "FreeBASIC", "loc": 46, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> formatRange <span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/>  <span class=\"kw1\">Dim</span> lb <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">LBound</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Dim</span> ub <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">UBound</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> ub = - <span class=\"nu0\">1</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw1\">If</span> lb = ub <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>lb<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Dim</span> rangeCount <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Dim</span> range <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>lb<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = lb + <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> ub<br/>    <span class=\"kw1\">If</span> a<span class=\"br0\">(</span>i<span class=\"br0\">)</span> = a<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span> <span class=\"kw1\">Then</span><br/>      rangeCount += <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">ElseIf</span> rangeCount = <span class=\"nu0\">1</span> <span class=\"kw1\">Then</span><br/>      range += <span class=\"st0\">\",\"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">ElseIf</span> rangeCount = <span class=\"nu0\">2</span> <span class=\"kw1\">Then</span><br/>      rangeCount = <span class=\"nu0\">1</span><br/>      range += <span class=\"st0\">\",\"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>i-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> + <span class=\"st0\">\",\"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span>  <br/>    <span class=\"kw1\">Else</span><br/>      rangeCount = <span class=\"nu0\">1</span><br/>      range += <span class=\"st0\">\"-\"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>i-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> + <span class=\"st0\">\",\"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span>    <br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">If</span> rangeCount = <span class=\"nu0\">2</span> <span class=\"kw1\">Then</span> <br/>    range += <span class=\"st0\">\",\"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>ub<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ElseIf</span> rangeCount &gt; <span class=\"nu0\">2</span> <span class=\"kw1\">Then</span><br/>    range += <span class=\"st0\">\"-\"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>ub<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span>      <br/>  <span class=\"kw1\">Return</span> range<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"br0\">{</span>-<span class=\"nu0\">6</span>, -<span class=\"nu0\">3</span>, -<span class=\"nu0\">2</span>, -<span class=\"nu0\">1</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span><br/><span class=\"kw1\">Print</span> formatRange<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> b<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">33</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> =&gt; _<br/><span class=\"br0\">{</span> _<br/>   <span class=\"nu0\">0</span>,  <span class=\"nu0\">1</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">4</span>,  <span class=\"nu0\">6</span>,  <span class=\"nu0\">7</span>,  <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>, _<br/>  <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>, _<br/>  <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>, _<br/>  <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span> _<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Print</span> formatRange<span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to continue\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Gambas", "loc": 51, "block": "<pre class=\"gambas highlighted_source\">siInput <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span><br/>siInput1 <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>, <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><span class=\"br0\">]</span><br/>siInput2 <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span><span class=\"br0\">]</span> <br/>sOutput <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span><br/>siCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/>siNum <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/><span class=\"co1\">'__________________</span><br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siLoop <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siLoop <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">1</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siLoop <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> siInput <span class=\"sy0\">=</span> siInput1.<a href=\"http://gambasdoc.org/help/lang/copy\"><span class=\"kw1\">Copy</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/else\"><span class=\"kw1\">Else</span></a> siInput <span class=\"sy0\">=</span> siInput2.<a href=\"http://gambasdoc.org/help/lang/copy\"><span class=\"kw1\">Copy</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  siCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  siNum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://gambasdoc.org/help/lang/repeat\"><span class=\"kw1\">Repeat</span></a><br/>      <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siInput<span class=\"br0\">[</span>siCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> siInput<span class=\"br0\">[</span>siCount<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a><br/>        <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> siCount<br/>      <a href=\"http://gambasdoc.org/help/lang/else\"><span class=\"kw1\">Else</span></a><br/>        GetOutput<br/>      <a href=\"http://gambasdoc.org/help/lang/endif\"><span class=\"kw1\">Endif</span></a><br/>    <a href=\"http://gambasdoc.org/help/lang/until\"><span class=\"kw1\">Until</span></a> siCount <span class=\"sy0\">=</span> siInput.<a href=\"http://gambasdoc.org/help/lang/max\"><span class=\"kw2\">Max</span></a><br/>\u00a0<br/>  GetOutput<br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> sOutput.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>  sOutput.<span class=\"me1\">clear</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/><span class=\"co1\">'__________________</span><br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> GetOutput<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siNum <span class=\"sy0\">=</span> siCount <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <br/>  sOutput.<span class=\"me1\">add</span><span class=\"br0\">(</span>siInput<span class=\"br0\">[</span>siNum<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> siCount<br/>  siNum <span class=\"sy0\">=</span> siCount<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siNum <span class=\"sy0\">&lt;&gt;</span> siCount <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siNum <span class=\"sy0\">=</span> siCount <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a><br/>    sOutput.<span class=\"me1\">add</span><span class=\"br0\">(</span>siInput<span class=\"br0\">[</span>siNum<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    sOutput.<span class=\"me1\">add</span><span class=\"br0\">(</span>siInput<span class=\"br0\">[</span>siNum <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    siCount <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><br/>    siNum <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><br/>    <a href=\"http://gambasdoc.org/help/lang/return\"><span class=\"kw1\">Return</span></a><br/>  <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>  sOutput.<span class=\"me1\">Add</span><span class=\"br0\">(</span>siInput<span class=\"br0\">[</span>siNum<span class=\"br0\">]</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">&amp;</span> siInput<span class=\"br0\">[</span>siCount<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> siCount<br/>  siNum <span class=\"sy0\">=</span> siCount<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 55, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"errors\"</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"strconv\"</span><br/>    <span class=\"st0\">\"strings\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    rf<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> rangeFormat<span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><br/>        <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span><br/>        <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">17</span><span class=\"sy1\">,</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span><br/>        <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">31</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">33</span><span class=\"sy1\">,</span> <span class=\"nu0\">35</span><span class=\"sy1\">,</span> <span class=\"nu0\">36</span><span class=\"sy1\">,</span><br/>        <span class=\"nu0\">37</span><span class=\"sy1\">,</span> <span class=\"nu0\">38</span><span class=\"sy1\">,</span> <span class=\"nu0\">39</span><span class=\"sy1\">,</span><br/>    <span class=\"sy1\">})</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"range format:\"</span><span class=\"sy1\">,</span> rf<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> rangeFormat<span class=\"sy1\">(</span>a <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span><span class=\"kw4\">string</span><span class=\"sy1\">,</span> error<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>a<span class=\"sy1\">)</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> <span class=\"kw2\">nil</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">var</span> parts <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><br/>    <span class=\"kw1\">for</span> n1 <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"sy1\">;</span> <span class=\"sy1\">{</span><br/>        n2 <span class=\"sy2\">:=</span> n1 <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">for</span> n2 &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>a<span class=\"sy1\">)</span> &amp;&amp; a<span class=\"sy1\">[</span>n2<span class=\"sy1\">]</span> <span class=\"sy3\">==</span> a<span class=\"sy1\">[</span>n2<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span> <span class=\"sy1\">{</span><br/>            n2<span class=\"sy2\">++</span><br/>        <span class=\"sy1\">}</span><br/>        s <span class=\"sy2\">:=</span> strconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>a<span class=\"sy1\">[</span>n1<span class=\"sy1\">])</span><br/>        <span class=\"kw1\">if</span> n2 <span class=\"sy3\">==</span> n1<span class=\"sy3\">+</span><span class=\"nu0\">2</span> <span class=\"sy1\">{</span><br/>            s <span class=\"sy2\">+=</span> <span class=\"st0\">\",\"</span> <span class=\"sy3\">+</span> strconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>a<span class=\"sy1\">[</span>n2<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">])</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> n2 &gt; n1<span class=\"sy3\">+</span><span class=\"nu0\">2</span> <span class=\"sy1\">{</span><br/>            s <span class=\"sy2\">+=</span> <span class=\"st0\">\"-\"</span> <span class=\"sy3\">+</span> strconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>a<span class=\"sy1\">[</span>n2<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">])</span><br/>        <span class=\"sy1\">}</span><br/>        parts <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>parts<span class=\"sy1\">,</span> s<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> n2 <span class=\"sy3\">==</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>a<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">break</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> a<span class=\"sy1\">[</span>n2<span class=\"sy1\">]</span> <span class=\"sy3\">==</span> a<span class=\"sy1\">[</span>n2<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> errors<span class=\"sy3\">.</span><span class=\"me1\">New</span><span class=\"sy1\">(</span>fmt<span class=\"sy3\">.</span><span class=\"me1\">Sprintf</span><span class=\"sy1\">(</span><br/>                <span class=\"st0\">\"sequence repeats value\u00a0%d\"</span><span class=\"sy1\">,</span> a<span class=\"sy1\">[</span>n2<span class=\"sy1\">]))</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> a<span class=\"sy1\">[</span>n2<span class=\"sy1\">]</span> &lt; a<span class=\"sy1\">[</span>n2<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> errors<span class=\"sy3\">.</span><span class=\"me1\">New</span><span class=\"sy1\">(</span>fmt<span class=\"sy3\">.</span><span class=\"me1\">Sprintf</span><span class=\"sy1\">(</span><br/>                <span class=\"st0\">\"sequence not ordered:\u00a0%d &lt;\u00a0%d\"</span><span class=\"sy1\">,</span> a<span class=\"sy1\">[</span>n2<span class=\"sy1\">],</span> a<span class=\"sy1\">[</span>n2<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]))</span><br/>        <span class=\"sy1\">}</span><br/>        n1 <span class=\"sy2\">=</span> n2<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> strings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>parts<span class=\"sy1\">,</span> <span class=\"st0\">\",\"</span><span class=\"sy1\">),</span> <span class=\"kw2\">nil</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 12, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> range <span class=\"sy0\">=</span> <span class=\"br0\">{</span> s, e <span class=\"sy0\">-&gt;</span> s <span class=\"sy0\">==</span> e <span class=\"sy0\">?</span> <span class=\"st0\">\"${s},\"</span>\u00a0: s <span class=\"sy0\">==</span> e <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"${s},${e},\"</span>\u00a0: <span class=\"st0\">\"${s}-${e},\"</span> <span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> compressList <span class=\"sy0\">=</span> <span class=\"br0\">{</span> list <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> sb, <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20start\"><span class=\"kw8\">start</span></a>, end<br/>    <span class=\"br0\">(</span>sb, <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20start\"><span class=\"kw8\">start</span></a>, end<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">''</span><span class=\"sy0\">&lt;&lt;</span><span class=\"st0\">''</span>, list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20for\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20in\"><span class=\"kw1\">in</span></a> list<span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"br0\">(</span>sb, <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20start\"><span class=\"kw8\">start</span></a>, end<span class=\"br0\">)</span> <span class=\"sy0\">=</span> i <span class=\"sy0\">==</span> end <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"br0\">[</span>sb, <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20start\"><span class=\"kw8\">start</span></a>, i<span class=\"br0\">]</span>\u00a0: <span class=\"br0\">[</span>sb <span class=\"sy0\">&lt;&lt;</span> range<span class=\"br0\">(</span><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20start\"><span class=\"kw8\">start</span></a>, end<span class=\"br0\">)</span>, i, i<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"br0\">(</span>sb <span class=\"sy0\">&lt;&lt;</span> range<span class=\"br0\">(</span><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20start\"><span class=\"kw8\">start</span></a>, end<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> compressRanges <span class=\"sy0\">=</span> <span class=\"br0\">{</span> expanded <span class=\"sy0\">-&gt;</span> compressList<span class=\"br0\">(</span>Eval.<span class=\"me1\">me</span><span class=\"br0\">(</span><span class=\"st0\">'['</span> <span class=\"sy0\">+</span> expanded <span class=\"sy0\">+</span> <span class=\"st0\">']'</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 13, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List <span class=\"br0\">(</span>intercalate<span class=\"br0\">)</span><br/>\u00a0<br/>extractRange <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>extractRange <span class=\"sy0\">=</span> intercalate <span class=\"st0\">\",\"</span> <span class=\"sy0\">.</span> f<br/>  <span class=\"kw1\">where</span> f <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span><br/>        f <span class=\"br0\">(</span>x1\u00a0: x2\u00a0: x3\u00a0: xs<span class=\"br0\">)</span> <span class=\"sy0\">|</span> x1 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">==</span> x2 <span class=\"sy0\">&amp;&amp;</span> x2 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">==</span> x3<br/>             <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> x1 <span class=\"sy0\">++</span> <span class=\"st0\">'-'</span>\u00a0: <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> xn<span class=\"br0\">)</span>\u00a0: f xs<span class=\"st0\">'<br/>          where (xn, xs'</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> g <span class=\"br0\">(</span>x3 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> xs<br/>                g a <span class=\"br0\">(</span>n\u00a0: ns<span class=\"br0\">)</span> <span class=\"sy0\">|</span> a <span class=\"sy0\">==</span> n    <span class=\"sy0\">=</span> g <span class=\"br0\">(</span>a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> ns<br/>                             <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>a <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> n\u00a0: ns<span class=\"br0\">)</span><br/>                g a <span class=\"br0\">[</span><span class=\"br0\">]</span>                   <span class=\"sy0\">=</span> <span class=\"br0\">(</span>a <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        f <span class=\"br0\">(</span>x\u00a0: xs<span class=\"br0\">)</span>            <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> x\u00a0: f xs<br/>        f <span class=\"br0\">[</span><span class=\"br0\">]</span>                  <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span></pre>"}, {"lang": "Icon and Unicon", "loc": 33, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>   R <span class=\"sy1\">:=</span> <span class=\"br0\">[</span>  <span class=\"nu0\">0</span><span class=\"sy1\">,</span>  <span class=\"nu0\">1</span><span class=\"sy1\">,</span>  <span class=\"nu0\">2</span><span class=\"sy1\">,</span>  <span class=\"nu0\">4</span><span class=\"sy1\">,</span>  <span class=\"nu0\">6</span><span class=\"sy1\">,</span>  <span class=\"nu0\">7</span><span class=\"sy1\">,</span>  <span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span> <br/>          <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">17</span><span class=\"sy1\">,</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <br/>          <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">31</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">33</span><span class=\"sy1\">,</span> <span class=\"nu0\">35</span><span class=\"sy1\">,</span> <span class=\"nu0\">36</span><span class=\"sy1\">,</span> <br/>          <span class=\"nu0\">37</span><span class=\"sy1\">,</span> <span class=\"nu0\">38</span><span class=\"sy1\">,</span> <span class=\"nu0\">39</span> <span class=\"br0\">]</span><br/>\u00a0<br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Input list     \u00a0:= \"</span><span class=\"sy1\">,</span>list2string<span class=\"br0\">(</span>R<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Extracted sting\u00a0:= \"</span><span class=\"sy1\">,</span>s <span class=\"sy1\">:=</span> range_extract<span class=\"br0\">(</span>R<span class=\"br0\">)</span>  <span class=\"sy1\">|</span> <span class=\"st0\">\"FAILED\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> range_extract<span class=\"br0\">(</span>R<span class=\"br0\">)</span>         <span class=\"co1\">#: return string/range representation of a list of unique integers</span><br/><span class=\"kw2\">local</span> s<span class=\"sy1\">,</span>sep<span class=\"sy1\">,</span>low<span class=\"sy1\">,</span>high<span class=\"sy1\">,</span>x<br/>\u00a0<br/>   <span class=\"kw1\">every</span> <span class=\"kw1\">if</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span>x<span class=\"sy1\">:=</span> <span class=\"sy1\">!</span>R<span class=\"br0\">)</span> <span class=\"sy1\">~=</span> x <span class=\"kw1\">then</span> <span class=\"kw1\">fail</span>                  <span class=\"co1\"># ensure all are integers, </span><br/>   R <span class=\"sy1\">:=</span> <span class=\"kw4\">sort</span><span class=\"br0\">(</span><span class=\"kw4\">set</span><span class=\"br0\">(</span>R<span class=\"br0\">)</span><span class=\"br0\">)</span>                                        <span class=\"co1\"># unique, and sorted</span><br/>\u00a0<br/>   s <span class=\"sy1\">:=</span> sep <span class=\"sy1\">:=</span> <span class=\"st0\">\"\"</span><br/>   <span class=\"kw1\">while</span> s <span class=\"sy1\">||:=</span> sep <span class=\"sy1\">||</span> <span class=\"br0\">(</span> low <span class=\"sy1\">:=</span> high <span class=\"sy1\">:=</span> <span class=\"kw4\">get</span><span class=\"br0\">(</span>R<span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span>       <span class=\"co1\"># lower bound of range</span><br/>      sep <span class=\"sy1\">:=</span> <span class=\"st0\">\",\"</span><br/>      <span class=\"kw1\">while</span> high <span class=\"sy1\">:=</span> <span class=\"br0\">(</span> R<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> high <span class=\"sy1\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"kw4\">get</span><span class=\"br0\">(</span>R<span class=\"br0\">)</span>           <span class=\"co1\"># find the end of range</span><br/>      <span class=\"kw1\">if</span> high <span class=\"sy1\">&gt;</span> low<span class=\"sy1\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span> s <span class=\"sy1\">||:=</span> <span class=\"st0\">\"-\"</span> <span class=\"sy1\">||</span> high               <span class=\"co1\"># - record range of 3+</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> high <span class=\"sy1\">=</span> low<span class=\"sy1\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"kw4\">push</span><span class=\"br0\">(</span>R<span class=\"sy1\">,</span>high<span class=\"br0\">)</span>                <span class=\"co1\"># - range of 2, high becomes new low</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"kw1\">return</span> s<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> list2string<span class=\"br0\">(</span>L<span class=\"br0\">)</span>          <span class=\"co1\">#: helper to convert list to string</span><br/><span class=\"kw2\">local</span> s<br/>\u00a0<br/>   <span class=\"kw1\">every</span> <span class=\"br0\">(</span>s <span class=\"sy1\">:=</span> <span class=\"st0\">\"[ \"</span><span class=\"br0\">)</span> <span class=\"sy1\">||:=</span> <span class=\"sy1\">!</span>L <span class=\"sy1\">||</span> <span class=\"st0\">\" \"</span><br/>   <span class=\"kw1\">return</span> s <span class=\"sy1\">||</span> <span class=\"st0\">\"]\"</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">fmt=: [:\u00a0;@<span class=\"sy0\">(</span><span class=\"nu0\">8</span>!:<span class=\"nu0\">0</span><span class=\"sy0\">)</span> [`]`<span class=\"sy0\">(</span>{.\u00a0; <span class=\"sy0\">(</span><span class=\"st_h\">',-'</span> {~ <span class=\"nu0\">2</span> &lt; #<span class=\"sy0\">)</span>\u00a0; {:<span class=\"sy0\">)</span>@.<span class=\"sy0\">(</span><span class=\"nu0\">2</span> &lt;. #<span class=\"sy0\">)</span><br/>group=: &lt;@fmt;.<span class=\"nu0\">1</span>~ <span class=\"nu0\">1</span> ~: <span class=\"nu0\">0</span> , <span class=\"nu0\">2</span> -~/\\ ]<br/>extractRange=: <span class=\"st_h\">','</span> joinstring group</pre>"}, {"lang": "Java", "loc": 22, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> RangeExtraction <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> arr <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>,<br/>            <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>,<br/>            <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>,<br/>            <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">int</span> len <span class=\"sy0\">=</span> arr.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> idx <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, idx2 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>idx <span class=\"sy0\">&lt;</span> len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span>idx2 <span class=\"sy0\">&lt;</span> len <span class=\"sy0\">&amp;&amp;</span> arr<span class=\"br0\">[</span>idx2<span class=\"br0\">]</span> <span class=\"sy0\">-</span> arr<span class=\"br0\">[</span>idx2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>idx2 <span class=\"sy0\">-</span> idx <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s-%s,\"</span>, arr<span class=\"br0\">[</span>idx<span class=\"br0\">]</span>, arr<span class=\"br0\">[</span>idx2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                idx <span class=\"sy0\">=</span> idx2<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">;</span> idx <span class=\"sy0\">&lt;</span> idx2<span class=\"sy0\">;</span> idx<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s,\"</span>, arr<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 35, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> rangeExtraction<span class=\"br0\">(</span>list<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">var</span> len <span class=\"sy0\">=</span> list.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> out <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i <span class=\"sy0\">=</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// beginning of range or single</span><br/>    out.<span class=\"me1\">push</span><span class=\"br0\">(</span>list<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// find end of range</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> len <span class=\"sy0\">&amp;&amp;</span> list<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">==</span> list<span class=\"br0\">[</span>j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    j<span class=\"sy0\">--;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"co1\">// single number</span><br/>      out.<span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">==</span> j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"co1\">// two numbers</span><br/>      out.<span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"sy0\">,</span> list<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span> <br/>      <span class=\"co1\">// range</span><br/>      out.<span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"st0\">\"-\"</span><span class=\"sy0\">,</span> list<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  out.<span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// remove trailing comma</span><br/>  <span class=\"kw1\">return</span> out.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// using print function as supplied by Rhino standalone</span><br/>print<span class=\"br0\">(</span>rangeExtraction<span class=\"br0\">(</span><span class=\"br0\">[</span><br/>  <span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span><br/>  <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>  <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"nu0\">35</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span><br/>  <span class=\"nu0\">37</span><span class=\"sy0\">,</span> <span class=\"nu0\">38</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><br/><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 20, "block": "<pre class=\"text highlighted_source\"># Input should be an array<br/>def extract:<br/>  reduce .[] as $i<br/>    # state is an array with integers or [start, end] ranges<br/>    ([]; <br/>     if length == 0 then [ $i ] <br/>     else ( .[-1]) as $last<br/>            | if ($last|type) == \"array\" then<br/>                if ($last[1] + 1) == $i then setpath([-1,1]; $i)<br/>                else . + [ $i ]<br/>                end<br/>              elif ($last + 1) == $i then setpath([-1]; [$last, $i])<br/>              else . + [ $i ]<br/>              end<br/>     end)<br/>     | map( if type == \"number\" then tostring<br/>       elif .[0] == .[1] -1<br/>         then  \"\\(.[0]),\\(.[1])\"  # satisfy special requirement<br/>       else \"\\(.[0])-\\(.[1])\" end )<br/>     | join(\",\")\u00a0;</pre>"}, {"lang": "Julia", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>function sprintfrange{T&lt;:Integer}(a::Array{T,1})<br/>    len = length(a)<br/>    0 &lt; len || return \"\"<br/>    dropme = falses(len)<br/>    dropme[2:end-1] = Bool[a[i-1]==a[i]-1 &amp;&amp; a[i+1]==a[i]+1 for i in 2:(len-1)]<br/>    s = [string(i) for i in a]<br/>    s[dropme] = \"X\"<br/>    s = join(s, \",\")<br/>    replace(s, r\",[,X]+,\", \"-\")<br/>end<br/>\u00a0<br/>testa = [ 0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>         15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>         25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>         37, 38, 39]<br/>\u00a0<br/>println(\"Testing range-style formatting.\")<br/>println(\"   \", testa, \"\\n       =&gt;\\n   \", sprintfrange(testa))<br/>\u00a0</pre>"}, {"lang": "K", "loc": 3, "block": "<pre class=\"text highlighted_source\">grp\u00a0: {(&amp;~1=0,-':x)_ x}<br/>fmt\u00a0: {:[1=#s:$x;s;(*s),:[3&gt;#s;\",\";\"-\"],*|s]}<br/>erng: {{x,\",\",y}/,//'fmt'grp x}</pre>"}, {"lang": "Kotlin", "loc": 37, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/>fun extractRange<span class=\"br0\">(</span>list<span class=\"sy0\">:</span> List<span class=\"sy0\">&lt;</span>Int<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> String <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>list.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <span class=\"st0\">\"\"</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sb <span class=\"sy0\">=</span> StringBuilder<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> first <span class=\"sy0\">=</span> list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> prev  <span class=\"sy0\">=</span> first<br/>\u00a0<br/>    fun append<span class=\"br0\">(</span>index<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>first <span class=\"sy0\">==</span> prev<span class=\"br0\">)</span> sb.<span class=\"me1\">append</span><span class=\"br0\">(</span>prev<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>first <span class=\"sy0\">==</span> prev - <span class=\"nu0\">1</span><span class=\"br0\">)</span> sb.<span class=\"me1\">append</span><span class=\"br0\">(</span>first, <span class=\"st0\">\",\"</span>, prev<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> sb.<span class=\"me1\">append</span><span class=\"br0\">(</span>first, <span class=\"st0\">\"-\"</span>, prev<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>index <span class=\"sy0\">&lt;</span> list.<span class=\"me1\">size</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span> sb.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span> until list.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>list<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> prev + <span class=\"nu0\">1</span><span class=\"br0\">)</span> prev++<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"br0\">{</span><br/>            append<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>            first <span class=\"sy0\">=</span> list<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>            prev  <span class=\"sy0\">=</span> first<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    append<span class=\"br0\">(</span>list.<span class=\"me1\">size</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> sb.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> list1 <span class=\"sy0\">=</span> listOf<span class=\"br0\">(</span>-<span class=\"nu0\">6</span>, -<span class=\"nu0\">3</span>, -<span class=\"nu0\">2</span>, -<span class=\"nu0\">1</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span>extractRange<span class=\"br0\">(</span>list1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> list2 <span class=\"sy0\">=</span> listOf<span class=\"br0\">(</span><span class=\"nu0\">0</span>,  <span class=\"nu0\">1</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">4</span>,  <span class=\"nu0\">6</span>,  <span class=\"nu0\">7</span>,  <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>,<br/>                      <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>,<br/>                      <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>,<br/>                      <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span>extractRange<span class=\"br0\">(</span>list2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 35, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/>s$ <span class=\"sy0\">=</span> <span class=\"st0\">\"0,  1,  2,  4,  6,  7,  8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\"</span> <span class=\"sy0\">+</span> _<br/>     <span class=\"st0\">\"25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39\"</span><br/><span class=\"kw1\">print</span> ExtractRange$<span class=\"br0\">(</span> s$<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> ExtractRange$<span class=\"br0\">(</span> range$<span class=\"br0\">)</span><br/>    n <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    count <span class=\"sy0\">=</span> ItemCount<span class=\"br0\">(</span> range$<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> n <span class=\"sy0\">&lt;=</span> count<br/>        startValue <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> range$<span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        m <span class=\"sy0\">=</span> n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">while</span> m <span class=\"sy0\">&lt;=</span> count<br/>            nextValue <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> range$<span class=\"sy0\">,</span> m<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> nextValue <span class=\"sy0\">-</span> startValue <span class=\"sy0\">&lt;&gt;</span> m <span class=\"sy0\">-</span> n <span class=\"kw1\">then</span> <span class=\"kw1\">exit</span> <span class=\"kw1\">while</span><br/>            m <span class=\"sy0\">=</span> m <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">wend</span><br/>        <span class=\"kw1\">if</span> m <span class=\"sy0\">-</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"kw1\">then</span><br/>            ExtractRange$ <span class=\"sy0\">=</span> ExtractRange$ <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span> startValue<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span> startValue <span class=\"sy0\">+</span> m <span class=\"sy0\">-</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\",\"</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> n <span class=\"kw1\">to</span> m <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>                ExtractRange$ <span class=\"sy0\">=</span> ExtractRange$ <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span> startValue <span class=\"sy0\">+</span> i <span class=\"sy0\">-</span> n<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\",\"</span><br/>            <span class=\"kw1\">next</span> i<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        n <span class=\"sy0\">=</span> m<br/>    <span class=\"kw1\">wend</span><br/>    ExtractRange$ <span class=\"sy0\">=</span> <span class=\"kw2\">left$</span><span class=\"br0\">(</span> ExtractRange$<span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span> ExtractRange$<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> ItemCount<span class=\"br0\">(</span> list$<span class=\"sy0\">,</span> separator$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> list$<span class=\"sy0\">,</span> ItemCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> separator$<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span><br/>        ItemCount <span class=\"sy0\">=</span> ItemCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">wend</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0</pre>"}, {"lang": "LiveCode", "loc": 30, "block": "<pre class=\"text highlighted_source\">function rangeExtract nums<br/>    local prevNum, znums, rangedNums<br/>    set itemDelimiter to \", \"<br/>    put the first item of nums into prevNum<br/>    repeat for each item n in nums<br/>        if n is (prevNum + 1) then<br/>            put n into prevNum<br/>            put \"#\" &amp; n after znums<br/>        else<br/>            put n into prevNum<br/>            put return &amp; n after znums<br/>        end if<br/>    end repeat<br/>    set itemDelimiter to \"#\"<br/>    repeat for each line z in znums<br/>        if z is empty then next repeat<br/>        switch the number of items of z <br/>            case 1<br/>                put z &amp; \",\" after rangedNums<br/>                break<br/>            case 2<br/>                put item 1 of z &amp; \",\" &amp; item -1 of z &amp; \",\" after rangedNums<br/>                break<br/>            default<br/>                put item 1 of z &amp; \"-\" &amp; item -1 of z &amp; \",\" after rangedNums<br/>        end switch<br/>    end repeat<br/>    return char 1 to -2 of rangedNums  --strip off trailing comma<br/>end rangeExtract<br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 28, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> extractRange <span class=\"br0\">(</span>rList<span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> rExpr<span class=\"sy0\">,</span> startVal <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">for</span> k<span class=\"sy0\">,</span> v <span class=\"kw2\">in</span> <span class=\"kw3\">pairs</span><span class=\"br0\">(</span>rList<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> rList<span class=\"br0\">[</span>k <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> v <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> startVal <span class=\"kw1\">then</span> startVal <span class=\"sy0\">=</span> v <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">if</span> startVal <span class=\"kw1\">then</span><br/>                <span class=\"kw1\">if</span> v <span class=\"sy0\">==</span> startVal <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>                    rExpr <span class=\"sy0\">=</span> rExpr <span class=\"sy0\">..</span> startVal <span class=\"sy0\">..</span> <span class=\"st0\">\",\"</span> <span class=\"sy0\">..</span> v <span class=\"sy0\">..</span> <span class=\"st0\">\",\"</span><br/>                <span class=\"kw1\">else</span><br/>                    rExpr <span class=\"sy0\">=</span> rExpr <span class=\"sy0\">..</span> startVal <span class=\"sy0\">..</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">..</span> v <span class=\"sy0\">..</span> <span class=\"st0\">\",\"</span><br/>                <span class=\"kw1\">end</span><br/>                startVal <span class=\"sy0\">=</span> <span class=\"kw4\">nil</span><br/>            <span class=\"kw1\">else</span><br/>                rExpr <span class=\"sy0\">=</span> rExpr <span class=\"sy0\">..</span> v <span class=\"sy0\">..</span> <span class=\"st0\">\",\"</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">return</span> rExpr<span class=\"sy0\">:</span>sub<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">local</span> intList <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span><br/>   <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>   <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"nu0\">35</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span><br/>   <span class=\"nu0\">37</span><span class=\"sy0\">,</span> <span class=\"nu0\">38</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><br/><span class=\"br0\">}</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span>extractRange<span class=\"br0\">(</span>intList<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Maple", "loc": 12, "block": "<pre class=\"text highlighted_source\">lst\u00a0:= [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, <br/>25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39]:<br/>r1,r2:= lst[1],lst[1]:<br/>for i from 2 to numelems(lst) do<br/>\tif lst[i] - lst[i-1] = 1 then  #consecutive<br/>\t\tr2\u00a0:= lst[i]:<br/>\telse #break<br/>\t\tprintf(piecewise(r2-r1=1, \"%d,%d,\", r2-r1&gt;1,\"%d-%d,\", \"%d,\"), r1, r2):<br/>\t\tr1,r2:= lst[i],lst[i]:<br/>\tfi:<br/>od:<br/>printf(piecewise(r2-r1=1, \"%d,%d\", r2-r1&gt;1,\"%d-%d\", \"%d\"), r1, r2):</pre>"}, {"lang": "Mathematica", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>rangeExtract[data_List]\u00a0:= ToString[Row[<br/>                               Riffle[<br/>                                  Flatten[Split[Sort[data], #2 - #1 == 1 &amp;] /. {a_Integer, __, b_}\u00a0:&gt; Row[{a, \"-\", b}]],<br/>                                     \",\"]<br/>                                     ]];<br/>\u00a0</pre>"}, {"lang": "MATLAB / Octave", "loc": 23, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> S=range_extraction<span class=\"br0\">(</span>L<span class=\"br0\">)</span><br/>    <span class=\"co1\">% Range extraction</span><br/>    L<span class=\"br0\">(</span><span class=\"kw1\">end</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span> = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/nan.html\"><span class=\"kw2\">NaN</span></a>;<br/>    S = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/int2str.html\"><span class=\"kw2\">int2str</span></a><span class=\"br0\">(</span>L<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>    k = <span class=\"nu0\">1</span>;<br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>k &lt; <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>L<span class=\"br0\">)</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>L<span class=\"br0\">(</span>k<span class=\"br0\">)</span>+<span class=\"nu0\">1</span>==L<span class=\"br0\">(</span>k+<span class=\"nu0\">1</span><span class=\"br0\">)</span> &amp;&amp; L<span class=\"br0\">(</span>k<span class=\"br0\">)</span>+<span class=\"nu0\">2</span>==L<span class=\"br0\">(</span>k+<span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>            m = <span class=\"nu0\">2</span>;<br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>L<span class=\"br0\">(</span>k<span class=\"br0\">)</span>+m==L<span class=\"br0\">(</span>k+m<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                m = m+<span class=\"nu0\">1</span>; <br/>            <span class=\"kw1\">end</span><br/>            k = k+m-<span class=\"nu0\">1</span>; <br/>            S = <span class=\"br0\">[</span>S,<span class=\"co2\">'-'</span>,<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/int2str.html\"><span class=\"kw2\">int2str</span></a><span class=\"br0\">(</span>L<span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/>        <span class=\"kw1\">else</span><br/>            k = k+<span class=\"nu0\">1</span>;<br/>            S = <span class=\"br0\">[</span>S,<span class=\"co2\">','</span>,<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/int2str.html\"><span class=\"kw2\">int2str</span></a><span class=\"br0\">(</span>L<span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/>        <span class=\"kw1\">end</span> \t   <br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/disp.html\"><span class=\"kw2\">disp</span></a><span class=\"br0\">(</span>range_extraction<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>,  <span class=\"nu0\">1</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">4</span>,  <span class=\"nu0\">6</span>,  <span class=\"nu0\">7</span>,  <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"sy0\">...</span><br/>                       <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"sy0\">...</span><br/>                       <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>, <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "MUMPS", "loc": 17, "block": "<pre class=\"text highlighted_source\">RANGCONT(X)\u00a0;Integer range contraction<br/> NEW Y,I,CONT,NOTFIRST,CURR,PREV,NEXT,SEQ SET Y=\"\",SEQ=0,PREV=\"\",CONT=0<br/> FOR I=1:1:$LENGTH(X,\",\") DO<br/> .SET NOTFIRST=$LENGTH(Y),CURR=$PIECE(X,\",\",I),NEXT=$PIECE(X,\",\",I+1)<br/> .FOR  Q:$EXTRACT(CURR)'=\" \"  S CURR=$EXTRACT(CURR,2,$LENGTH(CURR)) \u00a0;clean up leading spaces<br/> .S SEQ=((CURR-1)=PREV)&amp;((CURR+1)=NEXT)<br/> .IF 'NOTFIRST SET Y=CURR<br/> .IF NOTFIRST DO<br/> ..;Order matters due to flags<br/> ..IF CONT&amp;SEQ\u00a0;Do nothing<br/> ..IF 'CONT&amp;'SEQ SET Y=Y_\",\"_CURR<br/> ..IF CONT&amp;'SEQ SET Y=Y_CURR,CONT=0<br/> ..IF 'CONT&amp;SEQ SET Y=Y_\"-\",CONT=1<br/> .SET PREV=CURR<br/> IF CONT SET Y=Y_PREV<br/> K I,CONT,NOTFIRST,CURR,PREV,NEXT,SEQ<br/> QUIT Y</pre>"}, {"lang": "NetRexx", "loc": 37, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/*NetRexx program to test range extraction. ***************************<br/>* 07.08.2012 Walter Pachl derived from my Rexx Version<br/>* Changes: line continuation in aaa assignment changed<br/>*          1e99 -&gt; 999999999<br/>*          Do -&gt; Loop<br/>*          words(aaa) -&gt; aaa.words()<br/>*          word(aaa,i) -&gt; aaa.word(i)<br/>**********************************************************************/</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'NetRexx program derived from Rexx'</span><br/>aaa=<span class=\"st0\">'0 1 2 4 6 7 8 11 12 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29'</span><br/>aaa=aaa<span class=\"st0\">' 30 31 32 33 35 36 37 38 39'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'old='</span>aaa;<br/>aaa=aaa <span class=\"nu0\">999999999</span>                   <span class=\"coMULTI\">/* artificial number at the end  */</span><br/>i=<span class=\"nu0\">0</span>                                 <span class=\"coMULTI\">/* initialize index              */</span><br/>ol=<span class=\"st0\">''</span>                               <span class=\"coMULTI\">/* initialize output string      */</span><br/>comma=<span class=\"st0\">''</span>                            <span class=\"coMULTI\">/* will become a ',' lateron     */</span><br/>inrange=<span class=\"nu0\">0</span><br/><span class=\"kw1\">Loop</span> While i<span class=\"sy0\">&lt;</span>=aaa.<span class=\"kw6\">words</span>             <span class=\"coMULTI\">/* loop for all numbers          */</span><br/>  i=i+<span class=\"nu0\">1</span>                             <span class=\"coMULTI\">/* index of next number          */</span><br/>  n=aaa.<span class=\"kw6\">word</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>                     <span class=\"coMULTI\">/* the now current number        */</span><br/>  <span class=\"kw1\">If</span> n=<span class=\"nu0\">999999999</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Leave</span>         <span class=\"coMULTI\">/* we are at the end             */</span><br/>  <span class=\"kw1\">If</span> inrange <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span>                <span class=\"coMULTI\">/* range was opened              */</span><br/>    <span class=\"kw1\">If</span> aaa.<span class=\"kw6\">word</span><span class=\"br0\">(</span>i+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">&lt;&gt;</span>n+<span class=\"nu0\">1</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span>   <span class=\"coMULTI\">/* following word not in range   */</span><br/>      ol=ol<span class=\"sy0\">||</span>n                      <span class=\"coMULTI\">/* so this number is the end     */</span><br/>      inrange=<span class=\"nu0\">0</span>                     <span class=\"coMULTI\">/* and the range is over         */</span><br/>      <span class=\"kw3\">End</span>                           <span class=\"coMULTI\">/* else ignore current number    */</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw3\">Else</span> <span class=\"kw1\">Do</span>                           <span class=\"coMULTI\">/* not in a range                */</span><br/>    ol=ol<span class=\"sy0\">||</span>comma<span class=\"sy0\">||</span>n                 <span class=\"coMULTI\">/* add number (with comma)       */</span><br/>    comma=<span class=\"st0\">','</span>                       <span class=\"coMULTI\">/* to the output string          */</span><br/>    <span class=\"kw1\">If</span> aaa.<span class=\"kw6\">word</span><span class=\"br0\">(</span>i+<span class=\"nu0\">2</span><span class=\"br0\">)</span>=n+<span class=\"nu0\">2</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span>    <span class=\"coMULTI\">/* if the nr after the next fits */</span><br/>      inrange=<span class=\"nu0\">1</span>                     <span class=\"coMULTI\">/* open a range                  */</span><br/>      ol=ol<span class=\"st0\">'-'</span>                      <span class=\"coMULTI\">/* append the range connector    */</span><br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'new='</span>ol</pre>"}, {"lang": "Nim", "loc": 30, "block": "<pre class=\"text highlighted_source\">import parseutils, re, strutils<br/>\u00a0<br/>proc extractRange(input: string): string =<br/>  var list = input.replace(re\"\\s+\").split(',').map(parseInt)<br/>  var ranges: seq[string] = @[]<br/>  var i = 0<br/>  while i &lt; list.len:<br/>    var first = list[i] # first element in the current range<br/>    var offset = i<br/>    while True: # skip ahead to the end of the current range<br/>      if i + 1 &gt;= list.len:<br/>        # reached end of the list<br/>        break<br/>      if list[i + 1] - (i + 1)\u00a0!= first - offset:<br/>        # next element isn't in the current range<br/>        break<br/>      i.inc<br/>    var last = list[i] # last element in the current range<br/>    case last - first<br/>      of 0: ranges.add($first)<br/>      of 1: ranges.add(\"$1,$2\".format([$first, $last]))<br/>      else: ranges.add(\"$1-$2\".format([$first, $last]))<br/>    i.inc<br/>  return ranges.join(\",\")<br/>\u00a0<br/>echo(\"\"\"<br/>    0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>   15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>   25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>   37, 38, 39\"\"\".extractRange)</pre>"}, {"lang": "Objeck", "loc": 47, "block": "<pre class=\"objeck highlighted_source\"><span class=\"kw1\">class</span> IdentityMatrix <span class=\"br0\">{</span><br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    Compress2Range<span class=\"br0\">(</span><span class=\"st0\">\"-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    Compress2Range<span class=\"br0\">(</span><span class=\"st0\">\"0,  1,  2,  4,  6,  7,  8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Compress2Range<span class=\"br0\">(</span>expanded <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">String</span> <span class=\"br0\">{</span><br/>    result <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>    nums <span class=\"sy0\">:=</span> expanded<span class=\"sy0\">-&gt;</span><span class=\"me1\">ReplaceAll</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Split</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    firstNum <span class=\"sy0\">:=</span> nums<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">ToInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    rangeSize <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> nums<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      thisNum <span class=\"sy0\">:=</span> nums<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">ToInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>thisNum <span class=\"sy0\">-</span> firstNum <span class=\"sy0\">-</span> rangeSize <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                rangeSize <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>      <span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>rangeSize <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>          result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span>firstNum<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>          result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span><span class=\"br0\">(</span>rangeSize <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\",\"</span><span class=\"sy0\">:</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>          result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span>firstNum<span class=\"sy0\">+</span>rangeSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>          result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    rangeSize <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>          result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span>firstNum<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>          result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        firstNum <span class=\"sy0\">:=</span> thisNum<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>rangeSize <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span>firstNum<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span><span class=\"br0\">(</span>rangeSize <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\",\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span>firstNum <span class=\"sy0\">+</span> rangeSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      rangeSize <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <br/>    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>      result<span class=\"sy0\">-&gt;</span><span class=\"me1\">Append</span><span class=\"br0\">(</span>firstNum<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Oberon-2", "loc": 94, "block": "<pre class=\"oberon2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> RangeExtraction;<br/><span class=\"kw1\">IMPORT</span> Out;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Range<span class=\"br0\">(</span>s<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">VAR</span><br/>\ti<span class=\"sy0\">,</span>j<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/>\u00a0<br/>\t<span class=\"kw1\">PROCEDURE</span> Emit<span class=\"br0\">(</span>sep<span class=\"sy0\">:</span> <span class=\"kw4\">CHAR</span><span class=\"br0\">)</span>;<br/>\t<span class=\"kw1\">BEGIN</span><br/>\t\t<span class=\"kw1\">IF</span> i &gt; <span class=\"nu0\">2</span> <span class=\"kw1\">THEN</span><br/>\t\t\tOut.<span class=\"me1\">Int</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Char</span><span class=\"br0\">(</span><span class=\"st_h\">'-'</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Int</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span>j <span class=\"sy0\">+</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Char</span><span class=\"br0\">(</span>sep<span class=\"br0\">)</span>;<br/>\t\t\t<span class=\"kw3\">INC</span><span class=\"br0\">(</span>j<span class=\"sy0\">,</span>i<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">ELSE</span><br/>\t\t\tOut.<span class=\"me1\">Int</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Char</span><span class=\"br0\">(</span>sep<span class=\"br0\">)</span>;<br/>\t\t\t<span class=\"kw3\">INC</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">END</span>;<br/>\t<span class=\"kw1\">END</span> Emit;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>\tj <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>;i <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;<br/>\t<span class=\"kw1\">LOOP</span><br/>\t\t<span class=\"kw3\">INC</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/>\t\t<span class=\"kw1\">IF</span> j <span class=\"sy0\">+</span> i &gt;<span class=\"sy0\">=</span> <span class=\"kw3\">LEN</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <br/>\t\t\tEmit<span class=\"br0\">(</span>0AX<span class=\"br0\">)</span>;<br/>\t\t\t<span class=\"kw1\">EXIT</span> <br/>\t\t<span class=\"kw1\">ELSIF</span> s<span class=\"br0\">[</span>j <span class=\"sy0\">+</span> i<span class=\"br0\">]</span> <span class=\"sy0\">#</span> <span class=\"br0\">(</span>s<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">+</span> i<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>\t\t\tEmit<span class=\"br0\">(</span><span class=\"st_h\">','</span><span class=\"br0\">)</span>;<br/>\t\t\ti <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>;<br/>\t\t<span class=\"kw1\">END</span><br/>\t<span class=\"kw1\">END</span><br/><span class=\"kw1\">END</span> Range;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>\tseq0<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"nu0\">33</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">INTEGER</span>;<br/>\tseq1<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"nu0\">20</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">4</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">6</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">7</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">8</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">11</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">12</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">14</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">15</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">16</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">17</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">18</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">14</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">19</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">20</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">16</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">21</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">17</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">22</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">18</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">23</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">19</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">24</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">20</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">25</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">21</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">27</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">22</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">28</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">23</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">29</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">24</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">30</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">25</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">31</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">26</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">32</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">27</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">33</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">28</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">35</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">29</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">36</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">37</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">31</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">38</span>;<br/>\tseq0<span class=\"br0\">[</span><span class=\"nu0\">32</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">39</span>;<br/>\tRange<span class=\"br0\">(</span>seq0<span class=\"br0\">)</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">3</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">4</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">5</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">7</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">8</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">9</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">10</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">11</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">14</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">14</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">15</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">16</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">17</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">17</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">18</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">18</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">19</span>;<br/>\tseq1<span class=\"br0\">[</span><span class=\"nu0\">19</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">20</span>;<br/>\tRange<span class=\"br0\">(</span>seq1<span class=\"br0\">)</span><br/><span class=\"kw1\">END</span> RangeExtraction.<br/>\u00a0</pre>"}, {"lang": "Objective-C", "loc": 34, "block": "<pre class=\"objc highlighted_source\"><span class=\"co1\">#import &lt;Foundation/Foundation.h&gt;</span><br/>\u00a0<br/><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"sy0\">*</span>extractRanges<span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSArray_Class/\"><span class=\"kw5\">NSArray</span></a> <span class=\"sy0\">*</span>nums<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSMutableIndexSet_Class/\"><span class=\"kw5\">NSMutableIndexSet</span></a> <span class=\"sy0\">*</span>indexSet <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSMutableIndexSet_Class/\"><span class=\"kw5\">NSMutableIndexSet</span></a> alloc<span class=\"br0\">]</span> init<span class=\"br0\">]</span>;<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSNumber_Class/\"><span class=\"kw5\">NSNumber</span></a> <span class=\"sy0\">*</span>n <span class=\"kw1\">in</span> nums<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>n integerValue<span class=\"br0\">]</span> &lt; <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">@throw</span> <span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSException_Class/\"><span class=\"kw5\">NSException</span></a> exceptionWithName<span class=\"sy0\">:</span>NSInvalidArgumentException reason<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"negative number not supported\"</span> userInfo<span class=\"sy0\">:</span><span class=\"kw2\">nil</span><span class=\"br0\">]</span>;<br/>    <span class=\"br0\">[</span>indexSet addIndex<span class=\"sy0\">:</span><span class=\"br0\">[</span>n unsignedIntegerValue<span class=\"br0\">]</span><span class=\"br0\">]</span>;<br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSMutableString_Class/\"><span class=\"kw5\">NSMutableString</span></a> <span class=\"sy0\">*</span>s <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSMutableString_Class/\"><span class=\"kw5\">NSMutableString</span></a> alloc<span class=\"br0\">]</span> init<span class=\"br0\">]</span>;<br/>  <span class=\"br0\">[</span>indexSet enumerateRangesUsingBlock<span class=\"sy0\">:^</span><span class=\"br0\">(</span><span class=\"kw4\">NSRange</span> range, <span class=\"kw4\">BOOL</span> <span class=\"sy0\">*</span>stop<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>s.length<span class=\"br0\">)</span><br/>      <span class=\"br0\">[</span>s appendString<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\",\"</span><span class=\"br0\">]</span>;<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>range.length <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">[</span>s appendFormat<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"%lu\"</span>, range.location<span class=\"br0\">]</span>;<br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>range.length <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">[</span>s appendFormat<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"%lu,%lu\"</span>, range.location, range.location<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>;<br/>    <span class=\"kw1\">else</span><br/>      <span class=\"br0\">[</span>s appendFormat<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"%lu-%lu\"</span>, range.location, range.location<span class=\"sy0\">+</span>range.length<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>;<br/>  <span class=\"br0\">}</span><span class=\"br0\">]</span>;<br/>  <span class=\"kw1\">return</span> s;<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  @autoreleasepool <span class=\"br0\">{</span><br/>\u00a0<br/>    NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%@\"</span>, extractRanges<span class=\"br0\">(</span>@<span class=\"br0\">[</span>@0, @1, @2, @4, @6, @7, @8, @11, @12, @14,<br/>                                 @15, @16, @17, @18, @19, @20, @21, @22, @23, @24,<br/>                                 @25, @27, @28, @29, @30, @31, @32, @33, @35, @36,<br/>                                 @37, @38, @39<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 21, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> range_extract <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>  <span class=\"sy0\">|</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  <span class=\"sy0\">|</span> x<span class=\"sy0\">::</span>xs <span class=\"sy0\">-&gt;</span><br/>    <span class=\"kw1\">let</span> f <span class=\"br0\">(</span>i,j,ret<span class=\"br0\">)</span> k <span class=\"sy0\">=</span><br/>      <span class=\"kw1\">if</span> k <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> j <span class=\"kw1\">then</span> <span class=\"br0\">(</span>i,k,ret<span class=\"br0\">)</span> <span class=\"kw1\">else</span> <span class=\"br0\">(</span>k,k,<span class=\"br0\">(</span>i,j<span class=\"br0\">)</span><span class=\"sy0\">::</span>ret<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">let</span> <span class=\"br0\">(</span>m,n,ret<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>fold_left f <span class=\"br0\">(</span>x,x,<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> xs <span class=\"kw1\">in</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>rev <span class=\"br0\">(</span><span class=\"br0\">(</span>m,n<span class=\"br0\">)</span><span class=\"sy0\">::</span>ret<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> string_of_range rng <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> str <span class=\"br0\">(</span>a,b<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> a <span class=\"sy0\">=</span> b <span class=\"kw1\">then</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALstring_of_int\"><span class=\"kw3\">string_of_int</span></a> a<br/>    <span class=\"kw1\">else</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>sprintf <span class=\"st0\">\"%d%c%d\"</span> a <span class=\"br0\">(</span><span class=\"kw1\">if</span> b <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> a <span class=\"kw1\">then</span> <span class=\"sy0\">'</span>,<span class=\"sy0\">'</span> <span class=\"kw1\">else</span> <span class=\"sy0\">'-'</span><span class=\"br0\">)</span> b <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>concat <span class=\"st0\">\",\"</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map str rng<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> li <span class=\"sy0\">=</span><br/>    <span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> <span class=\"nu0\">14</span><span class=\"sy0\">;</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span> <span class=\"nu0\">17</span><span class=\"sy0\">;</span> <span class=\"nu0\">18</span><span class=\"sy0\">;</span> <span class=\"nu0\">19</span><span class=\"sy0\">;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> <span class=\"nu0\">21</span><span class=\"sy0\">;</span><br/>      <span class=\"nu0\">22</span><span class=\"sy0\">;</span> <span class=\"nu0\">23</span><span class=\"sy0\">;</span> <span class=\"nu0\">24</span><span class=\"sy0\">;</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span> <span class=\"nu0\">27</span><span class=\"sy0\">;</span> <span class=\"nu0\">28</span><span class=\"sy0\">;</span> <span class=\"nu0\">29</span><span class=\"sy0\">;</span> <span class=\"nu0\">30</span><span class=\"sy0\">;</span> <span class=\"nu0\">31</span><span class=\"sy0\">;</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span> <span class=\"nu0\">33</span><span class=\"sy0\">;</span> <span class=\"nu0\">35</span><span class=\"sy0\">;</span> <span class=\"nu0\">36</span><span class=\"sy0\">;</span> <span class=\"nu0\">37</span><span class=\"sy0\">;</span> <span class=\"nu0\">38</span><span class=\"sy0\">;</span> <span class=\"nu0\">39</span> <span class=\"br0\">]</span><br/>  <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> rng <span class=\"sy0\">=</span> range_extract li <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a><span class=\"br0\">(</span>string_of_range rng<span class=\"br0\">)</span></pre>"}, {"lang": "ooRexx", "loc": 80, "block": "<pre class=\"oorexx highlighted_source\"><span class=\"coMULTI\">/* Rexx */</span><br/>\u00a0<br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> userInput<br/><span class=\"kw1\">call</span> runSample userInput<br/><span class=\"kw1\">return</span><br/><span class=\"kw1\">exit</span><br/>\u00a0<br/><span class=\"co1\">-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~</span><br/><span class=\"co1\">-- Compact a list of numbers by reducing ranges</span><br/>compact:<br/><span class=\"kw1\">procedure</span><br/><span class=\"co1\">--trace\u00a0?r;nop</span><br/>  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> expanded<br/>  nums = expanded~<span class=\"kw6\">changestr</span><span class=\"br0\">(</span><span class=\"st0\">','</span>, <span class=\"st0\">' '</span><span class=\"br0\">)</span>~<span class=\"kw6\">space</span> <span class=\"co1\">-- remove possible commas &amp; clean up the string</span><br/>  rezult = <span class=\"st0\">''</span><br/>\u00a0<br/>  RANGE = <span class=\"nu0\">0</span><br/>  FIRST = nums~<span class=\"kw6\">word</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"co1\">-- set starting value</span><br/>  <span class=\"kw1\">loop</span> i_ = <span class=\"nu0\">2</span> <span class=\"kw2\">to</span> nums~<span class=\"kw6\">words</span> <span class=\"co1\">-- each word in the string is a number to examine</span><br/>    LOCAL = nums~<span class=\"kw6\">word</span><span class=\"br0\">(</span>i_<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> LOCAL - FIRST - RANGE == <span class=\"nu0\">1</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>      <span class=\"co1\">-- inside a range</span><br/>      RANGE += <span class=\"nu0\">1</span><br/>      <span class=\"kw3\">end</span><br/>    <span class=\"kw3\">else</span> <span class=\"kw1\">do</span><br/>      <span class=\"co1\">-- not inside a range</span><br/>      <span class=\"kw1\">if</span> RANGE <span class=\"sy0\">\\</span>= <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>        <span class=\"co1\">-- we have a range of numbers so collect this and reset</span><br/>        rezult = rezult <span class=\"sy0\">||</span> FIRST <span class=\"sy0\">||</span> delim<span class=\"br0\">(</span>RANGE<span class=\"br0\">)</span> <span class=\"sy0\">||</span> FIRST + RANGE <span class=\"sy0\">||</span> <span class=\"st0\">','</span><br/>        RANGE = <span class=\"nu0\">0</span><br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">else</span> <span class=\"kw1\">do</span><br/>        <span class=\"co1\">-- just collect this number</span><br/>        rezult = rezult <span class=\"sy0\">||</span> FIRST <span class=\"sy0\">||</span> <span class=\"st0\">','</span><br/>        <span class=\"kw3\">end</span><br/>      FIRST = LOCAL <span class=\"co1\">-- bump new starting value</span><br/>      <span class=\"kw3\">end</span><br/>    <span class=\"kw3\">end</span> i_<br/>  <span class=\"kw1\">if</span> RANGE <span class=\"sy0\">\\</span>= <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>    <span class=\"co1\">-- collect terminating value (a range)</span><br/>    rezult = rezult <span class=\"sy0\">||</span> FIRST <span class=\"sy0\">||</span> delim<span class=\"br0\">(</span>RANGE<span class=\"br0\">)</span> <span class=\"sy0\">||</span> FIRST + RANGE<br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw1\">do</span><br/>    <span class=\"co1\">-- collect terminating value (a single number)</span><br/>    rezult = rezult <span class=\"sy0\">||</span> FIRST<br/>    <span class=\"kw3\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> rezult~<span class=\"kw6\">space</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"st0\">','</span><span class=\"br0\">)</span> <span class=\"co1\">-- format and return result string</span><br/>\u00a0<br/><span class=\"co1\">-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~</span><br/><span class=\"co1\">-- determine if the range delimiter should be a comma or dash</span><br/>delim:<br/><span class=\"kw1\">procedure</span><br/>  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> range <span class=\"sy0\">.</span><br/>  <span class=\"kw1\">if</span> range == <span class=\"nu0\">1</span> <span class=\"kw3\">then</span> dlm = <span class=\"st0\">','</span><br/>  <span class=\"kw3\">else</span>               dlm = <span class=\"st0\">'-'</span><br/>  <span class=\"kw1\">return</span> dlm<br/>\u00a0<br/><span class=\"co1\">-- ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~</span><br/><span class=\"co1\">-- sample driver</span><br/>runSample:<br/><span class=\"kw1\">procedure</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> userInput<br/>td<span class=\"sy0\">.</span> = <span class=\"nu0\">0</span><br/><span class=\"kw1\">if</span> userInput~<span class=\"kw6\">words</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>  td<span class=\"sy0\">.</span>0 += <span class=\"nu0\">1</span>; r_ = td<span class=\"sy0\">.</span>0; td<span class=\"sy0\">.</span>r_ = userInput<br/>  <span class=\"kw3\">end</span><br/><span class=\"kw3\">else</span> <span class=\"kw1\">do</span><br/>  td<span class=\"sy0\">.</span>0 += <span class=\"nu0\">1</span>; r_ = td<span class=\"sy0\">.</span>0; td<span class=\"sy0\">.</span>r_ = <span class=\"st0\">'-6 -3 -2 -1 0 1 3 4 5 7 8 9 10 11 14 15 17 18 19 20'</span><br/>  td<span class=\"sy0\">.</span>0 += <span class=\"nu0\">1</span>; r_ = td<span class=\"sy0\">.</span>0; td<span class=\"sy0\">.</span>r_ = <span class=\"st0\">'0,  1,  2,  4,  6,  7,  8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39'</span><br/>  td<span class=\"sy0\">.</span>0 += <span class=\"nu0\">1</span>; r_ = td<span class=\"sy0\">.</span>0; td<span class=\"sy0\">.</span>r_ = <span class=\"st0\">'-4, -3, -2, 0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39'</span><br/>  <span class=\"kw3\">end</span><br/>\u00a0<br/><span class=\"kw1\">loop</span> r_ = <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> td<span class=\"sy0\">.</span>0<br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'Original: '</span> td<span class=\"sy0\">.</span>r_~<span class=\"kw6\">changestr</span><span class=\"br0\">(</span><span class=\"st0\">','</span>, <span class=\"st0\">' '</span><span class=\"br0\">)</span>~<span class=\"kw6\">space</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"st0\">','</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'Compacted:'</span> compact<span class=\"br0\">(</span>td<span class=\"sy0\">.</span>r_<span class=\"br0\">)</span><br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw3\">end</span> r_<br/><span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "OxygenBasic", "loc": 40, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>   dim sys ints(100)<br/>   ints=&gt;<br/>   0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>   15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>   25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>   37, 38, 39<br/>\u00a0<br/>  function ShowRange(sys*i) as string<br/>  '==================================<br/>  pr=\"\"<br/>  n=0<br/>  e=0<br/>  j=0<br/>  k=-1<br/>  do<br/>    j++<br/>    n=i(j)<br/>    e=i(j+1)<br/>    if e&lt;j then<br/>      exit do<br/>    end if<br/>    if e=n+1 and i(j+2)=n+2 then 'LOOKAHEAD<br/>      if k=-1 then k=n<br/>    else<br/>      if k&gt;=0 then<br/>        pr+=k \"-\" i(j+1) \", \" 'RANGE OF VALUES<br/>        j++<br/>        k=-1<br/>      else<br/>        pr+=n \", \" 'SINGLE VALUES<br/>      end if<br/>    end if<br/>  end do<br/>  return left pr, len(pr)-2<br/>  end function<br/>\u00a0<br/>\u00a0<br/>  print ShowRange ints<br/>\u00a0</pre>"}, {"lang": "Oz", "loc": 47, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Extract</span> Xs<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>CommaSeparated<br/>      <span class=\"br0\">{</span>Map <span class=\"br0\">{</span>ExtractRanges Xs<span class=\"br0\">}</span> RangeToString<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">ExtractRanges</span> Xs<span class=\"br0\">}</span><br/>     <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Loop</span> Ys Start End<span class=\"br0\">}</span><br/>        <span class=\"kw1\">case</span> Ys<br/>        <span class=\"kw1\">of</span> Y<span class=\"sy0\">|</span>Yr <span class=\"kw1\">andthen</span> Y <span class=\"sy0\">==</span> End<span class=\"sy0\">+</span>1 <span class=\"kw1\">then</span> <span class=\"br0\">{</span>Loop Yr Start Y<span class=\"br0\">}</span><br/>        <span class=\"re5\"><span class=\"br0\">[</span><span class=\"br0\">]</span></span> Y<span class=\"sy0\">|</span>Yr                    <span class=\"kw1\">then</span> Start<span class=\"sy0\">#</span>End<span class=\"sy0\">|</span><span class=\"br0\">{</span>Loop Yr Y Y<span class=\"br0\">}</span> <br/>        <span class=\"re5\"><span class=\"br0\">[</span><span class=\"br0\">]</span></span> nil                     <span class=\"kw1\">then</span> <span class=\"br0\">[</span>Start<span class=\"sy0\">#</span>End<span class=\"br0\">]</span><br/>        <span class=\"kw1\">end</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"kw1\">case</span> Xs<br/>     <span class=\"kw1\">of</span> X<span class=\"sy0\">|</span>Xr <span class=\"kw1\">then</span> <span class=\"br0\">{</span>Loop Xr X X<span class=\"br0\">}</span><br/>     <span class=\"re5\"><span class=\"br0\">[</span><span class=\"br0\">]</span></span> nil <span class=\"kw1\">then</span> nil<br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">RangeToString</span> S<span class=\"sy0\">#</span>E<span class=\"br0\">}</span><br/>     <span class=\"kw1\">if</span> E<span class=\"sy0\">-</span>S <span class=\"sy0\">&gt;=</span> 2 <span class=\"kw1\">then</span><br/>        <span class=\"br0\">{</span>VirtualString<span class=\"sy0\">.</span>toString S<span class=\"sy0\">#</span><span class=\"st0\">\"-\"</span><span class=\"sy0\">#</span>E<span class=\"br0\">}</span><br/>     <span class=\"kw1\">else</span><br/>        <span class=\"br0\">{</span>CommaSeparated<br/>         <span class=\"br0\">{</span>Map <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>number S E 1<span class=\"br0\">}</span> Int<span class=\"sy0\">.</span>toString<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">CommaSeparated</span> Xs<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Flatten <span class=\"br0\">{</span>Intersperse <span class=\"st0\">\",\"</span> Xs<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Intersperse</span> Sep Xs<span class=\"br0\">}</span><br/>     <span class=\"kw1\">case</span> Xs <span class=\"kw1\">of</span> X<span class=\"sy0\">|</span>Y<span class=\"sy0\">|</span>Xr <span class=\"kw1\">then</span><br/>        X<span class=\"sy0\">|</span>Sep<span class=\"sy0\">|</span><span class=\"br0\">{</span>Intersperse Sep Y<span class=\"sy0\">|</span>Xr<span class=\"br0\">}</span><br/>     <span class=\"kw1\">else</span><br/>        Xs<br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo<br/>   <span class=\"br0\">{</span>Extract <span class=\"br0\">[</span> 0 1 2 4 6 7 8 11 12 14<br/>              15 16 17 18 19 20 21 22 23 24<br/>              25 27 28 29 30 31 32 33 35 36<br/>              37 38 39 <span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "Pascal", "loc": 76, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> RangeExtraction<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$mode objfpc}{$H+}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  <span class=\"co2\">{$IFDEF UNIX}{$IFDEF UseCThreads}</span><br/>  cthreads<span class=\"sy1\">,</span><br/>  <span class=\"co2\">{$ENDIF}{$ENDIF}</span><br/>  SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> RangeExtraction<span class=\"br0\">(</span><span class=\"kw1\">const</span> Seq<span class=\"sy1\">:</span> <span class=\"kw4\">array</span> <span class=\"kw1\">of</span> <span class=\"kw4\">integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">String</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">const</span><br/>  SubSeqLen <span class=\"sy3\">=</span> <span class=\"nu0\">3</span><span class=\"sy1\">;</span> <span class=\"co1\">// minimal length of the range, can be changed.</span><br/><span class=\"kw1\">var</span><br/>  i<span class=\"sy1\">,</span> j<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>  Separator<span class=\"sy1\">:</span> <span class=\"kw4\">string</span> <span class=\"sy3\">=</span> <span class=\"st0\">''</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">''</span><span class=\"sy1\">;</span><br/>  i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Low<span class=\"br0\">(</span>Seq<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">while</span> i &lt;<span class=\"sy3\">=</span> High<span class=\"br0\">(</span>Seq<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">begin</span><br/>    j <span class=\"sy1\">:</span><span class=\"sy3\">=</span> i<span class=\"sy1\">;</span><br/>    <span class=\"co1\">// All subsequent values, starting from i, up to High(Seq) possibly</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>j &lt; High<span class=\"br0\">(</span>Seq<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw3\">and</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>Seq<span class=\"br0\">[</span>j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy3\">-</span>Seq<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>      Inc<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"co1\">// is it a range\u00a0?</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>j<span class=\"sy3\">-</span>i<span class=\"br0\">)</span> &gt;<span class=\"sy3\">=</span> <span class=\"br0\">(</span>SubSeqLen<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">begin</span><br/>      Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Result <span class=\"sy3\">+</span> Format<span class=\"br0\">(</span>Separator<span class=\"sy3\">+</span><span class=\"st0\">'%d-%d'</span><span class=\"sy1\">,</span><span class=\"br0\">[</span>Seq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">,</span>Seq<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"co1\">// Next value to be processed</span><br/>      Separator <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">','</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">else</span><br/>    <span class=\"kw1\">begin</span><br/>      <span class=\"co1\">// Loop, to process the case SubSeqLen &gt; 3</span><br/>      <span class=\"kw1\">while</span> i&lt;<span class=\"sy3\">=</span>j <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">begin</span><br/>        Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Result <span class=\"sy3\">+</span> Format<span class=\"br0\">(</span>Separator<span class=\"sy3\">+</span><span class=\"st0\">'%d'</span><span class=\"sy1\">,</span><span class=\"br0\">[</span>Seq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        Inc<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"co1\">// Next value to be processed</span><br/>        Separator <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">','</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">End</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> DisplayRange<span class=\"br0\">(</span><span class=\"kw1\">const</span> Seq<span class=\"sy1\">:</span> <span class=\"kw4\">array</span> <span class=\"kw1\">of</span> <span class=\"kw4\">integer</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  i<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Write</span><span class=\"br0\">(</span>Format<span class=\"br0\">(</span><span class=\"st0\">'[%d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>Seq<span class=\"br0\">[</span>Low<span class=\"br0\">(</span>Seq<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Low<span class=\"br0\">(</span>Seq<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> High<span class=\"br0\">(</span>Seq<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">Write</span><span class=\"br0\">(</span>Format<span class=\"br0\">(</span><span class=\"st0\">',%d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>Seq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'] =&gt; '</span> <span class=\"sy3\">+</span> RangeExtraction<span class=\"br0\">(</span>Seq<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">WriteLn</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">End</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span><span class=\"nu0\">8</span><span class=\"sy1\">,</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span><span class=\"nu0\">9</span><span class=\"sy1\">,</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span><span class=\"nu0\">11</span><span class=\"sy1\">,</span><span class=\"nu0\">12</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  DisplayRange<span class=\"br0\">(</span><span class=\"br0\">[</span><br/>      <span class=\"nu0\">0</span><span class=\"sy1\">,</span>  <span class=\"nu0\">1</span><span class=\"sy1\">,</span>  <span class=\"nu0\">2</span><span class=\"sy1\">,</span>  <span class=\"nu0\">4</span><span class=\"sy1\">,</span>  <span class=\"nu0\">6</span><span class=\"sy1\">,</span>  <span class=\"nu0\">7</span><span class=\"sy1\">,</span>  <span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span><br/>     <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">17</span><span class=\"sy1\">,</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span><br/>     <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">31</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">33</span><span class=\"sy1\">,</span> <span class=\"nu0\">35</span><span class=\"sy1\">,</span> <span class=\"nu0\">36</span><span class=\"sy1\">,</span><br/>     <span class=\"nu0\">37</span><span class=\"sy1\">,</span> <span class=\"nu0\">38</span><span class=\"sy1\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">ReadLn</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 15, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> rangext <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$str</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/join.html\"><span class=\"kw3\">join</span></a> <span class=\"st_h\">' '</span><span class=\"sy0\">,</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"nu0\">1</span> <span class=\"kw1\">while</span> <span class=\"re0\">$str</span> <span class=\"sy0\">=~</span> <a href=\"http://perldoc.perl.org/functions/s.html\"><span class=\"kw3\">s</span></a><span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">+-</span><span class=\"br0\">]</span><span class=\"sy0\">?</span><span class=\"re0\">\\d</span><span class=\"sy0\">+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">+-</span><span class=\"br0\">]</span><span class=\"sy0\">?</span><span class=\"re0\">\\d</span><span class=\"sy0\">+</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">{</span><span class=\"co3\">$1</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/abs.html\"><span class=\"kw3\">abs</span></a><span class=\"br0\">(</span><span class=\"co3\">$2</span> <span class=\"sy0\">-</span> <span class=\"co3\">$1</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'~'</span> <span class=\"sy0\">:</span> <span class=\"st_h\">','</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"co3\">$2</span><span class=\"br0\">}</span>eg<span class=\"sy0\">;</span> <span class=\"co1\"># abs for neg ranges</span><br/>    <span class=\"re0\">$str</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/(\\d+)~(?:[+-]?\\d+~)+([+-]?\\d+)/$1-$2/g</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$str</span> <span class=\"sy0\">=~</span> <span class=\"co2\">tr/~/,/</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$str</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Test and display</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@test</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span>  <span class=\"nu0\">1</span>  <span class=\"nu0\">2</span>  <span class=\"nu0\">4</span>  <span class=\"nu0\">6</span>  <span class=\"nu0\">7</span>  <span class=\"nu0\">8</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">14</span><br/>             <span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span> <span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span><br/>             <span class=\"nu0\">25</span> <span class=\"nu0\">27</span> <span class=\"nu0\">28</span> <span class=\"nu0\">29</span> <span class=\"nu0\">30</span> <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">35</span> <span class=\"nu0\">36</span><br/>             <span class=\"nu0\">37</span> <span class=\"nu0\">38</span> <span class=\"nu0\">39</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> rangext<span class=\"br0\">(</span><span class=\"re0\">@test</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 24, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> range<span class=\"sy0\">-</span>extraction <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"re0\">@ints</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$prev</span> <span class=\"sy0\">=</span> NaN<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@ranges</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"re0\">@ints</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$int</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"re0\">$int</span> <span class=\"sy0\">==</span> <span class=\"re0\">$prev</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@ranges</span><span class=\"br0\">[</span><span class=\"sy0\">*-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> <span class=\"re0\">$int</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@ranges</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"re0\">$int</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$prev</span> <span class=\"sy0\">=</span> <span class=\"re0\">$int</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw3\">join</span> <span class=\"st_h\">','</span><span class=\"sy0\">,</span> <span class=\"re0\">@ranges</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">@r</span> <span class=\"br0\">{</span> <span class=\"re0\">@r</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">??</span> <span class=\"st0\">\"@r[0]<a class=\"__cf_email__\" data-cfemail=\"15385567\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[*-1]\"</span> <span class=\"sy0\">!!</span> <span class=\"re0\">@r</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> range<span class=\"sy0\">-</span>extraction<br/>    <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> range<span class=\"sy0\">-</span>extraction<br/>    <span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span><br/>    <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>    <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"nu0\">35</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span><br/>    <span class=\"nu0\">37</span><span class=\"sy0\">,</span> <span class=\"nu0\">38</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 26, "block": "<pre class=\"text highlighted_source\">function spout(integer first, integer this, sequence s)<br/>string res<br/>    if first=this-1 then<br/>        res = sprintf(\"%d\",s[first])<br/>    else<br/>        res = sprintf(\"%d%s%d\",{s[first],iff(first=this-2?',':'-'),s[this-1]})<br/>    end if<br/>    return res<br/>end function<br/>\u00a0<br/>function extract_ranges(sequence s)<br/>integer first = 1<br/>string out = \"\"<br/>    if length(s)!=0 then<br/>        for i=2 to length(s) do<br/>            if s[i]!=s[i-1]+1 then<br/>                out &amp;= spout(first,i,s)&amp;','<br/>                first = i<br/>            end if<br/>        end for<br/>        out &amp;= spout(first,length(s)+1,s)<br/>    end if<br/>    return out<br/>end function<br/>\u00a0<br/>puts(1,extract_ranges({0,1,2,4,6,7,8,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39}))</pre>"}, {"lang": "PicoLisp", "loc": 11, "block": "<pre class=\"text highlighted_source\">(de rangeextract (Lst)<br/>   (glue \",\"<br/>      (make<br/>         (while Lst<br/>            (let (N (pop 'Lst)  M N)<br/>               (while (= (inc M) (car Lst))<br/>                  (setq M (pop 'Lst)) )<br/>               (cond<br/>                  ((= N M) (link N))<br/>                  ((= (inc N) M) (link N M))<br/>                  (T (link (list N '- M))) ) ) ) ) ) )</pre>"}, {"lang": "PL/I", "loc": 48, "block": "<pre class=\"pli highlighted_source\"><span class=\"coMULTI\">/* Modified 19 November 2011 to meet requirement that there be at  */</span><br/><span class=\"coMULTI\">/* least 3 items in a run.                                         */</span><br/>range_extraction<span class=\"sy0\">:</span>                         <span class=\"coMULTI\">/* 17 August 2010 */</span><br/>   <span class=\"kw1\">procedure</span> <span class=\"kw1\">options</span> <span class=\"br0\">(</span><span class=\"kw1\">main</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> <span class=\"br0\">(</span>c<span class=\"sy0\">,</span> d<span class=\"br0\">)</span> <span class=\"kw1\">character</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> <span class=\"br0\">(</span>old<span class=\"sy0\">,</span> <span class=\"kw1\">new</span><span class=\"sy0\">,</span> <span class=\"kw1\">initial</span><span class=\"br0\">)</span> <span class=\"kw1\">fixed</span> <span class=\"kw1\">binary</span> <span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> <span class=\"kw1\">in</span> <span class=\"kw1\">file</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> out <span class=\"kw1\">file</span> <span class=\"kw1\">output</span><span class=\"sy0\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">open</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span><span class=\"kw1\">in</span><span class=\"br0\">)</span>  <span class=\"kw1\">title</span> <span class=\"br0\">(</span><span class=\"st0\">'/range2.dat,type(text),recsize(80)'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">open</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span>out<span class=\"br0\">)</span> <span class=\"kw1\">output</span> <span class=\"kw1\">title</span> <span class=\"br0\">(</span><span class=\"st0\">'/range2.out,type(text),recsize(70)'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>   c <span class=\"sy0\">=</span> <span class=\"st0\">' '</span><span class=\"sy0\">;</span> d <span class=\"sy0\">=</span> <span class=\"st0\">','</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">get</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span><span class=\"kw1\">in</span><span class=\"br0\">)</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span>old<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">do</span> forever<span class=\"sy0\">;</span><br/>      <span class=\"kw1\">initial</span> <span class=\"sy0\">=</span> old<span class=\"sy0\">;</span><br/>      <span class=\"kw1\">on</span> <span class=\"kw1\">endfile</span> <span class=\"br0\">(</span><span class=\"kw1\">in</span><span class=\"br0\">)</span> <span class=\"kw1\">begin</span><span class=\"sy0\">;</span><br/>         <span class=\"kw1\">put</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span>out<span class=\"br0\">)</span> <span class=\"kw1\">edit</span> <span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"kw1\">trim</span><span class=\"br0\">(</span>old<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>         <span class=\"kw1\">stop</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">get</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span><span class=\"kw1\">in</span><span class=\"br0\">)</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"kw1\">new</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"kw1\">new</span> <span class=\"sy0\">=</span> old<span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">do</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* we have a run. */</span><br/>            <span class=\"kw1\">on</span> <span class=\"kw1\">endfile</span> <span class=\"br0\">(</span><span class=\"kw1\">in</span><span class=\"br0\">)</span> <span class=\"kw1\">begin</span><span class=\"sy0\">;</span><br/>               <span class=\"kw1\">if</span> old <span class=\"sy0\">&gt;</span> <span class=\"kw1\">initial</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span> d <span class=\"sy0\">=</span> <span class=\"st0\">'-'</span><span class=\"sy0\">;</span><br/>                  <span class=\"kw1\">put</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span>out<span class=\"br0\">)</span> <span class=\"kw1\">edit</span> <span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"kw1\">trim</span><span class=\"br0\">(</span><span class=\"kw1\">initial</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> <span class=\"kw1\">trim</span><span class=\"br0\">(</span>old<span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>               <span class=\"kw1\">stop</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw1\">new</span> <span class=\"sy0\">=</span> old<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>               old <span class=\"sy0\">=</span> <span class=\"kw1\">new</span><span class=\"sy0\">;</span><br/>               <span class=\"kw1\">get</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span><span class=\"kw1\">in</span><span class=\"br0\">)</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"kw1\">new</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>            <span class=\"coMULTI\">/* At this point, old holds the last in a run;           */</span><br/>            <span class=\"coMULTI\">/* initial holds the first in a run.                     */</span><br/>            <span class=\"coMULTI\">/* if there are only two members in a run, don't use the */</span><br/>            <span class=\"coMULTI\">/* range notation.                                       */</span><br/>            <span class=\"kw1\">if</span> old <span class=\"sy0\">&gt;</span> <span class=\"kw1\">initial</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span> d <span class=\"sy0\">=</span> <span class=\"st0\">'-'</span><span class=\"sy0\">;</span><br/>               <span class=\"kw1\">put</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span>out<span class=\"br0\">)</span> <span class=\"kw1\">edit</span> <span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"kw1\">trim</span><span class=\"br0\">(</span><span class=\"kw1\">initial</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> <span class=\"kw1\">trim</span><span class=\"br0\">(</span>old<span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            old <span class=\"sy0\">=</span> <span class=\"kw1\">new</span><span class=\"sy0\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">else</span> <span class=\"coMULTI\">/* we have an isolated value. */</span><br/>         <span class=\"kw1\">do</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">put</span> <span class=\"kw1\">file</span> <span class=\"br0\">(</span>out<span class=\"br0\">)</span> <span class=\"kw1\">edit</span> <span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"kw1\">trim</span><span class=\"br0\">(</span>old<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            old <span class=\"sy0\">=</span> <span class=\"kw1\">new</span><span class=\"sy0\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>      c<span class=\"sy0\">,</span> d <span class=\"sy0\">=</span> <span class=\"st0\">','</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">end</span> range_extraction<span class=\"sy0\">;</span></pre>"}, {"lang": "PowerShell", "loc": 32, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> range<span class=\"sy0\">-</span>extraction<span class=\"br0\">(</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"re0\">$arr</span>.Count <span class=\"kw4\">-gt</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"re0\">$arr</span> <span class=\"sy0\">=</span> <span class=\"re0\">$arr</span><br/>        <span class=\"re0\">$d</span> <span class=\"sy0\">=</span> <span class=\"re0\">$e</span> <span class=\"sy0\">=</span> <span class=\"re0\">$c</span><br/>        <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw4\">-eq</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"kw4\">-and</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$b</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw4\">-eq</span> <span class=\"re0\">$c</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$test</span> <span class=\"sy0\">=</span> <span class=\"re0\">$true</span><br/>            <span class=\"kw3\">while</span><span class=\"br0\">(</span><span class=\"re0\">$arr</span> <span class=\"kw4\">-and</span> <span class=\"re0\">$test</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$d</span> <span class=\"sy0\">=</span> <span class=\"re0\">$e</span><br/>                <span class=\"re0\">$e</span><span class=\"sy0\">,</span> <span class=\"re0\">$arr</span> <span class=\"sy0\">=</span> <span class=\"re0\">$arr</span><br/>                <span class=\"re0\">$test</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$d</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw4\">-eq</span> <span class=\"re0\">$e</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"re0\">$test</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"st0\">\"$a-$e\"</span><span class=\"br0\">}</span><br/>            <span class=\"kw3\">elseif</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">-not</span> <span class=\"re0\">$arr</span><span class=\"br0\">)</span> <span class=\"kw4\">-and</span> <span class=\"re0\">$test</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"st0\">\"$a-$d\"</span><span class=\"br0\">}</span><br/>            <span class=\"kw3\">elseif</span><span class=\"br0\">(</span><span class=\"kw4\">-not</span> <span class=\"re0\">$arr</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"st0\">\"$a-$d,$e\"</span><span class=\"br0\">}</span><br/>            <span class=\"kw3\">else</span><span class=\"br0\">{</span><span class=\"st0\">\"$a-$d,\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extraction <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"re0\">$e</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span>            <br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw3\">elseif</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$b</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw4\">-eq</span> <span class=\"re0\">$c</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"st0\">\"$a,\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extraction <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>        <span class=\"kw3\">else</span> <span class=\"br0\">{</span><span class=\"st0\">\"$a,$b,\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extraction <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw3\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$arr</span>.Count<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"nu0\">0</span> <span class=\"br0\">{</span><span class=\"st0\">\"\"</span><span class=\"br0\">}</span><br/>            <span class=\"nu0\">1</span> <span class=\"br0\">{</span><span class=\"st0\">\"$arr\"</span><span class=\"br0\">}</span><br/>            <span class=\"nu0\">2</span> <span class=\"br0\">{</span><span class=\"st0\">\"$($arr[0]),$($arr[1])\"</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>range<span class=\"sy0\">-</span>extraction <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span><br/><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/><span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"nu0\">35</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span><br/><span class=\"nu0\">37</span><span class=\"sy0\">,</span> <span class=\"nu0\">38</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Prolog", "loc": 90, "block": "<pre class=\"prolog highlighted_source\">range_extract <span class=\"sy1\">:-</span><br/>\tL <span class=\"sy6\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span>  <span class=\"nu0\">1</span><span class=\"sy4\">,</span>  <span class=\"nu0\">2</span><span class=\"sy4\">,</span>  <span class=\"nu0\">4</span><span class=\"sy4\">,</span>  <span class=\"nu0\">6</span><span class=\"sy4\">,</span>  <span class=\"nu0\">7</span><span class=\"sy4\">,</span>  <span class=\"nu0\">8</span><span class=\"sy4\">,</span> <span class=\"nu0\">11</span><span class=\"sy4\">,</span> <span class=\"nu0\">12</span><span class=\"sy4\">,</span> <span class=\"nu0\">14</span><span class=\"sy4\">,</span><br/>\t     <span class=\"nu0\">15</span><span class=\"sy4\">,</span> <span class=\"nu0\">16</span><span class=\"sy4\">,</span> <span class=\"nu0\">17</span><span class=\"sy4\">,</span> <span class=\"nu0\">18</span><span class=\"sy4\">,</span> <span class=\"nu0\">19</span><span class=\"sy4\">,</span> <span class=\"nu0\">20</span><span class=\"sy4\">,</span> <span class=\"nu0\">21</span><span class=\"sy4\">,</span> <span class=\"nu0\">22</span><span class=\"sy4\">,</span> <span class=\"nu0\">23</span><span class=\"sy4\">,</span> <span class=\"nu0\">24</span><span class=\"sy4\">,</span><br/>\t     <span class=\"nu0\">25</span><span class=\"sy4\">,</span> <span class=\"nu0\">27</span><span class=\"sy4\">,</span> <span class=\"nu0\">28</span><span class=\"sy4\">,</span> <span class=\"nu0\">29</span><span class=\"sy4\">,</span> <span class=\"nu0\">30</span><span class=\"sy4\">,</span> <span class=\"nu0\">31</span><span class=\"sy4\">,</span> <span class=\"nu0\">32</span><span class=\"sy4\">,</span> <span class=\"nu0\">33</span><span class=\"sy4\">,</span> <span class=\"nu0\">35</span><span class=\"sy4\">,</span> <span class=\"nu0\">36</span><span class=\"sy4\">,</span><br/>\t     <span class=\"nu0\">37</span><span class=\"sy4\">,</span> <span class=\"nu0\">38</span><span class=\"sy4\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">]</span> <span class=\"sy4\">,</span><br/>\twriteln<span class=\"br0\">(</span>L<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tpack_Range<span class=\"br0\">(</span>L<span class=\"sy4\">,</span> LP<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tmaplist<span class=\"br0\">(</span>study_Range<span class=\"sy4\">,</span> R<span class=\"sy4\">,</span> LP<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\textract_Range<span class=\"br0\">(</span>LA<span class=\"sy4\">,</span> R<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">atom_chars</span></a><span class=\"br0\">(</span>A<span class=\"sy4\">,</span> LA<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\twriteln<span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br/><span class=\"co1\">% extract_Range(?In,\u00a0?Out)</span><br/><span class=\"co1\">% In \u00a0: '-6,-3--1,3-5,7-11,14,15,17-20' =&gt;</span><br/><span class=\"co1\">% Out\u00a0: [-6], [-3--1], [3-5],[7-11], [14],[15], [17-20]</span><br/><span class=\"co1\">%</span><br/>extract_Range<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>extract_Range<span class=\"br0\">(</span>X <span class=\"sy4\">,</span> <span class=\"br0\">[</span>Range <span class=\"sy5\">|</span> Y1<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tget_Range<span class=\"br0\">(</span>X<span class=\"sy4\">,</span> U<span class=\"sy3\">-</span>U<span class=\"sy4\">,</span> Range<span class=\"sy4\">,</span> X1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\textract_Range<span class=\"br0\">(</span>X1<span class=\"sy4\">,</span> Y1<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>get_Range<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> Range<span class=\"sy3\">-</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> Range<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>get_Range<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"st_h\">','</span><span class=\"sy5\">|</span>B<span class=\"br0\">]</span><span class=\"sy4\">,</span> Range<span class=\"sy3\">-</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> Range<span class=\"sy4\">,</span> B<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> <span class=\"sy5\">!</span><span class=\"sy4\">.</span><br/>\u00a0<br/>get_Range<span class=\"br0\">(</span><span class=\"br0\">[</span>A <span class=\"sy5\">|</span> B<span class=\"br0\">]</span><span class=\"sy4\">,</span> EC<span class=\"sy4\">,</span> Range<span class=\"sy4\">,</span> R<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tappend_dl<span class=\"br0\">(</span>EC<span class=\"sy4\">,</span> <span class=\"br0\">[</span>A <span class=\"sy5\">|</span> U<span class=\"br0\">]</span><span class=\"sy3\">-</span>U<span class=\"sy4\">,</span> NEC<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget_Range<span class=\"br0\">(</span>B<span class=\"sy4\">,</span> NEC<span class=\"sy4\">,</span> Range<span class=\"sy4\">,</span> R<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>append_dl<span class=\"br0\">(</span>X<span class=\"sy3\">-</span>Y<span class=\"sy4\">,</span> Y<span class=\"sy3\">-</span>Z<span class=\"sy4\">,</span> X<span class=\"sy3\">-</span>Z<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br/><span class=\"co1\">%</span><br/><span class=\"co1\">% study Range(?In,\u00a0?Out)</span><br/><span class=\"co1\">% In \u00a0: [-6]</span><br/><span class=\"co1\">% Out\u00a0: [-6,-6]</span><br/><span class=\"co1\">%</span><br/><span class=\"co1\">% In \u00a0: [-3--1]</span><br/><span class=\"co1\">% Out\u00a0: [-3, -1]</span><br/><span class=\"co1\">%</span><br/>study_Range<span class=\"br0\">(</span>Range1<span class=\"sy4\">,</span> <span class=\"br0\">[</span>Deb<span class=\"sy4\">,</span> Deb<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>       <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">catch</span></a><span class=\"br0\">(</span><a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">number_chars</span></a><span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Range1<span class=\"br0\">)</span><span class=\"sy4\">,</span> Deb<span class=\"sy4\">,</span> false<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>study_Range<span class=\"br0\">(</span>Range1<span class=\"sy4\">,</span> <span class=\"br0\">[</span>Deb<span class=\"sy4\">,</span> Fin<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>       append<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"st_h\">'-'</span><span class=\"sy5\">|</span>B<span class=\"br0\">]</span><span class=\"sy4\">,</span> Range1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>       A \\<span class=\"sy6\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>       <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">number_chars</span></a><span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> A<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>       <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">number_chars</span></a><span class=\"br0\">(</span>Fin<span class=\"sy4\">,</span> B<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br/><span class=\"co1\">%</span><br/><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span>clpfd<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/><span class=\"co1\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br/><span class=\"co1\">%</span><br/><span class=\"co1\">% Pack Range(?In,\u00a0?Out)</span><br/><span class=\"co1\">% In \u00a0: -6,</span><br/><span class=\"co1\">% Out\u00a0: [-6]</span><br/><span class=\"co1\">%</span><br/><span class=\"co1\">% In \u00a0: -3, -2,-1</span><br/><span class=\"co1\">% Out\u00a0: [-3,-1]</span><br/><span class=\"co1\">%</span><br/>pack_Range<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>pack_Range<span class=\"br0\">(</span><span class=\"br0\">[</span>X<span class=\"sy5\">|</span>Rest<span class=\"br0\">]</span><span class=\"sy4\">,</span><span class=\"br0\">[</span><span class=\"br0\">[</span>X <span class=\"sy5\">|</span> V<span class=\"br0\">]</span><span class=\"sy5\">|</span>Packed<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">:-</span><br/>    run<span class=\"br0\">(</span>X<span class=\"sy4\">,</span>Rest<span class=\"sy4\">,</span> <span class=\"br0\">[</span>X<span class=\"sy5\">|</span>V<span class=\"br0\">]</span><span class=\"sy4\">,</span> RRest<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    pack_Range<span class=\"br0\">(</span>RRest<span class=\"sy4\">,</span>Packed<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>run<span class=\"br0\">(</span>Fin<span class=\"sy4\">,</span><span class=\"br0\">[</span>Other<span class=\"sy5\">|</span>RRest<span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span>Deb<span class=\"sy4\">,</span> Fin<span class=\"br0\">]</span><span class=\"sy4\">,</span><span class=\"br0\">[</span>Other<span class=\"sy5\">|</span>RRest<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">:-</span><br/>\tFin #\\<span class=\"sy6\">=</span> Deb<span class=\"sy4\">,</span><br/>\tFin #\\<span class=\"sy6\">=</span> Deb <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\tOther #\\<span class=\"sy6\">=</span> Fin<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">.</span><br/>\u00a0<br/>run<span class=\"br0\">(</span>Fin<span class=\"sy4\">,</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><span class=\"br0\">[</span>_Var<span class=\"sy4\">,</span> Fin<span class=\"br0\">]</span><span class=\"sy4\">,</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>run<span class=\"br0\">(</span><a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">Var</span></a><span class=\"sy4\">,</span><span class=\"br0\">[</span>Var1<span class=\"sy5\">|</span>LRest<span class=\"br0\">]</span><span class=\"sy4\">,</span><span class=\"br0\">[</span>Deb<span class=\"sy4\">,</span> Fin<span class=\"br0\">]</span><span class=\"sy4\">,</span> RRest<span class=\"br0\">)</span><span class=\"sy1\">:-</span><br/>\tFin #\\<span class=\"sy6\">=</span> Deb<span class=\"sy4\">,</span><br/>\tFin #\\<span class=\"sy6\">=</span> Deb <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\tVar1 #<span class=\"sy6\">=</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">Var</span></a> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\trun<span class=\"br0\">(</span>Var1<span class=\"sy4\">,</span>LRest<span class=\"sy4\">,</span><span class=\"br0\">[</span>Deb<span class=\"sy4\">,</span> Fin<span class=\"br0\">]</span><span class=\"sy4\">,</span> RRest<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>run<span class=\"br0\">(</span>Val<span class=\"sy4\">,</span><span class=\"br0\">[</span>Other<span class=\"sy5\">|</span>RRest<span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span>Val<span class=\"sy4\">,</span> Val<span class=\"br0\">]</span><span class=\"sy4\">,</span><span class=\"br0\">[</span>Other<span class=\"sy5\">|</span>RRest<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 70, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">DataSection</span><br/>  <span class=\"kw1\">Data</span>.i  <span class=\"nu0\">33</span> <span class=\"co1\">;count of elements to be read</span><br/>  <span class=\"kw1\">Data</span>.i  <span class=\"nu0\">0</span>,  <span class=\"nu0\">1</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">4</span>,  <span class=\"nu0\">6</span>,  <span class=\"nu0\">7</span>,  <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span><br/>  <span class=\"kw1\">Data</span>.i  <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>, <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><br/><span class=\"kw1\">EndDataSection</span><br/>\u00a0<br/><span class=\"kw1\">NewList</span> values<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"co1\">;setup list</span><br/><span class=\"kw1\">Define</span> elementCount, i<br/><span class=\"kw1\">Read</span>.i elementCount<br/><span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> elementCount<br/>  <span class=\"kw2\">AddElement</span><span class=\"br0\">(</span>values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">Read</span>.i values<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.s rangeExtract<span class=\"br0\">(</span>List values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> listSize <span class=\"sy0\">=</span> ListSize<span class=\"br0\">(</span>values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Protected</span> rangeMarker, rangeStart, rangeIncrement, retraceSteps, rangeSize, endOfRange, output.s, <span class=\"kw3\">sub</span>.s<br/>\u00a0<br/>  <span class=\"kw1\">ForEach</span> values<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    rangeStart <span class=\"sy0\">=</span> values<span class=\"br0\">(</span><span class=\"br0\">)</span>: <br/>    <span class=\"kw3\">sub</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>rangeStart<span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">NextElement</span><span class=\"br0\">(</span>values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      retraceSteps <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>      rangeIncrement <span class=\"sy0\">=</span> values<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> rangeStart<br/>      <span class=\"kw1\">If</span> rangeIncrement <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">Or</span> rangeIncrement <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>        <span class=\"co1\">;found start of possible range</span><br/>        <span class=\"kw1\">If</span> <span class=\"kw2\">ListIndex</span><span class=\"br0\">(</span>values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> listSize<br/>          retraceSteps <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>          rangeSize <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>          endOfRange <span class=\"sy0\">=</span> #False<br/>          rangeMarker <span class=\"sy0\">=</span> values<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">While</span> <span class=\"kw2\">NextElement</span><span class=\"br0\">(</span>values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> values<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> rangeMarker <span class=\"sy0\">&lt;&gt;</span> rangeIncrement<br/>              endOfRange <span class=\"sy0\">=</span> #True<br/>              <span class=\"kw1\">Break</span><br/>            <span class=\"kw1\">EndIf</span><br/>            rangeSize <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>            rangeMarker <span class=\"sy0\">=</span> values<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">Wend</span><br/>\u00a0<br/>          <span class=\"kw1\">If</span> rangeSize <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span><br/>            <span class=\"kw3\">sub</span> <span class=\"sy0\">=</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>rangeStart<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>rangeMarker<span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> endOfRange<br/>              retraceSteps <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">;at end of list</span><br/>            <span class=\"kw1\">Else</span><br/>              retraceSteps <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">EndIf</span> <br/>          <span class=\"kw1\">EndIf</span><br/>        <span class=\"kw1\">EndIf</span> <br/>      <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>      <span class=\"co1\">;return to the value before look-aheads</span><br/>      <span class=\"kw1\">While</span> retraceSteps <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw2\">PreviousElement</span><span class=\"br0\">(</span>values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>: retraceSteps <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">Wend</span> <br/>    <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>    output <span class=\"sy0\">+</span> <span class=\"kw3\">sub</span> <span class=\"sy0\">+</span> <span class=\"st0\">\",\"</span> <br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"kw2\">RTrim</span><span class=\"br0\">(</span>output, <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span> <br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>rangeExtract<span class=\"br0\">(</span>values<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 28, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">def</span> range_extract<span class=\"br0\">(</span>lst<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Yield 2-tuple ranges or 1-tuple single elements from list of increasing ints'</span><br/>    lenlst <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>lst<span class=\"br0\">)</span><br/>    i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">while</span> i<span class=\"sy0\">&lt;</span> lenlst:<br/>        low <span class=\"sy0\">=</span> lst<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>        <span class=\"kw1\">while</span> i <span class=\"sy0\">&lt;</span>lenlst-<span class=\"nu0\">1</span> <span class=\"kw1\">and</span> lst<span class=\"br0\">[</span>i<span class=\"br0\">]</span>+<span class=\"nu0\">1</span> <span class=\"sy0\">==</span> lst<span class=\"br0\">[</span>i+<span class=\"nu0\">1</span><span class=\"br0\">]</span>: i +<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>        hi <span class=\"sy0\">=</span> lst<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>        <span class=\"kw1\">if</span>   hi - low <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">2</span>:<br/>            <span class=\"kw1\">yield</span> <span class=\"br0\">(</span>low<span class=\"sy0\">,</span> hi<span class=\"br0\">)</span><br/>        <span class=\"kw1\">elif</span> hi - low <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>:<br/>            <span class=\"kw1\">yield</span> <span class=\"br0\">(</span>low<span class=\"sy0\">,</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">yield</span> <span class=\"br0\">(</span>hi<span class=\"sy0\">,</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span>:<br/>            <span class=\"kw1\">yield</span> <span class=\"br0\">(</span>low<span class=\"sy0\">,</span><span class=\"br0\">)</span><br/>        i +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">def</span> printr<span class=\"br0\">(</span>ranges<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span> <span class=\"st0\">','</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">'%i-%i'</span>\u00a0% r<span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span> <span class=\"kw1\">else</span> <span class=\"st0\">'%i'</span>\u00a0% r<span class=\"br0\">)</span><br/>                     <span class=\"kw1\">for</span> r <span class=\"kw1\">in</span> ranges <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    <span class=\"kw1\">for</span> lst <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>-<span class=\"nu0\">8</span><span class=\"sy0\">,</span> -<span class=\"nu0\">7</span><span class=\"sy0\">,</span> -<span class=\"nu0\">6</span><span class=\"sy0\">,</span> -<span class=\"nu0\">3</span><span class=\"sy0\">,</span> -<span class=\"nu0\">2</span><span class=\"sy0\">,</span> -<span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span><br/>                 <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>                 <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">33</span><span class=\"sy0\">,</span> <span class=\"nu0\">35</span><span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"sy0\">,</span> <span class=\"nu0\">37</span><span class=\"sy0\">,</span> <span class=\"nu0\">38</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"br0\">]</span><span class=\"br0\">]</span>:<br/>        <span class=\"co1\">#print(list(range_extract(lst)))</span><br/>        printr<span class=\"br0\">(</span>range_extract<span class=\"br0\">(</span>lst<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Qi", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(define make-range<br/>  Start Start -&gt; [\",\" Start]<br/>  Start End   -&gt; [\",\" Start \",\" End] where (= End (+ Start 1))<br/>  Start End   -&gt; [\",\" Start \"-\" End])<br/>\u00a0<br/>(define range-extract-0<br/>  Start End []     -&gt; (make-range Start End)<br/>  Start End [A|As] -&gt; (range-extract-0 Start A As) where (= (+ 1 End) A)<br/>  Start End [A|As] -&gt; (append (make-range Start End) (range-extract-0 A A As)))<br/>\u00a0<br/>(define range-extract<br/>  [A |As] -&gt; (FORMAT NIL \"~{~a~}\" (tail (range-extract-0 A A As))))<br/>\u00a0<br/>(range-extract [ 0  1  2  4  6  7  8 11 12 14<br/>                15 16 17 18 19 20 21 22 23 24<br/>                25 27 28 29 30 31 32 33 35 36<br/>                37 38 39])<br/>\u00a0</pre>"}, {"lang": "R", "loc": 14, "block": "<pre class=\"rsplus highlighted_source\">extract.<span class=\"me1\">range</span> <span class=\"sy0\">=</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/function.html\"><span class=\"kw2\">function</span></a><span class=\"br0\">(</span>v<span class=\"br0\">)</span><br/>   <span class=\"br0\">{</span>r <span class=\"sy0\">=</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/c.html\"><span class=\"kw2\">c</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/which.html\"><span class=\"kw2\">which</span></a><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/diff.html\"><span class=\"kw2\">diff</span></a><span class=\"br0\">(</span>v<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>v<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"co1\"># 'r' holds the index of the start of each run of sequential</span><br/>      <span class=\"co1\"># elements.</span><br/>    paste0<span class=\"br0\">(</span>collapse <span class=\"sy0\">=</span> <span class=\"st0\">\",\"</span>, v<span class=\"br0\">[</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/utils/html/head.html\"><span class=\"kw8\">head</span></a><span class=\"br0\">(</span>r, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span>, <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/ifelse.html\"><span class=\"kw2\">ifelse</span></a><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/diff.html\"><span class=\"kw2\">diff</span></a><span class=\"br0\">(</span>r<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>, <span class=\"st0\">\"\"</span>,<br/>        paste0<span class=\"br0\">(</span><br/>            <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/ifelse.html\"><span class=\"kw2\">ifelse</span></a><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/diff.html\"><span class=\"kw2\">diff</span></a><span class=\"br0\">(</span>r<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span>, <span class=\"st0\">\",\"</span>, <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span>,<br/>            v<span class=\"br0\">[</span>r<span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/print.html\"><span class=\"kw2\">print</span></a><span class=\"br0\">(</span>extract.<span class=\"me1\">range</span><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/c.html\"><span class=\"kw2\">c</span></a><span class=\"br0\">(</span><br/>    <span class=\"sy0\">-</span><span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/print.html\"><span class=\"kw2\">print</span></a><span class=\"br0\">(</span>extract.<span class=\"me1\">range</span><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/c.html\"><span class=\"kw2\">c</span></a><span class=\"br0\">(</span><br/>    <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>,<br/>    <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>, <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(define (list-&gt;ranges xs)<br/>  (define (R lo hi)<br/>    (if (= lo hi) (~a lo) (~a lo (if (= 1 (- hi lo)) \",\" \"-\") hi)))<br/>  (let loop ([xs xs] [lo #f] [hi #f] [r '()])<br/>    (cond [(null? xs) (string-join (reverse (if lo (cons (R lo hi) r) r)) \",\")]<br/>          [(not hi) (loop (cdr xs) (car xs) (car xs) r)]<br/>          [(= 1 (- (car xs) hi)) (loop (cdr xs) lo (car xs) r)]<br/>          [else (loop xs #f #f (cons (R lo hi) r))])))<br/>\u00a0<br/>(list-&gt;ranges '(0 1 2 4 6 7 8 11 12 14 15 16 17 18 19 20 21 22 23<br/>                24 25 27 28 29 30 31 32 33 35 36 37 38 39))<br/>;; -&gt; \"0-2,4,6-8,11,12,14-25,27-33,35-39\"<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 19, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program creates a  range extraction  from a  list of numbers  (can be negative.) */</span><br/>old=<span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">4</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">14</span> <span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span> <span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span> <span class=\"nu0\">25</span> <span class=\"nu0\">27</span> <span class=\"nu0\">28</span> <span class=\"nu0\">29</span> <span class=\"nu0\">30</span> <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">35</span> <span class=\"nu0\">36</span> <span class=\"nu0\">37</span> <span class=\"nu0\">38</span> <span class=\"nu0\">39</span><br/>#=<span class=\"kw6\">words</span><span class=\"br0\">(</span>old<span class=\"br0\">)</span>                                     <span class=\"coMULTI\">/*number of integers in the number list*/</span><br/>new=                                             <span class=\"coMULTI\">/*the new list, possibly with ranges.  */</span><br/>     <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span>  #;              x=<span class=\"kw6\">word</span><span class=\"br0\">(</span>old,j<span class=\"br0\">)</span>   <span class=\"coMULTI\">/*obtain Jth number in the  old  list. */</span><br/>     new=new<span class=\"st0\">','</span>  x                               <span class=\"coMULTI\">/*append  \"    \"    to  \"   new    \"   */</span><br/>     inc=<span class=\"nu0\">1</span>                                       <span class=\"coMULTI\">/*start with an increment of one  (1). */</span><br/>              <span class=\"kw1\">do</span> k=j+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> #;    y=<span class=\"kw6\">word</span><span class=\"br0\">(</span>old,k<span class=\"br0\">)</span>   <span class=\"coMULTI\">/*get the Kth number in the number list*/</span><br/>              <span class=\"kw1\">if</span> y<span class=\"sy0\">\\</span>==x+inc  <span class=\"kw3\">then</span> <span class=\"kw1\">leave</span>           <span class=\"coMULTI\">/*is this number not &gt; previous by inc?*/</span><br/>              inc=inc+<span class=\"nu0\">1</span>;         g=y             <span class=\"coMULTI\">/*increase the range, assign  G (good).*/</span><br/>              <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span><br/>     <span class=\"kw1\">if</span> k-<span class=\"nu0\">1</span>=j <span class=\"sy0\">|</span> g=x+<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>              <span class=\"coMULTI\">/*Is the range=0\u25021?  Then keep truckin'*/</span><br/>     new=new<span class=\"st0\">'-'</span>g;   j=k-<span class=\"nu0\">1</span>                        <span class=\"coMULTI\">/*indicate a range of #s;  change index*/</span><br/>     <span class=\"kw3\">end</span>            <span class=\"coMULTI\">/*j*/</span><br/>\u00a0<br/>new=<span class=\"kw6\">space</span><span class=\"br0\">(</span><span class=\"kw6\">substr</span><span class=\"br0\">(</span>new, <span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>                     <span class=\"coMULTI\">/*elide leading comma, also all blanks.*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'old:'</span>  old                                  <span class=\"coMULTI\">/*display the old range of numbers.    */</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'new:'</span>  new                                  <span class=\"coMULTI\">/*   \"     \"  new  list  \"    \"        */</span><br/>                                                 <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 45, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Range extraction<br/>\u00a0<br/>int = \"0,1,2,4,6,7,8,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39\"<br/>int = str2list(substr(int, \",\", nl))<br/>sumint = [] <br/>intnew = 1<br/>for n=1 to len(int)<br/>     flag = 0<br/>     nr = 0<br/>     intnew = 0<br/>     for m=n to len(int)-1<br/>         if int[m] = int[m+1] - 1<br/>            intnew = m+1<br/>            flag = 1<br/>            nr = nr + 1<br/>         else<br/>            exit<br/>          ok<br/>     next<br/>     if flag = 1 and nr &gt; 1<br/>        if intnew\u00a0!= 0<br/>           add(sumint, [n,intnew])<br/>           n = m<br/>        ok<br/>     else<br/>        add(sumint, [n,\"\"])<br/>     ok<br/>next<br/>showarray(sumint)<br/>\u00a0<br/>func showarray(vect)<br/>       see \"[\"<br/>       svect = \"\"<br/>       for n = 1 to len(vect)<br/>           if vect[n][2]\u00a0!= \"\"<br/>              svect = svect +\"\" + int[vect[n][1]] + \"-\" + int[vect[n][2]] + \", \"<br/>           else<br/>              svect = svect +\"\" + int[vect[n][1]] + \", \"<br/>           ok<br/>       next<br/>       svect = left(svect, len(svect) - 2)<br/>       see svect<br/>       see \"]\" + nl<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 35, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> range_extract<span class=\"br0\">(</span>l<span class=\"br0\">)</span><br/>  <span class=\"co1\"># pad the list with a big value, so that the last loop iteration will</span><br/>  <span class=\"co1\"># append something to the range</span><br/>  sorted, range = l.<span class=\"me1\">sort</span>.<span class=\"me1\">concat</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw3\">Float</span>::MAX<span class=\"br0\">]</span><span class=\"br0\">)</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  canidate_number = sorted.<span class=\"me1\">first</span><br/>\u00a0<br/>  <span class=\"co1\"># enumerate over the sorted list in pairs of current number and next by index</span><br/>  sorted.<span class=\"me1\">each_cons</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>current_number, next_number<span class=\"sy0\">|</span><br/>    <span class=\"co1\"># if there is a gap between the current element and its next by index</span><br/>    <span class=\"kw1\">if</span> current_number.<span class=\"me1\">succ</span> <span class=\"sy0\">&lt;</span> next_number<br/>      <span class=\"co1\"># if current element is our first or our next by index</span><br/>      <span class=\"kw1\">if</span> canidate_number == current_number<br/>        <span class=\"co1\"># put the first element or next by index into our range as a string</span><br/>        range <span class=\"sy0\">&lt;&lt;</span> canidate_number.<span class=\"me1\">to_s</span><br/>      <span class=\"kw1\">else</span><br/>        <span class=\"co1\"># if current element is not the same as the first or next</span><br/>        <span class=\"co1\"># add [first or next, first or next equals current add , else -, current]</span><br/>        seperator = canidate_number.<span class=\"me1\">succ</span> == current_number\u00a0? <span class=\"st0\">\",\"</span>\u00a0: <span class=\"st0\">\"-\"</span><br/>        range <span class=\"sy0\">&lt;&lt;</span> <span class=\"st0\">\"%d%s%d\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span>canidate_number, seperator, current_number<span class=\"br0\">]</span><br/>      <span class=\"kw1\">end</span><br/>      <span class=\"co1\"># make the first element the next element</span><br/>      canidate_number = next_number<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  range.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>lst = <span class=\"br0\">[</span><br/>    <span class=\"nu0\">0</span>,  <span class=\"nu0\">1</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">4</span>,  <span class=\"nu0\">6</span>,  <span class=\"nu0\">7</span>,  <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>,<br/>   <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>,<br/>   <span class=\"nu0\">25</span>, <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>,<br/>   <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><br/><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw3\">p</span> rng = range_extract<span class=\"br0\">(</span>lst<span class=\"br0\">)</span></pre>"}, {"lang": "Rust", "loc": 53, "block": "<pre class=\"text highlighted_source\">use std::ops::Add;<br/>\u00a0<br/>struct RangeFinder&lt;'a, T: 'a&gt; {<br/>    index: usize,<br/>    length: usize,<br/>    arr: &amp;'a [T],<br/>}<br/>\u00a0<br/>impl&lt;'a, T&gt; Iterator for RangeFinder&lt;'a, T&gt; where T: PartialEq + Add&lt;i8, Output=T&gt; + Copy {<br/>    type Item = (T,  Option&lt;T&gt;);<br/>    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {<br/>        if self.index == self.length {<br/>            return None;<br/>        }<br/>        let lo = self.index;<br/>        while self.index &lt; self.length - 1 &amp;&amp; self.arr[self.index + 1] == self.arr[self.index] + 1 {<br/>            self.index += 1<br/>        }<br/>        let hi = self.index;<br/>        self.index += 1;<br/>        if hi - lo &gt; 1 {<br/>            Some((self.arr[lo], Some(self.arr[hi])))<br/>        } else {<br/>            if hi - lo == 1 {<br/>                self.index -= 1<br/>            }<br/>            Some((self.arr[lo], None))<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl&lt;'a, T&gt; RangeFinder&lt;'a, T&gt; {<br/>    fn new(a: &amp;'a [T]) -&gt; Self {<br/>        RangeFinder {<br/>            index: 0,<br/>            arr: a,<br/>            length: a.len(),<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    let input_numbers\u00a0: &amp;[i8] = &amp;[0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>                                  15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>                                  25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>                                  37, 38, 39];<br/>    for (i, (lo, hi)) in RangeFinder::new(&amp;input_numbers).enumerate() {<br/>        if i &gt; 0 {print!(\",\")}<br/>        print!(\"{}\", lo);<br/>        if hi.is_some() {print!(\"-{}\", hi.unwrap())}<br/>    }<br/>    println!(\"\");<br/>}</pre>"}, {"lang": "Scala", "loc": 25, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Range <span class=\"br0\">{</span><br/>   <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> spanRange<span class=\"br0\">(</span>ls<span class=\"sy0\">:</span>List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>     <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> last<span class=\"sy0\">=</span>ls.<span class=\"me1\">head</span><br/>     ls span <span class=\"br0\">{</span>x <span class=\"sy0\">=&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> b<span class=\"sy0\">=</span>x<span class=\"sy0\">&lt;=</span>last+<span class=\"nu0\">1</span><span class=\"sy0\">;</span> last<span class=\"sy0\">=</span>x<span class=\"sy0\">;</span> b<span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span><br/>\u00a0<br/>   <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> toRangeList<span class=\"br0\">(</span>ls<span class=\"sy0\">:</span>List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>List<span class=\"br0\">[</span>List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>ls <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Nil <span class=\"sy0\">=&gt;</span> List<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span> spanRange<span class=\"br0\">(</span>ls<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>range, Nil<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> List<span class=\"br0\">(</span>range<span class=\"br0\">)</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>range, rest<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> range <span class=\"sy0\">::</span> toRangeList<span class=\"br0\">(</span>rest<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span><br/>\u00a0<br/>   <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> toRangeString<span class=\"br0\">(</span>ls<span class=\"sy0\">:</span>List<span class=\"br0\">[</span>List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>ls map <span class=\"br0\">{</span>r<span class=\"sy0\">=&gt;</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>r.<span class=\"me1\">size</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> r mkString <span class=\"st0\">\",\"</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> r.<span class=\"me1\">head</span> + <span class=\"st0\">\"-\"</span> + r.<span class=\"me1\">last</span><br/>   <span class=\"br0\">}</span> mkString <span class=\"st0\">\",\"</span><br/>\u00a0<br/>   <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> l<span class=\"sy0\">=</span>List<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span>, <span class=\"nu0\">25</span>,<br/>                 <span class=\"nu0\">27</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">31</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">33</span>, <span class=\"nu0\">35</span>, <span class=\"nu0\">36</span>, <span class=\"nu0\">37</span>, <span class=\"nu0\">38</span>, <span class=\"nu0\">39</span><span class=\"br0\">)</span><br/>      println<span class=\"br0\">(</span>toRangeString<span class=\"br0\">(</span>toRangeList<span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 30, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>range start end<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> start end<span class=\"br0\">)</span><br/>         `<span class=\"br0\">(</span><span class=\"st0\">\",\"</span> ,start<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> end <span class=\"br0\">(</span><span class=\"sy0\">+</span> start <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         `<span class=\"br0\">(</span><span class=\"st0\">\",\"</span> ,start <span class=\"st0\">\",\"</span> ,end<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">else</span><br/>         `<span class=\"br0\">(</span><span class=\"st0\">\",\"</span> ,start <span class=\"st0\">\"-\"</span> ,end<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extract<span class=\"sy0\">-</span><span class=\"nu0\">0</span> start end a<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null?</span> a<span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>range start end<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> end<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extract<span class=\"sy0\">-</span><span class=\"nu0\">0</span> start <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">else</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">append</span> <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>range start end<span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extract<span class=\"sy0\">-</span><span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extract a<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>apply <span class=\"kw1\">string-append</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>                              <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">number?</span> x<span class=\"br0\">)</span><br/>                                  <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> x<span class=\"br0\">)</span><br/>                                  x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                            <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extract<span class=\"sy0\">-</span><span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>range<span class=\"sy0\">-</span>extract '<span class=\"br0\">(</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">1</span>  <span class=\"nu0\">2</span>  <span class=\"nu0\">4</span>  <span class=\"nu0\">6</span>  <span class=\"nu0\">7</span>  <span class=\"nu0\">8</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">14</span><br/>                 <span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span> <span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span><br/>                 <span class=\"nu0\">25</span> <span class=\"nu0\">27</span> <span class=\"nu0\">28</span> <span class=\"nu0\">29</span> <span class=\"nu0\">30</span> <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">35</span> <span class=\"nu0\">36</span><br/>                 <span class=\"nu0\">37</span> <span class=\"nu0\">38</span> <span class=\"nu0\">39</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Seed7", "loc": 32, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const func string: rangeExtraction (in array integer: numbers) is func<br/>  result<br/>    var string: rangeStri is \"\";<br/>  local<br/>    var integer: index is 1;<br/>    var integer: index2 is 1;<br/>  begin<br/>    while index &lt;= length(numbers) do<br/>      while index2 &lt;= pred(length(numbers)) and numbers[succ(index2)] = succ(numbers[index2]) do<br/>        incr(index2);<br/>      end while;<br/>      if succ(index) &lt; index2 then<br/>        rangeStri &amp;:= \",\" &lt;&amp; numbers[index] &lt;&amp; \"-\" &lt;&amp; numbers[index2];<br/>      else<br/>        while index &lt;= index2 do<br/>          rangeStri &amp;:= \",\" &lt;&amp; numbers[index];<br/>          incr(index);<br/>\tend while;<br/>      end if;<br/>      incr(index2);<br/>      index\u00a0:= index2;<br/>    end while;<br/>    rangeStri\u00a0:= rangeStri[2 ..];<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(rangeExtraction([] (0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19,<br/>        20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39)));<br/>  end func;</pre>"}, {"lang": "SNOBOL4", "loc": 22, "block": "<pre class=\"text highlighted_source\">*       # Absolute value               <br/>        define('abs(n)')\u00a0:(abs_end)<br/>abs     abs = ~(abs = lt(n,0) -n) n\u00a0:(return)<br/>abs_end<br/>\u00a0<br/>        define('rangext(str)d1,d2')\u00a0:(rangext_end)<br/>rangext num = ('+' | '-' | '') span('0123456789')<br/>rxt1    str ',' span(' ') = ' '\u00a0:s(rxt1)<br/>rxt2    str num . d1 ' ' num . d2 = <br/>+           d1 ('~,'\u00a0? *eq(abs(d2 - d1),1) '~' | ',') d2\u00a0:s(rxt2)<br/>rxt3    str ('~' | '-') num '~' = '-'\u00a0:s(rxt3)<br/>rxt4    str '~' = ','\u00a0:s(rxt4)<br/>        rangext = str\u00a0:(return)<br/>rangext_end<br/>\u00a0<br/>*       # Test and display        <br/>        test =  '0,  1,  2,  4,  6,  7,  8, 11, 12, 14, '<br/>+              '15, 16, 17, 18, 19, 20, 21, 22, 23, 24, '<br/>+              '25, 27, 28, 29, 30, 31, 32, 33, 35, 36, '<br/>+              '37, 38, 39'<br/>        output = rangext(test)<br/>end</pre>"}, {"lang": "Swift", "loc": 51, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>import Darwin<br/>\u00a0<br/>func ranges(from ints:[Int]) -&gt; [(Int, Int)] {<br/>\u00a0<br/>\tvar range\u00a0: (Int, Int)?<br/>\tvar ranges = [(Int, Int)]()<br/>\tfor this in ints {<br/>\t\tif let (start, end) = range {<br/>\t\t\tif this == end + 1 {<br/>\t\t\t\trange = (start, this)<br/>\t\t\t}<br/>\t\t\telse {<br/>\t\t\t\tranges.append(range!)<br/>\t\t\t\trange = (this, this)<br/>\t\t\t}<br/>\t\t}<br/>\t\telse { range = (this, this) }<br/>\t}<br/>\tranges.append(range!)<br/>\u00a0<br/>\treturn ranges<br/>}<br/>\u00a0<br/>func description(from ranges:[(Int, Int)]) -&gt; String {<br/>\tvar desc = \"\"<br/>\tfor (start, end) in ranges {<br/>\t\tdesc += desc.isEmpty\u00a0? \"\"\u00a0: \",\"<br/>\t\tif start == end {<br/>\t\t\tdesc += \"\\(start)\"<br/>\t\t}<br/>\t\telse if end == start + 1 {<br/>\t\t\tdesc += \"\\(start),\\(end)\"<br/>\t\t}<br/>\t\telse {<br/>\t\t\tdesc += \"\\(start)-\\(end)\"<br/>\t\t}<br/>\t}<br/>\treturn desc<br/>}<br/>\u00a0<br/>\u00a0<br/>let ex = [-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20]<br/>let longer = [0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>\t15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>\t25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>\t37, 38, 39]<br/>\u00a0<br/>print(description(from: ranges(from: ex)))<br/>print(description(from: ranges(from: longer)))<br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 29, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> rangeExtract <span class=\"kw2\">list</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> result <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$list</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> first <span class=\"br0\">[</span><span class=\"kw1\">set</span> last <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$list</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">foreach</span> term <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$list</span> <span class=\"nu0\">1</span> end<span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$term</span> == <span class=\"re0\">$last</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> last <span class=\"re0\">$term</span><br/>\t    <span class=\"kw1\">continue</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$last</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$first</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">append</span> result <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$last</span> == <span class=\"re0\">$first</span>+<span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"st0\">\",\"</span>\u00a0: <span class=\"st0\">\"-\"</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"re0\">$last</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">append</span> result <span class=\"st0\">\",\"</span> <span class=\"re0\">$term</span><br/>\t<span class=\"kw1\">set</span> first <span class=\"br0\">[</span><span class=\"kw1\">set</span> last <span class=\"re0\">$term</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$last</span> == <span class=\"re0\">$first</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">append</span> result <span class=\"st0\">\",\"</span> <span class=\"re0\">$last</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$last</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$first</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">append</span> result <span class=\"st0\">\"-\"</span> <span class=\"re0\">$last</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$result</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Commas already removed so it is a natural Tcl list</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span>rangeExtract <span class=\"br0\">{</span><br/>    <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">4</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">14</span><br/>    <span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span> <span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span><br/>    <span class=\"nu0\">25</span> <span class=\"nu0\">27</span> <span class=\"nu0\">28</span> <span class=\"nu0\">29</span> <span class=\"nu0\">30</span> <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">35</span> <span class=\"nu0\">36</span><br/>    <span class=\"nu0\">37</span> <span class=\"nu0\">38</span> <span class=\"nu0\">39</span><br/><span class=\"br0\">}</span><span class=\"br0\">]</span></pre>"}, {"lang": "TXR", "loc": 9, "block": "<pre class=\"text highlighted_source\">(defun range-extract (numbers)<br/>  `@{(mapcar [iff [callf &gt; length (ret 2)]<br/>                  (ret `@[@1 0]<a class=\"__cf_email__\" data-cfemail=\"654825\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[@1 -1]`)<br/>                  (ret `@{@1 \",\"}`)]<br/>             (mapcar (op mapcar car)<br/>                     (split [window-map 1\u00a0:reflect<br/>                                        (op list @2 (- @2 @1))<br/>                                        (sort (uniq numbers))]<br/>                            (op where [chain second (op &lt; 1)])))) \",\"}`)</pre>"}, {"lang": "TUSCRIPT", "loc": 15, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT,{}<br/>MODE DATA<br/>$$ numbers=*<br/>0,  1,  2,  4,  6,  7,  8, 11, 12, 14,<br/>15, 16, 17, 18, 19, 20, 21, 22, 23, 24,<br/>25, 27, 28, 29, 30, 31, 32, 33, 35, 36,<br/>37, 38, 39<br/>$$ MODE TUSCRIPT<br/>numbers=EXCHANGE   (numbers,\":,{0-00}\u00a0:':\")<br/>unrangednrs=JOIN   (numbers,\"\")<br/>rangednrs=COMBINE  (unrangednrs,\"\")<br/>rangednrs=EXCHANGE (rangednrs,\":':,:\")<br/>PRINT rangednrs<br/>\u00a0</pre>"}, {"lang": "UNIX Shell", "loc": 30, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/usr/bin/bash</span><br/>\u00a0<br/>range_contract <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><br/>    add_range <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">case</span> $<span class=\"br0\">(</span><span class=\"br0\">(</span> current - range_start <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>            <span class=\"nu0\">0</span><span class=\"br0\">)</span> ranges+=<span class=\"br0\">(</span> <span class=\"re1\">$range_start</span> <span class=\"br0\">)</span>          <span class=\"sy0\">;;</span><br/>            <span class=\"nu0\">1</span><span class=\"br0\">)</span> ranges+=<span class=\"br0\">(</span> <span class=\"re1\">$range_start</span> <span class=\"re1\">$current</span> <span class=\"br0\">)</span> <span class=\"sy0\">;;</span><br/>            <span class=\"sy0\">*</span><span class=\"br0\">)</span> ranges+=<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es2\">$range_start</span>-<span class=\"es2\">$current</span>\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;;</span><br/>        <span class=\"kw1\">esac</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"re2\">ranges</span>=<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"re2\">range_start</span>=<span class=\"re4\">$1</span><br/>    <span class=\"re2\">current</span>=<span class=\"re4\">$1</span><br/>    <span class=\"kw3\">shift</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> number; <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> number <span class=\"sy0\">&gt;</span> current+<span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">then</span><br/>            add_range<br/>            <span class=\"re2\">range_start</span>=<span class=\"re1\">$number</span><br/>        <span class=\"kw1\">fi</span><br/>        <span class=\"re2\">current</span>=<span class=\"re1\">$number</span><br/>    <span class=\"kw1\">done</span><br/>    add_range<br/>\u00a0<br/>    <span class=\"re2\">x</span>=<span class=\"st0\">\"<span class=\"es3\">${ranges[@]}</span>\"</span><br/>    <span class=\"kw3\">echo</span> <span class=\"co1\">${x// /,}</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/>range_contract <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">4</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">14</span> <span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span> <span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span> <span class=\"nu0\">25</span> <span class=\"nu0\">27</span> <span class=\"nu0\">28</span> <span class=\"nu0\">29</span> <span class=\"nu0\">30</span> <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">35</span> <span class=\"nu0\">36</span> <span class=\"nu0\">37</span> <span class=\"nu0\">38</span> <span class=\"nu0\">39</span></pre>"}, {"lang": "Ursala", "loc": 10, "block": "<pre class=\"text highlighted_source\">#import std<br/>#import int<br/>\u00a0<br/>x = &lt;0,1,2,4,6,7,8,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39&gt;<br/>\u00a0<br/>f = mat`,+ ==?(~&amp;l,^|T/~&amp;\u00a0:/`-)*bhPS+\u00a0%zP~~hzX*titZBPiNCSiNCQSL+ rlc ^|E/~&amp; predecessor<br/>\u00a0<br/>#show+<br/>\u00a0<br/>t = &lt;f x&gt;</pre>"}, {"lang": "VBA", "loc": 72, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Public</span> <span class=\"kw2\">Function</span> RangeExtraction(AList) <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"co1\">'AList is a variant that is an array, assumed filled with numbers in ascending order<br/></span>Const RangeDelim = <span class=\"st0\">\"-\"</span>          <span class=\"co1\">'range delimiter<br/></span><span class=\"kw4\">Dim</span> result <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw4\">Dim</span> InRange <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span><br/><span class=\"kw4\">Dim</span> Posn, ub, lb, rangestart, rangelen <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>\u00a0<br/>result = <span class=\"st0\">\"\"</span><br/><span class=\"co1\">'find dimensions of AList<br/></span>ub = <span class=\"kw4\">UBound</span>(AList)<br/>lb = <span class=\"kw4\">LBound</span>(AList)<br/>Posn = lb<br/><span class=\"kw3\">While</span> Posn &lt; ub<br/>  rangestart = Posn<br/>  rangelen = 0<br/>  InRange = <span class=\"kw5\">True</span><br/>  <span class=\"co1\">'try to extend the range<br/></span>  <span class=\"kw3\">While</span> InRange<br/>    rangelen = rangelen + 1<br/>    <span class=\"kw3\">If</span> Posn = ub <span class=\"kw3\">Then</span><br/>      InRange = <span class=\"kw5\">False</span><br/>    <span class=\"kw3\">Else</span><br/>      InRange = (AList(Posn + 1) = AList(Posn) + 1)<br/>      Posn = Posn + 1<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>  Wend<br/>  <span class=\"kw3\">If</span> rangelen &gt; 2 <span class=\"kw3\">Then</span> <span class=\"co1\">'output the range if it has more than 2 elements<br/></span>    result = result &amp; <span class=\"st0\">\",\"</span> &amp; Format$(AList(rangestart)) &amp; RangeDelim &amp; Format$(AList(rangestart + rangelen - 1))<br/>  <span class=\"kw3\">Else</span> <span class=\"co1\">'output the separate elements<br/></span>    <span class=\"kw3\">For</span> i = rangestart <span class=\"kw3\">To</span> rangestart + rangelen - 1<br/>      result = result &amp; <span class=\"st0\">\",\"</span> &amp; Format$(AList(i))<br/>    <span class=\"kw3\">Next</span><br/>  <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>  Posn = rangestart + rangelen<br/>Wend<br/>RangeExtraction = Mid$(result, 2) <span class=\"co1\">'get rid of first comma!<br/></span><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">Public</span> <span class=\"kw2\">Sub</span> RangeTest()<br/><span class=\"co1\">'test function RangeExtraction<br/></span><span class=\"co1\">'first test with a Variant array<br/></span><span class=\"kw4\">Dim</span> MyList <span class=\"kw4\">As</span> <span class=\"kw1\">Variant</span><br/>MyList = Array(0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39)<br/>Debug.<span class=\"kw4\">Print</span> <span class=\"st0\">\"a) \"</span>; RangeExtraction(MyList)<br/>\u00a0<br/><span class=\"co1\">'next test with an array of integers<br/></span><span class=\"kw4\">Dim</span> MyOtherList(1 <span class=\"kw3\">To</span> 20) <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>MyOtherList(1) = -6<br/>MyOtherList(2) = -3<br/>MyOtherList(3) = -2<br/>MyOtherList(4) = -1<br/>MyOtherList(5) = 0<br/>MyOtherList(6) = 1<br/>MyOtherList(7) = 3<br/>MyOtherList(8) = 4<br/>MyOtherList(9) = 5<br/>MyOtherList(10) = 7<br/>MyOtherList(11) = 8<br/>MyOtherList(12) = 9<br/>MyOtherList(13) = 10<br/>MyOtherList(14) = 11<br/>MyOtherList(15) = 14<br/>MyOtherList(16) = 15<br/>MyOtherList(17) = 17<br/>MyOtherList(18) = 18<br/>MyOtherList(19) = 19<br/>MyOtherList(20) = 20<br/>Debug.<span class=\"kw4\">Print</span> <span class=\"st0\">\"b) \"</span>; RangeExtraction(MyOtherList)<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0</pre>"}, {"lang": "VBScript", "loc": 41, "block": "<pre class=\"vb highlighted_source\"><span class=\"kw2\">Function</span> Range_Extraction(list)<br/>\tnum = Split(list,<span class=\"st0\">\",\"</span>)<br/>\t<span class=\"kw3\">For</span> i = 0 <span class=\"kw3\">To</span> <span class=\"kw4\">UBound</span>(num)<br/>\t\tstartnum = CInt(num(i))<br/>\t\tsum = startnum<br/>\t\t<span class=\"kw3\">Do</span> <span class=\"kw3\">While</span> i &lt;= <span class=\"kw4\">UBound</span>(num)<br/>\t\t\t<span class=\"kw3\">If</span> sum = CInt(num(i)) <span class=\"kw3\">Then</span><br/>\t\t\t\t<span class=\"kw3\">If</span> i = <span class=\"kw4\">UBound</span>(num) <span class=\"kw3\">Then</span><br/>\t\t\t\t\t<span class=\"kw3\">If</span> startnum &lt;&gt; CInt(num(i)) <span class=\"kw3\">Then</span><br/>\t\t\t\t\t\t<span class=\"kw3\">If</span> startnum + 1 = CInt(num(i)) <span class=\"kw3\">Then</span><br/>\t\t\t\t\t\t\tRange_Extraction = Range_Extraction &amp; startnum &amp; <span class=\"st0\">\",\"</span> &amp; num(i) &amp; <span class=\"st0\">\",\"</span><br/>\t\t\t\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\t\t\t\tRange_Extraction = Range_Extraction &amp; startnum &amp; <span class=\"st0\">\"-\"</span> &amp; num(i) &amp; <span class=\"st0\">\",\"</span><br/>\t\t\t\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\t\t\tRange_Extraction = Range_Extraction &amp; startnum &amp; <span class=\"st0\">\",\"</span><br/>\t\t\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>                                        <span class=\"kw2\">Exit</span> <span class=\"kw3\">Do</span><br/>\t\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\t\ti = i + 1<br/>\t\t\t\t\tsum = sum + 1<br/>\t\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\t<span class=\"kw3\">If</span> startnum = CInt(num(i-1)) <span class=\"kw3\">Then</span><br/>\t\t\t\t\tRange_Extraction = Range_Extraction &amp; startnum &amp; <span class=\"st0\">\",\"</span><br/>\t\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\t\t<span class=\"kw3\">If</span> startnum + 1 = CInt(num(i-1)) <span class=\"kw3\">Then</span><br/>\t\t\t\t\t\tRange_Extraction = Range_Extraction &amp; startnum &amp; <span class=\"st0\">\",\"</span> &amp; num(i-1) &amp; <span class=\"st0\">\",\"</span><br/>\t\t\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\t\t\tRange_Extraction = Range_Extraction &amp; startnum &amp; <span class=\"st0\">\"-\"</span> &amp; num(i-1) &amp; <span class=\"st0\">\",\"</span><br/>\t\t\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t\t\ti = i - 1<br/>\t\t\t\t<span class=\"kw2\">Exit</span> <span class=\"kw3\">Do</span><br/>\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t<span class=\"kw3\">Loop</span><br/>\t<span class=\"kw3\">Next</span><br/>\tRange_Extraction = Left(Range_Extraction,Len(Range_Extraction)-1)<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/>WScript.StdOut.Write Range_Extraction(<span class=\"st0\">\"0,1,2,4,6,7,8,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,36,37,38,39\"</span>)</pre>"}, {"lang": "zkl", "loc": 10, "block": "<pre class=\"text highlighted_source\">fcn range(ns){<br/>   fcn(w){<br/>      if (w.atEnd) return(Void.Stop);<br/>      a:=b:=w.next(); n:=0;<br/>      while(b+1 == (c:=w.peekN(n))){ n+=1; b=c }<br/>      if(n&gt;1){do(n){w.next()}; return(\"%d-%d\".fmt(a,b)); }<br/>      a<br/>   }\u00a0:<br/>   (0).pump(*,List,_.fp(ns.walker().tweak(Void,Void))).concat(\",\");<br/>}</pre>"}]}