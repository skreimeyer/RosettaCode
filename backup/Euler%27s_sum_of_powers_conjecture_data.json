{"task": "Euler%27s_sum_of_powers_conjecture", "blocks": [{"lang": "360 Assembly", "loc": 122, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>EULERCO  CSECT<br/>         USING  EULERCO,R13<br/>         B      80(R15)<br/>         DC     17F'0'<br/>         DC     CL8'EULERCO'<br/>         STM    R14,R12,12(R13)<br/>         ST     R13,4(R15)<br/>         ST     R15,8(R13)<br/>         LR     R13,R15<br/>         ZAP    X1,=P'1'<br/>LOOPX1   ZAP    PT,MAXN            do x1=1 to maxn-4<br/>         SP     PT,=P'4'<br/>         CP     X1,PT<br/>         BH     ELOOPX1<br/>         ZAP    PT,X1<br/>         AP     PT,=P'1'<br/>         ZAP    X2,PT<br/>LOOPX2   ZAP    PT,MAXN            do x2=x1+1 to maxn-3<br/>         SP     PT,=P'3'<br/>         CP     X2,PT<br/>         BH     ELOOPX2<br/>         ZAP    PT,X2<br/>         AP     PT,=P'1'<br/>         ZAP    X3,PT<br/>LOOPX3   ZAP    PT,MAXN            do x3=x2+1 to maxn-2<br/>         SP     PT,=P'2'<br/>         CP     X3,PT<br/>         BH     ELOOPX3<br/>         ZAP    PT,X3<br/>         AP     PT,=P'1'<br/>         ZAP    X4,PT<br/>LOOPX4   ZAP    PT,MAXN            do x4=x3+1 to maxn-1<br/>         SP     PT,=P'1'<br/>         CP     X4,PT<br/>         BH     ELOOPX4<br/>         ZAP    PT,X4<br/>         AP     PT,=P'1'<br/>         ZAP    X5,PT              x5=x4+1<br/>         ZAP    SUMX,=P'0'         sumx=0<br/>         ZAP    PT,X1              x1<br/>         BAL    R14,POWER5<br/>         AP     SUMX,PT<br/>         ZAP    PT,X2              x2<br/>         BAL    R14,POWER5<br/>         AP     SUMX,PT<br/>         ZAP    PT,X3              x3<br/>         BAL    R14,POWER5<br/>         AP     SUMX,PT<br/>         ZAP    PT,X4              x4<br/>         BAL    R14,POWER5<br/>         AP     SUMX,PT            sumx=x1**5+x2**5+x3**5+x4**5<br/>         ZAP    PT,X5              x5<br/>         BAL    R14,POWER5<br/>         ZAP    VALX,PT            valx=x5**5<br/>LOOPX5   CP     X5,MAXN            while x5&lt;=maxn &amp; valx&lt;=sumx<br/>         BH     ELOOPX5<br/>         CP     VALX,SUMX<br/>         BH     ELOOPX5<br/>         CP     VALX,SUMX          if valx=sumx <br/>         BNE    NOTEQUAL<br/>         MVI    BUF,C' '<br/>         MVC    BUF+1(79),BUF      clear buffer<br/>         MVC    WC,MASK<br/>         ED     WC,X1              x1<br/>         MVC    BUF+0(8),WC+8     <br/>         MVC    WC,MASK<br/>         ED     WC,X2              x2<br/>         MVC    BUF+8(8),WC+8    <br/>         MVC    WC,MASK<br/>         ED     WC,X3              x3<br/>         MVC    BUF+16(8),WC+8    <br/>         MVC    WC,MASK<br/>         ED     WC,X4              x4<br/>         MVC    BUF+24(8),WC+8     <br/>         MVC    WC,MASK<br/>         ED     WC,X5              x5<br/>         MVC    BUF+32(8),WC+8     <br/>         XPRNT  BUF,80             output x1,x2,x3,x4,x5<br/>         B      ELOOPX1<br/>NOTEQUAL ZAP    PT,X5<br/>         AP     PT,=P'1'<br/>         ZAP    X5,PT              x5=x5+1<br/>         ZAP    PT,X5<br/>         BAL    R14,POWER5<br/>         ZAP    VALX,PT            valx=x5**5<br/>         B      LOOPX5<br/>ELOOPX5  AP     X4,=P'1'<br/>         B      LOOPX4<br/>ELOOPX4  AP     X3,=P'1'<br/>         B      LOOPX3<br/>ELOOPX3  AP     X2,=P'1'<br/>         B      LOOPX2<br/>ELOOPX2  AP     X1,=P'1'<br/>         B      LOOPX1<br/>ELOOPX1  L      R13,4(0,R13)<br/>         LM     R14,R12,12(R13)<br/>         XR     R15,R15<br/>         BR     R14<br/>POWER5   ZAP    PQ,PT              ^1<br/>         MP     PQ,PT              ^2<br/>         MP     PQ,PT              ^3<br/>         MP     PQ,PT              ^4<br/>         MP     PQ,PT              ^5<br/>         ZAP    PT,PQ<br/>         BR     R14<br/>MAXN     DC     PL8'250'<br/>X1       DS     PL8<br/>X2       DS     PL8<br/>X3       DS     PL8<br/>X4       DS     PL8<br/>X5       DS     PL8<br/>SUMX     DS     PL8<br/>VALX     DS     PL8<br/>PT       DS     PL8<br/>PQ       DS     PL8<br/>WC       DS     CL17            <br/>MASK     DC     X'40',13X'20',X'212060'  CL17<br/>BUF      DS     CL80<br/>         YREGS  <br/>         END<br/>\u00a0</pre>"}, {"lang": "Ada", "loc": 76, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Sum_Of_Powers <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">type</span> Base <span class=\"kw1\">is</span> <span class=\"kw3\">range</span> <span class=\"nu0\">0</span> .. <span class=\"nu0\">250</span>; <span class=\"co1\">-- A, B, C, D and Y are in that range</span><br/>   <span class=\"kw3\">type</span> Num <span class=\"kw1\">is</span> <span class=\"kw3\">range</span> <span class=\"nu0\">0</span> .. <span class=\"nu0\">4</span>*<span class=\"br0\">(</span><span class=\"nu0\">250</span>**<span class=\"nu0\">5</span><span class=\"br0\">)</span>; <span class=\"co1\">-- (A**5 + ... + D**5) is in that range</span><br/>   <span class=\"kw3\">subtype</span> Fit <span class=\"kw1\">is</span> Num <span class=\"kw3\">range</span> <span class=\"nu0\">0</span> .. <span class=\"nu0\">250</span>**<span class=\"nu0\">5</span>; <span class=\"co1\">-- Y**5 is in that range</span><br/>\u00a0<br/>   Modulus: <span class=\"kw3\">constant</span> Num\u00a0:= <span class=\"nu0\">254</span>;<br/>   <span class=\"kw3\">type</span> Modular <span class=\"kw1\">is</span> <span class=\"kw2\">mod</span> Modulus;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Result_Type <span class=\"kw1\">is</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"kw3\">of</span> Base; <span class=\"co1\">-- this will hold A,B,C,D and Y</span><br/>\u00a0<br/>   <span class=\"kw3\">type</span> Y_Type <span class=\"kw1\">is</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>Modular<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Base;<br/>   <span class=\"kw3\">type</span> Y_Sum_Type <span class=\"kw1\">is</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>Modular<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Fit;<br/>\u00a0<br/>   Y_Sum: Y_Sum_Type\u00a0:= <span class=\"br0\">(</span><span class=\"kw3\">others</span> =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;  <br/>   Y: Y_Type\u00a0:= <span class=\"br0\">(</span><span class=\"kw3\">others</span> =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>      <span class=\"co1\">-- for I in 0 .. 250, we set Y_Sum(I**5 mod Modulus)\u00a0:= I**5</span><br/>      <span class=\"co1\">--                       and Y(I**5 mod Modulus)\u00a0:= I</span><br/>      <span class=\"co1\">-- Modulus has been chosen to avoid collisions on (I**5 mod Modulus)</span><br/>      <span class=\"co1\">-- later we will compute Sum_ABCD\u00a0:= A**5 + B**5 + C**5 + D**5</span><br/>      <span class=\"co1\">-- and check if Y_Sum(Sum_ABCD mod modulus) = Sum_ABCD</span><br/>\u00a0<br/>   <span class=\"kw3\">function</span> Compute_Coefficients <span class=\"kw1\">return</span> Result_Type <span class=\"kw1\">is</span>  <br/>\u00a0<br/>      Sum_A: Fit;<br/>      Sum_AB, Sum_ABC, Sum_ABCD: Num;<br/>      Short: Modular;<br/>\u00a0<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> A <span class=\"kw3\">in</span> Base<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> .. <span class=\"nu0\">246</span> <span class=\"kw1\">loop</span><br/>         Sum_A\u00a0:= Num<span class=\"br0\">(</span>A<span class=\"br0\">)</span> ** <span class=\"nu0\">5</span>;<br/>         <span class=\"kw1\">for</span> B <span class=\"kw3\">in</span> A .. <span class=\"nu0\">247</span> <span class=\"kw1\">loop</span><br/>            Sum_AB\u00a0:= Sum_A + <span class=\"br0\">(</span>Num<span class=\"br0\">(</span>B<span class=\"br0\">)</span> ** <span class=\"nu0\">5</span><span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">for</span> C <span class=\"kw3\">in</span> Base'Max<span class=\"br0\">(</span>B,<span class=\"nu0\">1</span><span class=\"br0\">)</span> .. <span class=\"nu0\">248</span> <span class=\"kw1\">loop</span> <span class=\"co1\">-- if A=B=0 then skip C=0</span><br/>               Sum_ABC\u00a0:= Sum_AB + <span class=\"br0\">(</span>Num<span class=\"br0\">(</span>C<span class=\"br0\">)</span> ** <span class=\"nu0\">5</span><span class=\"br0\">)</span>;<br/>               <span class=\"kw1\">for</span> D <span class=\"kw3\">in</span> C .. <span class=\"nu0\">249</span> <span class=\"kw1\">loop</span><br/>                  Sum_ABCD\u00a0:= Sum_ABC + <span class=\"br0\">(</span>Num<span class=\"br0\">(</span>D<span class=\"br0\">)</span> ** <span class=\"nu0\">5</span><span class=\"br0\">)</span>;<br/>                  Short   \u00a0:= Modular<span class=\"br0\">(</span>Sum_ABCD <span class=\"kw2\">mod</span> Modulus<span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">if</span> Y_Sum<span class=\"br0\">(</span>Short<span class=\"br0\">)</span> = Sum_ABCD <span class=\"kw1\">then</span><br/>                     <span class=\"kw1\">return</span> A &amp; B &amp; C &amp; D &amp; Y<span class=\"br0\">(</span>Short<span class=\"br0\">)</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> &amp; <span class=\"nu0\">0</span> &amp; <span class=\"nu0\">0</span> &amp; <span class=\"nu0\">0</span> &amp; <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">end</span> Compute_Coefficients;<br/>\u00a0<br/>   Tmp: Fit;<br/>   ABCD_Y: Result_Type;<br/>\u00a0<br/><span class=\"kw1\">begin</span> <span class=\"co1\">-- main program</span><br/>\u00a0<br/>   <span class=\"co1\">-- initialize Y_Sum and Y</span><br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Base<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> .. <span class=\"nu0\">250</span> <span class=\"kw1\">loop</span><br/>      Tmp\u00a0:= Num<span class=\"br0\">(</span>I<span class=\"br0\">)</span>**<span class=\"nu0\">5</span>;<br/>      <span class=\"kw1\">if</span> Y_Sum<span class=\"br0\">(</span>Modular<span class=\"br0\">(</span>Tmp <span class=\"kw2\">mod</span> Modulus<span class=\"br0\">)</span><span class=\"br0\">)</span> /= <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <br/>         <span class=\"kw3\">raise</span> Program_Error <span class=\"kw3\">with</span> <span class=\"st0\">\"Collision: Change Modulus and recompile!\"</span>;<br/>      <span class=\"kw1\">else</span><br/>         Y_Sum<span class=\"br0\">(</span>Modular<span class=\"br0\">(</span>Tmp <span class=\"kw2\">mod</span> Modulus<span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0:= Tmp;<br/>         Y<span class=\"br0\">(</span>Modular<span class=\"br0\">(</span>Tmp <span class=\"kw2\">mod</span> Modulus<span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0:= I;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>\u00a0<br/>   <span class=\"co1\">-- search for a solution (A, B, C, D, Y)</span><br/>   ABCD_Y\u00a0:= Compute_Coefficients;<br/>\u00a0<br/>   <span class=\"co1\">-- output result</span><br/>   <span class=\"kw1\">for</span> Number <span class=\"kw3\">of</span> ABCD_Y <span class=\"kw1\">loop</span><br/>      Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put</span><span class=\"br0\">(</span>Base'Image<span class=\"br0\">(</span>Number<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">New_Line</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span> Sum_Of_Powers;</pre>"}, {"lang": "ALGOL 68", "loc": 45, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># max number will be the highest integer we will consider                    #</span><br/><span class=\"kw3\">INT</span> max number <span class=\"sy1\">=</span> 250<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># Construct a table of the fifth powers of 1\u00a0: max number                    #</span><br/><span class=\"br0\">[</span> max number <span class=\"br0\">]</span><span class=\"kw4\">LONG</span> <span class=\"kw3\">INT</span> fifth<span class=\"sy1\">;</span><br/><span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> max number <span class=\"kw2\">DO</span><br/>    <span class=\"kw4\">LONG</span> <span class=\"kw3\">INT</span> i2 <span class=\"sy1\">=</span>  i <span class=\"sy1\">*</span> i<span class=\"sy1\">;</span><br/>    fifth<span class=\"br0\">[</span> i <span class=\"br0\">]</span> <span class=\"sy1\">:=</span> i2 <span class=\"sy1\">*</span> i2 <span class=\"sy1\">*</span> i<br/><span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># find the first a, b, c, d, e such that a^5 + b^5 + c^5 + d^5 = e^5         #</span><br/><span class=\"coMULTI\"># as the fifth powers are in order, we can use a binary search to determine  #</span><br/><span class=\"coMULTI\"># whether the value is in the table                                          #</span><br/><span class=\"kw3\">BOOL</span> found <span class=\"sy1\">:=</span> <span class=\"kw7\">FALSE</span><span class=\"sy1\">;</span><br/><span class=\"kw2\">FOR</span> a <span class=\"kw2\">TO</span> max number <span class=\"kw2\">WHILE</span> <span class=\"kw8\">NOT</span> found <span class=\"kw2\">DO</span><br/>    <span class=\"kw2\">FOR</span> b <span class=\"kw2\">FROM</span> a <span class=\"kw2\">TO</span> max number <span class=\"kw2\">WHILE</span> <span class=\"kw8\">NOT</span> found <span class=\"kw2\">DO</span><br/>        <span class=\"kw2\">FOR</span> c <span class=\"kw2\">FROM</span> b <span class=\"kw2\">TO</span> max number <span class=\"kw2\">WHILE</span> <span class=\"kw8\">NOT</span> found <span class=\"kw2\">DO</span><br/>            <span class=\"kw2\">FOR</span> d <span class=\"kw2\">FROM</span> c <span class=\"kw2\">TO</span> max number <span class=\"kw2\">WHILE</span> <span class=\"kw8\">NOT</span> found <span class=\"kw2\">DO</span><br/>                <span class=\"kw4\">LONG</span> <span class=\"kw3\">INT</span> sum   <span class=\"sy1\">=</span> fifth<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy1\">+</span> fifth<span class=\"br0\">[</span>b<span class=\"br0\">]</span> <span class=\"sy1\">+</span> fifth<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy1\">+</span> fifth<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>                <span class=\"kw3\">INT</span>      low  <span class=\"sy1\">:=</span> d<span class=\"sy1\">;</span><br/>                <span class=\"kw3\">INT</span>      high <span class=\"sy1\">:=</span> max number<span class=\"sy1\">;</span><br/>                <span class=\"kw2\">WHILE</span> low <span class=\"sy1\">&lt;</span> high<br/>                  <span class=\"kw16\">AND</span> <span class=\"kw8\">NOT</span> found<br/>                <span class=\"kw2\">DO</span><br/>                    <span class=\"kw3\">INT</span> e <span class=\"sy1\">:=</span> <span class=\"br0\">(</span> low <span class=\"sy1\">+</span> high <span class=\"br0\">)</span> <span class=\"kw12\">OVER</span> 2<span class=\"sy1\">;</span><br/>                    <span class=\"kw2\">IF</span> fifth<span class=\"br0\">[</span> e <span class=\"br0\">]</span> <span class=\"sy1\">=</span> sum<br/>                    <span class=\"kw2\">THEN</span><br/>                        <span class=\"coMULTI\"># the value at e is a fifth power                    #</span><br/>                        found <span class=\"sy1\">:=</span> <span class=\"kw7\">TRUE</span><span class=\"sy1\">;</span><br/>                        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> a<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy1\">+</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> b<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"st0\">\"^5 + \"</span><br/>                                 <span class=\"sy1\">+</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> c<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy1\">+</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> d<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"st0\">\"^5 = \"</span><br/>                                 <span class=\"sy1\">+</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> e<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"st0\">\"^5\"</span><br/>                                 <span class=\"br0\">)</span><br/>                               <span class=\"sy1\">,</span> <span class=\"kw22\">newline</span><br/>                               <span class=\"br0\">)</span><br/>                             <span class=\"br0\">)</span><br/>                    <span class=\"kw2\">ELIF</span> sum <span class=\"sy1\">&lt;</span> fifth<span class=\"br0\">[</span> e <span class=\"br0\">]</span><br/>                    <span class=\"kw2\">THEN</span> high <span class=\"sy1\">:=</span> e <span class=\"sy1\">-</span> 1<br/>                    <span class=\"kw2\">ELSE</span> low  <span class=\"sy1\">:=</span> e <span class=\"sy1\">+</span> 1<br/>                    <span class=\"kw2\">FI</span><br/>                <span class=\"kw2\">OD</span><br/>            <span class=\"kw2\">OD</span><br/>        <span class=\"kw2\">OD</span><br/>    <span class=\"kw2\">OD</span><br/><span class=\"kw2\">OD</span></pre>"}, {"lang": "ALGOL W", "loc": 129, "block": "<pre class=\"text highlighted_source\">begin<br/>   \u00a0% find a, b, c, d, e such that a^5 + b^5 + c^5 + d^5 = e^5                             \u00a0%<br/>   \u00a0%                        where 1 &lt;= a &lt;= b &lt;= c &lt;= d &lt;= e &lt;= 250                       \u00a0%<br/>   \u00a0% we solve this using the equivalent equation a^5 + b^5 + c^5 = e^5 - d^5              \u00a0%<br/>   \u00a0% 250^5 is 976 562 500 000 - too large for a 32 bit number so we will use pairs of     \u00a0%<br/>   \u00a0% integers and constrain their values to be in 0..1 000 000                            \u00a0%<br/>   \u00a0% Note only positive numbers are needed                                                \u00a0%<br/>    integer MAX_NUMBER, MAX_V;<br/>    MAX_NUMBER\u00a0:= 250;<br/>    MAX_V     \u00a0:= 1000000;<br/>    begin<br/>       \u00a0% quick sorts the fifth power differences table                                    \u00a0%<br/>        procedure quickSort5 ( integer value lb, ub )\u00a0;<br/>            if ub &gt; lb then begin<br/>               \u00a0% more than one element, so must sort                                      \u00a0%<br/>                integer left, right, pivot, pivotLo, pivotHi;<br/>                left   \u00a0:= lb;<br/>                right  \u00a0:= ub;<br/>               \u00a0% choosing the middle element of the array as the pivot\u00a0%<br/>                pivot  \u00a0:= left + ( ( ( right + 1 ) - left ) div 2 );<br/>                pivotLo\u00a0:= loD( pivot );<br/>                pivotHi\u00a0:= hiD( pivot );<br/>                while begin<br/>                    while left  &lt;= ub<br/>                      and begin integer cmp;<br/>                                cmp\u00a0:= hiD( left ) - pivotHi;<br/>                                if cmp = 0 then cmp\u00a0:= loD( left ) - pivotLo;<br/>                                cmp &lt; 0<br/>                          end<br/>                    do left\u00a0:= left + 1;<br/>                    while right &gt;= lb<br/>                      and begin integer cmp;<br/>                                cmp\u00a0:= hiD( right ) - pivotHi;<br/>                                if cmp = 0 then cmp\u00a0:= loD( right ) - pivotLo;<br/>                                cmp &gt; 0<br/>                          end<br/>                    do right\u00a0:= right - 1;<br/>                    left &lt;= right<br/>                end do begin<br/>                    integer swapLo, swapHi, swapD, swapE;<br/>                    swapLo      \u00a0:= loD( left  );<br/>                    swapHi      \u00a0:= hiD( left  );<br/>                    swapD       \u00a0:= Dd(  left  );<br/>                    swapE       \u00a0:= De(  left  );<br/>                    loD( left  )\u00a0:= loD( right );<br/>                    hiD( left  )\u00a0:= hiD( right );<br/>                    Dd(  left  )\u00a0:= Dd(  right );<br/>                    De(  left  )\u00a0:= De(  right );<br/>                    loD( right )\u00a0:= swapLo;<br/>                    hiD( right )\u00a0:= swapHi;<br/>                    Dd(  right )\u00a0:= swapD;<br/>                    De(  right )\u00a0:= swapE;<br/>                    left        \u00a0:= left  + 1;<br/>                    right       \u00a0:= right - 1<br/>                end while_left_le_right\u00a0;<br/>                quickSort5( lb,   right );<br/>                quickSort5( left, ub    )<br/>            end quickSort5\u00a0;<br/>       \u00a0% table of fifth powers                                                            \u00a0%<br/>        integer array lo5, hi5         ( 1\u00a0:: MAX_NUMBER );<br/>       \u00a0% table if differences between fifth powers                                        \u00a0%<br/>        integer array loD, hiD, De, Dd ( 1\u00a0:: MAX_NUMBER * MAX_NUMBER );<br/>        integer dUsed, dPos;<br/>       \u00a0% compute fifth powers                                                             \u00a0%<br/>        for i\u00a0:= 1 until MAX_NUMBER do begin<br/>            lo5( i )\u00a0:= i * i; hi5( i )\u00a0:= 0;<br/>            for p\u00a0:= 3 until 5 do begin<br/>                integer carry;<br/>                lo5( i )\u00a0:= lo5( i ) * i;<br/>                carry   \u00a0:= lo5( i ) div MAX_V;<br/>                lo5( i )\u00a0:= lo5( i ) rem MAX_V;<br/>                hi5( i )\u00a0:= hi5( i ) * i;<br/>                hi5( i )\u00a0:= hi5( i ) + carry<br/>            end for_p<br/>        end for_i\u00a0;<br/>       \u00a0% compute the differences between fifth powers e^5 - d^5, 1 &lt;= d &lt; e &lt;= MAX_NUMBER \u00a0%<br/>        dUsed\u00a0:= 0;<br/>        for e\u00a0:= 2 until MAX_NUMBER do begin<br/>            for d\u00a0:= 1 until e - 1  do begin<br/>                dUsed\u00a0:= dUsed + 1;<br/>                De(  dUsed )\u00a0:= e;<br/>                Dd(  dUsed )\u00a0:= d;<br/>                loD( dUsed )\u00a0:= lo5( e ) - lo5( d );<br/>                hiD( dUsed )\u00a0:= hi5( e ) - hi5( d );<br/>                if loD( dUsed ) &lt; 0 then begin<br/>                    loD( dUsed )\u00a0:= loD( dUsed ) + MAX_V;<br/>                    hiD( dUsed )\u00a0:= hiD( dUsed ) - 1<br/>                end if_need_to_borrow<br/>            end for_d<br/>        end for_e;<br/>       \u00a0% sort the fifth power differences                                                 \u00a0%<br/>        quickSort5( 1, dUsed );<br/>       \u00a0% attempt to find a^5 + b^5 + c^5 = e^5 - d^5                                      \u00a0%<br/>        for a\u00a0:= 1 until MAX_NUMBER do begin<br/>            integer loA, hiA;<br/>            loA\u00a0:= lo5( a ); hiA\u00a0:= hi5( a );<br/>            for b\u00a0:= a until MAX_NUMBER do begin<br/>                integer loB, hiB;<br/>                loB\u00a0:= lo5( b ); hiB\u00a0:= hi5( b );<br/>                for c\u00a0:= b until MAX_NUMBER do begin<br/>                    integer low, high, loSum, hiSum;<br/>                    loSum\u00a0:=                       loA + loB + lo5( c );<br/>                    hiSum\u00a0:= ( loSum div MAX_V ) + hiA + hiB + hi5( c );<br/>                    loSum\u00a0:=   loSum rem MAX_V;<br/>                   \u00a0% look for hiSum,loSum in hiD,loD                                      \u00a0%<br/>                    low  \u00a0:= 1;<br/>                    high \u00a0:= dUsed;<br/>                    while low &lt; high do begin<br/>                        integer mid, cmp;<br/>                        mid\u00a0:= ( low + high ) div 2;<br/>                        cmp\u00a0:= hiD( mid ) - hiSum;<br/>                        if cmp = 0 then cmp\u00a0:= loD( mid ) - loSum;<br/>                        if cmp = 0 then begin<br/>                           \u00a0% the value at mid is the difference of two fifth powers       \u00a0%<br/>                            write( i_w\u00a0:= 1, s_w\u00a0:= 0<br/>                                 , a, \"^5 + \", b, \"^5 + \", c, \"^5 + \"<br/>                                 , Dd( mid ), \"^5 = \", De( mid ), \"^5\"<br/>                                 );<br/>                            go to found<br/>                            end<br/>                        else if cmp &gt; 0 then high\u00a0:= mid - 1<br/>                        else                 low \u00a0:= mid + 1<br/>                    end while_low_lt_high<br/>                end for_c<br/>            end for_b<br/>        end for_a\u00a0;<br/>found\u00a0:<br/>    end<br/>end.</pre>"}, {"lang": "AWK", "loc": 25, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f EULERS_SUM_OF_POWERS_CONJECTURE.AWK</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    start_int = systime<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d seconds<span class=\"es0\">\\n</span>\"</span>,systime<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy3\">-</span>start_int<span class=\"br0\">)</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> main<span class=\"br0\">(</span>  sum,s1,x0,x1,x2,x3<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>x0=<span class=\"nu0\">1</span>; x0<span class=\"sy2\">&lt;=</span><span class=\"nu0\">250</span>; x0<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>x1=<span class=\"nu0\">1</span>; x1<span class=\"sy2\">&lt;=</span>x0; x1<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>x2=<span class=\"nu0\">1</span>; x2<span class=\"sy2\">&lt;=</span>x1; x2<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          <span class=\"kw1\">for</span> <span class=\"br0\">(</span>x3=<span class=\"nu0\">1</span>; x3<span class=\"sy2\">&lt;=</span>x2; x3<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            sum = <span class=\"br0\">(</span>x0<span class=\"sy3\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"br0\">(</span>x1<span class=\"sy3\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"br0\">(</span>x2<span class=\"sy3\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"br0\">(</span>x3<span class=\"sy3\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>            s1 = <span class=\"kw4\">int</span><span class=\"br0\">(</span>sum <span class=\"sy3\">^</span> <span class=\"nu0\">0.2</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>sum <span class=\"sy2\">==</span> s1<span class=\"sy3\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>              <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d^5 +\u00a0%d^5 +\u00a0%d^5 +\u00a0%d^5 =\u00a0%d^5<span class=\"es0\">\\n</span>\"</span>,x0,x1,x2,x3,s1<span class=\"br0\">)</span><br/>              <span class=\"kw6\">return</span><br/>            <span class=\"br0\">}</span><br/>          <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C", "loc": 35, "block": "<pre class=\"c highlighted_source\"><span class=\"co1\">// Alexander Maximov, July 2nd, 2015</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">long</span> <span class=\"kw4\">long</span> mylong<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> compute<span class=\"br0\">(</span><span class=\"kw4\">int</span> N<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> find_only_one_solution<span class=\"br0\">)</span><br/><span class=\"br0\">{</span>\t<span class=\"kw4\">const</span> <span class=\"kw4\">int</span> M <span class=\"sy0\">=</span> <span class=\"nu0\">30</span><span class=\"sy0\">;</span>   <span class=\"coMULTI\">/* x^5 == x modulo M=2*3*5 */</span><br/>\t<span class=\"kw4\">int</span> a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> e<span class=\"sy0\">;</span><br/>\tmylong s<span class=\"sy0\">,</span> t<span class=\"sy0\">,</span> max<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>p5 <span class=\"sy0\">=</span> <span class=\"br0\">(</span>mylong<span class=\"sy0\">*</span><span class=\"br0\">)</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>mylong<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>N<span class=\"sy0\">+</span>M<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>s<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> s <span class=\"sy0\">&lt;</span> N<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>s<span class=\"br0\">)</span><br/>\t\tp5<span class=\"br0\">[</span>s<span class=\"br0\">]</span> <span class=\"sy0\">=</span> s <span class=\"sy0\">*</span> s<span class=\"sy0\">,</span> p5<span class=\"br0\">[</span>s<span class=\"br0\">]</span> <span class=\"sy0\">*=</span> p5<span class=\"br0\">[</span>s<span class=\"br0\">]</span> <span class=\"sy0\">*</span> s<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>max <span class=\"sy0\">=</span> p5<span class=\"br0\">[</span>N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> s <span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span>N <span class=\"sy0\">+</span> M<span class=\"br0\">)</span><span class=\"sy0\">;</span> p5<span class=\"br0\">[</span>s<span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> max <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>a <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> a <span class=\"sy0\">&lt;</span> N<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>a<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>b <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> b <span class=\"sy0\">&lt;</span> N<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>b<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>c <span class=\"sy0\">=</span> b <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> c <span class=\"sy0\">&lt;</span> N<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>c<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>d <span class=\"sy0\">=</span> c <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> e <span class=\"sy0\">=</span> d <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>t <span class=\"sy0\">=</span> p5<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">+</span> p5<span class=\"br0\">[</span>b<span class=\"br0\">]</span> <span class=\"sy0\">+</span> p5<span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> M<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>s <span class=\"sy0\">=</span> t <span class=\"sy0\">+</span> p5<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> max<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>d<span class=\"sy0\">,</span> <span class=\"sy0\">++</span>e<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>e <span class=\"sy0\">-=</span> M<span class=\"sy0\">;</span> p5<span class=\"br0\">[</span>e <span class=\"sy0\">+</span> M<span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> s<span class=\"sy0\">;</span> e <span class=\"sy0\">+=</span> M<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* jump over M=30 values for e&gt;d */</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>p5<span class=\"br0\">[</span>e<span class=\"br0\">]</span> <span class=\"sy0\">==</span> s<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d\u00a0%d\u00a0%d\u00a0%d\u00a0%d<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> e<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>find_only_one_solution<span class=\"br0\">)</span> <span class=\"kw1\">goto</span> onexit<span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>onexit<span class=\"sy0\">:</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>p5<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> tm <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/clock.html\"><span class=\"kw3\">clock</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tcompute<span class=\"br0\">(</span><span class=\"nu0\">250</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"time=%d milliseconds<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/clock.html\"><span class=\"kw3\">clock</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> tm<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span> <span class=\"sy0\">/</span> CLOCKS_PER_SEC<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 37, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;cmath&gt;</span><br/><span class=\"co2\">#include &lt;set&gt;</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">bool</span> find<span class=\"br0\">(</span><span class=\"br0\">)</span> <br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">const</span> <span class=\"kw4\">auto</span> MAX <span class=\"sy1\">=</span> <span class=\"nu0\">250</span><span class=\"sy4\">;</span><br/>\tvector<span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> pow5<span class=\"br0\">(</span>MAX<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> MAX<span class=\"sy4\">;</span> i<span class=\"sy2\">++</span><span class=\"br0\">)</span> <br/>\t\tpow5<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>i <span class=\"sy2\">*</span> i <span class=\"sy2\">*</span> i <span class=\"sy2\">*</span> i <span class=\"sy2\">*</span> i<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> x0 <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> x0 <span class=\"sy1\">&lt;</span> MAX<span class=\"sy4\">;</span> x0<span class=\"sy2\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> x1 <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> x1 <span class=\"sy1\">&lt;</span> x0<span class=\"sy4\">;</span> x1<span class=\"sy2\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> x2 <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> x2 <span class=\"sy1\">&lt;</span> x1<span class=\"sy4\">;</span> x2<span class=\"sy2\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> x3 <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> x3 <span class=\"sy1\">&lt;</span> x2<span class=\"sy4\">;</span> x3<span class=\"sy2\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"kw4\">auto</span> sum <span class=\"sy1\">=</span> pow5<span class=\"br0\">[</span>x0<span class=\"br0\">]</span> <span class=\"sy2\">+</span> pow5<span class=\"br0\">[</span>x1<span class=\"br0\">]</span> <span class=\"sy2\">+</span> pow5<span class=\"br0\">[</span>x2<span class=\"br0\">]</span> <span class=\"sy2\">+</span> pow5<span class=\"br0\">[</span>x3<span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>binary_search<span class=\"br0\">(</span>pow5.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, pow5.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, sum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> x0 <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span> <span class=\"sy1\">&lt;&lt;</span> x1 <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span> <span class=\"sy1\">&lt;&lt;</span> x2 <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span> <span class=\"sy1\">&lt;&lt;</span> x3 <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"kw3\">pow</span><span class=\"br0\">(</span>sum, <span class=\"nu16\">1.0</span> <span class=\"sy2\">/</span> <span class=\"nu16\">5.0</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\t\t\t\t\t\t<span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"co1\">// not found</span><br/>\t<span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> <span class=\"kw4\">tm</span> <span class=\"sy1\">=</span> <span class=\"kw3\">clock</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy3\">!</span>find<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Nothing found!<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"time=%d milliseconds<span class=\"es1\">\\r</span><span class=\"es1\">\\n</span>\"</span>, <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw3\">clock</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">-</span> <span class=\"kw4\">tm</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"nu0\">1000</span> <span class=\"sy2\">/</span> <span class=\"kw2\">CLOCKS_PER_SEC</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 32, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> EulerSumOfPowers <span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program <span class=\"br0\">{</span><br/>        <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> MAX_NUMBER <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">bool</span> found <span class=\"sy0\">=</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">long</span><span class=\"br0\">[</span><span class=\"br0\">]</span> fifth <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">long</span><span class=\"br0\">[</span>MAX_NUMBER<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> MAX_NUMBER<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">long</span> i2 <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span><br/>                fifth<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> i2 <span class=\"sy0\">*</span> i2 <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> a <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>found<span class=\"sy0\">;</span> a<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span> b <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>found<span class=\"sy0\">;</span> b<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span> c <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>found<span class=\"sy0\">;</span> c<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> d <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span> d <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>found<span class=\"sy0\">;</span> d<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                            <span class=\"kw4\">long</span> sum <span class=\"sy0\">=</span> fifth<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">+</span> fifth<span class=\"br0\">[</span>b<span class=\"br0\">]</span> <span class=\"sy0\">+</span> fifth<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">+</span> fifth<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                            <span class=\"kw4\">int</span> e <span class=\"sy0\">=</span> Array<span class=\"sy0\">.</span><span class=\"me1\">BinarySearch</span><span class=\"br0\">(</span>fifth, sum<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            found <span class=\"sy0\">=</span> e <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>found<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0}^5 + {1}^5 + {2}^5 + {3}^5 = {4}^5\"</span>, a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, b <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, c <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, d <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, e <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                            <span class=\"br0\">}</span><br/>                        <span class=\"br0\">}</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 30, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">ns</span> test<span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>core<br/>  <span class=\"br0\">(</span>:<span class=\"me1\">require</span> <span class=\"br0\">[</span>clojure<span class=\"sy0\">.</span>math<span class=\"sy0\">.</span>numeric<span class=\"sy0\">-</span>tower\u00a0:<span class=\"me1\">as</span> math<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>:<span class=\"me1\">require</span> <span class=\"br0\">[</span>clojure<span class=\"sy0\">.</span>data<span class=\"sy0\">.</span>int<span class=\"sy0\">-</span><span class=\"kw1\">map</span>\u00a0:<span class=\"me1\">as</span> i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> solve<span class=\"sy0\">-</span>power<span class=\"sy0\">-</span>sum <span class=\"br0\">[</span>max<span class=\"sy0\">-</span>value max<span class=\"sy0\">-</span>sols<span class=\"br0\">]</span><br/>  <span class=\"st0\">\" Finds solutions by using method approach of EchoLisp<br/>    Large difference is we store a dictionary of all combinations <br/>    of y^5 - x^5 with the x, y value so we can simply lookup rather than have to search \"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>pow5 <span class=\"br0\">(</span>mapv #<span class=\"br0\">(</span>math<span class=\"sy0\">/</span>expt <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">4</span> max<span class=\"sy0\">-</span>value<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>                  <span class=\"co1\">; Pow5 = Generate Lookup table for x^5</span><br/>        y5<span class=\"sy0\">-</span>x3 <span class=\"br0\">(</span><span class=\"kw1\">into</span> <span class=\"br0\">(</span>i<span class=\"sy0\">/</span>int<span class=\"sy0\">-</span><span class=\"kw1\">map</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">for</span> <span class=\"br0\">[</span>x <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">1</span> max<span class=\"sy0\">-</span>value<span class=\"br0\">)</span>                     <span class=\"co1\">; For x0^5 + x1^5 + x2^5 + x3^5  = y^5</span><br/>                                      y <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> x<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">4</span> max<span class=\"sy0\">-</span>value<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span>        <span class=\"co1\">; compute y5-x3 = set of all possible differnences</span><br/>                                  <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span>get pow5 y<span class=\"br0\">)</span> <span class=\"br0\">(</span>get pow5 x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">[</span>x y<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; note: (get pow5 y) is closure for: pow5[y]</span><br/>        solutions<span class=\"sy0\">-</span>found <span class=\"br0\">(</span>atom <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"br0\">(</span><span class=\"kw1\">for</span> <span class=\"br0\">[</span>x0 <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">1</span> max<span class=\"sy0\">-</span>value<span class=\"br0\">)</span>                                    <span class=\"co1\">; Search over x0, x1, x2 for sums equal y5-x3</span><br/>          x1 <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">1</span> x0<span class=\"br0\">)</span><br/>          x2 <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">1</span> x1<span class=\"br0\">)</span><br/>         \u00a0:<span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> @solutions<span class=\"sy0\">-</span>found max<span class=\"sy0\">-</span>sols<span class=\"br0\">)</span><br/>         \u00a0:<span class=\"kw1\">let</span> <span class=\"br0\">[</span>sum <span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> pow5 <span class=\"br0\">[</span>x0 x1 x2<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span>         <span class=\"co1\">; compute sum of items to the 5th power</span><br/>         \u00a0:<span class=\"kw1\">when</span> <span class=\"br0\">(</span>contains? y5<span class=\"sy0\">-</span>x3 sum<span class=\"br0\">)</span><span class=\"br0\">]</span>                       <span class=\"co1\">; check if sum is in set of differences</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">do</span><br/>        <span class=\"br0\">(</span>swap<span class=\"sy0\">!</span> solutions<span class=\"sy0\">-</span>found <span class=\"kw1\">inc</span><span class=\"br0\">)</span>                          <span class=\"co1\">; increment counter for solutions found</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">concat</span> <span class=\"br0\">[</span>x0 x1 x2<span class=\"br0\">]</span> <span class=\"br0\">(</span>get y5<span class=\"sy0\">-</span>x3 sum<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>              <span class=\"co1\">; create result (since in set of differences)</span><br/>\u00a0<br/><span class=\"co1\">; Output results with numbers in ascending order placing results into a set (i.e. #{}) so duplicates are discarded</span><br/>                                                            <span class=\"co1\">; CPU i7 920 Quad Core @2.67 GHz clock Windows 10</span><br/><span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"kw1\">into</span> #<span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> <span class=\"kw1\">sort</span> <span class=\"br0\">(</span>solve<span class=\"sy0\">-</span>power<span class=\"sy0\">-</span>sum <span class=\"nu0\">250</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>   <span class=\"co1\">; MAX = 250, find only 1 value: Duration was 0.26 seconds</span><br/><span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"kw1\">into</span> #<span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> <span class=\"kw1\">sort</span> <span class=\"br0\">(</span>solve<span class=\"sy0\">-</span>power<span class=\"sy0\">-</span>sum <span class=\"nu0\">1000</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"co1\">;MAX = 1000, high max-value so all solutions found: Time = 4.8 seconds</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 99, "block": "<pre class=\"cobol highlighted_source\">\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> EULER<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">FILE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span>   TABLE-<span class=\"kw4\">LENGTH</span> CONSTANT <span class=\"nu0\">250</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span>   SEARCHING-FLAG     <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">88</span>  FINISHED-SEARCHING <span class=\"kw3\">VALUE</span> <span class=\"kw3\">IS</span> <span class=\"nu0\">1</span><br/>                               <span class=\"kw3\">WHEN</span> <span class=\"kw3\">SET</span> <span class=\"kw2\">TO</span> <span class=\"kw3\">FALSE</span> <span class=\"kw3\">IS</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span>  CALC<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  A               <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  B               <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  C               <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  D               <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  ABCD            <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  FIFTH-ROOT-OFFS <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  POWER-COUNTER   <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">88</span> POWER-<span class=\"kw4\">MAX</span>       <span class=\"kw3\">VALUE</span> TABLE-<span class=\"kw4\">LENGTH</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">1</span>   PRETTY<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  A               <span class=\"kw3\">PIC</span> ZZ9<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  <span class=\"kw3\">FILLER</span>          <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"^5 + \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  B               <span class=\"kw3\">PIC</span> ZZ9<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  <span class=\"kw3\">FILLER</span>          <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"^5 + \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  C               <span class=\"kw3\">PIC</span> ZZ9<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  <span class=\"kw3\">FILLER</span>          <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"^5 + \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  D               <span class=\"kw3\">PIC</span> ZZ9<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  <span class=\"kw3\">FILLER</span>          <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"^5 = \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  FIFTH-ROOT-OFFS <span class=\"kw3\">PIC</span> ZZ9<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  <span class=\"kw3\">FILLER</span>          <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"^5.\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">1</span>   FIFTH-POWER-<span class=\"kw3\">TABLE</span>   <span class=\"kw3\">OCCURS</span> TABLE-<span class=\"kw4\">LENGTH</span> <span class=\"kw2\">TIMES</span><br/>                               <span class=\"kw3\">ASCENDING</span> <span class=\"kw3\">KEY</span> <span class=\"kw3\">IS</span> FIFTH-POWER<br/>                               <span class=\"kw3\">INDEXED</span> <span class=\"kw3\">BY</span> POWER-<span class=\"kw3\">INDEX</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">3</span>  FIFTH-POWER <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span> <span class=\"kw3\">USAGE</span> <span class=\"kw3\">COMPUTATIONAL-5</span><span class=\"sy0\">.</span><br/>\u00a0<br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       MAIN-PARAGRAPH<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">SET</span> FINISHED-SEARCHING <span class=\"kw2\">TO</span> <span class=\"kw3\">FALSE</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> POWERS-OF-FIVE-TABLE-INIT<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span><br/>               A <span class=\"kw3\">IN</span> CALC<br/>               <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span> <span class=\"kw2\">UNTIL</span> A <span class=\"kw3\">IN</span> CALC <span class=\"sy0\">=</span> TABLE-<span class=\"kw4\">LENGTH</span><br/>\u00a0<br/>               <span class=\"kw3\">AFTER</span> B <span class=\"kw3\">IN</span> CALC<br/>               <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span> <span class=\"kw2\">UNTIL</span> B <span class=\"kw3\">IN</span> CALC <span class=\"sy0\">=</span> A <span class=\"kw3\">IN</span> CALC<br/>\u00a0<br/>               <span class=\"kw3\">AFTER</span> C <span class=\"kw3\">IN</span> CALC<br/>               <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span> <span class=\"kw2\">UNTIL</span> C <span class=\"kw3\">IN</span> CALC <span class=\"sy0\">=</span> B <span class=\"kw3\">IN</span> CALC<br/>\u00a0<br/>               <span class=\"kw3\">AFTER</span> D <span class=\"kw3\">IN</span> CALC<br/>               <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span> <span class=\"kw2\">UNTIL</span> D <span class=\"kw3\">IN</span> CALC <span class=\"sy0\">=</span> C <span class=\"kw3\">IN</span> CALC<br/>\u00a0<br/>               <span class=\"kw1\">IF</span> FINISHED-SEARCHING<br/>                   <span class=\"kw3\">STOP</span> <span class=\"kw3\">RUN</span><br/>               END-<span class=\"kw1\">IF</span><br/>\u00a0<br/>               <span class=\"kw2\">PERFORM</span> POWER-COMPUTATIONS<br/>\u00a0<br/>           END-<span class=\"kw2\">PERFORM</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       POWER-COMPUTATIONS<span class=\"sy0\">.</span><br/>\u00a0<br/>           <span class=\"kw2\">MOVE</span> <span class=\"kw3\">ZERO</span> <span class=\"kw2\">TO</span> ABCD <span class=\"kw3\">IN</span> CALC<span class=\"sy0\">.</span><br/>\u00a0<br/>           <span class=\"kw2\">ADD</span> FIFTH-POWER<span class=\"br0\">(</span>A <span class=\"kw3\">IN</span> CALC<span class=\"br0\">)</span><br/>               FIFTH-POWER<span class=\"br0\">(</span>B <span class=\"kw3\">IN</span> CALC<span class=\"br0\">)</span><br/>               FIFTH-POWER<span class=\"br0\">(</span>C <span class=\"kw3\">IN</span> CALC<span class=\"br0\">)</span><br/>               FIFTH-POWER<span class=\"br0\">(</span>D <span class=\"kw3\">IN</span> CALC<span class=\"br0\">)</span><br/>                   <span class=\"kw2\">TO</span> ABCD <span class=\"kw3\">IN</span> CALC<span class=\"sy0\">.</span><br/>\u00a0<br/>           <span class=\"kw3\">SET</span> POWER-<span class=\"kw3\">INDEX</span> <span class=\"kw2\">TO</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><br/>\u00a0<br/>           <span class=\"kw1\">SEARCH</span> <span class=\"kw3\">ALL</span> FIFTH-POWER-<span class=\"kw3\">TABLE</span><br/>               <span class=\"kw3\">WHEN</span> FIFTH-POWER<span class=\"br0\">(</span>POWER-<span class=\"kw3\">INDEX</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> ABCD <span class=\"kw3\">IN</span> CALC<br/>                      <span class=\"kw2\">MOVE</span> POWER-<span class=\"kw3\">INDEX</span> <span class=\"kw2\">TO</span> FIFTH-ROOT-OFFS <span class=\"kw3\">IN</span> CALC<br/>                      <span class=\"kw2\">MOVE</span> <span class=\"kw2\">CORRESPONDING</span> CALC <span class=\"kw2\">TO</span> PRETTY<br/>                      <span class=\"kw2\">DISPLAY</span> PRETTY END-<span class=\"kw2\">DISPLAY</span><br/>                      <span class=\"kw3\">SET</span> FINISHED-SEARCHING <span class=\"kw2\">TO</span> <span class=\"kw3\">TRUE</span><br/>           END-<span class=\"kw1\">SEARCH</span><br/>\u00a0<br/>           <span class=\"kw2\">EXIT</span> PARAGRAPH<span class=\"sy0\">.</span><br/>\u00a0<br/>       POWERS-OF-FIVE-TABLE-INIT<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> POWER-COUNTER <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span> <span class=\"kw2\">UNTIL</span> POWER-<span class=\"kw4\">MAX</span><br/>               <span class=\"kw2\">COMPUTE</span> FIFTH-POWER<span class=\"br0\">(</span>POWER-COUNTER<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <br/>                   POWER-COUNTER *<br/>                   POWER-COUNTER *<br/>                   POWER-COUNTER *<br/>                   POWER-COUNTER *<br/>                   POWER-COUNTER <br/>               END-<span class=\"kw2\">COMPUTE</span><br/>           END-<span class=\"kw2\">PERFORM</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">EXIT</span> PARAGRAPH<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> EULER<span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 15, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>ql<span class=\"sy0\">:</span><span class=\"me1\">quickload</span> <span class=\"sy0\">:</span><span class=\"me1\">alexandria</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>fifth-powers <span class=\"br0\">(</span><span class=\"kw1\">mapcar</span> #'<span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">expt</span> x <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                            <span class=\"br0\">(</span>alexandria<span class=\"sy0\">:</span><span class=\"me1\">iota</span> <span class=\"nu0\">250</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop named outer for x0 from <span class=\"nu0\">1</span> to <span class=\"br0\">(</span><span class=\"kw1\">length</span> fifth-powers<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"br0\">(</span>loop for x1 from <span class=\"nu0\">1</span> below x0 <span class=\"kw1\">do</span><br/>      <span class=\"br0\">(</span>loop for x2 from <span class=\"nu0\">1</span> below x1 <span class=\"kw1\">do</span><br/>        <span class=\"br0\">(</span>loop for x3 from <span class=\"nu0\">1</span> below x2 <span class=\"kw1\">do</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x-sum <span class=\"br0\">(</span>+ <span class=\"br0\">(</span><span class=\"kw1\">nth</span> x0 fifth-powers<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span><span class=\"kw1\">nth</span> x1 fifth-powers<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span><span class=\"kw1\">nth</span> x2 fifth-powers<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span><span class=\"kw1\">nth</span> x3 fifth-powers<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">member</span> x-sum fifth-powers<span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span>return-from outer <span class=\"br0\">(</span><span class=\"kw1\">list</span> x0 x1 x2 x3 <span class=\"br0\">(</span>round <span class=\"br0\">(</span><span class=\"kw1\">expt</span> x-sum <span class=\"nu0\">0.2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 20, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">typecons</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">auto</span> eulersSumOfPowers<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">enum</span> maxN <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> pow5 <span class=\"sy0\">=</span> iota<span class=\"br0\">(</span><span class=\"kw4\">size_t</span><span class=\"br0\">(</span>maxN<span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">=&gt;</span> <span class=\"kw4\">ulong</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span>.<span class=\"me1\">array</span>.<span class=\"me1\">assumeSorted</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x0<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">maxN</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x1<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">x0</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x2<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">x1</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x3<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">x2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">immutable</span> powSum <span class=\"sy0\">=</span> pow5<span class=\"br0\">[</span>x0<span class=\"br0\">]</span> <span class=\"sy0\">+</span> pow5<span class=\"br0\">[</span>x1<span class=\"br0\">]</span> <span class=\"sy0\">+</span> pow5<span class=\"br0\">[</span>x2<span class=\"br0\">]</span> <span class=\"sy0\">+</span> pow5<span class=\"br0\">[</span>x3<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pow5.<span class=\"me1\">contains</span><span class=\"br0\">(</span>powSum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                        <span class=\"kw1\">return</span> tuple<span class=\"br0\">(</span>x0<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> pow5.<span class=\"me1\">countUntil</span><span class=\"br0\">(</span>powSum<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span><span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"%d^5 +\u00a0%d^5 +\u00a0%d^5 +\u00a0%d^5 ==\u00a0%d^5\"</span><span class=\"sy0\">,</span> eulersSumOfPowers<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 37, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>define dim <span class=\"nu0\">250</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; speed up n^5</span><br/><span class=\"br0\">(</span>define <span class=\"br0\">(</span>p5 n<span class=\"br0\">)</span> <span class=\"br0\">(</span>* n n n n n<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/><span class=\"br0\">(</span>remember 'p5<span class=\"br0\">)</span> <span class=\"co1\">;; memoize</span><br/>\u00a0<br/><span class=\"co1\">;; build vector of all  y^5 - x^5 diffs - length 30877</span><br/><span class=\"br0\">(</span>define all-y<span class=\"sy0\">^</span><span class=\"nu0\">5</span>-x<span class=\"sy0\">^</span><span class=\"nu0\">5</span> <br/>\t<span class=\"br0\">(</span>for*/vector <br/>\t\t<span class=\"br0\">[</span><span class=\"br0\">(</span>x <span class=\"br0\">(</span>in-range <span class=\"nu0\">1</span> dim<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"br0\">(</span>y <span class=\"br0\">(</span>in-range <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ x<span class=\"br0\">)</span> dim<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <br/>\t\t<span class=\"br0\">(</span>- <span class=\"br0\">(</span>p5 y<span class=\"br0\">)</span> <span class=\"br0\">(</span>p5 x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; sort to use vector-search</span><br/><span class=\"br0\">(</span>begin <span class=\"br0\">(</span>vector-sort<span class=\"sy0\">!</span> <span class=\"sy0\">&lt;</span>  all-y<span class=\"sy0\">^</span><span class=\"nu0\">5</span>-x<span class=\"sy0\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> 'sorted<span class=\"br0\">)</span> <br/>\u00a0<br/> <span class=\"co1\">;; find couple (x y) from y^5 - x^5</span><br/><span class=\"br0\">(</span>define <span class=\"br0\">(</span>x-y y<span class=\"sy0\">^</span><span class=\"nu0\">5</span>-x<span class=\"sy0\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>for*/fold <span class=\"br0\">(</span>x-y <span class=\"kw1\">null</span><span class=\"br0\">)</span> <br/>\t<span class=\"br0\">[</span><span class=\"br0\">(</span>x <span class=\"br0\">(</span>in-range <span class=\"nu0\">1</span> dim<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>y <span class=\"br0\">(</span>in-range <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ x <span class=\"br0\">)</span> dim<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">(</span><span class=\"kw1\">when</span> <br/>\t\t\t<span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>- <span class=\"br0\">(</span>p5 y<span class=\"br0\">)</span> <span class=\"br0\">(</span>p5 x<span class=\"br0\">)</span><span class=\"br0\">)</span> y<span class=\"sy0\">^</span><span class=\"nu0\">5</span>-x<span class=\"sy0\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <br/>\t\t\t<span class=\"br0\">(</span><span class=\"kw1\">set</span><span class=\"sy0\">!</span> x-y <span class=\"br0\">(</span><span class=\"kw1\">list</span> x y<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\t\t\t<span class=\"br0\">(</span><span class=\"kw1\">break</span> #t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; stop on first</span><br/>\u00a0<br/><span class=\"co1\">;; search</span><br/><span class=\"br0\">(</span>for*/fold  <span class=\"br0\">(</span>sol <span class=\"kw1\">null</span><span class=\"br0\">)</span>  <br/>\t<span class=\"br0\">[</span><span class=\"br0\">(</span>x0 <span class=\"br0\">(</span>in-range <span class=\"nu0\">1</span> dim<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x1 <span class=\"br0\">(</span>in-range <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ x0<span class=\"br0\">)</span> dim<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x2 <span class=\"br0\">(</span>in-range <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ x1<span class=\"br0\">)</span> dim<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set</span><span class=\"sy0\">!</span> sol <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>p5 x0<span class=\"br0\">)</span> <span class=\"br0\">(</span>p5 x1<span class=\"br0\">)</span> <span class=\"br0\">(</span>p5 x2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/> \t<span class=\"br0\">(</span><span class=\"kw1\">when</span> <br/> \t\t<span class=\"br0\">(</span>vector-search sol all-y<span class=\"sy0\">^</span><span class=\"nu0\">5</span>-x<span class=\"sy0\">^</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>  <span class=\"co1\">;; x0^5 + x1^5 + x2^5 = y^5 - x3^5\u00a0???</span><br/> \t\t<span class=\"br0\">(</span><span class=\"kw1\">set</span><span class=\"sy0\">!</span> sol <span class=\"br0\">(</span><span class=\"kw1\">append</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> x0 x1 x2<span class=\"br0\">)</span> <span class=\"br0\">(</span>x-y  sol<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; found</span><br/> \t\t<span class=\"br0\">(</span><span class=\"kw1\">break</span> #t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; stop on first</span><br/>\u00a0<br/>  \u2192   <span class=\"br0\">(</span><span class=\"nu0\">27</span> <span class=\"nu0\">84</span> <span class=\"nu0\">110</span> <span class=\"nu0\">133</span> <span class=\"nu0\">144</span><span class=\"br0\">)</span> <span class=\"co1\">;; time 2.8 sec</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 29, "block": "<pre class=\"text highlighted_source\">defmodule Euler do<br/>  def sum_of_power(max \\\\ 250) do<br/>    {p5, sum2} = setup(max)<br/>    sk = Enum.sort(Map.keys(sum2))<br/>    Enum.reduce(Enum.sort(Map.keys(p5)), Map.new, fn p,map -&gt;<br/>      sum(sk, p5, sum2, p, map)<br/>    end)<br/>  end<br/>\u00a0<br/>  defp setup(max) do<br/>    Enum.reduce(1..max, {%{},\u00a0%{}}, fn i,{p5,sum2} -&gt;<br/>      i5 = i*i*i*i*i<br/>      add = for j &lt;- i..max, into: sum2, do: {i5 + j*j*j*j*j, [i,j]}<br/>      {Map.put(p5, i5, i), add}<br/>    end)<br/>  end<br/>\u00a0<br/>  defp sum([], _, _, _, map), do: map<br/>  defp sum([s|_], _, _, p, map) when p&lt;=s, do: map<br/>  defp sum([s|t], p5, sum2, p, map) do<br/>    if sum2[p - s],<br/>      do:   sum(t, p5, sum2, p, Map.put(map, Enum.sort(sum2[s] ++ sum2[p-s]), p5[p])),<br/>      else: sum(t, p5, sum2, p, map)<br/>  end<br/>end<br/>\u00a0<br/>Enum.each(Euler.sum_of_power, fn {k,v} -&gt;<br/>  IO.puts Enum.map_join(k, \" + \", fn i -&gt; \"#{i}**5\" end) &lt;&gt; \" = #{v}**5\"<br/>end)</pre>"}, {"lang": "ERRE", "loc": 27, "block": "<pre class=\"text highlighted_source\">PROGRAM EULERO<br/>\u00a0<br/>CONST MAX=250<br/>\u00a0<br/>!$DOUBLE<br/>\u00a0<br/>FUNCTION POW5(X)<br/>    POW5=X*X*X*X*X<br/>END FUNCTION<br/>\u00a0<br/>!$INCLUDE=\"PC.LIB\"<br/>\u00a0<br/>BEGIN<br/>   CLS<br/>   FOR X0=1 TO MAX DO<br/>     FOR X1=1 TO X0 DO<br/>        FOR X2=1 TO X1 DO<br/>           FOR X3=1 TO X2 DO<br/>              LOCATE(3,1) PRINT(X0;X1;X2;X3)<br/>              SUM=POW5(X0)+POW5(X1)+POW5(X2)+POW5(X3)<br/>              S1=INT(SUM^0.2#+0.5#)<br/>              IF SUM=POW5(S1) THEN PRINT(X0,X1,X2,X3,S1) END IF<br/>           END FOR<br/>        END FOR<br/>     END FOR<br/>   END FOR<br/>END PROGRAM</pre>"}, {"lang": "F#", "loc": 17, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"co1\">//Find 4 integers whose 5th powers sum to the fifth power of an integer (Quickly!) - Nigel Galloway: April 23rd., 2015</span><br/><span class=\"kw1\">let</span> G <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> GN <span class=\"sy0\">=</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">init</span><span class=\"sy0\">&lt;</span><span class=\"kw4\">float</span><span class=\"sy0\">&gt;</span> <span class=\"nu0\">250</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> n <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span> n<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">5.0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> gng <span class=\"br0\">(</span>n, i, g, e<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> <span class=\"br0\">(</span>n, i, g, e<span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>    | <span class=\"br0\">(</span><span class=\"nu0\">250</span>,_,_,_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"No Solution Found\"</span><br/>    | <span class=\"br0\">(</span>_,<span class=\"nu0\">250</span>,_,_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> gng <span class=\"br0\">(</span>n<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, n<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, n<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, n<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    | <span class=\"br0\">(</span>_,_,<span class=\"nu0\">250</span>,_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> gng <span class=\"br0\">(</span>n, i<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, i<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    | <span class=\"br0\">(</span>_,_,_,<span class=\"nu0\">250</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> gng <span class=\"br0\">(</span>n, i, g<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, g<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    | _ <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">let</span> l <span class=\"sy0\">=</span> GN.<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">+</span> GN.<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> GN.<span class=\"br0\">[</span>g<span class=\"br0\">]</span> <span class=\"sy0\">+</span> GN.<span class=\"br0\">[</span>e<span class=\"br0\">]</span><br/>           <span class=\"kw1\">match</span> l <span class=\"kw1\">with</span><br/>           | _ <span class=\"kw1\">when</span> l <span class=\"sy0\">&gt;</span> GN.<span class=\"br0\">[</span><span class=\"nu0\">249</span><span class=\"br0\">]</span>           <span class=\"sy0\">-&gt;</span> gng<span class=\"br0\">(</span>n,i,g<span class=\"sy0\">+</span><span class=\"nu0\">1</span>,g<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>           | _ <span class=\"kw1\">when</span> l <span class=\"sy0\">=</span> <span class=\"kw3\">round</span><span class=\"br0\">(</span>l<span class=\"sy0\">**</span><span class=\"nu0\">0.2</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">5.0</span> <span class=\"sy0\">-&gt;</span> sprintf <span class=\"st0\">\"%d**5 +\u00a0%d**5 +\u00a0%d**5 +\u00a0%d**5 =\u00a0%d**5\"</span> n i g e <span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"br0\">(</span>l<span class=\"sy0\">**</span><span class=\"nu0\">0.2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           | _                             <span class=\"sy0\">-&gt;</span> gng<span class=\"br0\">(</span>n,i,g,e<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  gng <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 21, "block": "<pre class=\"fortran highlighted_source\"><span class=\"co1\">C EULER SUM OF POWERS CONJECTURE - FORTRAN IV</span><br/><span class=\"co1\">C FIND I1,I2,I3,I4,I5\u00a0: I1**5+I2**5+I3**5+I4**5=I5**5</span><br/>      <span class=\"kw3\">INTEGER</span> I,P5<span class=\"br0\">(</span><span class=\"nu0\">250</span><span class=\"br0\">)</span>,SUMX<br/>      MAXN<span class=\"sy0\">=</span><span class=\"nu0\">250</span><br/>      <span class=\"kw1\">DO</span> <span class=\"nu0\">1</span> I<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,MAXN<br/>   <span class=\"nu0\">1</span>  P5<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"sy0\">=</span>I<span class=\"sy0\">**</span><span class=\"nu0\">5</span><br/>      <span class=\"kw1\">DO</span> <span class=\"nu0\">6</span> I1<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,MAXN<br/>      <span class=\"kw1\">DO</span> <span class=\"nu0\">6</span> I2<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,MAXN<br/>      <span class=\"kw1\">DO</span> <span class=\"nu0\">6</span> I3<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,MAXN<br/>      <span class=\"kw1\">DO</span> <span class=\"nu0\">6</span> I4<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,MAXN\t  <br/>      SUMX<span class=\"sy0\">=</span>P5<span class=\"br0\">(</span>I1<span class=\"br0\">)</span><span class=\"sy0\">+</span>P5<span class=\"br0\">(</span>I2<span class=\"br0\">)</span><span class=\"sy0\">+</span>P5<span class=\"br0\">(</span>I3<span class=\"br0\">)</span><span class=\"sy0\">+</span>P5<span class=\"br0\">(</span>I4<span class=\"br0\">)</span><br/>      I5<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>   <span class=\"nu0\">2</span>  <span class=\"kw1\">IF</span><span class=\"br0\">(</span>I5<span class=\"sy0\">-</span>MAXN<span class=\"br0\">)</span> <span class=\"nu0\">3</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">6</span><br/>   <span class=\"nu0\">3</span>  <span class=\"kw1\">IF</span><span class=\"br0\">(</span>P5<span class=\"br0\">(</span>I5<span class=\"br0\">)</span><span class=\"sy0\">-</span>SUMX<span class=\"br0\">)</span> <span class=\"nu0\">5</span>,<span class=\"nu0\">4</span>,<span class=\"nu0\">6</span><br/>   <span class=\"nu0\">4</span>  WRITE<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"nu0\">300</span><span class=\"br0\">)</span> I1,I2,I3,I4,I5<br/>      <span class=\"kw1\">STOP</span><br/>   <span class=\"nu0\">5</span>  I5<span class=\"sy0\">=</span>I5<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>      <span class=\"kw1\">GOTO</span> <span class=\"nu0\">2</span><br/>   <span class=\"nu0\">6</span>  <span class=\"kw1\">CONTINUE</span><br/> <span class=\"nu0\">300</span>  FORMAT<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">(</span>1X,I3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">END</span> </pre>"}, {"lang": "FreeBASIC", "loc": 57, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 14-09-2015</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/>\u00a0<br/><span class=\"co1\">' some constants calculated when the program is compiled</span><br/>\u00a0<br/><span class=\"kw1\">Const</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> max = <span class=\"nu0\">250</span><br/><span class=\"kw1\">Const</span> <span class=\"kw1\">As</span> <span class=\"kw1\">ULongInt</span> pow5_max = <span class=\"kw1\">CULngInt</span><span class=\"br0\">(</span>max<span class=\"br0\">)</span> * max * max * max * max<br/><span class=\"co1\">' limit x1, x2, x3</span><br/><span class=\"kw1\">Const</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> limit_x1 = <span class=\"br0\">(</span>pow5_max / <span class=\"nu0\">4</span><span class=\"br0\">)</span> ^ <span class=\"nu0\">0.2</span><br/><span class=\"kw1\">Const</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> limit_x2 = <span class=\"br0\">(</span>pow5_max / <span class=\"nu0\">3</span><span class=\"br0\">)</span> ^ <span class=\"nu0\">0.2</span><br/><span class=\"kw1\">Const</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> limit_x3 = <span class=\"br0\">(</span>pow5_max / <span class=\"nu0\">2</span><span class=\"br0\">)</span> ^ <span class=\"nu0\">0.2</span><br/>\u00a0<br/><span class=\"co1\">' ------=&lt; MAIN &gt;=------</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">ULongInt</span> pow5<span class=\"br0\">(</span>max<span class=\"br0\">)</span>, ans1, ans2, ans3<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> x1, x2, x3, x4, x5 , m1, m2<br/>\u00a0<br/><span class=\"kw1\">Cls</span>\u00a0: <span class=\"kw1\">Print</span><br/>\u00a0<br/><span class=\"kw1\">For</span> x1 = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> max<br/>    pow5<span class=\"br0\">(</span>x1<span class=\"br0\">)</span> = <span class=\"kw1\">CULngInt</span><span class=\"br0\">(</span>x1<span class=\"br0\">)</span> * x1 * x1 * x1 * x1<br/><span class=\"kw1\">Next</span> x1<br/>\u00a0<br/><span class=\"kw1\">For</span> x1 = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> limit_x1<br/>    <span class=\"kw1\">For</span> x2 = x1 +<span class=\"nu0\">1</span> <span class=\"kw1\">To</span> limit_x2<br/>        m1 = x1 + x2<br/>        ans1 = pow5<span class=\"br0\">(</span>x1<span class=\"br0\">)</span> + pow5<span class=\"br0\">(</span>x2<span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> ans1 &gt; pow5_max <span class=\"kw1\">Then</span> <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span><br/>        <span class=\"kw1\">For</span> x3 = x2 +<span class=\"nu0\">1</span> <span class=\"kw1\">To</span> limit_x3<br/>            ans2 = ans1 + pow5<span class=\"br0\">(</span>x3<span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> ans2 &gt; pow5_max <span class=\"kw1\">Then</span> <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span><br/>            m2 = <span class=\"br0\">(</span>m1 + x3<span class=\"br0\">)</span> <span class=\"kw1\">Mod</span> <span class=\"nu0\">30</span><br/>            <span class=\"kw1\">If</span> m2 = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span> m2 = <span class=\"nu0\">30</span><br/>            <span class=\"kw1\">For</span> x4 = x3 +<span class=\"nu0\">1</span> <span class=\"kw1\">To</span> max -<span class=\"nu0\">1</span><br/>                ans3 = ans2 + pow5<span class=\"br0\">(</span>x4<span class=\"br0\">)</span><br/>                <span class=\"kw1\">If</span> ans3 &gt; pow5_max <span class=\"kw1\">Then</span> <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span><br/>                <span class=\"kw1\">For</span> x5 = x4 + m2 <span class=\"kw1\">To</span> max <span class=\"kw1\">Step</span> <span class=\"nu0\">30</span><br/>                    <span class=\"kw1\">If</span> ans3 &lt; pow5<span class=\"br0\">(</span>x5<span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span><br/>                    <span class=\"kw1\">If</span> ans3 = pow5<span class=\"br0\">(</span>x5<span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>                        <span class=\"kw1\">Print</span> x1; <span class=\"st0\">\"^5 + \"</span>; x2; <span class=\"st0\">\"^5 + \"</span>; x3; <span class=\"st0\">\"^5 + \"</span>; _<br/>                              x4; <span class=\"st0\">\"^5 = \"</span>; x5; <span class=\"st0\">\"^5\"</span><br/>                        <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span>, <span class=\"kw1\">For</span><br/>                    EndIf<br/>                <span class=\"kw1\">Next</span> x5<br/>            <span class=\"kw1\">Next</span> x4<br/>        <span class=\"kw1\">Next</span> x3<br/>    <span class=\"kw1\">Next</span> x2<br/><span class=\"kw1\">Next</span> x1<br/>\u00a0<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"done\"</span><br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">Inkey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"hit any key to end program\"</span><br/><span class=\"kw1\">Sleep</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "Go", "loc": 36, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"log\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>eulerSum<span class=\"sy1\">())</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> eulerSum<span class=\"sy1\">()</span> <span class=\"sy1\">(</span>x0<span class=\"sy1\">,</span> x1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> x3<span class=\"sy1\">,</span> y <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">var</span> pow5 <span class=\"sy1\">[</span><span class=\"nu0\">250</span><span class=\"sy1\">]</span><span class=\"kw4\">int</span><br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> pow5 <span class=\"sy1\">{</span><br/>\t\tpow5<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"nu2\">i</span> <span class=\"sy3\">*</span> <span class=\"nu2\">i</span> <span class=\"sy3\">*</span> <span class=\"nu2\">i</span> <span class=\"sy3\">*</span> <span class=\"nu2\">i</span> <span class=\"sy3\">*</span> <span class=\"nu2\">i</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">for</span> x0 <span class=\"sy2\">=</span> <span class=\"nu0\">4</span><span class=\"sy1\">;</span> x0 &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>pow5<span class=\"sy1\">);</span> x0<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">for</span> x1 <span class=\"sy2\">=</span> <span class=\"nu0\">3</span><span class=\"sy1\">;</span> x1 &lt; x0<span class=\"sy1\">;</span> x1<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> x2 <span class=\"sy2\">=</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span> x2 &lt; x1<span class=\"sy1\">;</span> x2<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\t\t<span class=\"kw1\">for</span> x3 <span class=\"sy2\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> x3 &lt; x2<span class=\"sy1\">;</span> x3<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\t\t\tsum <span class=\"sy2\">:=</span> pow5<span class=\"sy1\">[</span>x0<span class=\"sy1\">]</span> <span class=\"sy3\">+</span><br/>\t\t\t\t\t\tpow5<span class=\"sy1\">[</span>x1<span class=\"sy1\">]</span> <span class=\"sy3\">+</span><br/>\t\t\t\t\t\tpow5<span class=\"sy1\">[</span>x2<span class=\"sy1\">]</span> <span class=\"sy3\">+</span><br/>\t\t\t\t\t\tpow5<span class=\"sy1\">[</span>x3<span class=\"sy1\">]</span><br/>\t\t\t\t\t<span class=\"kw1\">for</span> y <span class=\"sy2\">=</span> x0 <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> y &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>pow5<span class=\"sy1\">);</span> y<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\t\t\t\t<span class=\"kw1\">if</span> sum <span class=\"sy3\">==</span> pow5<span class=\"sy1\">[</span>y<span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>\t\t\t\t\t\t\t<span class=\"kw1\">return</span><br/>\t\t\t\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\tlog<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span><span class=\"st0\">\"no solution\"</span><span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">return</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 22, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List<span class=\"sy0\">.</span>Ordered<br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:head\"><span class=\"kw3\">head</span></a> <span class=\"br0\">[</span><span class=\"br0\">(</span>x0<span class=\"sy0\">,</span>x1<span class=\"sy0\">,</span>x2<span class=\"sy0\">,</span>x3<span class=\"sy0\">,</span>x4<span class=\"br0\">)</span> <span class=\"sy0\">|</span> <br/>                                        <span class=\"co1\">-- choose x0, x1, x2, x3 </span><br/>                                        <span class=\"co1\">-- so that 250 &lt; x3 &lt; x2 &lt; x1 &lt; x0</span><br/>                                        x3 <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">250</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <br/>                                        x2 <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>x3<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <br/>                                        x1 <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>x2<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <br/>                                        x0 <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>x1<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <br/>\u00a0<br/>                                        <span class=\"kw1\">let</span> p5Sum <span class=\"sy0\">=</span> x0<span class=\"sy0\">^</span><span class=\"nu0\">5</span> <span class=\"sy0\">+</span> x1<span class=\"sy0\">^</span><span class=\"nu0\">5</span> <span class=\"sy0\">+</span> x2<span class=\"sy0\">^</span><span class=\"nu0\">5</span> <span class=\"sy0\">+</span> x3<span class=\"sy0\">^</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><br/>\u00a0<br/>                                        <span class=\"co1\">-- lazy evaluation of powers of 5</span><br/>                                        <span class=\"kw1\">let</span> p5List <span class=\"sy0\">=</span> <span class=\"br0\">[</span>i<span class=\"sy0\">^</span><span class=\"nu0\">5</span><span class=\"sy0\">|</span>i <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <br/>\u00a0<br/>                                        <span class=\"co1\">-- is sum a power of 5\u00a0?</span><br/>                                        member p5Sum p5List<span class=\"sy0\">,</span> <br/>\u00a0<br/>                                        <span class=\"co1\">-- which power of 5 is sum\u00a0?</span><br/>                                        <span class=\"kw1\">let</span> Just x4 <span class=\"sy0\">=</span> elemIndex p5Sum p5List <span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">   require <span class=\"st_h\">'stats'</span><br/>   <span class=\"sy0\">(</span>#~ <span class=\"sy0\">(</span>= &lt;.<span class=\"sy0\">)</span>@<span class=\"sy0\">((</span>+/\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span>&amp;.:<span class=\"sy0\">(</span>^&amp;<span class=\"nu0\">5</span><span class=\"sy0\">)))</span><span class=\"nu0\">1</span>+<span class=\"nu0\">4</span> comb <span class=\"nu0\">248</span><br/><span class=\"nu0\">27</span> <span class=\"nu0\">84</span> <span class=\"nu0\">110</span> <span class=\"nu0\">133</span></pre>"}, {"lang": "Java", "loc": 44, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> eulerSopConjecture<br/><span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span>    MAX_NUMBER <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">boolean</span> found <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">long</span><span class=\"br0\">[</span><span class=\"br0\">]</span>  fifth <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">long</span><span class=\"br0\">[</span> MAX_NUMBER <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> MAX_NUMBER<span class=\"sy0\">;</span> i <span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">long</span> i2 <span class=\"sy0\">=</span>  i <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span><br/>            fifth<span class=\"br0\">[</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">]</span> <span class=\"sy0\">=</span> i2 <span class=\"sy0\">*</span> i2 <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"co1\">// for i</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> a <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span> found <span class=\"sy0\">;</span> a <span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span> b <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span> found <span class=\"sy0\">;</span> b <span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span> c <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span> found <span class=\"sy0\">;</span> c <span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> d <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span> d <span class=\"sy0\">&lt;</span> MAX_NUMBER <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span> found <span class=\"sy0\">;</span> d <span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        <span class=\"kw4\">long</span> sum  <span class=\"sy0\">=</span> fifth<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">+</span> fifth<span class=\"br0\">[</span>b<span class=\"br0\">]</span> <span class=\"sy0\">+</span> fifth<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">+</span> fifth<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw4\">int</span>  e <span class=\"sy0\">=</span> java.<span class=\"me1\">util</span>.<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">binarySearch</span><span class=\"br0\">(</span> fifth, sum <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        found  <span class=\"sy0\">=</span> <span class=\"br0\">(</span> e <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">if</span><span class=\"br0\">(</span> found <span class=\"br0\">)</span><br/>                        <span class=\"br0\">{</span><br/>                            <span class=\"co1\">// the value at e is a fifth power</span><br/>                            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span>a<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 + \"</span><br/>                                            <span class=\"sy0\">+</span> <span class=\"br0\">(</span>b<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 + \"</span><br/>                                            <span class=\"sy0\">+</span> <span class=\"br0\">(</span>c<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 + \"</span><br/>                                            <span class=\"sy0\">+</span> <span class=\"br0\">(</span>d<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 = \"</span><br/>                                            <span class=\"sy0\">+</span> <span class=\"br0\">(</span>e<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5\"</span><br/>                                            <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span> <span class=\"co1\">// if found;;</span><br/>                    <span class=\"br0\">}</span> <span class=\"co1\">// for d</span><br/>                <span class=\"br0\">}</span> <span class=\"co1\">// for c</span><br/>            <span class=\"br0\">}</span> <span class=\"co1\">// for b</span><br/>        <span class=\"br0\">}</span> <span class=\"co1\">// for a</span><br/>    <span class=\"br0\">}</span> <span class=\"co1\">// main</span><br/>\u00a0<br/><span class=\"br0\">}</span> <span class=\"co1\">// eulerSopConjecture</span></pre>"}, {"lang": "JavaScript", "loc": 36, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> eulers_sum_of_powers <span class=\"sy0\">=</span> <span class=\"kw1\">function</span> <span class=\"br0\">(</span>iMaxN<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">var</span> aPow5 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> oPow5ToN <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> iP <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> iP <span class=\"sy0\">&lt;=</span> iMaxN<span class=\"sy0\">;</span> iP<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> iPow5 <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span>iP<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        aPow5.<span class=\"me1\">push</span><span class=\"br0\">(</span>iPow5<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        oPow5ToN<span class=\"br0\">[</span>iPow5<span class=\"br0\">]</span> <span class=\"sy0\">=</span> iP<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i0 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i0 <span class=\"sy0\">&lt;=</span> iMaxN<span class=\"sy0\">;</span> i0<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i1 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i1 <span class=\"sy0\">&lt;=</span> i0<span class=\"sy0\">;</span> i1<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i2 <span class=\"sy0\">&lt;=</span> i1<span class=\"sy0\">;</span> i2<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i3 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i3 <span class=\"sy0\">&lt;=</span> i2<span class=\"sy0\">;</span> i3<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">var</span> iPow5Sum <span class=\"sy0\">=</span> aPow5<span class=\"br0\">[</span>i0<span class=\"br0\">]</span> <span class=\"sy0\">+</span> aPow5<span class=\"br0\">[</span>i1<span class=\"br0\">]</span> <span class=\"sy0\">+</span> aPow5<span class=\"br0\">[</span>i2<span class=\"br0\">]</span> <span class=\"sy0\">+</span> aPow5<span class=\"br0\">[</span>i3<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">typeof</span> oPow5ToN<span class=\"br0\">[</span>iPow5Sum<span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"st0\">'undefined'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">return</span> <span class=\"br0\">{</span><br/>                            i0<span class=\"sy0\">:</span> i0<span class=\"sy0\">,</span><br/>                            i1<span class=\"sy0\">:</span> i1<span class=\"sy0\">,</span><br/>                            i2<span class=\"sy0\">:</span> i2<span class=\"sy0\">,</span><br/>                            i3<span class=\"sy0\">:</span> i3<span class=\"sy0\">,</span><br/>                            iSum<span class=\"sy0\">:</span> oPow5ToN<span class=\"br0\">[</span>iPow5Sum<span class=\"br0\">]</span><br/>                        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> oResult <span class=\"sy0\">=</span> eulers_sum_of_powers<span class=\"br0\">(</span><span class=\"nu0\">250</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span>oResult.<span class=\"me1\">i0</span> <span class=\"sy0\">+</span> <span class=\"st0\">'^5 + '</span> <span class=\"sy0\">+</span> oResult.<span class=\"me1\">i1</span> <span class=\"sy0\">+</span> <span class=\"st0\">'^5 + '</span> <span class=\"sy0\">+</span> oResult.<span class=\"me1\">i2</span> <span class=\"sy0\">+</span><br/>    <span class=\"st0\">'^5 + '</span> <span class=\"sy0\">+</span> oResult.<span class=\"me1\">i3</span> <span class=\"sy0\">+</span> <span class=\"st0\">'^5 = '</span> <span class=\"sy0\">+</span> oResult.<span class=\"me1\">iSum</span> <span class=\"sy0\">+</span> <span class=\"st0\">'^5'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 27, "block": "<pre class=\"text highlighted_source\"># Search for y in 1 .. maxn (inclusive) for a solution to SIGMA (xi ^ 5) = y^5<br/># and for each solution with x0&lt;=x1&lt;=...&lt;x3, print [x0, x1, x3, x3, y]<br/>#<br/>def sum_of_powers_conjecture(maxn):<br/>  def p5: . as $in | (.*.) | ((.*.) * $in);<br/>  def fifth: log / 5 | exp;<br/>\u00a0<br/>  # return the fifth root if . is a power of 5<br/>  def integral_fifth_root: fifth | if . == floor then . else false end;<br/>\u00a0<br/>  (maxn | p5) as $uber<br/>  | range(1; maxn) as $x0<br/>  | ($x0 | p5) as $s0<br/>  | if $s0 &lt; $uber then range($x0; ($uber - $s0 | fifth) + 1) as $x1<br/>    | ($s0 + ($x1 | p5)) as $s1<br/>    | if $s1 &lt; $uber then range($x1; ($uber - $s1 | fifth) + 1) as $x2<br/>      | ($s1 + ($x2 | p5)) as $s2<br/>        | if $s2 &lt; $uber then range($x2; ($uber - $s2 | fifth) + 1) as $x3<br/>          | ($s2 + ($x3 | p5)) as $sumx<br/>\t  | ($sumx | integral_fifth_root)<br/>\t  | if . then [$x0,$x1,$x2,$x3,.] else empty end<br/>\t  else empty<br/>\t  end<br/>      else empty<br/>      end<br/>    else empty<br/>    end\u00a0;</pre>"}, {"lang": "Julia", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>const lim = 250<br/>const pwr = 5<br/>const p = [i^pwr for i in 1:lim]<br/>\u00a0<br/>x = zeros(Int, pwr-1)<br/>y = 0<br/>\u00a0<br/>for a in combinations(1:lim, pwr-1)<br/>    b = searchsorted(p, sum(p[a]))<br/>    0 &lt; length(b) || continue<br/>    x = a<br/>    y = b[1]<br/>    break<br/>end<br/>\u00a0<br/>if y == 0<br/>    println(\"No solution found for power = \", pwr, \" and limit = \", lim, \".\")<br/>else<br/>    s = [@sprintf(\"%d^%d\", i, pwr) for i in x]<br/>    s = join(s, \" + \")<br/>    println(\"A solution is \", s, \" = \", @sprintf(\"%d^%d\", y, pwr), \".\")<br/>end<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 19, "block": "<pre class=\"scala highlighted_source\">fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p5 <span class=\"sy0\">=</span> LongArray<span class=\"br0\">(</span><span class=\"nu0\">250</span><span class=\"br0\">)</span><span class=\"br0\">{</span> it.<span class=\"me1\">toLong</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> it <span class=\"sy0\">*</span> it <span class=\"sy0\">*</span> it <span class=\"sy0\">*</span> it <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> sum<span class=\"sy0\">:</span> Long<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> y<span class=\"sy0\">:</span> Int<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> found <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>    loop<span class=\"sy0\">@</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x0 in <span class=\"nu0\">0</span> .. <span class=\"nu0\">249</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x1 in <span class=\"nu0\">0</span> .. <span class=\"me1\">x0</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x2 in <span class=\"nu0\">0</span> .. <span class=\"me1\">x1</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x3 in <span class=\"nu0\">0</span> .. <span class=\"me1\">x2</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    sum <span class=\"sy0\">=</span> p5<span class=\"br0\">[</span>x0<span class=\"br0\">]</span> + p5<span class=\"br0\">[</span>x1<span class=\"br0\">]</span> + p5<span class=\"br0\">[</span>x2<span class=\"br0\">]</span> + p5<span class=\"br0\">[</span>x3<span class=\"br0\">]</span><br/>                    y <span class=\"sy0\">=</span> p5.<span class=\"me1\">binarySearch</span><span class=\"br0\">(</span>sum<span class=\"br0\">)</span><br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>y <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        println<span class=\"br0\">(</span><span class=\"st0\">\"$x0^5 + $x1^5 + $x2^5 + $x3^5 = $y^5\"</span><span class=\"br0\">)</span><br/>                        found <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>                        break<span class=\"sy0\">@</span>loop<br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>found<span class=\"br0\">)</span> println<span class=\"br0\">(</span><span class=\"st0\">\"No solution was found\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 42, "block": "<pre class=\"lua highlighted_source\"><span class=\"co1\">-- Fast table search (only works if table values are in order)</span><br/><span class=\"kw1\">function</span> binarySearch <span class=\"br0\">(</span>t<span class=\"sy0\">,</span> n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> start<span class=\"sy0\">,</span> stop<span class=\"sy0\">,</span> mid <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>t<br/>    <span class=\"kw1\">while</span> start <span class=\"sy0\">&lt;</span> stop <span class=\"kw1\">do</span><br/>        mid <span class=\"sy0\">=</span> <span class=\"kw3\">math.floor</span><span class=\"br0\">(</span><span class=\"br0\">(</span>start <span class=\"sy0\">+</span> stop<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> n <span class=\"sy0\">==</span> t<span class=\"br0\">[</span>mid<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">return</span> mid<br/>        <span class=\"kw1\">elseif</span> n <span class=\"sy0\">&lt;</span> t<span class=\"br0\">[</span>mid<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>            stop <span class=\"sy0\">=</span> mid <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">else</span><br/>            start <span class=\"sy0\">=</span> mid <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">nil</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-- Test Euler's sum of powers conjecture</span><br/><span class=\"kw1\">function</span> euler <span class=\"br0\">(</span>limit<span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> pow5<span class=\"sy0\">,</span> sum <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> limit <span class=\"kw1\">do</span> pow5<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i<span class=\"sy0\">^</span><span class=\"nu0\">5</span> <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">for</span> x0 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> limit <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">for</span> x1 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> x0 <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">for</span> x2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> x1 <span class=\"kw1\">do</span><br/>                <span class=\"kw1\">for</span> x3 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> x2 <span class=\"kw1\">do</span><br/>                    sum <span class=\"sy0\">=</span> pow5<span class=\"br0\">[</span>x0<span class=\"br0\">]</span> <span class=\"sy0\">+</span> pow5<span class=\"br0\">[</span>x1<span class=\"br0\">]</span> <span class=\"sy0\">+</span> pow5<span class=\"br0\">[</span>x2<span class=\"br0\">]</span> <span class=\"sy0\">+</span> pow5<span class=\"br0\">[</span>x3<span class=\"br0\">]</span><br/>                    <span class=\"kw1\">if</span> binarySearch<span class=\"br0\">(</span>pow5<span class=\"sy0\">,</span> sum<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                        <span class=\"kw3\">print</span><span class=\"br0\">(</span>x0 <span class=\"sy0\">..</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy0\">..</span> x1 <span class=\"sy0\">..</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy0\">..</span> x2 <span class=\"sy0\">..</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy0\">..</span> x3 <span class=\"sy0\">..</span> <span class=\"st0\">\"^5 = \"</span> <span class=\"sy0\">..</span> sum<span class=\"sy0\">^</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span> <span class=\"st0\">\"^5\"</span><span class=\"br0\">)</span><br/>                        <span class=\"kw1\">return</span> <span class=\"kw4\">true</span><br/>                    <span class=\"kw1\">end</span><br/>                <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">false</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-- Main procedure</span><br/><span class=\"kw1\">if</span> euler<span class=\"br0\">(</span><span class=\"nu0\">249</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Time taken: \"</span> <span class=\"sy0\">..</span> <span class=\"kw3\">os.clock</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">..</span> <span class=\"st0\">\" seconds\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">else</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Looks like he was right after all...\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Mathematica", "loc": 3, "block": "<pre class=\"text highlighted_source\">Sort[FindInstance[<br/>   x0^5 + x1^5 + x2^5 + x3^5 == y^5 &amp;&amp; x0 &gt; 0 &amp;&amp; x1 &gt; 0 &amp;&amp; x2 &gt; 0 &amp;&amp; <br/>    x3 &gt; 0, {x0, x1, x2, x3, y}, Integers][[1, All, -1]]]</pre>"}, {"lang": "Microsoft Small Basic", "loc": 32, "block": "<pre class=\"text highlighted_source\">' Euler sum of powers conjecture - 03/07/2015<br/>  'find: x1^5+x2^5+x3^5+x4^5=x5^5<br/>  '-&gt; x1=27 x2=84 x3=110 x4=133 x5=144<br/>  maxn=250<br/>  For i=1 to maxn<br/>\tp5[i]=Math.Power(i,5)<br/>  EndFor<br/>  For x1=1 to maxn-4<br/>    For x2=x1+1 to maxn-3<br/>      'TextWindow.WriteLine(\"x1=\"+x1+\", x2=\"+x2)<br/>      For x3=x2+1 to maxn-2<br/>        'TextWindow.WriteLine(\"x1=\"+x1+\", x2=\"+x2+\", x3=\"+x3)<br/>        For x4=x3+1 to maxn-1<br/>          'TextWindow.WriteLine(\"x1=\"+x1+\", x2=\"+x2+\", x3=\"+x3+\", x4=\"+x4)<br/>          x5=x4+1<br/>          valx=p5[x5]<br/>          sumx=p5[x1]+p5[x2]+p5[x3]+p5[x4]<br/>          While x5&lt;=maxn and valx&lt;=sumx<br/>            If valx=sumx Then<br/>              TextWindow.WriteLine(\"Found!\")<br/>              TextWindow.WriteLine(\"-&gt; \"+x1+\"^5+\"+x2+\"^5+\"+x3+\"^5+\"+x4+\"^5=\"+x5+\"^5\")<br/>              TextWindow.WriteLine(\"x5^5=\"+sumx)<br/>              Goto EndPgrm<br/>            EndIf<br/>            x5=x5+1<br/>            valx=p5[x5]<br/>          EndWhile 'x5<br/>        EndFor 'x4<br/>      EndFor 'x3<br/>    EndFor 'x2<br/>  EndFor 'x1<br/> EndPgrm: </pre>"}, {"lang": "Modula-2", "loc": 40, "block": "<pre class=\"modula2 highlighted_source\"><span class=\"kw1\">MODULE</span> EulerConjecture;<br/><span class=\"kw1\">FROM</span> FormatString <span class=\"kw1\">IMPORT</span> FormatString;<br/><span class=\"kw1\">FROM</span> Terminal <span class=\"kw1\">IMPORT</span> WriteString<span class=\"sy0\">,</span>WriteLn<span class=\"sy0\">,</span>ReadChar;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Pow5<span class=\"br0\">(</span>a <span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">RETURN</span> a <span class=\"sy0\">*</span> a <span class=\"sy0\">*</span> a <span class=\"sy0\">*</span> a <span class=\"sy0\">*</span> a<br/><span class=\"kw1\">END</span> Pow5;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>    buf <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">63</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>    a<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>c<span class=\"sy0\">,</span>d<span class=\"sy0\">,</span>e<span class=\"sy0\">,</span>sum<span class=\"sy0\">,</span>curr <span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">FOR</span> a<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">250</span> <span class=\"kw1\">DO</span><br/>        <span class=\"kw1\">FOR</span> b<span class=\"sy0\">:=</span>a <span class=\"kw1\">TO</span> <span class=\"nu0\">250</span> <span class=\"kw1\">DO</span><br/>            <span class=\"kw1\">IF</span> b<span class=\"sy0\">=</span>a <span class=\"kw1\">THEN</span> CONTINUE <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">FOR</span> c<span class=\"sy0\">:=</span>b <span class=\"kw1\">TO</span> <span class=\"nu0\">250</span> <span class=\"kw1\">DO</span><br/>                <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>c<span class=\"sy0\">=</span>a<span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>c<span class=\"sy0\">=</span>b<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> CONTINUE <span class=\"kw1\">END</span>;<br/>                <span class=\"kw1\">FOR</span> d<span class=\"sy0\">:=</span>c <span class=\"kw1\">TO</span> <span class=\"nu0\">250</span> <span class=\"kw1\">DO</span><br/>                    <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>d<span class=\"sy0\">=</span>a<span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>d<span class=\"sy0\">=</span>b<span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>d<span class=\"sy0\">=</span>c<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> CONTINUE <span class=\"kw1\">END</span>;<br/>                    sum <span class=\"sy0\">:=</span> Pow5<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">+</span> Pow5<span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"sy0\">+</span> Pow5<span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">+</span> Pow5<span class=\"br0\">(</span>d<span class=\"br0\">)</span>;<br/>                    <span class=\"kw1\">FOR</span> e<span class=\"sy0\">:=</span>d <span class=\"kw1\">TO</span> <span class=\"nu0\">250</span> <span class=\"kw1\">DO</span><br/>                        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>e<span class=\"sy0\">=</span>a<span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>e<span class=\"sy0\">=</span>b<span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>e<span class=\"sy0\">=</span>c<span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>e<span class=\"sy0\">=</span>d<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> CONTINUE <span class=\"kw1\">END</span>;<br/>                        curr <span class=\"sy0\">:=</span> Pow5<span class=\"br0\">(</span>e<span class=\"br0\">)</span>;<br/>                        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>sum<span class=\"sy0\">#</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">AND</span> <span class=\"br0\">(</span>sum<span class=\"sy0\">=</span>curr<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>                            FormatString<span class=\"br0\">(</span><span class=\"st0\">\"%l^5 +\u00a0%l^5 +\u00a0%l^5 +\u00a0%l^5 =\u00a0%l^5<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> buf<span class=\"sy0\">,</span> a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> e<span class=\"br0\">)</span>;<br/>                            WriteString<span class=\"br0\">(</span>buf<span class=\"br0\">)</span><br/>                        <span class=\"kw1\">ELSIF</span> curr &gt; sum <span class=\"kw1\">THEN</span><br/>                            BREAK<br/>                        <span class=\"kw1\">END</span><br/>                    <span class=\"kw1\">END</span>;<br/>                <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">END</span>;<br/>        <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"Done\"</span><span class=\"br0\">)</span>;<br/>    WriteLn;<br/>    ReadChar<br/><span class=\"kw1\">END</span> EulerConjecture.</pre>"}, {"lang": "Nim", "loc": 45, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Brute force approach<br/>\u00a0<br/>import times<br/>\u00a0<br/># assumes an array of non-decreasing positive integers<br/>proc binarySearch(a\u00a0: openArray[int], target\u00a0: int)\u00a0: int = <br/>  var left, right, mid\u00a0: int<br/>  left = 0<br/>  right = len(a) - 1<br/>  while true\u00a0:<br/>    if left &gt; right\u00a0: return 0  # no match found<br/>    mid = (left + right) div 2<br/>    if a[mid] &lt; target\u00a0:<br/>      left = mid + 1<br/>    elif a[mid] &gt; target\u00a0:<br/>      right = mid - 1<br/>    else\u00a0:<br/>      return mid  # match found<br/>\u00a0<br/>var <br/>  p5\u00a0: array[250, int]<br/>  sum = 0<br/>  y, t1\u00a0: int<br/>\u00a0<br/>let t0 = cpuTime()<br/>\u00a0<br/>for i in 1 .. 249\u00a0:<br/>  p5[i] = i * i * i * i * i<br/>\u00a0<br/>for x0 in 1 .. 249\u00a0:<br/>  for x1 in 1 .. x0 - 1\u00a0:<br/>    for x2 in 1 .. x1 - 1\u00a0:<br/>      for x3 in 1 .. x2 - 1\u00a0:<br/>        sum = p5[x0] + p5[x1] + p5[x2] + p5[x3]<br/>        y = binarySearch(p5, sum)<br/>        if y &gt; 0\u00a0:<br/>          t1 = int((cputime() - t0) * 1000.0) <br/>          echo \"Time\u00a0: \", t1, \" milliseconds\"<br/>          echo  $x0 &amp; \"^5 + \" &amp; $x1 &amp; \"^5 + \" &amp; $x2 &amp; \"^5 + \" &amp; $x3 &amp; \"^5 = \" &amp; $y &amp; \"^5\"<br/>          quit()<br/>\u00a0<br/>if y == 0\u00a0:<br/>  echo \"No solution was found\"  <br/>\u00a0</pre>"}, {"lang": "Oforth", "loc": 14, "block": "<pre class=\"text highlighted_source\">: eulerSum<br/>| i j k l ip jp kp |<br/>   250 loop: i [<br/>      i 5 pow -&gt;ip<br/>      i 1 + 250 for: j [<br/>         j 5 pow ip + -&gt;jp<br/>         j 1 + 250 for: k [<br/>            k 5 pow jp + -&gt;kp<br/>            k 1 + 250 for: l [<br/>               kp l 5 pow + 0.2 powf dup asInteger == ifTrue: [ [ i, j, k, l ] println ]<br/>              ]<br/>            ]<br/>         ]<br/>      ]\u00a0;</pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">forvec</span><span class=\"br0\">(</span>v<span class=\"sy0\">=</span><span class=\"kw1\">vector</span><span class=\"br0\">(</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span>i<span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">250</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">ispower</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">5</span><span class=\"sy0\">+</span>v<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">5</span><span class=\"sy0\">+</span>v<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">5</span><span class=\"sy0\">+</span>v<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">5</span><span class=\"sy0\">,</span><span class=\"nu1\">5</span><span class=\"sy0\">,&amp;</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw1\">print</span><span class=\"br0\">(</span>n<span class=\"st0\">\" \"</span>v<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu1\">2</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 33, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> Pot5Test<span class=\"sy1\">;</span><br/><span class=\"co2\">{$IFDEF FPC} {$MODE DELPHI}{$ELSE]{$APPTYPE CONSOLE}{$ENDIF}</span><br/><span class=\"kw1\">type</span><br/>  tTest <span class=\"sy3\">=</span> double<span class=\"sy1\">;</span><span class=\"co1\">//UInt64;{ On linux 32Bit double is faster than  Uint64 } </span><br/><span class=\"kw1\">var</span><br/>  Pot5 <span class=\"sy1\">:</span> <span class=\"kw4\">array</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">..</span><span class=\"nu0\">255</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> tTest<span class=\"sy1\">;</span><br/>  res<span class=\"sy1\">,</span>tmpSum <span class=\"sy1\">:</span> tTest<span class=\"sy1\">;</span><br/>  x0<span class=\"sy1\">,</span>x1<span class=\"sy1\">,</span>x2<span class=\"sy1\">,</span>x3<span class=\"sy1\">,</span> y <span class=\"sy1\">:</span> NativeUint<span class=\"sy1\">;</span><span class=\"co1\">//= Uint32 or 64 depending on OS xx-Bit</span><br/>  i <span class=\"sy1\">:</span> <span class=\"kw4\">byte</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">BEGIN</span><br/>  <span class=\"kw1\">For</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">255</span> <span class=\"kw1\">do</span><br/>    Pot5<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"br0\">(</span>i<span class=\"sy3\">*</span>i<span class=\"sy3\">*</span>i<span class=\"sy3\">*</span>i<span class=\"br0\">)</span><span class=\"sy3\">*</span>Uint64<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> x0 <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">250</span><span class=\"sy3\">-</span><span class=\"nu0\">3</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">For</span> x1 <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x0<span class=\"sy3\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">250</span><span class=\"sy3\">-</span><span class=\"nu0\">2</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">For</span> x2 <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x1<span class=\"sy3\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">250</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">Begin</span><br/>        <span class=\"co1\">//set y here only, because pot5 is strong monoton growing,</span><br/>        <span class=\"co1\">//therefor the sum is strong monoton growing too.</span><br/>        y <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x2<span class=\"sy3\">+</span><span class=\"nu0\">2</span><span class=\"sy1\">;</span><span class=\"co1\">// aka x3+1</span><br/>        tmpSum <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Pot5<span class=\"br0\">[</span>x0<span class=\"br0\">]</span><span class=\"sy3\">+</span>Pot5<span class=\"br0\">[</span>x1<span class=\"br0\">]</span><span class=\"sy3\">+</span>Pot5<span class=\"br0\">[</span>x2<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        <span class=\"kw1\">For</span> x3 <span class=\"sy1\">:</span><span class=\"sy3\">=</span> x2<span class=\"sy3\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">250</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">Begin</span><br/>          res <span class=\"sy1\">:</span><span class=\"sy3\">=</span> tmpSum<span class=\"sy3\">+</span>Pot5<span class=\"br0\">[</span>x3<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>          <span class=\"kw1\">while</span> <span class=\"br0\">(</span>y&lt; <span class=\"nu0\">250</span><span class=\"br0\">)</span> <span class=\"kw3\">AND</span> <span class=\"br0\">(</span>res &gt; Pot5<span class=\"br0\">[</span>y<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>            inc<span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>          <span class=\"kw1\">IF</span> y &gt; <span class=\"nu0\">250</span> <span class=\"kw1\">then</span> <span class=\"kw1\">BREAK</span><span class=\"sy1\">;</span><br/>          <span class=\"kw1\">if</span> res <span class=\"sy3\">=</span> Pot5<span class=\"br0\">[</span>y<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>x0<span class=\"sy1\">,</span><span class=\"st0\">'^5+'</span><span class=\"sy1\">,</span>x1<span class=\"sy1\">,</span><span class=\"st0\">'^5+'</span><span class=\"sy1\">,</span>x2<span class=\"sy1\">,</span><span class=\"st0\">'^5+'</span><span class=\"sy1\">,</span>x3<span class=\"sy1\">,</span><span class=\"st0\">'^5 = '</span><span class=\"sy1\">,</span>y<span class=\"sy1\">,</span><span class=\"st0\">'^5'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">END</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 14, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> constant MAX <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">250</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@p5</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"co5\">$_</span><span class=\"sy0\">**</span><span class=\"nu0\">5</span> <span class=\"br0\">}</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> MAX<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">%p5</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$s</span><span class=\"sy0\">++</span> <span class=\"br0\">}</span> <span class=\"re0\">@p5</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x0</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>MAX<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x1</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$x0</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x2</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$x1</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$x3</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$x2</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$sum</span> <span class=\"sy0\">=</span> <span class=\"re0\">$p5</span><span class=\"br0\">[</span><span class=\"re0\">$x0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$p5</span><span class=\"br0\">[</span><span class=\"re0\">$x1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$p5</span><span class=\"br0\">[</span><span class=\"re0\">$x2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$p5</span><span class=\"br0\">[</span><span class=\"re0\">$x3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"$x3 $x2 $x1 $x0 $p5{$sum}<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">if</span> <a href=\"http://perldoc.perl.org/functions/exists.html\"><span class=\"kw3\">exists</span></a> <span class=\"re0\">$p5</span><span class=\"br0\">{</span><span class=\"re0\">$sum</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 22, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">constant</span> MAX <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">%p5</span><span class=\"br0\">{</span>Int<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">%sum2</span><span class=\"br0\">{</span>Int<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"me1\">MAX</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">%p5</span><span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">**</span><span class=\"nu0\">5</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"me1\">MAX</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$j</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">%sum2</span><span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">**</span><span class=\"nu0\">5</span> <span class=\"sy0\">+</span> <span class=\"re0\">$j</span><span class=\"sy0\">**</span><span class=\"nu0\">5</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@sk</span> <span class=\"sy0\">=</span> <span class=\"re0\">%sum2</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"re0\">%p5</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$p</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"re0\">@sk</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$s</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"re0\">$p</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"re0\">%sum2</span><span class=\"br0\">{</span><span class=\"re0\">$p</span> <span class=\"sy0\">-</span> <span class=\"re0\">$s</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw3\">say</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw3\">sort</span> <span class=\"sy0\">|</span><span class=\"re0\">%sum2</span><span class=\"br0\">{</span><span class=\"re0\">$s</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,|</span><span class=\"re0\">%sum2</span><span class=\"br0\">{</span><span class=\"re0\">$p</span><span class=\"sy0\">-</span><span class=\"re0\">$s</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">X</span><span class=\"sy0\">~</span> <span class=\"st_h\">'\u2075'</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">join</span><span class=\"br0\">(</span><span class=\"st_h\">' + '</span><span class=\"br0\">)</span> <span class=\"sy0\">~</span> <span class=\"st0\">\" = \u00a0%p5{$p}\"</span> <span class=\"sy0\">~</span> <span class=\"st0\">\"\u2075\"</span><span class=\"sy0\">;</span><br/>            exit<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 35, "block": "<pre class=\"text highlighted_source\">constant MAX = 250<br/>\u00a0<br/>constant p5 = new_dict(),<br/>         sum2 = new_dict()<br/>\u00a0<br/>atom t0 = time()<br/>for i=1 to MAX do<br/>    atom i5 = power(i,5)<br/>    setd(i5,i,p5)<br/>    for j=1 to i-1 do<br/>        atom j5 = power(j,5)<br/>        setd(j5+i5,{j,i},sum2)<br/>    end for<br/>end for<br/>\u00a0<br/>?time()-t0<br/>\u00a0<br/>function forsum2(object s, object data, object p)<br/>    if p&lt;=s then return 0 end if<br/>    integer k = getd_index(p-s,sum2)<br/>    if k!=NULL then<br/>       \u00a0?getd(p,p5)&amp;data&amp;getd_by_index(k,sum2)<br/>        return 0 -- (show one solution per p)<br/>    end if<br/>    return 1<br/>end function<br/>\u00a0<br/>function forp5(object key, object /*data*/, object /*user_data*/)<br/>    traverse_dict(routine_id(\"forsum2\"),key,sum2)<br/>    return 1<br/>end function<br/>\u00a0<br/>traverse_dict(routine_id(\"forp5\"),0,p5)<br/>\u00a0<br/>?time()-t0</pre>"}, {"lang": "PHP", "loc": 33, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/>\u00a0<br/><span class=\"kw2\">function</span> eulers_sum_of_powers <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"re0\">$max_n</span> <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$pow_5</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$pow_5_to_n</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$p</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$p</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$max_n</span><span class=\"sy0\">;</span> <span class=\"re0\">$p</span> <span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"re0\">$pow5</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/pow\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span><span class=\"re0\">$p</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$pow_5</span> <span class=\"br0\">[</span><span class=\"re0\">$p</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$pow5</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$pow_5_to_n</span><span class=\"br0\">[</span><span class=\"re0\">$pow5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$p</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$pow_5</span> <span class=\"kw1\">as</span> <span class=\"re0\">$n_0</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$p_0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$pow_5</span> <span class=\"kw1\">as</span> <span class=\"re0\">$n_1</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$p_1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$n_0</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$n_1</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$pow_5</span> <span class=\"kw1\">as</span> <span class=\"re0\">$n_2</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$p_2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$n_1</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$n_2</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$pow_5</span> <span class=\"kw1\">as</span> <span class=\"re0\">$n_3</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$p_3</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$n_2</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$n_3</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"re0\">$pow_5_sum</span> <span class=\"sy0\">=</span> <span class=\"re0\">$p_0</span> <span class=\"sy0\">+</span> <span class=\"re0\">$p_1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$p_2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$p_3</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/isset\"><span class=\"kw3\">isset</span></a><span class=\"br0\">(</span><span class=\"re0\">$pow_5_to_n</span><span class=\"br0\">[</span><span class=\"re0\">$pow_5_sum</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t\t\t<span class=\"kw1\">return</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"re0\">$n_0</span><span class=\"sy0\">,</span> <span class=\"re0\">$n_1</span><span class=\"sy0\">,</span> <span class=\"re0\">$n_2</span><span class=\"sy0\">,</span> <span class=\"re0\">$n_3</span><span class=\"sy0\">,</span> <span class=\"re0\">$pow_5_to_n</span><span class=\"br0\">[</span><span class=\"re0\">$pow_5_sum</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.php.net/list\"><span class=\"kw3\">list</span></a><span class=\"br0\">(</span><span class=\"re0\">$n_0</span><span class=\"sy0\">,</span> <span class=\"re0\">$n_1</span><span class=\"sy0\">,</span> <span class=\"re0\">$n_2</span><span class=\"sy0\">,</span> <span class=\"re0\">$n_3</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> eulers_sum_of_powers<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$n_0</span>^5 + <span class=\"es4\">$n_1</span>^5 + <span class=\"es4\">$n_2</span>^5 + <span class=\"es4\">$n_3</span>^5 = <span class=\"es4\">$y</span>^5\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 25, "block": "<pre class=\"text highlighted_source\">(off P)<br/>(off S)<br/>\u00a0<br/>(for I 250<br/>   (idx<br/>      'P<br/>      (list (setq @@ (** I 5)) I)<br/>      T )<br/>   (for (J I (&gt;= 250 J) (inc J))<br/>      (idx<br/>         'S<br/>         (list (+ @@ (** J 5)) (list I J))<br/>         T ) ) )<br/>(println<br/>   (catch 'found<br/>      (for A (idx 'P)<br/>         (for B (idx 'S)<br/>            (T (&lt;= (car A) (car B)))<br/>            (and<br/>               (lup S (- (car A) (car B)))<br/>               (throw 'found<br/>                  (conc<br/>                     (cadr (lup S (car B)))<br/>                     (cadr (lup S (- (car A) (car B))))<br/>                     (cdr (lup P (car A))) ) ) ) ) ) ) )</pre>"}, {"lang": "PowerShell", "loc": 23, "block": "<pre class=\"powershell highlighted_source\"><span class=\"co1\"># EULER.PS1</span><br/><span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><br/>\u00a0<br/><span class=\"re0\">$powers</span> <span class=\"sy0\">=</span>  <span class=\"kw1\">New-Object</span> System.Collections.ArrayList<br/><span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; <span class=\"re0\">$i</span> <span class=\"kw4\">-lt</span> <span class=\"re0\">$max</span>; <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"re0\">$tmp</span> <span class=\"sy0\">=</span> <span class=\"re0\">$powers</span>.Add<span class=\"br0\">(</span><span class=\"br0\">[</span>Math<span class=\"br0\">]</span>::Pow<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x0</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; <span class=\"re0\">$x0</span> <span class=\"kw4\">-lt</span> <span class=\"re0\">$max</span>; <span class=\"re0\">$x0</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; <span class=\"re0\">$x1</span> <span class=\"kw4\">-lt</span> <span class=\"re0\">$x0</span>; <span class=\"re0\">$x1</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; <span class=\"re0\">$x2</span> <span class=\"kw4\">-lt</span> <span class=\"re0\">$x1</span>; <span class=\"re0\">$x2</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; <span class=\"re0\">$x3</span> <span class=\"kw4\">-lt</span> <span class=\"re0\">$x2</span>; <span class=\"re0\">$x3</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$sum</span> <span class=\"sy0\">=</span> <span class=\"re0\">$powers</span><span class=\"br0\">[</span><span class=\"re0\">$x0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$powers</span><span class=\"br0\">[</span><span class=\"re0\">$x1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$powers</span><span class=\"br0\">[</span><span class=\"re0\">$x2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$powers</span><span class=\"br0\">[</span><span class=\"re0\">$x3</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$S1</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"re3\">int</span><span class=\"br0\">]</span><span class=\"br0\">[</span>Math<span class=\"br0\">]</span>::pow<span class=\"br0\">(</span><span class=\"re0\">$sum</span><span class=\"sy0\">,</span><span class=\"nu0\">0.2</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$sum</span> <span class=\"kw4\">-eq</span> <span class=\"re0\">$powers</span><span class=\"br0\">[</span><span class=\"re0\">$S1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          <span class=\"kw1\">Write-host</span> <span class=\"st0\">\"$x0^5 + $x1^5 + $x2^5 + $x3^5 = $S1^5\"</span><br/>          <span class=\"kw3\">return</span><br/>        <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PureBasic", "loc": 51, "block": "<pre class=\"purebasic highlighted_source\">\u00a0<br/><span class=\"kw1\">EnableExplicit</span><br/>\u00a0<br/><span class=\"co1\">; assumes an array of non-decreasing positive integers</span><br/><span class=\"kw1\">Procedure</span>.q BinarySearch<span class=\"br0\">(</span>Array a.q<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, Target.q<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> l <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, r <span class=\"sy0\">=</span> ArraySize<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, m<br/>  <span class=\"kw1\">Repeat</span><br/>    <span class=\"kw1\">If</span> l <span class=\"sy0\">&gt;</span> r\u00a0: <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">0</span>\u00a0: <span class=\"kw1\">EndIf</span><span class=\"co1\">; no match found</span><br/>    m <span class=\"sy0\">=</span> <span class=\"br0\">(</span>l <span class=\"sy0\">+</span> r<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>    <span class=\"kw1\">If</span> a<span class=\"br0\">(</span>m<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> target<br/>      l <span class=\"sy0\">=</span> m <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">ElseIf</span> a<span class=\"br0\">(</span>m<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> target<br/>      r <span class=\"sy0\">=</span> m <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">Else</span><br/>      <span class=\"kw1\">ProcedureReturn</span> m <span class=\"co1\">; match found</span><br/>    <span class=\"kw1\">EndIf</span>  <br/>  <span class=\"kw1\">ForEver</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> i, x0, x1, x2, x3, y<br/><span class=\"kw1\">Define</span>.q sum<br/><span class=\"kw1\">Define</span> <span class=\"kw1\">Dim</span> p5.q<span class=\"br0\">(</span><span class=\"nu0\">249</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">249</span><br/>  p5<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> i <span class=\"sy0\">*</span> i <span class=\"sy0\">*</span> i <span class=\"sy0\">*</span> i<br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> x0 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">249</span><br/>    <span class=\"kw1\">For</span> x1 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> x0 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">For</span> x2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> x1 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <br/>        <span class=\"kw1\">For</span> x3 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> x2 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <br/>          sum <span class=\"sy0\">=</span> p5<span class=\"br0\">(</span>x0<span class=\"br0\">)</span> <span class=\"sy0\">+</span> p5<span class=\"br0\">(</span>x1<span class=\"br0\">)</span> <span class=\"sy0\">+</span> p5<span class=\"br0\">(</span>x2<span class=\"br0\">)</span> <span class=\"sy0\">+</span> p5<span class=\"br0\">(</span>x3<span class=\"br0\">)</span><br/>          y <span class=\"sy0\">=</span> BinarySearch<span class=\"br0\">(</span>p5<span class=\"br0\">(</span><span class=\"br0\">)</span>, sum<span class=\"br0\">)</span><br/>          <span class=\"kw1\">If</span> y <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span>          <br/>            <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>x0<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>x1<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>x2<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 + \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>x3<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5 = \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"^5\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">Goto</span> finish<br/>          <span class=\"kw1\">EndIf</span><br/>        <span class=\"kw1\">Next</span> x3<br/>      <span class=\"kw1\">Next</span> x2<br/>    <span class=\"kw1\">Next</span> x1<br/>  <span class=\"kw1\">Next</span> x0<br/>\u00a0<br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"No solution was found\"</span><span class=\"br0\">)</span><br/>  finish:<br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Press any key to close the console\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Repeat</span>: <span class=\"kw2\">Delay</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Until</span> <span class=\"kw2\">Inkey</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 14, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">def</span> eulers_sum_of_powers<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    max_n <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><br/>    pow_5 <span class=\"sy0\">=</span> <span class=\"br0\">[</span>n**<span class=\"nu0\">5</span> <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>max_n<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    pow5_to_n <span class=\"sy0\">=</span> <span class=\"br0\">{</span>n**<span class=\"nu0\">5</span>: n <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>max_n<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> x0 <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> max_n<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">for</span> x1 <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> x0<span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">for</span> x2 <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> x1<span class=\"br0\">)</span>:<br/>                <span class=\"kw1\">for</span> x3 <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> x2<span class=\"br0\">)</span>:<br/>                    pow_5_sum <span class=\"sy0\">=</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>pow_5<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span>x0<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"kw1\">if</span> pow_5_sum <span class=\"kw1\">in</span> pow5_to_n:<br/>                        y <span class=\"sy0\">=</span> pow5_to_n<span class=\"br0\">[</span>pow_5_sum<span class=\"br0\">]</span><br/>                        <span class=\"kw1\">return</span> <span class=\"br0\">(</span>x0<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> x3<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"%i**5 +\u00a0%i**5 +\u00a0%i**5 +\u00a0%i**5 ==\u00a0%i**5\"</span>\u00a0% eulers_sum_of_powers<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 18, "block": "<pre class=\"scheme highlighted_source\">#lang racket<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"kw1\">MAX</span> <span class=\"nu0\">250</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> pow5 <span class=\"br0\">(</span><span class=\"kw1\">make-vector</span> <span class=\"kw1\">MAX</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>for <span class=\"br0\">(</span><span class=\"br0\">[</span>i <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range <span class=\"nu0\">1</span> <span class=\"kw1\">MAX</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> pow5 i <span class=\"br0\">(</span><span class=\"kw1\">expt</span> i <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> pow5s <span class=\"br0\">(</span>list<span class=\"sy0\">-&gt;</span>set <span class=\"br0\">(</span>vector<span class=\"sy0\">-&gt;</span><span class=\"kw1\">list</span> pow5<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">let</span><span class=\"sy0\">/</span>ec break<br/>  <span class=\"br0\">(</span>for<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>x0 <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range <span class=\"nu0\">1</span> <span class=\"kw1\">MAX</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>         <span class=\"br0\">[</span>x1 <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range <span class=\"nu0\">1</span> x0<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>         <span class=\"br0\">[</span>x2 <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range <span class=\"nu0\">1</span> x1<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>         <span class=\"br0\">[</span>x3 <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range <span class=\"nu0\">1</span> x2<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> sum <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> pow5 x0<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> pow5 x1<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> pow5 x2<span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> pow5 x3<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span>set<span class=\"sy0\">-</span><span class=\"kw1\">member</span>? pow5s sum<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>displayln <span class=\"br0\">(</span><span class=\"kw1\">list</span> x0 x1 x2 x3 <span class=\"br0\">(</span>inexact<span class=\"sy0\">-&gt;</span>exact <span class=\"br0\">(</span>round <span class=\"br0\">(</span><span class=\"kw1\">expt</span> sum <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>break<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "REXX", "loc": 36, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program finds unique positive integers for \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 a\u207f+b\u207f+c\u207f+d\u207f==x\u207f  where \u207f=5 */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> L H N <span class=\"sy0\">.</span>                                <span class=\"coMULTI\">/*get optional  LOW, HIGH,  #solutions.*/</span><br/><span class=\"kw1\">if</span> L==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> L==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> L=  <span class=\"nu0\">0</span>  + <span class=\"nu0\">1</span>               <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">if</span> H==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> H==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> H=<span class=\"nu0\">250</span>  - <span class=\"nu0\">1</span>               <span class=\"coMULTI\">/* \"      \"         \"   \"   \"     \"    */</span><br/><span class=\"kw1\">if</span> N==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> N==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> N=  <span class=\"nu0\">1</span>                    <span class=\"coMULTI\">/* \"      \"         \"   \"   \"     \"    */</span><br/>w=<span class=\"kw6\">length</span><span class=\"br0\">(</span>H<span class=\"br0\">)</span>                                      <span class=\"coMULTI\">/*W:  used for display aligned numbers.*/</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"kw6\">subword</span><span class=\"br0\">(</span><span class=\"kw6\">sourceLine</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"st0\">\" \"</span>, <span class=\"nu0\">70</span> +<span class=\"nu0\">5</span><span class=\"sy0\">*</span>w, <span class=\"st0\">'\u2500'</span><span class=\"br0\">)</span>  <span class=\"coMULTI\">/*show title from 1st line*/</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> <span class=\"nu0\">1000</span>                              <span class=\"coMULTI\">/*be able to handle the next expression*/</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> <span class=\"kw6\">max</span><span class=\"br0\">(</span><span class=\"nu0\">9</span>, <span class=\"kw6\">length</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">*</span>H<span class=\"sy0\">**</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>           <span class=\"coMULTI\">/* \"   \"   \"    \"   3* [H to 5th power]*/</span><br/>bH= H-<span class=\"nu0\">2</span>;                    cH= H-<span class=\"nu0\">1</span>              <span class=\"coMULTI\">/*calculate the upper  DO  loop limits.*/</span><br/>!<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span>                                             <span class=\"coMULTI\">/* [\u2193]  define values of  5th  powers. */</span><br/>       <span class=\"kw1\">do</span> pow=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> H;     @<span class=\"sy0\">.</span>pow=pow<span class=\"sy0\">**</span><span class=\"nu0\">5</span>;  <a class=\"__cf_email__\" data-cfemail=\"27781a67\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>pow;       \u00a0!<span class=\"sy0\">.</span>_=<span class=\"nu0\">1</span>;      $<span class=\"sy0\">.</span>_=pow<br/>       <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*pow*/</span><br/>?<span class=\"sy0\">.</span>=!<span class=\"sy0\">.</span><br/>       <span class=\"kw1\">do</span>    j=<span class=\"nu0\">4</span>   <span class=\"kw2\">for</span> H-<span class=\"nu0\">3</span>                       <span class=\"coMULTI\">/*use the range of:   four  to   cH.   */</span><br/>          <span class=\"kw1\">do</span> k=j+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> H;   <a class=\"__cf_email__\" data-cfemail=\"306f0d70\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>k - @<span class=\"sy0\">.</span>j;  \u00a0?<span class=\"sy0\">.</span>_=<span class=\"nu0\">1</span> <span class=\"coMULTI\">/*compute the   x\u207f - d\u207f    differences.*/</span><br/>          <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span>                            <span class=\"coMULTI\">/* [\u2191]  diff. is always positive as k&gt;j*/</span><br/>       <span class=\"kw3\">end</span>      <span class=\"coMULTI\">/*j*/</span>                            <span class=\"coMULTI\">/*define [\u2191]    5th  power differences.*/</span><br/>#=<span class=\"nu0\">0</span>                                              <span class=\"coMULTI\">/*#:  is the number of solutions found.*/</span>   <span class=\"coMULTI\">/* [\u2193]  for N=\u221e solutions.*/</span><br/>    <span class=\"kw1\">do</span>       a=L    <span class=\"kw2\">to</span> H-<span class=\"nu0\">3</span>;     s0=     @<span class=\"sy0\">.</span>a      <span class=\"coMULTI\">/*traipse through possible  A  values. */</span>   <span class=\"coMULTI\">/*\u25c4\u2500\u2500done       246 times.*/</span><br/>      <span class=\"kw1\">do</span>     b=a+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> bH;      s1=s0 + @<span class=\"sy0\">.</span>b      <span class=\"coMULTI\">/*   \"       \"        \"     B    \"     */</span>   <span class=\"coMULTI\">/*\u25c4\u2500\u2500done    30,381 times.*/</span><br/>        <span class=\"kw1\">do</span>   c=b+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> cH;      s2=s1 + @<span class=\"sy0\">.</span>c      <span class=\"coMULTI\">/*   \"       \"        \"     C    \"     */</span>   <span class=\"coMULTI\">/*\u25c4\u2500\u2500done 2,511,496 times.*/</span><br/>        <span class=\"kw1\">if</span>\u00a0?<span class=\"sy0\">.</span>s2  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span> d=c+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> H;  <a class=\"__cf_email__\" data-cfemail=\"5c2f612f6e771c\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>d  <span class=\"coMULTI\">/*find the appropriate solution.       */</span><br/>                      <span class=\"kw1\">if</span>\u00a0!<span class=\"sy0\">.</span>s  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> results  <span class=\"coMULTI\">/*Is it a solution?   Then display it. */</span><br/>                      <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*d*/</span>                <span class=\"coMULTI\">/* [\u2191]   \u00a0!.S  is a boolean.           */</span><br/>        <span class=\"kw3\">end</span>                 <span class=\"coMULTI\">/*c*/</span><br/>      <span class=\"kw3\">end</span>                   <span class=\"coMULTI\">/*b*/</span><br/>    <span class=\"kw3\">end</span>                     <span class=\"coMULTI\">/*a*/</span><br/>\u00a0<br/><span class=\"kw1\">if</span> #==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">\"Didn't find a solution.\"</span>;           <span class=\"kw1\">exit</span> <span class=\"nu0\">0</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>results: _=<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"st0\">''</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span>;       #=#+<span class=\"nu0\">1</span>               <span class=\"coMULTI\">/*_:  used as a spacer; bump # counter.*/</span><br/>         <span class=\"kw1\">say</span> _  <span class=\"st0\">'solution'</span>   <span class=\"kw6\">right</span><span class=\"br0\">(</span>#,<span class=\"kw6\">length</span><span class=\"br0\">(</span>N<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"st0\">\":\"</span>  _  <span class=\"st0\">'a='</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>a,w<span class=\"br0\">)</span>   _  <span class=\"st0\">\"b=\"</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>b,w<span class=\"br0\">)</span>,<br/>             _  <span class=\"st0\">'c='</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>c,w<span class=\"br0\">)</span>     _  <span class=\"st0\">\"d=\"</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>d,w<span class=\"br0\">)</span>    _   <span class=\"st0\">'x='</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>$<span class=\"sy0\">.</span>s,w+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">if</span> #<span class=\"sy0\">&lt;</span>N  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span>                     <span class=\"coMULTI\">/*return, keep searching for more sols.*/</span><br/>         <span class=\"kw1\">exit</span> #                                  <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 18, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Euler's sum of powers conjecture<br/>\u00a0<br/>max=250<br/>for w = 1 to max<br/>     for x = 1 to w<br/>          for y = 1 to x<br/>               for z = 1 to y<br/>                    sum = pow(w,5) + pow(x,5) + pow(y,5) + pow(z,5)<br/>                    s1  = floor(pow(sum,0.2))<br/>                    if sum = pow(s1,5) <br/>                       see \"\" + w + \"^5 + \" + x + \"^5 + \" + y + \"^5 + \" + z + \"^5 = \" + s1 + \"^5\" <br/>                    ok<br/>               next <br/>          next<br/>     next <br/>next <br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 3, "block": "<pre class=\"ruby highlighted_source\">power5 = <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">250</span><span class=\"br0\">)</span>.<span class=\"me1\">each_with_object</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>i,h<span class=\"sy0\">|</span> h<span class=\"br0\">[</span>i<span class=\"sy0\">**</span><span class=\"nu0\">5</span><span class=\"br0\">]</span>=i<span class=\"br0\">}</span><br/>result = power5.<span class=\"me1\">keys</span>.<span class=\"me1\">repeated_combination</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"kw3\">select</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>a<span class=\"sy0\">|</span> power5<span class=\"br0\">[</span>a.<span class=\"me1\">inject</span><span class=\"br0\">(</span>:<span class=\"sy0\">+</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/><span class=\"kw3\">puts</span> result.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>a<span class=\"sy0\">|</span> a.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> <span class=\"st0\">\"#{power5[i]}**5\"</span><span class=\"br0\">}</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">' + '</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" = #{power5[a.inject(:+)]}**5\"</span><span class=\"br0\">}</span></pre>"}, {"lang": "Run BASIC", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>max=250<br/>FOR w = 1 TO max<br/>  FOR x = 1 TO w<br/>    FOR y = 1 TO x<br/>      FOR z = 1 TO y<br/>      sum = w^5 + x^5 + y^5 + z^5<br/>      s1  = INT(sum^0.2)<br/>      IF sum=s1^5 THEN <br/>        PRINT w;\"^5 + \";x;\"^5 + \";y;\"^5 + \";z;\"^5 = \";s1;\"^5\" <br/>        end<br/>      end if<br/>      NEXT z<br/>    NEXT y<br/>  NEXT x<br/>NEXT w</pre>"}, {"lang": "Rust", "loc": 26, "block": "<pre class=\"text highlighted_source\">const MAX_N\u00a0: u64 = 250;<br/>\u00a0<br/>fn eulers_sum_of_powers() -&gt; (usize, usize, usize, usize, usize) {<br/>    let pow5: Vec&lt;u64&gt; = (0..MAX_N).map(|i| i.pow(5)).collect();<br/>    let pow5_to_n = |pow| pow5.binary_search(&amp;pow);<br/>\u00a0<br/>    for x0 in 1..MAX_N as usize {<br/>        for x1 in 1..x0 {<br/>            for x2 in 1..x1 {<br/>                for x3 in 1..x2 {<br/>                    let pow_sum = pow5[x0] + pow5[x1] + pow5[x2] + pow5[x3];<br/>                    if let Ok(n) = pow5_to_n(pow_sum) {<br/>                        return (x0, x1, x2, x3, n)<br/>                    }<br/>                }<br/>            }<br/>        }<br/>    }<br/>\u00a0<br/>    panic!();<br/>}<br/>\u00a0<br/>fn main() {<br/>\tlet (x0, x1, x2, x3, y) = eulers_sum_of_powers();<br/>\tprintln!(\"{}^5 + {}^5 + {}^5 + {}^5 == {}^5\", x0, x1, x2, x3, y)<br/>}</pre>"}, {"lang": "Scala", "loc": 20, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">collection</span>.<span class=\"me1\">Searching</span>.<span class=\"br0\">{</span>Found, search<span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> EulerSopConjecture <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>maxNumber, fifth<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">250</span>, <span class=\"br0\">(</span><span class=\"nu0\">1</span> to <span class=\"nu0\">250</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> i <span class=\"sy0\">=&gt;</span> math.<span class=\"me1\">pow</span><span class=\"br0\">(</span>i, <span class=\"nu0\">5</span><span class=\"br0\">)</span>.<span class=\"me1\">toLong</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> binSearch<span class=\"br0\">(</span>fact<span class=\"sy0\">:</span> Int<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> fifth.<span class=\"me1\">search</span><span class=\"br0\">(</span>fact.<span class=\"me1\">map</span><span class=\"br0\">(</span>f <span class=\"sy0\">=&gt;</span> fifth<span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">sum</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> sop <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> until maxNumber<span class=\"br0\">)</span><br/>    .<span class=\"me1\">flatMap</span><span class=\"br0\">(</span>a <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>a until maxNumber<span class=\"br0\">)</span><br/>      .<span class=\"me1\">flatMap</span><span class=\"br0\">(</span>b <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>b until maxNumber<span class=\"br0\">)</span><br/>        .<span class=\"me1\">flatMap</span><span class=\"br0\">(</span>c <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>c until maxNumber<span class=\"br0\">)</span><br/>          .<span class=\"me1\">map</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> x$1<span class=\"sy0\">@</span>d <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>binSearch<span class=\"br0\">(</span>a, b, c, d<span class=\"br0\">)</span>, x$1<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>          .<span class=\"me1\">withFilter</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>f, <span class=\"sy0\">_</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> f.<span class=\"me1\">isInstanceOf</span><span class=\"br0\">[</span>Found<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>          .<span class=\"me1\">map</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>f, d<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>a + <span class=\"nu0\">1</span>, b + <span class=\"nu0\">1</span>, c + <span class=\"nu0\">1</span>, d + <span class=\"nu0\">1</span>, f.<span class=\"me1\">insertionPoint</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    .<span class=\"me1\">map</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>a, b, c, d, f<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> s<span class=\"st0\">\"$a\u2075 + $b\u2075 + $c\u2075 + $d\u2075 = $f\u2075\"</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  println<span class=\"br0\">(</span>sop<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Sidef", "loc": 24, "block": "<pre class=\"ruby highlighted_source\">define range = <span class=\"br0\">(</span><span class=\"nu0\">1</span> ..^ <span class=\"nu0\">250</span><span class=\"br0\">)</span><br/>\u00a0<br/>var p5 = <span class=\"kw4\">Hash</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>var sum2 = <span class=\"kw4\">Hash</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span>range<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    p5<span class=\"br0\">{</span>i<span class=\"sy0\">**</span><span class=\"nu0\">5</span><span class=\"br0\">}</span> = i<br/>    <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"br0\">(</span>range<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        sum2<span class=\"br0\">{</span>i<span class=\"sy0\">**</span><span class=\"nu0\">5</span> <span class=\"sy0\">+</span> j<span class=\"sy0\">**</span><span class=\"nu0\">5</span><span class=\"br0\">}</span> = <span class=\"br0\">[</span>i, j<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>var sk = sum2.<span class=\"me1\">keys</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span> Num<span class=\"br0\">(</span>_<span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">sort</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"kw3\">p</span> <span class=\"kw1\">in</span> <span class=\"br0\">(</span>p5.<span class=\"me1\">keys</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span> Num<span class=\"br0\">(</span>_<span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">sort</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    var s = sk.<span class=\"me1\">first</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>s<span class=\"sy0\">|</span><br/>        <span class=\"kw3\">p</span> <span class=\"sy0\">&gt;</span> s <span class=\"sy0\">&amp;&amp;</span> sum2.<span class=\"me1\">exists</span><span class=\"br0\">(</span>p<span class=\"sy0\">-</span>s<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span> \\\\ <span class=\"kw1\">next</span><br/>\u00a0<br/>    var t = <span class=\"br0\">(</span>sum2<span class=\"br0\">{</span>s<span class=\"br0\">}</span> <span class=\"sy0\">+</span> sum2<span class=\"br0\">{</span>p<span class=\"sy0\">-</span>s<span class=\"br0\">}</span> <span class=\"sy0\">-&gt;</span> map<span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> <span class=\"st0\">\"#{n}\u2075\"</span> <span class=\"br0\">}</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">' + '</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    say <span class=\"st0\">\"#{t} = #{p5{p}}\u2075\"</span><br/>    <span class=\"kw1\">break</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "VBScript", "loc": 20, "block": "<pre class=\"vb highlighted_source\">Max=250<br/>\u00a0<br/><span class=\"kw3\">For</span> X0=1 <span class=\"kw3\">To</span> Max<br/>\t<span class=\"kw3\">For</span> X1=1 <span class=\"kw3\">To</span> X0<br/>\t\t<span class=\"kw3\">For</span> X2=1 <span class=\"kw3\">To</span> X1<br/>\t\t\t<span class=\"kw3\">For</span> X3=1 <span class=\"kw3\">To</span> X2<br/>\t\t\t\tSum=fnP5(X0)+fnP5(X1)+fnP5(X2)+fnP5(X3)<br/>\t\t\t\tS1=Int(Sum^0.2)<br/>\t\t\t\t<span class=\"kw3\">If</span> Sum=fnP5(S1) <span class=\"kw3\">Then</span><br/>\t\t\t\t\tWScript.StdOut.Write X0 &amp; <span class=\"st0\">\" \"</span> &amp; X1 &amp; <span class=\"st0\">\" \"</span> &amp; X2 &amp; <span class=\"st0\">\" \"</span> &amp; X3 &amp; <span class=\"st0\">\" \"</span> &amp; S1<br/>\t\t\t\t\tWScript.Quit<br/>\t\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t\t<span class=\"kw3\">Next</span><br/>\t\t<span class=\"kw3\">Next</span><br/>\t<span class=\"kw3\">Next</span><br/><span class=\"kw3\">Next</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> fnP5(n)<br/>\tfnP5 = n ^ 5<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span></pre>"}, {"lang": "zkl", "loc": 9, "block": "<pre class=\"text highlighted_source\">pow5s:=[1..249].apply(\"pow\",5); // (1^5, 2^5, 3^5 .. 249^5)<br/>pow5r:=pow5s.enumerate().apply(\"reverse\").toDictionary(); // [144^5:144, ...]<br/>foreach x0,x1,x2,x3 in (249,x0,x1,x2){<br/>   sum:=pow5s[x0] + pow5s[x1] + pow5s[x2] + pow5s[x3];<br/>   if(pow5r.holds(sum))<br/>      println(\"%d^5 +\u00a0%d^5 +\u00a0%d^5 +\u00a0%d^5 =\u00a0%d^5\"<br/>          .fmt(x3+1,x2+1,x1+1,x0+1,pow5r[sum]+1));<br/>      break(4);  // the foreach is actually four loops<br/>}</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 6, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">LET</span> max=<span class=\"nu0\">250</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">FOR</span> w=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> max: <span class=\"kw1\">FOR</span> x=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> w: <span class=\"kw1\">FOR</span> y=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> x: <span class=\"kw1\">FOR</span> z=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> y<br/><span class=\"nu0\">30</span> <span class=\"kw1\">LET</span> sum=w^<span class=\"nu0\">5</span>+x^<span class=\"nu0\">5</span>+y^<span class=\"nu0\">5</span>+z^<span class=\"nu0\">5</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">LET</span> s1=<span class=\"kw3\">INT</span> <span class=\"br0\">(</span>sum^<span class=\"nu0\">0.2</span><span class=\"br0\">)</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">IF</span> sum=s1^<span class=\"nu0\">5</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> w;<span class=\"st0\">\"^5+\"</span>;x;<span class=\"st0\">\"^5+\"</span>;y;<span class=\"st0\">\"^5+\"</span>;z;<span class=\"st0\">\"^5=\"</span>;s1;<span class=\"st0\">\"^5\"</span>: STOP <br/><span class=\"nu0\">60</span> <span class=\"kw1\">NEXT</span> z: <span class=\"kw1\">NEXT</span> y: <span class=\"kw1\">NEXT</span> x: <span class=\"kw1\">NEXT</span> w</pre>"}]}